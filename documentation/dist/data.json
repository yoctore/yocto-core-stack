{
    "project": {
        "name": "yocto-core-stack",
        "description": "Core data and functionalities of yocto stack",
        "version": "0.0.1",
        "url": ""
    },
    "files": {
        "bower_components/angular/angular.js": {
            "name": "bower_components/angular/angular.js",
            "modules": {
                "ng": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-bootstrap/ui-bootstrap-tpls.js": {
            "name": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-bootstrap/ui-bootstrap.js": {
            "name": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-cookies/angular-cookies.js": {
            "name": "bower_components/angular-cookies/angular-cookies.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-file-upload/src/module.js": {
            "name": "bower_components/angular-file-upload/src/module.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-file-upload/angular-file-upload.js": {
            "name": "bower_components/angular-file-upload/angular-file-upload.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-filter/dist/angular-filter.js": {
            "name": "bower_components/angular-filter/dist/angular-filter.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-filter/dist/angular-filter.min.js": {
            "name": "bower_components/angular-filter/dist/angular-filter.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-local-storage/dist/angular-local-storage.js": {
            "name": "bower_components/angular-local-storage/dist/angular-local-storage.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-local-storage/dist/angular-local-storage.min.js": {
            "name": "bower_components/angular-local-storage/dist/angular-local-storage.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-messages/angular-messages.js": {
            "name": "bower_components/angular-messages/angular-messages.js",
            "modules": {
                "ngMessages": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-mocks/angular-mocks.js": {
            "name": "bower_components/angular-mocks/angular-mocks.js",
            "modules": {
                "ngMockE2E": 1,
                "ngMock": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-resource/angular-resource.js": {
            "name": "bower_components/angular-resource/angular-resource.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-route/angular-route.js": {
            "name": "bower_components/angular-route/angular-route.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-ui-utils/ui-utils-ieshiv.js": {
            "name": "bower_components/angular-ui-utils/ui-utils-ieshiv.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-ui-utils/ui-utils-ieshiv.min.js": {
            "name": "bower_components/angular-ui-utils/ui-utils-ieshiv.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-ui-utils/ui-utils.js": {
            "name": "bower_components/angular-ui-utils/ui-utils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angular-ui-utils/ui-utils.min.js": {
            "name": "bower_components/angular-ui-utils/ui-utils.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-adobe.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-adobe.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-baidu.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-baidu.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-chartbeat.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-chartbeat.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-debug.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-debug.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-flurry.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-flurry.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-ga-cordova-google-analytics-plugin.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-ga-cordova-google-analytics-plugin.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-ga-cordova.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-ga-cordova.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-ga.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-ga.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-gtm.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-gtm.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-intercom.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-intercom.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-kissmetrics.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-kissmetrics.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-localytics.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-localytics.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-loggly.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-loggly.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-marketo.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-marketo.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-mixpanel.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-mixpanel.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-piwik.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-piwik.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-scroll.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-scroll.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-segmentio.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-segmentio.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-splunk.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-splunk.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics-woopra.min.js": {
            "name": "bower_components/angulartics/dist/angulartics-woopra.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/dist/angulartics.min.js": {
            "name": "bower_components/angulartics/dist/angulartics.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/samples/loggly.tracker.js": {
            "name": "bower_components/angulartics/samples/loggly.tracker.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-adobe.js": {
            "name": "bower_components/angulartics/src/angulartics-adobe.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-baidu.js": {
            "name": "bower_components/angulartics/src/angulartics-baidu.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-chartbeat.js": {
            "name": "bower_components/angulartics/src/angulartics-chartbeat.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-cnzz.js": {
            "name": "bower_components/angulartics/src/angulartics-cnzz.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-debug.js": {
            "name": "bower_components/angulartics/src/angulartics-debug.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-flurry.js": {
            "name": "bower_components/angulartics/src/angulartics-flurry.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-ga-cordova-google-analytics-plugin.js": {
            "name": "bower_components/angulartics/src/angulartics-ga-cordova-google-analytics-plugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-ga-cordova.js": {
            "name": "bower_components/angulartics/src/angulartics-ga-cordova.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-ga.js": {
            "name": "bower_components/angulartics/src/angulartics-ga.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-gtm-cordova.js": {
            "name": "bower_components/angulartics/src/angulartics-gtm-cordova.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-gtm.js": {
            "name": "bower_components/angulartics/src/angulartics-gtm.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-hubspot.js": {
            "name": "bower_components/angulartics/src/angulartics-hubspot.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-intercom.js": {
            "name": "bower_components/angulartics/src/angulartics-intercom.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-kissmetrics.js": {
            "name": "bower_components/angulartics/src/angulartics-kissmetrics.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-localytics.js": {
            "name": "bower_components/angulartics/src/angulartics-localytics.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-loggly.js": {
            "name": "bower_components/angulartics/src/angulartics-loggly.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-marketo.js": {
            "name": "bower_components/angulartics/src/angulartics-marketo.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-mixpanel.js": {
            "name": "bower_components/angulartics/src/angulartics-mixpanel.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-piwik.js": {
            "name": "bower_components/angulartics/src/angulartics-piwik.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-scroll.js": {
            "name": "bower_components/angulartics/src/angulartics-scroll.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-segmentio.js": {
            "name": "bower_components/angulartics/src/angulartics-segmentio.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-splunk.js": {
            "name": "bower_components/angulartics/src/angulartics-splunk.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics-woopra.js": {
            "name": "bower_components/angulartics/src/angulartics-woopra.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/angulartics/src/angulartics.js": {
            "name": "bower_components/angulartics/src/angulartics.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/es5-shim/es5-shim.js": {
            "name": "bower_components/es5-shim/es5-shim.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/jquery/dist/jquery.js": {
            "name": "bower_components/jquery/dist/jquery.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/jquery/src/ajax/load.js": {
            "name": "bower_components/jquery/src/ajax/load.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/jquery/src/core/ready.js": {
            "name": "bower_components/jquery/src/core/ready.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/jquery/src/css/defaultDisplay.js": {
            "name": "bower_components/jquery/src/css/defaultDisplay.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/jquery/src/data/accepts.js": {
            "name": "bower_components/jquery/src/data/accepts.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/jquery/src/sizzle/dist/sizzle.js": {
            "name": "bower_components/jquery/src/sizzle/dist/sizzle.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/jquery/src/offset.js": {
            "name": "bower_components/jquery/src/offset.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/lodash/lodash.js": {
            "name": "bower_components/lodash/lodash.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/lodash/lodash.min.js": {
            "name": "bower_components/lodash/lodash.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/underscore.string/lib/underscore.string.js": {
            "name": "bower_components/underscore.string/lib/underscore.string.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/underscore.string/test/test_underscore/vendor/jquery.js": {
            "name": "bower_components/underscore.string/test/test_underscore/vendor/jquery.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js": {
            "name": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bower_components/underscore.string/test/test_underscore/vendor/qunit.js": {
            "name": "bower_components/underscore.string/test/test_underscore/vendor/qunit.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "config/common.js": {
            "name": "config/common.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "config_old/env/all.js": {
            "name": "config_old/env/all.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "config_old/env/development.js": {
            "name": "config_old/env/development.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "config_old/env/production.js": {
            "name": "config_old/env/production.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "config_old/env/staging-iso-production.js": {
            "name": "config_old/env/staging-iso-production.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "config_old/env/staging-new-tag.js": {
            "name": "config_old/env/staging-new-tag.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "config_old/config.js": {
            "name": "config_old/config.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "config_old/database.js": {
            "name": "config_old/database.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "config_old/express.js": {
            "name": "config_old/express.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "config_old/routes.js": {
            "name": "config_old/routes.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "yocto_modules/dbfactory/dbfactory.js": {
            "name": "yocto_modules/dbfactory/dbfactory.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "yocto_modules/mailer/mailer.js": {
            "name": "yocto_modules/mailer/mailer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "yocto_modules/render/render.js": {
            "name": "yocto_modules/render/render.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "yocto_modules/router/router.js": {
            "name": "yocto_modules/router/router.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "yocto_modules/social/social.js": {
            "name": "yocto_modules/social/social.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "yocto_modules/utils/utils.js": {
            "name": "yocto_modules/utils/utils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Gruntfile.js": {
            "name": "Gruntfile.js",
            "modules": {
                "Grunt file": 1,
                "jshint": 1,
                "yuidoc": 1,
                "copy": 1,
                "uglify": 1
            },
            "classes": {
                "Gruntfile": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "index.js": {
            "name": "index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "ng": {
            "name": "ng",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "bower_components/angular/angular.js",
            "line": 160,
            "ngdoc": "module",
            "kind": "function",
            "params": [
                {
                    "name": "string",
                    "description": "String to be converted to lowercase.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Lowercased string.",
                "type": "String"
            },
            "example": [
                "\n<example module=\"copyExample\">\n<file name=\"index.html\">\n<div ng-controller=\"ExampleController\">\n<form novalidate class=\"simple-form\">\nName: <input type=\"text\" ng-model=\"user.name\" /><br />\nE-mail: <input type=\"email\" ng-model=\"user.email\" /><br />\nGender: <input type=\"radio\" ng-model=\"user.gender\" value=\"male\" />male\n<input type=\"radio\" ng-model=\"user.gender\" value=\"female\" />female<br />\n<button ng-click=\"reset()\">RESET</button>\n<button ng-click=\"update(user)\">SAVE</button>\n</form>\n<pre>form = {{user | json}}</pre>\n<pre>master = {{master | json}}</pre>\n</div>\n\n<script>\n angular.module('copyExample', [])\n   .controller('ExampleController', ['$scope', function($scope) {\n     $scope.master= {};\n\n     $scope.update = function(user) {\n       // Example with 1 argument\n       $scope.master= angular.copy(user);\n     };\n\n     $scope.reset = function() {\n       // Example with 2 arguments\n       angular.copy($scope.master, $scope.user);\n     };\n\n     $scope.reset();\n   }]);\n</script>\n</file>\n</example>"
            ],
            "element": "ANY"
        },
        "ngMessages": {
            "name": "ngMessages",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "bower_components/angular-messages/angular-messages.js",
            "line": 164,
            "ngdoc": "directive",
            "restrict": "AE",
            "usage": "```html\n<!-- using attribute directives -->\n<ANY ng-messages=\"expression\">\n  <ANY ng-message=\"keyValue1\">...</ANY>\n  <ANY ng-message=\"keyValue2\">...</ANY>\n  <ANY ng-message=\"keyValue3\">...</ANY>\n</ANY>\n\n<!-- or by using element directives -->\n<ng-messages for=\"expression\">\n  <ng-message when=\"keyValue1\">...</ng-message>\n  <ng-message when=\"keyValue2\">...</ng-message>\n  <ng-message when=\"keyValue3\">...</ng-message>\n</ng-messages>\n```",
            "params": [
                {
                    "name": "ngMessages",
                    "description": "an angular expression evaluating to a key/value object\n                (this is typically the $error object on an ngModel instance).",
                    "type": "String"
                },
                {
                    "name": "ngMessagesMultiple|multiple",
                    "description": "when set, all messages will be displayed with true",
                    "type": "String="
                },
                {
                    "name": "ngMessagesInclude|include",
                    "description": "when set, the specified template will be included into the ng-messages container",
                    "type": "String="
                }
            ],
            "example": [
                "\n<example name=\"ngMessages-directive\" module=\"ngMessagesExample\"\n         deps=\"angular-messages.js\"\n         animations=\"true\" fixBase=\"true\">\n  <file name=\"index.html\">\n    <form name=\"myForm\">\n      <label>Enter your name:</label>\n      <input type=\"text\"\n             name=\"myName\"\n             ng-model=\"name\"\n             ng-minlength=\"5\"\n             ng-maxlength=\"20\"\n             required />\n\n      <pre>myForm.myName.$error = {{ myForm.myName.$error | json }}</pre>\n\n      <div ng-messages=\"myForm.myName.$error\" style=\"color:maroon\">\n        <div ng-message=\"required\">You did not enter a field</div>\n        <div ng-message=\"minlength\">Your field is too short</div>\n        <div ng-message=\"maxlength\">Your field is too long</div>\n      </div>\n    </form>\n  </file>\n  <file name=\"script.js\">\n    angular.module('ngMessagesExample', ['ngMessages']);\n  </file>\n</example>"
            ]
        },
        "ngMockE2E": {
            "name": "ngMockE2E",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1914,
            "ngdoc": "module",
            "packagename": "angular-mocks",
            "params": [
                {
                    "name": "method",
                    "description": "HTTP method.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "HTTP url or function that receives the url\n  and returns true if the url match the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "data",
                    "description": "HTTP request body.",
                    "type": "(string|RegExp)="
                },
                {
                    "name": "headers",
                    "description": "HTTP headers or function that receives http header\n  object and returns true if the headers match the current definition.",
                    "type": "(Object|function(Object))="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` and `passThrough` methods that\n  control how a matched request is handled. You can save this object for later use and invoke\n  `respond` or `passThrough` again in order to change how a matched request is handled.\n\n - respond –\n   `{function([status,] data[, headers, statusText])\n   | function(function(method, url, data, headers)}`\n   – The respond method takes a set of static data to be returned or a function that can return\n   an array containing response status (number), response data (string), response headers\n   (Object), and the text for the status (string).\n - passThrough – `{function()}` – Any request matching a backend definition with\n   `passThrough` handler will be passed through to the real backend (an XHR request will be made\n   to the server.)\n - Both methods return the `requestHandler` object for possible overrides.",
                "type": "RequestHandler"
            }
        },
        "ngMock": {
            "name": "ngMock",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 2120,
            "ngdoc": "type",
            "return": {
                "description": "Total number of child scopes.",
                "type": "Number"
            }
        },
        "Grunt file": {
            "name": "Grunt file",
            "submodules": {
                "jshint": 1,
                "yuidoc": 1,
                "copy": 1,
                "uglify": 1
            },
            "classes": {
                "Gruntfile": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Gruntfile.js",
            "line": 1,
            "description": "Use uglify with Grunt to minify all \".js\" file in documentation\nUse yuidoc to generate the docs"
        },
        "jshint": {
            "name": "jshint",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "Grunt file",
            "namespace": "",
            "file": "Gruntfile.js",
            "line": 22,
            "description": "Jshint permit to flags suspicious usage in programs"
        },
        "yuidoc": {
            "name": "yuidoc",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "Grunt file",
            "namespace": "",
            "file": "Gruntfile.js",
            "line": 37,
            "description": "Yuidoc permit to generate the yuidoc of the Yocto Stack Generator"
        },
        "copy": {
            "name": "copy",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "Grunt file",
            "namespace": "",
            "file": "Gruntfile.js",
            "line": 55,
            "description": "Copy permit to copy folder"
        },
        "uglify": {
            "name": "uglify",
            "submodules": {},
            "classes": {
                "Gruntfile": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "Grunt file",
            "namespace": "",
            "file": "Gruntfile.js",
            "line": 1,
            "description": "Uglify permit to minify javascript file"
        }
    },
    "classes": {
        "Gruntfile": {
            "name": "Gruntfile",
            "shortname": "Gruntfile",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Grunt file",
            "namespace": "",
            "file": "Gruntfile.js",
            "line": 1,
            "description": "Gruntfile.js is used to configure or define tasks and load Grunt plugins.",
            "date": "15/04/2015",
            "author": "Cédric Balard",
            "copyright": "Yocto SAS <http://www.yocto>",
            "submodule": "uglify"
        }
    },
    "classitems": [
        {
            "file": "bower_components/angular/angular.js",
            "line": 1,
            "license": "AngularJS v1.3.15\n(c) 2010-2014 Google, Inc. http://angularjs.org\nLicense: MIT",
            "class": "Gruntfile"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8,
            "description": "This object provides a utility for producing rich Error messages within\nAngular. It can be called as follows:\n\nvar exampleMinErr = minErr('example');\nthrow exampleMinErr('one', 'This {0} is {1}', foo, bar);\n\nThe above creates an instance of minErr in the example namespace. The\nresulting error will have a namespaced error code of example.one.  The\nresulting error will replace {0} with the value of foo, and {1} with the\nvalue of bar. The object is not restricted in the number of arguments it can\ntake.\n\nIf fewer arguments are specified than necessary for interpolation, the extra\ninterpolation markers will be preserved in the final string.\n\nSince data will be parsed statically during a build step, some restrictions\nare applied with respect to how minErr instances are created and called.\nInstances should have names of the form namespaceMinErr for a minErr created\nusing minErr('namespace') . Error codes, namespaces and template strings\nshould all be static strings, not variables or general expressions.",
            "params": [
                {
                    "name": "module",
                    "description": "The namespace to use for the new minErr instance.",
                    "type": "String"
                },
                {
                    "name": "ErrorConstructor",
                    "description": "Custom error constructor to be instantiated when returning\n  error from returned function, for cases when a particular type of error is useful.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "minErr instance",
                "type": "function(code:string, template:string, ...templateArgs): Error"
            },
            "class": "Gruntfile"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 240,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 245,
            "description": "documentMode is an IE-only property\nhttp://msdn.microsoft.com/en-us/library/ie/cc196988(v=vs.85).aspx",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 252,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns true if `obj` is an array or array-like object (NodeList, Arguments,\n                  String ...)",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 352,
            "description": "when using forEach the params are value, key, but it is often useful to have key, value.",
            "params": [
                {
                    "name": "iteratorFn",
                    "description": "",
                    "type": "Function(string, *)"
                }
            ],
            "return": {
                "description": "",
                "type": "Function(*, string)"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 361,
            "description": "A consistent way of creating unique IDs in angular.\n\nUsing simple numbers allows us to generate 28.6 million unique ids per second for 10 years before\nwe hit number precision issues in JavaScript.\n\nMath.pow(2,53) / 60 / 60 / 24 / 365 / 10 = 28.6M",
            "return": {
                "description": "an unique alpha-numeric string",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 376,
            "description": "Set or clear the hashkey for an object.",
            "params": [
                {
                    "name": "obj",
                    "description": "object"
                },
                {
                    "name": "h",
                    "description": "the hashkey (!truthy to delete the hashkey)"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 607,
            "description": "Determines if a value is a regular expression object.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "Reference to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "True if `value` is a `RegExp`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 619,
            "description": "Checks if `obj` is a window object.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "obj",
                    "description": "Object to check",
                    "type": "*"
                }
            ],
            "return": {
                "description": "True if `obj` is a window obj.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 692,
            "params": [
                {
                    "name": "str",
                    "description": "'key1,key2,...'"
                }
            ],
            "return": {
                "description": "in the form of {key1:true, key2:true, ...}",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 850,
            "description": "Creates a shallow copy of an object, an array or a primitive.\n\nAssumes that there are no proto properties for objects.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 1077,
            "return": {
                "description": "Returns the string representation of the element.",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 1102,
            "description": "Tries to decode the URI component without throwing an exception.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "str",
                    "description": "value potential URI component to check."
                }
            ],
            "return": {
                "description": "True if `value` can be decoded\nwith the decodeURIComponent function.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 1119,
            "description": "Parses an escaped url query string into key-value pairs.",
            "return": {
                "description": "",
                "type": "Object.<string,boolean|Array>"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 1161,
            "description": "We need our custom method because encodeURIComponent is too aggressive and doesn't follow\nhttp://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\nsegments:\n   segment       = *pchar\n   pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n   pct-encoded   = \"%\" HEXDIG HEXDIG\n   unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                    / \"*\" / \"+\" / \",\" / \";\" / \"=\"",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 1180,
            "description": "This method is intended for encoding *key* or *value* parts of query component. We need a custom\nmethod because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\nencoded per http://tools.ietf.org/html/rfc3986:\n   query       = *( pchar / \"/\" / \"?\" )\n   pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n   unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   pct-encoded   = \"%\" HEXDIG HEXDIG\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                    / \"*\" / \"+\" / \",\" / \";\" / \"=\"",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 1582,
            "description": "throw error if the argument is falsy.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 1602,
            "description": "throw error if the name given is hasOwnProperty",
            "params": [
                {
                    "name": "name",
                    "description": "the name to test",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "the context in which the name is used, such as module or directive",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 1613,
            "description": "Return the value accessible from the object by path. Any undefined traversals are ignored",
            "params": [
                {
                    "name": "obj",
                    "description": "starting object",
                    "type": "Object"
                },
                {
                    "name": "path",
                    "description": "path to traverse",
                    "type": "String"
                },
                {
                    "name": "bindFnToScope",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "value as accessible by path",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 1640,
            "description": "Return the DOM siblings between the first and last node in the given array.",
            "params": [
                {
                    "name": "array",
                    "description": "like object",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "jqLite collection containing the nodes",
                "type": "JqLite"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 1662,
            "description": "Creates a new object without a prototype. This object is useful for lookup without having to\nguard against prototypically inherited properties via hasOwnProperty.\n\nRelated micro-benchmarks:\n- http://jsperf.com/object-create2\n- http://jsperf.com/proto-map-lookup/2\n- http://jsperf.com/for-in-vs-object-keys2",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 1707,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 1779,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 1782,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 1785,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 1790,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 1981,
            "params": [
                {
                    "name": "provider",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "method",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "insertMethod",
                    "description": "",
                    "type": "String="
                }
            ],
            "return": {
                "description": "",
                "type": "angular.Module"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 2410,
            "description": "Converts snake_case to camelCase.\nAlso there is special case for Moz prefix starting with upper case letter.",
            "params": [
                {
                    "name": "name",
                    "description": "Name to normalize"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 2944,
            "description": "Properties: writes return selection, reads return first value",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3262,
            "description": "chaining functions",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3308,
            "description": "Computes a hash of an 'obj'.\nHash of a:\n string is string\n number is number as string\n object is either result of calling $$hashKey function on the object or uniquely generated id,\n        that is also assigned to the $$hashKey property of the object.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                }
            ],
            "return": {
                "description": "hash string such that the same input will have the same hash string.\n        The resulting string key is in 'type:hashKey' format.",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3340,
            "description": "HashMap which can use objects as keys",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3353,
            "description": "Store key value pair",
            "params": [
                {
                    "name": "key",
                    "description": "key to store can be any type"
                },
                {
                    "name": "value",
                    "description": "value to store can be any type"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3362,
            "params": [
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "the value for the key",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3370,
            "description": "Remove the key/value pair",
            "params": [
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3435,
            "ngdoc": "module",
            "name": "auto",
            "description": "Implicit module which gets automatically added to each {@link auto.$injector $injector}.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3499,
            "ngdoc": "service",
            "name": "$injector",
            "description": "`$injector` is used to retrieve object instances as defined by\n{@link auto.$provide provider}, instantiate types, invoke methods,\nand load modules.\n\nThe following always holds true:\n\n```js\n  var $injector = angular.injector();\n  expect($injector.get('$injector')).toBe($injector);\n  expect($injector.invoke(function($injector) {\n    return $injector;\n  })).toBe($injector);\n```\n\n# Injection Function Annotation\n\nJavaScript does not have annotations, and annotations are needed for dependency injection. The\nfollowing are all valid ways of annotating function with injection arguments and are equivalent.\n\n```js\n  // inferred (only works if code not minified/obfuscated)\n  $injector.invoke(function(serviceA){});\n\n  // annotated\n  function explicit(serviceA) {};\n  explicit.$inject = ['serviceA'];\n  $injector.invoke(explicit);\n\n  // inline\n  $injector.invoke(['serviceA', function(serviceA){}]);\n```\n\n## Inference\n\nIn JavaScript calling `toString()` on a function returns the function definition. The definition\ncan then be parsed and the function arguments can be extracted. This method of discovering\nannotations is disallowed when the injector is in strict mode.\n*NOTE:* This does not work with minification, and obfuscation tools since these tools change the\nargument names.\n\n## `$inject` Annotation\nBy adding an `$inject` property onto a function the injection parameters can be specified.\n\n## Inline\nAs an array of injection names, where the last item in the array is the function to call.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3552,
            "ngdoc": "method",
            "name": "$injector#get",
            "description": "Return an instance of the service.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the instance to retrieve.",
                    "type": "String"
                },
                {
                    "name": "caller",
                    "description": "An optional string to provide the origin of the function call for error messages.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The instance.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3564,
            "ngdoc": "method",
            "name": "$injector#invoke",
            "description": "Invoke the method and supply the method arguments from the `$injector`.",
            "params": [
                {
                    "name": "fn",
                    "description": "The function to invoke. Function parameters are injected according to the\n  {@link guide/di $inject Annotation} rules.",
                    "type": "!Function"
                },
                {
                    "name": "self",
                    "description": "The `this` for the invoked method.",
                    "type": "Object="
                },
                {
                    "name": "locals",
                    "description": "Optional object. If preset then any argument names are read from this\n                        object first, before the `$injector` is consulted.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "the value returned by the invoked `fn` function.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3579,
            "ngdoc": "method",
            "name": "$injector#has",
            "description": "Allows the user to query if the particular service exists.",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the service to query.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "`true` if injector has given service.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3590,
            "ngdoc": "method",
            "name": "$injector#instantiate",
            "description": "Create a new instance of JS type. The method takes a constructor function, invokes the new\noperator, and supplies all of the arguments to the constructor function as specified by the\nconstructor annotation.",
            "params": [
                {
                    "name": "Type",
                    "description": "Annotated constructor function.",
                    "type": "Function"
                },
                {
                    "name": "locals",
                    "description": "Optional object. If preset then any argument names are read from this\nobject first, before the `$injector` is consulted.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "new instance of `Type`.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3604,
            "ngdoc": "method",
            "name": "$injector#annotate",
            "description": "Returns an array of service names which the function is requesting for injection. This API is\nused by the injector to determine which services need to be injected into the function when the\nfunction is invoked. There are three ways in which the function can be annotated with the needed\ndependencies.\n\n# Argument names\n\nThe simplest form is to extract the dependencies from the arguments of the function. This is done\nby converting the function into a string using `toString()` method and extracting the argument\nnames.\n```js\n  // Given\n  function MyController($scope, $route) {\n    // ...\n  }\n\n  // Then\n  expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n```\n\nYou can disallow this method by using strict injection mode.\n\nThis method does not work with code minification / obfuscation. For this reason the following\nannotation strategies are supported.\n\n# The `$inject` property\n\nIf a function has an `$inject` property and its value is an array of strings, then the strings\nrepresent names of services to be injected into the function.\n```js\n  // Given\n  var MyController = function(obfuscatedScope, obfuscatedRoute) {\n    // ...\n  }\n  // Define function dependencies\n  MyController['$inject'] = ['$scope', '$route'];\n\n  // Then\n  expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n```\n\n# The array notation\n\nIt is often desirable to inline Injected functions and that's when setting the `$inject` property\nis very inconvenient. In these situations using the array notation to specify the dependencies in\na way that survives minification is a better choice:\n\n```js\n  // We wish to write this (not minification / obfuscation safe)\n  injector.invoke(function($compile, $rootScope) {\n    // ...\n  });\n\n  // We are forced to write break inlining\n  var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {\n    // ...\n  };\n  tmpFn.$inject = ['$compile', '$rootScope'];\n  injector.invoke(tmpFn);\n\n  // To better support inline function the inline annotation is supported\n  injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {\n    // ...\n  }]);\n\n  // Therefore\n  expect(injector.annotate(\n     ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])\n   ).toEqual(['$compile', '$rootScope']);\n```",
            "params": [
                {
                    "name": "fn",
                    "description": "Function for which dependent service names need to\nbe retrieved as described above.",
                    "type": "Function|Array.<string|Function>"
                },
                {
                    "name": "strictDi",
                    "description": "Disallow argument name annotation inference.",
                    "type": "Boolean=",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "The names of the services which the function requires.",
                "type": "Array.<string>"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3691,
            "ngdoc": "service",
            "name": "$provide",
            "description": "The {@link auto.$provide $provide} service has a number of methods for registering components\nwith the {@link auto.$injector $injector}. Many of these functions are also exposed on\n{@link angular.Module}.\n\nAn Angular **service** is a singleton object created by a **service factory**.  These **service\nfactories** are functions which, in turn, are created by a **service provider**.\nThe **service providers** are constructor functions. When instantiated they must contain a\nproperty called `$get`, which holds the **service factory** function.\n\nWhen you request a service, the {@link auto.$injector $injector} is responsible for finding the\ncorrect **service provider**, instantiating it and then calling its `$get` **service factory**\nfunction to get the instance of the **service**.\n\nOften services have no configuration options and there is no need to add methods to the service\nprovider.  The provider will be no more than a constructor function with a `$get` property. For\nthese cases the {@link auto.$provide $provide} service has additional helper methods to register\nservices without specifying a provider.\n\n* {@link auto.$provide#provider provider(provider)} - registers a **service provider** with the\n    {@link auto.$injector $injector}\n* {@link auto.$provide#constant constant(obj)} - registers a value/object that can be accessed by\n    providers and services.\n* {@link auto.$provide#value value(obj)} - registers a value/object that can only be accessed by\n    services, not providers.\n* {@link auto.$provide#factory factory(fn)} - registers a service **factory function**, `fn`,\n    that will be wrapped in a **service provider** object, whose `$get` property will contain the\n    given factory function.\n* {@link auto.$provide#service service(class)} - registers a **constructor function**, `class`\n    that will be wrapped in a **service provider** object, whose `$get` property will instantiate\n     a new object using the given constructor function.\n\nSee the individual methods for more information and examples.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3731,
            "ngdoc": "method",
            "name": "$provide#provider",
            "description": "Register a **provider function** with the {@link auto.$injector $injector}. Provider functions\nare constructor functions, whose instances are responsible for \"providing\" a factory for a\nservice.\n\nService provider names start with the name of the service they provide followed by `Provider`.\nFor example, the {@link ng.$log $log} service has a provider called\n{@link ng.$logProvider $logProvider}.\n\nService provider objects can have additional methods which allow configuration of the provider\nand its service. Importantly, you can configure what kind of service is created by the `$get`\nmethod, or how that service will act. For example, the {@link ng.$logProvider $logProvider} has a\nmethod {@link ng.$logProvider#debugEnabled debugEnabled}\nwhich lets you specify whether the {@link ng.$log $log} service will log debug messages to the\nconsole or not.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the instance. NOTE: the provider will be available under `name +\n                       'Provider'` key.",
                    "type": "String"
                },
                {
                    "name": "provider",
                    "description": "If the provider is:\n\n  - `Object`: then it should have a `$get` method. The `$get` method will be invoked using\n    {@link auto.$injector#invoke $injector.invoke()} when an instance needs to be created.\n  - `Constructor`: a new instance of the provider will be created using\n    {@link auto.$injector#instantiate $injector.instantiate()}, then treated as `object`.",
                    "type": "(Object|function())"
                }
            ],
            "return": {
                "description": "registered provider instance",
                "type": "Object"
            },
            "example": [
                "\n\nThe following example shows how to create a simple event tracking service and register it using\n{@link auto.$provide#provider $provide.provider()}.\n\n```js\n // Define the eventTracker provider\n function EventTrackerProvider() {\n   var trackingUrl = '/track';\n\n   // A provider method for configuring where the tracked events should been saved\n   this.setTrackingUrl = function(url) {\n     trackingUrl = url;\n   };\n\n   // The service factory function\n   this.$get = ['$http', function($http) {\n     var trackedEvents = {};\n     return {\n       // Call this to track an event\n       event: function(event) {\n         var count = trackedEvents[event] || 0;\n         count += 1;\n         trackedEvents[event] = count;\n         return count;\n       },\n       // Call this to save the tracked events to the trackingUrl\n       save: function() {\n         $http.post(trackingUrl, trackedEvents);\n       }\n     };\n   }];\n }\n\n describe('eventTracker', function() {\n   var postSpy;\n\n   beforeEach(module(function($provide) {\n     // Register the eventTracker provider\n     $provide.provider('eventTracker', EventTrackerProvider);\n   }));\n\n   beforeEach(module(function(eventTrackerProvider) {\n     // Configure eventTracker provider\n     eventTrackerProvider.setTrackingUrl('/custom-track');\n   }));\n\n   it('tracks events', inject(function(eventTracker) {\n     expect(eventTracker.event('login')).toEqual(1);\n     expect(eventTracker.event('login')).toEqual(2);\n   }));\n\n   it('saves to the tracking url', inject(function(eventTracker, $http) {\n     postSpy = spyOn($http, 'post');\n     eventTracker.event('login');\n     eventTracker.save();\n     expect(postSpy).toHaveBeenCalled();\n     expect(postSpy.mostRecentCall.args[0]).not.toEqual('/track');\n     expect(postSpy.mostRecentCall.args[0]).toEqual('/custom-track');\n     expect(postSpy.mostRecentCall.args[1]).toEqual({ 'login': 1 });\n   }));\n });\n```"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3827,
            "ngdoc": "method",
            "name": "$provide#factory",
            "description": "Register a **service factory**, which will be called to return the service instance.\nThis is short for registering a service where its provider consists of only a `$get` property,\nwhich is the given service factory function.\nYou should use {@link auto.$provide#factory $provide.factory(getFn)} if you do not need to\nconfigure your service in a provider.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the instance.",
                    "type": "String"
                },
                {
                    "name": "$getFn",
                    "description": "The $getFn for the instance creation. Internally this is a short hand\n                           for `$provide.provider(name, {$get: $getFn})`.",
                    "type": "Function()"
                }
            ],
            "return": {
                "description": "registered provider instance",
                "type": "Object"
            },
            "example": [
                "\nHere is an example of registering a service\n```js\n  $provide.factory('ping', ['$http', function($http) {\n    return function ping() {\n      return $http.send('/ping');\n    };\n  }]);\n```\nYou would then inject and use this service like this:\n```js\n  someModule.controller('Ctrl', ['ping', function(ping) {\n    ping();\n  }]);\n```"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3861,
            "ngdoc": "method",
            "name": "$provide#service",
            "description": "Register a **service constructor**, which will be invoked with `new` to create the service\ninstance.\nThis is short for registering a service where its provider's `$get` property is the service\nconstructor function that will be used to instantiate the service instance.\n\nYou should use {@link auto.$provide#service $provide.service(class)} if you define your service\nas a type/class.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the instance.",
                    "type": "String"
                },
                {
                    "name": "constructor",
                    "description": "A class (constructor function) that will be instantiated.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "registered provider instance",
                "type": "Object"
            },
            "example": [
                "\nHere is an example of registering a service using\n{@link auto.$provide#service $provide.service(class)}.\n```js\n  var Ping = function($http) {\n    this.$http = $http;\n  };\n\n  Ping.$inject = ['$http'];\n\n  Ping.prototype.send = function() {\n    return this.$http.get('/ping');\n  };\n  $provide.service('ping', Ping);\n```\nYou would then inject and use this service like this:\n```js\n  someModule.controller('Ctrl', ['ping', function(ping) {\n    ping.send();\n  }]);\n```"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3902,
            "ngdoc": "method",
            "name": "$provide#value",
            "description": "Register a **value service** with the {@link auto.$injector $injector}, such as a string, a\nnumber, an array, an object or a function.  This is short for registering a service where its\nprovider's `$get` property is a factory function that takes no arguments and returns the **value\nservice**.\n\nValue services are similar to constant services, except that they cannot be injected into a\nmodule configuration function (see {@link angular.Module#config}) but they can be overridden by\nan Angular\n{@link auto.$provide#decorator decorator}.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the instance.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "registered provider instance",
                "type": "Object"
            },
            "example": [
                "\nHere are some examples of creating value services.\n```js\n  $provide.value('ADMIN_USER', 'admin');\n\n  $provide.value('RoleLookup', { admin: 0, writer: 1, reader: 2 });\n\n  $provide.value('halfOf', function(value) {\n    return value / 2;\n  });\n```"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3935,
            "ngdoc": "method",
            "name": "$provide#constant",
            "description": "Register a **constant service**, such as a string, a number, an array, an object or a function,\nwith the {@link auto.$injector $injector}. Unlike {@link auto.$provide#value value} it can be\ninjected into a module configuration function (see {@link angular.Module#config}) and it cannot\nbe overridden by an Angular {@link auto.$provide#decorator decorator}.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the constant.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The constant value.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "registered instance",
                "type": "Object"
            },
            "example": [
                "\nHere a some examples of creating constants:\n```js\n  $provide.constant('SHARD_HEIGHT', 306);\n\n  $provide.constant('MY_COLOURS', ['red', 'blue', 'grey']);\n\n  $provide.constant('double', function(value) {\n    return value * 2;\n  });\n```"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 3963,
            "ngdoc": "method",
            "name": "$provide#decorator",
            "description": "Register a **service decorator** with the {@link auto.$injector $injector}. A service decorator\nintercepts the creation of a service, allowing it to override or modify the behaviour of the\nservice. The object returned by the decorator may be the original service, or a new service\nobject which replaces or wraps and delegates to the original service.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the service to decorate.",
                    "type": "String"
                },
                {
                    "name": "decorator",
                    "description": "This function will be invoked when the service needs to be\n   instantiated and should return the decorated service instance. The function is called using\n   the {@link auto.$injector#invoke injector.invoke} method and is therefore fully injectable.\n   Local injection arguments:\n\n   * `$delegate` - The original service instance, which can be monkey patched, configured,\n     decorated or delegated to.",
                    "type": "Function()"
                }
            ],
            "example": [
                "\nHere we decorate the {@link ng.$log $log} service to convert warnings to errors by intercepting\ncalls to {@link ng.$log#error $log.warn()}.\n```js\n  $provide.decorator('$log', ['$delegate', function($delegate) {\n    $delegate.warn = $delegate.error;\n    return $delegate;\n  }]);\n```"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4230,
            "ngdoc": "provider",
            "name": "$anchorScrollProvider",
            "description": "Use `$anchorScrollProvider` to disable automatic scrolling whenever\n{@link ng.$location#hash $location.hash()} changes.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4242,
            "ngdoc": "method",
            "name": "$anchorScrollProvider#disableAutoScrolling",
            "description": "By default, {@link ng.$anchorScroll $anchorScroll()} will automatically detect changes to\n{@link ng.$location#hash $location.hash()} and scroll to the element matching the new hash.<br />\nUse this method to disable automatic scrolling.\n\nIf automatic scrolling is disabled, one must explicitly call\n{@link ng.$anchorScroll $anchorScroll()} in order to scroll to the element related to the\ncurrent hash.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4259,
            "ngdoc": "service",
            "name": "yOffset!~YUIDOC_LINE~!If set, specifies a vertical scroll-offset. This is often useful when there are fixed!~YUIDOC_LINE~!positioned elements at the top of the page, such as navbars, headers etc.!~YUIDOC_LINE~!!~YUIDOC_LINE~!`yOffset` can be specified in various ways:!~YUIDOC_LINE~!- **number**: A fixed number of pixels to be used as offset.<br /><br />!~YUIDOC_LINE~!- **function**: A getter function called everytime `$anchorScroll()` is executed. Must return!~YUIDOC_LINE~!  a number representing the offset (in pixels).<br /><br />!~YUIDOC_LINE~!- **jqLite**: A jqLite/jQuery element to be used for specifying the offset. The distance from!~YUIDOC_LINE~!  the top of the page to the element's bottom will be used as offset.<br />!~YUIDOC_LINE~!  **Note**: The element will be taken into account only as long as its `position` is set to!~YUIDOC_LINE~!  `fixed`. This option is useful, when dealing with responsive navbars/headers that adjust!~YUIDOC_LINE~!  their height and/or positioning according to the viewport's size.!~YUIDOC_LINE~!!~YUIDOC_LINE~!<br />!~YUIDOC_LINE~!<div class=\"alert alert-warning\">!~YUIDOC_LINE~!In order for `yOffset` to work properly, scrolling should take place on the document's root and!~YUIDOC_LINE~!not some child element.!~YUIDOC_LINE~!</div>",
            "kind": "function",
            "requires": [
                "$window",
                "$location",
                "$rootScope"
            ],
            "description": "When called, it checks the current value of {@link ng.$location#hash $location.hash()} and\nscrolls to the related element, according to the rules specified in the\n[Html5 spec](http://dev.w3.org/html5/spec/Overview.html#the-indicated-part-of-the-document).\n\nIt also watches the {@link ng.$location#hash $location.hash()} and automatically scrolls to\nmatch any anchor whenever it changes. This can be disabled by calling\n{@link ng.$anchorScrollProvider#disableAutoScrolling $anchorScrollProvider.disableAutoScrolling()}.\n\nAdditionally, you can use its {@link ng.$anchorScroll#yOffset yOffset} property to specify a\nvertical scroll-offset (either fixed or dynamic).",
            "itemtype": "property",
            "type": "(number|function|jqLite)",
            "example": [
                "\n    <example module=\"anchorScrollExample\">\n      <file name=\"index.html\">\n        <div id=\"scrollArea\" ng-controller=\"ScrollController\">\n          <a ng-click=\"gotoBottom()\">Go to bottom</a>\n          <a id=\"bottom\"></a> You're at the bottom!\n        </div>\n      </file>\n      <file name=\"script.js\">\n        angular.module('anchorScrollExample', [])\n          .controller('ScrollController', ['$scope', '$location', '$anchorScroll',\n            function ($scope, $location, $anchorScroll) {\n              $scope.gotoBottom = function() {\n                // set the location.hash to the id of\n                // the element you wish to scroll to.\n                $location.hash('bottom');\n\n                // call $anchorScroll()\n                $anchorScroll();\n              };\n            }]);\n      </file>\n      <file name=\"style.css\">\n        #scrollArea {\n          height: 280px;\n          overflow: auto;\n        }\n\n        #bottom {\n          display: block;\n          margin-top: 2000px;\n        }\n      </file>\n    </example>\n\n<hr />\nThe example below illustrates the use of a vertical scroll-offset (specified as a fixed value).\nSee {@link ng.$anchorScroll#yOffset $anchorScroll.yOffset} for more details.",
                "\n    <example module=\"anchorScrollOffsetExample\">\n      <file name=\"index.html\">\n        <div class=\"fixed-header\" ng-controller=\"headerCtrl\">\n          <a href=\"\" ng-click=\"gotoAnchor(x)\" ng-repeat=\"x in [1,2,3,4,5]\">\n            Go to anchor {{x}}\n          </a>\n        </div>\n        <div id=\"anchor{{x}}\" class=\"anchor\" ng-repeat=\"x in [1,2,3,4,5]\">\n          Anchor {{x}} of 5\n        </div>\n      </file>\n      <file name=\"script.js\">\n        angular.module('anchorScrollOffsetExample', [])\n          .run(['$anchorScroll', function($anchorScroll) {\n            $anchorScroll.yOffset = 50;   // always scroll by 50 extra pixels\n          }])\n          .controller('headerCtrl', ['$anchorScroll', '$location', '$scope',\n            function ($anchorScroll, $location, $scope) {\n              $scope.gotoAnchor = function(x) {\n                var newHash = 'anchor' + x;\n                if ($location.hash() !== newHash) {\n                  // set the $location.hash to `newHash` and\n                  // $anchorScroll will automatically scroll to it\n                  $location.hash('anchor' + x);\n                } else {\n                  // call $anchorScroll() explicitly,\n                  // since $location.hash hasn't changed\n                  $anchorScroll();\n                }\n              };\n            }\n          ]);\n      </file>\n      <file name=\"style.css\">\n        body {\n          padding-top: 50px;\n        }\n\n        .anchor {\n          border: 2px dashed DarkOrchid;\n          padding: 10px 10px 200px 10px;\n        }\n\n        .fixed-header {\n          background-color: rgba(0, 0, 0, 0.2);\n          height: 50px;\n          position: fixed;\n          top: 0; left: 0; right: 0;\n        }\n\n        .fixed-header > a {\n          display: inline-block;\n          margin: 5px 15px;\n        }\n      </file>\n    </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4498,
            "ngdoc": "provider",
            "name": "$animateProvider",
            "description": "Default implementation of $animate that doesn't perform any animations, instead just\nsynchronously performs DOM\nupdates and calls done() callbacks.\n\nIn order to enable animations the ngAnimate module has to be loaded.\n\nTo see the functional implementation check out src/ngAnimate/animate.js",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4517,
            "ngdoc": "method",
            "name": "$animateProvider#register",
            "description": "Registers a new injectable animation factory function. The factory function produces the\nanimation object which contains callback functions for each event that is expected to be\nanimated.\n\n  * `eventFn`: `function(Element, doneFunction)` The element to animate, the `doneFunction`\n  must be called once the element animation is complete. If a function is returned then the\n  animation service will use this function to cancel the animation whenever a cancel event is\n  triggered.\n\n\n```js\n  return {\n    eventFn : function(element, done) {\n      //code to run the animation\n      //once complete, then run done()\n      return function cancellationFunction() {\n        //code to cancel the animation\n      }\n    }\n  }\n```",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the animation.",
                    "type": "String"
                },
                {
                    "name": "factory",
                    "description": "The factory function that will be executed to return the animation\n                          object.",
                    "type": "Function"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4556,
            "ngdoc": "method",
            "name": "$animateProvider#classNameFilter",
            "description": "Sets and/or returns the CSS class regular expression that is checked when performing\nan animation. Upon bootstrap the classNameFilter value is not set at all and will\ntherefore enable $animate to attempt to perform an animation on any element.\nWhen setting the classNameFilter value, animations will only be performed on elements\nthat successfully match the filter expression. This in turn can boost performance\nfor low-powered devices as well as applications containing a lot of structural operations.",
            "params": [
                {
                    "name": "expression",
                    "description": "The className expression which will be checked against all animations",
                    "type": "RegExp="
                }
            ],
            "return": {
                "description": "The current CSS className expression value. If null then there is no expression value",
                "type": "RegExp"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4648,
            "ngdoc": "service",
            "name": "$animate",
            "description": "The $animate service provides rudimentary DOM manipulation functions to\n insert, remove and move elements within the DOM, as well as adding and removing classes.\n This service is the core service used by the ngAnimate $animator service which provides\n high-level animation hooks for CSS and JavaScript.\n$animate is available in the AngularJS core, however, the ngAnimate module must be included\n to enable full out animation support. Otherwise, $animate will only perform simple DOM\n manipulation operations.\nTo learn more about enabling animation support, click here to visit the {@link ngAnimate\n ngAnimate module page} as well as the {@link ngAnimate.$animate ngAnimate $animate service\n page}.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4671,
            "ngdoc": "method",
            "name": "$animate#enter",
            "kind": "function",
            "description": "Inserts the element into the DOM either after the `after` element or\n as the first child within the `parent` element. When the function is called a promise\n is returned that will be resolved at a later time.",
            "params": [
                {
                    "name": "element",
                    "description": "the element which will be inserted into the DOM",
                    "type": "DOMElement"
                },
                {
                    "name": "parent",
                    "description": "the parent element which will append the element as\n   a child (if the after element is not present)",
                    "type": "DOMElement"
                },
                {
                    "name": "after",
                    "description": "the sibling element which will append the element\n   after itself",
                    "type": "DOMElement"
                },
                {
                    "name": "options",
                    "description": "an optional collection of styles that will be applied to the element.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "the animation callback promise",
                "type": "Promise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4694,
            "ngdoc": "method",
            "name": "$animate#leave",
            "kind": "function",
            "description": "Removes the element from the DOM. When the function is called a promise\n is returned that will be resolved at a later time.",
            "params": [
                {
                    "name": "element",
                    "description": "the element which will be removed from the DOM",
                    "type": "DOMElement"
                },
                {
                    "name": "options",
                    "description": "an optional collection of options that will be applied to the element.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "the animation callback promise",
                "type": "Promise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4711,
            "ngdoc": "method",
            "name": "$animate#move",
            "kind": "function",
            "description": "Moves the position of the provided element within the DOM to be placed\n either after the `after` element or inside of the `parent` element. When the function\n is called a promise is returned that will be resolved at a later time.",
            "params": [
                {
                    "name": "element",
                    "description": "the element which will be moved around within the\n   DOM",
                    "type": "DOMElement"
                },
                {
                    "name": "parent",
                    "description": "the parent element where the element will be\n   inserted into (if the after element is not present)",
                    "type": "DOMElement"
                },
                {
                    "name": "after",
                    "description": "the sibling element where the element will be\n   positioned next to",
                    "type": "DOMElement"
                },
                {
                    "name": "options",
                    "description": "an optional collection of options that will be applied to the element.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "the animation callback promise",
                "type": "Promise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4735,
            "ngdoc": "method",
            "name": "$animate#addClass",
            "kind": "function",
            "description": "Adds the provided className CSS class value to the provided element.\n When the function is called a promise is returned that will be resolved at a later time.",
            "params": [
                {
                    "name": "element",
                    "description": "the element which will have the className value\n   added to it",
                    "type": "DOMElement"
                },
                {
                    "name": "className",
                    "description": "the CSS class which will be added to the element",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "an optional collection of options that will be applied to the element.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "the animation callback promise",
                "type": "Promise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4764,
            "ngdoc": "method",
            "name": "$animate#removeClass",
            "kind": "function",
            "description": "Removes the provided className CSS class value from the provided element.\n When the function is called a promise is returned that will be resolved at a later time.",
            "params": [
                {
                    "name": "element",
                    "description": "the element which will have the className value\n   removed from it",
                    "type": "DOMElement"
                },
                {
                    "name": "className",
                    "description": "the CSS class which will be removed from the element",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "an optional collection of options that will be applied to the element.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "the animation callback promise",
                "type": "Promise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4793,
            "ngdoc": "method",
            "name": "$animate#setClass",
            "kind": "function",
            "description": "Adds and/or removes the given CSS classes to and from the element.\n When the function is called a promise is returned that will be resolved at a later time.",
            "params": [
                {
                    "name": "element",
                    "description": "the element which will have its CSS classes changed\n   removed from it",
                    "type": "DOMElement"
                },
                {
                    "name": "add",
                    "description": "the CSS classes which will be added to the element",
                    "type": "String"
                },
                {
                    "name": "remove",
                    "description": "the CSS class which will be removed from the element",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "an optional collection of options that will be applied to the element.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "the animation callback promise",
                "type": "Promise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4879,
            "description": "This object has two goals:\n\n- hide all the global state in the browser caused by the window object\n- abstract away all the browser specific features and inconsistencies\n\nFor tests we provide {@link ngMock.$browser mock implementation} of the `$browser`\nservice, which can be used for convenient testing of the application without the interaction with\nthe real browser apis.",
            "name": "$browser",
            "requires": [
                "$log"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4894,
            "params": [
                {
                    "name": "window",
                    "description": "The global window object.",
                    "type": "Object"
                },
                {
                    "name": "document",
                    "description": "jQuery wrapped document.",
                    "type": "Object"
                },
                {
                    "name": "$log",
                    "description": "window.console or an object with the same interface.",
                    "type": "Object"
                },
                {
                    "name": "$sniffer",
                    "description": "$sniffer service",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4918,
            "description": "Executes the `fn` function(supports currying) and decrements the `outstandingRequestCallbacks`\ncounter. If the counter reaches 0, all the `outstandingRequestCallbacks` are executed.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4944,
            "access": "private",
            "tagname": "Note: this method is used only by scenario runner\nTODO(vojta): prefix this method with $$ ?",
            "params": [
                {
                    "name": "callback",
                    "description": "Function that will be called when no outstanding request",
                    "type": "Function()"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4969,
            "name": "$browser#addPollFn",
            "params": [
                {
                    "name": "fn",
                    "description": "Poll function to add",
                    "type": "Function()"
                }
            ],
            "description": "Adds a function to the list of functions that poller periodically executes,\nand starts polling if not started yet.",
            "return": {
                "description": "the added function",
                "type": "Function()"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 4986,
            "params": [
                {
                    "name": "interval",
                    "description": "How often should browser call poll functions (ms)",
                    "type": "Number"
                },
                {
                    "name": "setTimeout",
                    "description": "Reference to a real or fake `setTimeout` function.",
                    "type": "Function()"
                }
            ],
            "description": "Configures the poller to run in the specified intervals, using the specified\nsetTimeout fn and kicks it off.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5013,
            "name": "$browser#url",
            "description": "GETTER:\nWithout any argument, this method just returns current value of location.href.\n\nSETTER:\nWith at least one argument, this method sets url to new value.\nIf html5 history api supported, pushState/replaceState is used, otherwise\nlocation.href/location.replace is used.\nReturns its own instance to allow chaining\n\nNOTE: this api is intended for use only by the $location service. Please use the\n{@link ng.$location $location service} to change url.",
            "params": [
                {
                    "name": "url",
                    "description": "New url (when used as setter)",
                    "type": "String"
                },
                {
                    "name": "replace",
                    "description": "Should new url replace current history record?",
                    "type": "Boolean="
                },
                {
                    "name": "state",
                    "description": "object to use with pushState/replaceState",
                    "type": "Object="
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5089,
            "name": "$browser#state",
            "description": "This method is a getter.\n\nReturn history.state or null if history.state is undefined.",
            "return": {
                "description": "state",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5145,
            "name": "$browser#onUrlChange",
            "description": "Register callback function that will be called, when url changes.\n\nIt's only called when the url is changed from outside of angular:\n- user types different url into address bar\n- user clicks on history (forward/back) button\n- user clicks on a link\n\nIt's not called when url is changed by $browser.url() method\n\nThe listener gets called with new url as parameter.\n\nNOTE: this api is intended for use only by the $location service. Please use the\n{@link ng.$location $location service} to monitor url changes in angular apps.",
            "params": [
                {
                    "name": "listener",
                    "description": "Listener function to be called when url changes.",
                    "type": "Function(string)"
                }
            ],
            "return": {
                "description": "Returns the registered listener fn - handy if the fn is anonymous.",
                "type": "Function(string)"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5185,
            "description": "Checks whether the url has changed outside of Angular.\nNeeds to be exported to be able to check for changes that have been done in sync,\nas hashchange/popstate events fire in async.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5196,
            "name": "$browser#baseHref",
            "description": "Returns current <base href>\n(always relative - without domain)",
            "return": {
                "description": "The current base href",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5225,
            "name": "$browser#cookies",
            "params": [
                {
                    "name": "name",
                    "description": "Cookie name",
                    "type": "String="
                },
                {
                    "name": "value",
                    "description": "Cookie value",
                    "type": "String="
                }
            ],
            "description": "The cookies method provides a 'private' low level access to browser cookies.\nIt is not meant to be used directly, use the $cookie service instead.\n\nThe return values vary depending on the arguments that the method was called with as follows:\n\n- cookies() -> hash of all cookies, this is NOT a copy of the internal state, so do not modify\n  it\n- cookies(name, value) -> set name to value, if value is undefined delete the cookie\n- cookies(name) -> the same as (name, undefined) == DELETES (no one calls it right now that\n  way)",
            "return": {
                "description": "Hash of all cookies (if called without any parameter)",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5293,
            "name": "$browser#defer",
            "params": [
                {
                    "name": "fn",
                    "description": "A function, who's execution should be deferred.",
                    "type": "Function()"
                },
                {
                    "name": "delay",
                    "description": "of milliseconds to defer the function execution.",
                    "type": "Number=",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "DeferId that can be used to cancel the task via `$browser.defer.cancel()`.",
                "type": "*"
            },
            "description": "Executes a fn asynchronously via `setTimeout(fn, delay)`.\n\nUnlike when calling `setTimeout` directly, in test this function is mocked and instead of using\n`setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed\nvia `$browser.defer.flush()`.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5319,
            "name": "$browser#defer.cancel",
            "description": "Cancels a deferred task identified with `deferId`.",
            "params": [
                {
                    "name": "deferId",
                    "description": "Token returned by the `$browser.defer` function.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if the task hasn't executed yet and was successfully\n                   canceled.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5348,
            "ngdoc": "service",
            "name": "$cacheFactory",
            "description": "Factory that constructs {@link $cacheFactory.Cache Cache} objects and gives access to\nthem.\n\n```js\n\n var cache = $cacheFactory('cacheId');\n expect($cacheFactory.get('cacheId')).toBe(cache);\n expect($cacheFactory.get('noSuchCacheId')).not.toBeDefined();\n\n cache.put(\"key\", \"value\");\n cache.put(\"another key\", \"another value\");\n\n // We've specified no options on creation\n expect(cache.info()).toEqual({id: 'cacheId', size: 2});\n\n```",
            "params": [
                {
                    "name": "cacheId",
                    "description": "Name or id of the newly created cache.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options object that specifies the cache behavior. Properties:\n\n  - `{number=}` `capacity` — turns the cache into LRU cache.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Newly created cache object with the following set of methods:\n\n- `{object}` `info()` — Returns id, size, and options of cache.\n- `{{*}}` `put({string} key, {*} value)` — Puts a new key-value pair into the cache and returns\n  it.\n- `{{*}}` `get({string} key)` — Returns cached value for `key` or undefined for cache miss.\n- `{void}` `remove({string} key)` — Removes a key-value pair from the cache.\n- `{void}` `removeAll()` — Removes all cached values.\n- `{void}` `destroy()` — Removes references to this cache from $cacheFactory.",
                "type": "Object"
            },
            "example": [
                "\n  <example module=\"cacheExampleApp\">\n    <file name=\"index.html\">\n      <div ng-controller=\"CacheController\">\n        <input ng-model=\"newCacheKey\" placeholder=\"Key\">\n        <input ng-model=\"newCacheValue\" placeholder=\"Value\">\n        <button ng-click=\"put(newCacheKey, newCacheValue)\">Cache</button>\n\n        <p ng-if=\"keys.length\">Cached Values</p>\n        <div ng-repeat=\"key in keys\">\n          <span ng-bind=\"key\"></span>\n          <span>: </span>\n          <b ng-bind=\"cache.get(key)\"></b>\n        </div>\n\n        <p>Cache Info</p>\n        <div ng-repeat=\"(key, value) in cache.info()\">\n          <span ng-bind=\"key\"></span>\n          <span>: </span>\n          <b ng-bind=\"value\"></b>\n        </div>\n      </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('cacheExampleApp', []).\n        controller('CacheController', ['$scope', '$cacheFactory', function($scope, $cacheFactory) {\n          $scope.keys = [];\n          $scope.cache = $cacheFactory('cacheId');\n          $scope.put = function(key, value) {\n            if ($scope.cache.get(key) === undefined) {\n              $scope.keys.push(key);\n            }\n            $scope.cache.put(key, value === undefined ? null : value);\n          };\n        }]);\n    </file>\n    <file name=\"style.css\">\n      p {\n        margin: 10px 0 3px;\n      }\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5447,
            "ngdoc": "type",
            "name": "$cacheFactory.Cache",
            "description": "A cache object used to store and retrieve data, primarily used by\n{@link $http $http} and the {@link ng.directive:script script} directive to cache\ntemplates and other data.\n\n```js\n angular.module('superCache')\n   .factory('superCache', ['$cacheFactory', function($cacheFactory) {\n     return $cacheFactory('super-cache');\n   }]);\n```\n\nExample test:\n\n```js\n it('should behave like a cache', inject(function(superCache) {\n   superCache.put('key', 'value');\n   superCache.put('another key', 'another value');\n\n   expect(superCache.info()).toEqual({\n     id: 'super-cache',\n     size: 2\n   });\n\n   superCache.remove('another key');\n   expect(superCache.get('another key')).toBeUndefined();\n\n   superCache.removeAll();\n   expect(superCache.info()).toEqual({\n     id: 'super-cache',\n     size: 0\n   });\n }));\n```",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5488,
            "ngdoc": "method",
            "name": "$cacheFactory.Cache#put",
            "kind": "function",
            "description": "Inserts a named entry into the {@link $cacheFactory.Cache Cache} object to be\nretrieved later, and incrementing the size of the cache if the key was not already\npresent in the cache. If behaving like an LRU cache, it will also remove stale\nentries from the set.\n\nIt will not insert undefined values into the cache.",
            "params": [
                {
                    "name": "key",
                    "description": "the key under which the cached data is stored.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "the value to store alongside the key. If it is undefined, the key\n   will not be stored.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "the value stored.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5524,
            "ngdoc": "method",
            "name": "$cacheFactory.Cache#get",
            "kind": "function",
            "description": "Retrieves named data stored in the {@link $cacheFactory.Cache Cache} object.",
            "params": [
                {
                    "name": "key",
                    "description": "the key of the data to be retrieved",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the value stored.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5548,
            "ngdoc": "method",
            "name": "$cacheFactory.Cache#remove",
            "kind": "function",
            "description": "Removes an entry from the {@link $cacheFactory.Cache Cache} object.",
            "params": [
                {
                    "name": "key",
                    "description": "the key of the entry to be removed",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5576,
            "ngdoc": "method",
            "name": "$cacheFactory.Cache#removeAll",
            "kind": "function",
            "description": "Clears the cache object of any entries.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5592,
            "ngdoc": "method",
            "name": "$cacheFactory.Cache#destroy",
            "kind": "function",
            "description": "Destroys the {@link $cacheFactory.Cache Cache} object entirely,\nremoving it from the {@link $cacheFactory $cacheFactory} set.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5609,
            "ngdoc": "method",
            "name": "$cacheFactory.Cache#info",
            "kind": "function",
            "description": "Retrieve information regarding a particular {@link $cacheFactory.Cache Cache}.",
            "return": {
                "description": "an object with the following properties:\n  <ul>\n    <li>**id**: the id of the cache instance</li>\n    <li>**size**: the number of entries kept in the cache instance</li>\n    <li>**...**: any additional properties from the options object when creating the\n      cache.</li>\n  </ul>",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5631,
            "description": "makes the `entry` the freshEnd of the LRU linked list",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5650,
            "description": "bidirectionally links two entries of the LRU linked list",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5662,
            "ngdoc": "method",
            "name": "$cacheFactory#info",
            "description": "Get information about all the caches that have been created",
            "return": {
                "description": "- key-value map of `cacheId` to the result of calling `cache#info`",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5680,
            "ngdoc": "method",
            "name": "$cacheFactory#get",
            "description": "Get access to a cache object by the `cacheId` used when it was created.",
            "params": [
                {
                    "name": "cacheId",
                    "description": "Name or id of a cache to access.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Cache object identified by the cacheId or undefined if no such cache.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5699,
            "ngdoc": "service",
            "name": "$templateCache",
            "description": "The first time a template is used, it is loaded in the template cache for quick retrieval. You\ncan load templates directly into the cache in a `script` tag, or by consuming the\n`$templateCache` service directly.\n\nAdding via the `script` tag:\n\n```html\n  <script type=\"text/ng-template\" id=\"templateId.html\">\n    <p>This is the content of the template</p>\n  </script>\n```\n\n**Note:** the `script` tag containing the template does not need to be included in the `head` of\nthe document, but it must be a descendent of the {@link ng.$rootElement $rootElement} (IE,\nelement with ng-app attribute), otherwise the template will be ignored.\n\nAdding via the `$templateCache` service:\n\n```js\nvar myApp = angular.module('myApp', []);\nmyApp.run(function($templateCache) {\n  $templateCache.put('templateId.html', 'This is the content of the template');\n});\n```\n\nTo retrieve the template later, simply use it in your HTML:\n```html\n<div ng-include=\" 'templateId.html' \"></div>\n```\n\nor get it via Javascript:\n```js\n$templateCache.get('templateId.html')\n```\n\nSee {@link ng.$cacheFactory $cacheFactory}.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 5777,
            "ngdoc": "service",
            "name": "$compile",
            "kind": "function",
            "description": "Compiles an HTML string or DOM into a template and produces a template function, which\ncan then be used to link {@link ng.$rootScope.Scope `scope`} and the template together.\n\nThe compilation is a process of walking the DOM tree and matching DOM elements to\n{@link ng.$compileProvider#directive directives}.\n\n<div class=\"alert alert-warning\">\n**Note:** This document is an in-depth reference of all directive options.\nFor a gentle introduction to directives with examples of common use cases,\nsee the {@link guide/directive directive guide}.\n</div>\n\n## Comprehensive Directive API\n\nThere are many different options for a directive.\n\nThe difference resides in the return value of the factory function.\nYou can either return a \"Directive Definition Object\" (see below) that defines the directive properties,\nor just the `postLink` function (all other properties will have the default values).\n\n<div class=\"alert alert-success\">\n**Best Practice:** It's recommended to use the \"directive definition object\" form.\n</div>\n\nHere's an example directive declared with a Directive Definition Object:\n\n```js\n  var myModule = angular.module(...);\n\n  myModule.directive('directiveName', function factory(injectables) {\n    var directiveDefinitionObject = {\n      priority: 0,\n      template: '<div></div>', // or // function(tElement, tAttrs) { ... },\n      // or\n      // templateUrl: 'directive.html', // or // function(tElement, tAttrs) { ... },\n      transclude: false,\n      restrict: 'A',\n      templateNamespace: 'html',\n      scope: false,\n      controller: function($scope, $element, $attrs, $transclude, otherInjectables) { ... },\n      controllerAs: 'stringAlias',\n      require: 'siblingDirectiveName', // or // ['^parentDirectiveName', '?optionalDirectiveName', '?^optionalParent'],\n      compile: function compile(tElement, tAttrs, transclude) {\n        return {\n          pre: function preLink(scope, iElement, iAttrs, controller) { ... },\n          post: function postLink(scope, iElement, iAttrs, controller) { ... }\n        }\n        // or\n        // return function postLink( ... ) { ... }\n      },\n      // or\n      // link: {\n      //  pre: function preLink(scope, iElement, iAttrs, controller) { ... },\n      //  post: function postLink(scope, iElement, iAttrs, controller) { ... }\n      // }\n      // or\n      // link: function postLink( ... ) { ... }\n    };\n    return directiveDefinitionObject;\n  });\n```\n\n<div class=\"alert alert-warning\">\n**Note:** Any unspecified options will use the default value. You can see the default values below.\n</div>\n\nTherefore the above can be simplified as:\n\n```js\n  var myModule = angular.module(...);\n\n  myModule.directive('directiveName', function factory(injectables) {\n    var directiveDefinitionObject = {\n      link: function postLink(scope, iElement, iAttrs) { ... }\n    };\n    return directiveDefinitionObject;\n    // or\n    // return function postLink(scope, iElement, iAttrs) { ... }\n  });\n```\n\n\n\n### Directive Definition Object\n\nThe directive definition object provides instructions to the {@link ng.$compile\ncompiler}. The attributes are:\n\n#### `multiElement`\nWhen this property is set to true, the HTML compiler will collect DOM nodes between\nnodes with the attributes `directive-name-start` and `directive-name-end`, and group them\ntogether as the directive elements. It is recommended that this feature be used on directives\nwhich are not strictly behavioural (such as {@link ngClick}), and which\ndo not manipulate or replace child nodes (such as {@link ngInclude}).\n\n#### `priority`\nWhen there are multiple directives defined on a single DOM element, sometimes it\nis necessary to specify the order in which the directives are applied. The `priority` is used\nto sort the directives before their `compile` functions get called. Priority is defined as a\nnumber. Directives with greater numerical `priority` are compiled first. Pre-link functions\nare also run in priority order, but post-link functions are run in reverse order. The order\nof directives with the same priority is undefined. The default priority is `0`.\n\n#### `terminal`\nIf set to true then the current `priority` will be the last set of directives\nwhich will execute (any directives at the current priority will still execute\nas the order of execution on same `priority` is undefined). Note that expressions\nand other directives used in the directive's template will also be excluded from execution.\n\n#### `scope`\n**If set to `true`,** then a new scope will be created for this directive. If multiple directives on the\nsame element request a new scope, only one new scope is created. The new scope rule does not\napply for the root of the template since the root of the template always gets a new scope.\n\n**If set to `{}` (object hash),** then a new \"isolate\" scope is created. The 'isolate' scope differs from\nnormal scope in that it does not prototypically inherit from the parent scope. This is useful\nwhen creating reusable components, which should not accidentally read or modify data in the\nparent scope.\n\nThe 'isolate' scope takes an object hash which defines a set of local scope properties\nderived from the parent scope. These local properties are useful for aliasing values for\ntemplates. Locals definition is a hash of local scope property to its source:\n\n* `@` or `@attr` - bind a local scope property to the value of DOM attribute. The result is\n  always a string since DOM attributes are strings. If no `attr` name is specified  then the\n  attribute name is assumed to be the same as the local name.\n  Given `<widget my-attr=\"hello {{name}}\">` and widget definition\n  of `scope: { localName:'@myAttr' }`, then widget scope property `localName` will reflect\n  the interpolated value of `hello {{name}}`. As the `name` attribute changes so will the\n  `localName` property on the widget scope. The `name` is read from the parent scope (not\n  component scope).\n\n* `=` or `=attr` - set up bi-directional binding between a local scope property and the\n  parent scope property of name defined via the value of the `attr` attribute. If no `attr`\n  name is specified then the attribute name is assumed to be the same as the local name.\n  Given `<widget my-attr=\"parentModel\">` and widget definition of\n  `scope: { localModel:'=myAttr' }`, then widget scope property `localModel` will reflect the\n  value of `parentModel` on the parent scope. Any changes to `parentModel` will be reflected\n  in `localModel` and any changes in `localModel` will reflect in `parentModel`. If the parent\n  scope property doesn't exist, it will throw a NON_ASSIGNABLE_MODEL_EXPRESSION exception. You\n  can avoid this behavior using `=?` or `=?attr` in order to flag the property as optional. If\n  you want to shallow watch for changes (i.e. $watchCollection instead of $watch) you can use\n  `=*` or `=*attr` (`=*?` or `=*?attr` if the property is optional).\n\n* `&` or `&attr` - provides a way to execute an expression in the context of the parent scope.\n  If no `attr` name is specified then the attribute name is assumed to be the same as the\n  local name. Given `<widget my-attr=\"count = count + value\">` and widget definition of\n  `scope: { localFn:'&myAttr' }`, then isolate scope property `localFn` will point to\n  a function wrapper for the `count = count + value` expression. Often it's desirable to\n  pass data from the isolated scope via an expression to the parent scope, this can be\n  done by passing a map of local variable names and values into the expression wrapper fn.\n  For example, if the expression is `increment(amount)` then we can specify the amount value\n  by calling the `localFn` as `localFn({amount: 22})`.\n\n\n#### `bindToController`\nWhen an isolate scope is used for a component (see above), and `controllerAs` is used, `bindToController: true` will\nallow a component to have its properties bound to the controller, rather than to scope. When the controller\nis instantiated, the initial values of the isolate scope bindings are already available.\n\n#### `controller`\nController constructor function. The controller is instantiated before the\npre-linking phase and it is shared with other directives (see\n`require` attribute). This allows the directives to communicate with each other and augment\neach other's behavior. The controller is injectable (and supports bracket notation) with the following locals:\n\n* `$scope` - Current scope associated with the element\n* `$element` - Current element\n* `$attrs` - Current attributes object for the element\n* `$transclude` - A transclude linking function pre-bound to the correct transclusion scope:\n  `function([scope], cloneLinkingFn, futureParentElement)`.\n   * `scope`: optional argument to override the scope.\n   * `cloneLinkingFn`: optional argument to create clones of the original transcluded content.\n   * `futureParentElement`:\n       * defines the parent to which the `cloneLinkingFn` will add the cloned elements.\n       * default: `$element.parent()` resp. `$element` for `transclude:'element'` resp. `transclude:true`.\n       * only needed for transcludes that are allowed to contain non html elements (e.g. SVG elements)\n         and when the `cloneLinkinFn` is passed,\n         as those elements need to created and cloned in a special way when they are defined outside their\n         usual containers (e.g. like `<svg>`).\n       * See also the `directive.templateNamespace` property.\n\n\n#### `require`\nRequire another directive and inject its controller as the fourth argument to the linking function. The\n`require` takes a string name (or array of strings) of the directive(s) to pass in. If an array is used, the\ninjected argument will be an array in corresponding order. If no such directive can be\nfound, or if the directive does not have a controller, then an error is raised (unless no link function\nis specified, in which case error checking is skipped). The name can be prefixed with:\n\n* (no prefix) - Locate the required controller on the current element. Throw an error if not found.\n* `?` - Attempt to locate the required controller or pass `null` to the `link` fn if not found.\n* `^` - Locate the required controller by searching the element and its parents. Throw an error if not found.\n* `^^` - Locate the required controller by searching the element's parents. Throw an error if not found.\n* `?^` - Attempt to locate the required controller by searching the element and its parents or pass\n  `null` to the `link` fn if not found.\n* `?^^` - Attempt to locate the required controller by searching the element's parents, or pass\n  `null` to the `link` fn if not found.\n\n\n#### `controllerAs`\nController alias at the directive scope. An alias for the controller so it\ncan be referenced at the directive template. The directive needs to define a scope for this\nconfiguration to be used. Useful in the case when directive is used as component.\n\n\n#### `restrict`\nString of subset of `EACM` which restricts the directive to a specific directive\ndeclaration style. If omitted, the defaults (elements and attributes) are used.\n\n* `E` - Element name (default): `<my-directive></my-directive>`\n* `A` - Attribute (default): `<div my-directive=\"exp\"></div>`\n* `C` - Class: `<div class=\"my-directive: exp;\"></div>`\n* `M` - Comment: `<!-- directive: my-directive exp -->`\n\n\n#### `templateNamespace`\nString representing the document type used by the markup in the template.\nAngularJS needs this information as those elements need to be created and cloned\nin a special way when they are defined outside their usual containers like `<svg>` and `<math>`.\n\n* `html` - All root nodes in the template are HTML. Root nodes may also be\n  top-level elements such as `<svg>` or `<math>`.\n* `svg` - The root nodes in the template are SVG elements (excluding `<math>`).\n* `math` - The root nodes in the template are MathML elements (excluding `<svg>`).\n\nIf no `templateNamespace` is specified, then the namespace is considered to be `html`.\n\n#### `template`\nHTML markup that may:\n* Replace the contents of the directive's element (default).\n* Replace the directive's element itself (if `replace` is true - DEPRECATED).\n* Wrap the contents of the directive's element (if `transclude` is true).\n\nValue may be:\n\n* A string. For example `<div red-on-hover>{{delete_str}}</div>`.\n* A function which takes two arguments `tElement` and `tAttrs` (described in the `compile`\n  function api below) and returns a string value.\n\n\n#### `templateUrl`\nThis is similar to `template` but the template is loaded from the specified URL, asynchronously.\n\nBecause template loading is asynchronous the compiler will suspend compilation of directives on that element\nfor later when the template has been resolved.  In the meantime it will continue to compile and link\nsibling and parent elements as though this element had not contained any directives.\n\nThe compiler does not suspend the entire compilation to wait for templates to be loaded because this\nwould result in the whole app \"stalling\" until all templates are loaded asynchronously - even in the\ncase when only one deeply nested directive has `templateUrl`.\n\nTemplate loading is asynchronous even if the template has been preloaded into the {@link $templateCache}\n\nYou can specify `templateUrl` as a string representing the URL or as a function which takes two\narguments `tElement` and `tAttrs` (described in the `compile` function api below) and returns\na string value representing the url.  In either case, the template URL is passed through {@link\n$sce#getTrustedResourceUrl $sce.getTrustedResourceUrl}.\n\n\n#### `replace` ([*DEPRECATED*!], will be removed in next major release - i.e. v2.0)\nspecify what the template should replace. Defaults to `false`.\n\n* `true` - the template will replace the directive's element.\n* `false` - the template will replace the contents of the directive's element.\n\nThe replacement process migrates all of the attributes / classes from the old element to the new\none. See the {@link guide/directive#template-expanding-directive\nDirectives Guide} for an example.\n\nThere are very few scenarios where element replacement is required for the application function,\nthe main one being reusable custom components that are used within SVG contexts\n(because SVG doesn't work with custom elements in the DOM tree).\n\n#### `transclude`\nExtract the contents of the element where the directive appears and make it available to the directive.\nThe contents are compiled and provided to the directive as a **transclusion function**. See the\n{@link $compile#transclusion Transclusion} section below.\n\nThere are two kinds of transclusion depending upon whether you want to transclude just the contents of the\ndirective's element or the entire element:\n\n* `true` - transclude the content (i.e. the child nodes) of the directive's element.\n* `'element'` - transclude the whole of the directive's element including any directives on this\n  element that defined at a lower priority than this directive. When used, the `template`\n  property is ignored.\n\n\n#### `compile`\n\n```js\n  function compile(tElement, tAttrs, transclude) { ... }\n```\n\nThe compile function deals with transforming the template DOM. Since most directives do not do\ntemplate transformation, it is not used often. The compile function takes the following arguments:\n\n  * `tElement` - template element - The element where the directive has been declared. It is\n    safe to do template transformation on the element and child elements only.\n\n  * `tAttrs` - template attributes - Normalized list of attributes declared on this element shared\n    between all directive compile functions.\n\n  * `transclude` -  [*DEPRECATED*!] A transclude linking function: `function(scope, cloneLinkingFn)`\n\n<div class=\"alert alert-warning\">\n**Note:** The template instance and the link instance may be different objects if the template has\nbeen cloned. For this reason it is **not** safe to do anything other than DOM transformations that\napply to all cloned DOM nodes within the compile function. Specifically, DOM listener registration\nshould be done in a linking function rather than in a compile function.\n</div>\n\n<div class=\"alert alert-warning\">\n**Note:** The compile function cannot handle directives that recursively use themselves in their\nown templates or compile functions. Compiling these directives results in an infinite loop and a\nstack overflow errors.\n\nThis can be avoided by manually using $compile in the postLink function to imperatively compile\na directive's template instead of relying on automatic template compilation via `template` or\n`templateUrl` declaration or manual compilation inside the compile function.\n</div>\n\n<div class=\"alert alert-error\">\n**Note:** The `transclude` function that is passed to the compile function is deprecated, as it\n  e.g. does not know about the right outer scope. Please use the transclude function that is passed\n  to the link function instead.\n</div>\n\nA compile function can have a return value which can be either a function or an object.\n\n* returning a (post-link) function - is equivalent to registering the linking function via the\n  `link` property of the config object when the compile function is empty.\n\n* returning an object with function(s) registered via `pre` and `post` properties - allows you to\n  control when a linking function should be called during the linking phase. See info about\n  pre-linking and post-linking functions below.\n\n\n#### `link`\nThis property is used only if the `compile` property is not defined.\n\n```js\n  function link(scope, iElement, iAttrs, controller, transcludeFn) { ... }\n```\n\nThe link function is responsible for registering DOM listeners as well as updating the DOM. It is\nexecuted after the template has been cloned. This is where most of the directive logic will be\nput.\n\n  * `scope` - {@link ng.$rootScope.Scope Scope} - The scope to be used by the\n    directive for registering {@link ng.$rootScope.Scope#$watch watches}.\n\n  * `iElement` - instance element - The element where the directive is to be used. It is safe to\n    manipulate the children of the element only in `postLink` function since the children have\n    already been linked.\n\n  * `iAttrs` - instance attributes - Normalized list of attributes declared on this element shared\n    between all directive linking functions.\n\n  * `controller` - a controller instance - A controller instance if at least one directive on the\n    element defines a controller. The controller is shared among all the directives, which allows\n    the directives to use the controllers as a communication channel.\n\n  * `transcludeFn` - A transclude linking function pre-bound to the correct transclusion scope.\n    This is the same as the `$transclude`\n    parameter of directive controllers, see there for details.\n    `function([scope], cloneLinkingFn, futureParentElement)`.\n\n#### Pre-linking function\n\nExecuted before the child elements are linked. Not safe to do DOM transformation since the\ncompiler linking function will fail to locate the correct elements for linking.\n\n#### Post-linking function\n\nExecuted after the child elements are linked.\n\nNote that child elements that contain `templateUrl` directives will not have been compiled\nand linked since they are waiting for their template to load asynchronously and their own\ncompilation and linking has been suspended until that occurs.\n\nIt is safe to do DOM transformation in the post-linking function on elements that are not waiting\nfor their async templates to be resolved.\n\n\n### Transclusion\n\nTransclusion is the process of extracting a collection of DOM element from one part of the DOM and\ncopying them to another part of the DOM, while maintaining their connection to the original AngularJS\nscope from where they were taken.\n\nTransclusion is used (often with {@link ngTransclude}) to insert the\noriginal contents of a directive's element into a specified place in the template of the directive.\nThe benefit of transclusion, over simply moving the DOM elements manually, is that the transcluded\ncontent has access to the properties on the scope from which it was taken, even if the directive\nhas isolated scope.\nSee the {@link guide/directive#creating-a-directive-that-wraps-other-elements Directives Guide}.\n\nThis makes it possible for the widget to have private state for its template, while the transcluded\ncontent has access to its originating scope.\n\n<div class=\"alert alert-warning\">\n**Note:** When testing an element transclude directive you must not place the directive at the root of the\nDOM fragment that is being compiled. See {@link guide/unit-testing#testing-transclusion-directives\nTesting Transclusion Directives}.\n</div>\n\n#### Transclusion Functions\n\nWhen a directive requests transclusion, the compiler extracts its contents and provides a **transclusion\nfunction** to the directive's `link` function and `controller`. This transclusion function is a special\n**linking function** that will return the compiled contents linked to a new transclusion scope.\n\n<div class=\"alert alert-info\">\nIf you are just using {@link ngTransclude} then you don't need to worry about this function, since\nngTransclude will deal with it for us.\n</div>\n\nIf you want to manually control the insertion and removal of the transcluded content in your directive\nthen you must use this transclude function. When you call a transclude function it returns a a jqLite/JQuery\nobject that contains the compiled DOM, which is linked to the correct transclusion scope.\n\nWhen you call a transclusion function you can pass in a **clone attach function**. This function accepts\ntwo parameters, `function(clone, scope) { ... }`, where the `clone` is a fresh compiled copy of your transcluded\ncontent and the `scope` is the newly created transclusion scope, to which the clone is bound.\n\n<div class=\"alert alert-info\">\n**Best Practice**: Always provide a `cloneFn` (clone attach function) when you call a translude function\nsince you then get a fresh clone of the original DOM and also have access to the new transclusion scope.\n</div>\n\nIt is normal practice to attach your transcluded content (`clone`) to the DOM inside your **clone\nattach function**:\n\n```js\nvar transcludedContent, transclusionScope;\n\n$transclude(function(clone, scope) {\n  element.append(clone);\n  transcludedContent = clone;\n  transclusionScope = scope;\n});\n```\n\nLater, if you want to remove the transcluded content from your DOM then you should also destroy the\nassociated transclusion scope:\n\n```js\ntranscludedContent.remove();\ntransclusionScope.$destroy();\n```\n\n<div class=\"alert alert-info\">\n**Best Practice**: if you intend to add and remove transcluded content manually in your directive\n(by calling the transclude function to get the DOM and and calling `element.remove()` to remove it),\nthen you are also responsible for calling `$destroy` on the transclusion scope.\n</div>\n\nThe built-in DOM manipulation directives, such as {@link ngIf}, {@link ngSwitch} and {@link ngRepeat}\nautomatically destroy their transluded clones as necessary so you do not need to worry about this if\nyou are simply using {@link ngTransclude} to inject the transclusion into your directive.\n\n\n#### Transclusion Scopes\n\nWhen you call a transclude function it returns a DOM fragment that is pre-bound to a **transclusion\nscope**. This scope is special, in that it is a child of the directive's scope (and so gets destroyed\nwhen the directive's scope gets destroyed) but it inherits the properties of the scope from which it\nwas taken.\n\nFor example consider a directive that uses transclusion and isolated scope. The DOM hierarchy might look\nlike this:\n\n```html\n<div ng-app>\n  <div isolate>\n    <div transclusion>\n    </div>\n  </div>\n</div>\n```\n\nThe `$parent` scope hierarchy will look like this:\n\n```\n- $rootScope\n  - isolate\n    - transclusion\n```\n\nbut the scopes will inherit prototypically from different scopes to their `$parent`.\n\n```\n- $rootScope\n  - transclusion\n- isolate\n```\n\n\n### Attributes\n\nThe {@link ng.$compile.directive.Attributes Attributes} object - passed as a parameter in the\n`link()` or `compile()` functions. It has a variety of uses.\n\naccessing *Normalized attribute names:*\nDirectives like 'ngBind' can be expressed in many ways: 'ng:bind', `data-ng-bind`, or 'x-ng-bind'.\nthe attributes object allows for normalized access to\n  the attributes.\n\n* *Directive inter-communication:* All directives share the same instance of the attributes\n  object which allows the directives to use the attributes object as inter directive\n  communication.\n\n* *Supports interpolation:* Interpolation attributes are assigned to the attribute object\n  allowing other directives to read the interpolated value.\n\n* *Observing interpolated attributes:* Use `$observe` to observe the value changes of attributes\n  that contain interpolation (e.g. `src=\"{{bar}}\"`). Not only is this very efficient but it's also\n  the only way to easily get the actual value because during the linking phase the interpolation\n  hasn't been evaluated yet and so the value is at this time set to `undefined`.\n\n```js\nfunction linkingFn(scope, elm, attrs, ctrl) {\n  // get the attribute value\n  console.log(attrs.ngModel);\n\n  // change the attribute\n  attrs.$set('ngModel', 'new value');\n\n  // observe changes to interpolated attribute\n  attrs.$observe('ngModel', function(value) {\n    console.log('ngModel has changed value to ' + value);\n  });\n}\n```\n\n## Example\n\n<div class=\"alert alert-warning\">\n**Note**: Typically directives are registered with `module.directive`. The example below is\nto illustrate how `$compile` works.\n</div>\n\n<example module=\"compileExample\">\n  <file name=\"index.html\">\n   <script>\n     angular.module('compileExample', [], function($compileProvider) {\n       // configure new 'compile' directive by passing a directive\n       // factory function. The factory function injects the '$compile'\n       $compileProvider.directive('compile', function($compile) {\n         // directive factory creates a link function\n         return function(scope, element, attrs) {\n           scope.$watch(\n             function(scope) {\n                // watch the 'compile' expression for changes\n               return scope.$eval(attrs.compile);\n             },\n             function(value) {\n               // when the 'compile' expression changes\n               // assign it into the current DOM\n               element.html(value);\n\n               // compile the new DOM and link it to the current\n               // scope.\n               // NOTE: we only compile .childNodes so that\n               // we don't get into infinite loop compiling ourselves\n               $compile(element.contents())(scope);\n             }\n           );\n         };\n       });\n     })\n     .controller('GreeterController', ['$scope', function($scope) {\n       $scope.name = 'Angular';\n       $scope.html = 'Hello {{name}}';\n     }]);\n   </script>\n   <div ng-controller=\"GreeterController\">\n     <input ng-model=\"name\"> <br>\n     <textarea ng-model=\"html\"></textarea> <br>\n     <div compile=\"html\"></div>\n   </div>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n    it('should auto compile', function() {\n      var textarea = $('textarea');\n      var output = $('div[compile]');\n      // The initial state reads 'Hello Angular'.\n      expect(output.getText()).toBe('Hello Angular');\n      textarea.clear();\n      textarea.sendKeys('{{name}}!');\n      expect(output.getText()).toBe('Angular!');\n    });\n  </file>\n</example>",
            "params": [
                {
                    "name": "element",
                    "description": "Element or HTML string to compile into a template function.",
                    "type": "String|DOMElement"
                },
                {
                    "name": "transclude",
                    "description": "function available to directives - DEPRECATED.\n\n<div class=\"alert alert-error\">\n**Note:** Passing a `transclude` function to the $compile function is deprecated, as it\n  e.g. will not use the right outer scope. Please pass the transclude function as a\n  `parentBoundTranscludeFn` to the link function instead.\n</div>",
                    "type": "function(angular.Scope, cloneAttachFn=)"
                },
                {
                    "name": "maxPriority",
                    "description": "only apply directives lower than given priority (Only effects the\n                root element(s), not their children)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "a link function which is used to bind template\n(a DOM element/tree) to a scope. Where:\n\n * `scope` - A {@link ng.$rootScope.Scope Scope} to bind to.\n * `cloneAttachFn` - If `cloneAttachFn` is provided, then the link function will clone the\n `template` and call the `cloneAttachFn` function allowing the caller to attach the\n cloned elements to the DOM document at the appropriate place. The `cloneAttachFn` is\n called as: <br> `cloneAttachFn(clonedElement, scope)` where:\n\n     * `clonedElement` - is a clone of the original `element` passed into the compiler.\n     * `scope` - is the current scope with which the linking function is working with.\n\n * `options` - An optional object hash with linking options. If `options` is provided, then the following\n keys may be used to control linking behavior:\n\n     * `parentBoundTranscludeFn` - the transclude function made available to\n       directives; if given, it will be passed through to the link functions of\n       directives found in `element` during compilation.\n     * `transcludeControllers` - an object hash with keys that map controller names\n       to controller instances; if given, it will make the controllers\n       available to directives.\n     * `futureParentElement` - defines the parent to which the `cloneAttachFn` will add\n       the cloned elements; only needed for transcludes that are allowed to contain non html\n       elements (e.g. SVG elements). See also the directive.controller property.\n\nCalling the linking function returns the element of the template. It is either the original\nelement passed in, or the clone of the element if the `cloneAttachFn` is provided.\n\nAfter linking the view is not updated until after a call to $digest which typically is done by\nAngular automatically.\n\nIf you need access to the bound view, there are two ways to do it:\n\n- If you are not asking the linking function to clone the template, create the DOM element(s)\n  before you send them to the compiler and keep this reference around.\n  ```js\n    var element = $compile('<p>{{total}}</p>')(scope);\n  ```\n\n- if on the other hand, you need the element to be cloned, the view reference from the original\n  example would not point to the clone, but rather to the original template that was cloned. In\n  this case, you can access the clone via the cloneAttachFn:\n  ```js\n    var templateElement = angular.element('<p>{{total}}</p>'),\n        scope = ....;\n\n    var clonedElement = $compile(templateElement)(scope, function(clonedElement, scope) {\n      //attach the clone to DOM document at the right place\n    });\n\n    //now we have reference to the cloned DOM via `clonedElement`\n  ```\n\n\nFor information on how the compiler works, see the\n{@link guide/compiler Angular HTML Compiler} section of the Developer Guide.",
                "type": "Function(scope, cloneAttachFn=, options=)"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 6452,
            "ngdoc": "provider",
            "name": "$compileProvider",
            "description": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 6498,
            "ngdoc": "method",
            "name": "$compileProvider#directive",
            "kind": "function",
            "description": "Register a new directive with the compiler.",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the directive in camel-case (i.e. <code>ngBind</code> which\n   will match as <code>ng-bind</code>), or an object map of directives where the keys are the\n   names and the values are the factories.",
                    "type": "String|Object"
                },
                {
                    "name": "directiveFactory",
                    "description": "An injectable directive factory function. See\n   {@link guide/directive} for more info.",
                    "type": "Function|Array"
                }
            ],
            "return": {
                "description": "Self for chaining.",
                "type": "ng.$compileProvider"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 6554,
            "ngdoc": "method",
            "name": "$compileProvider#aHrefSanitizationWhitelist",
            "kind": "function",
            "description": "Retrieves or overrides the default regular expression that is used for whitelisting of safe\nurls during a[href] sanitization.\n\nThe sanitization is a security measure aimed at preventing XSS attacks via html links.\n\nAny url about to be assigned to a[href] via data-binding is first normalized and turned into\nan absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\nregular expression. If a match is found, the original url is written into the dom. Otherwise,\nthe absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.",
            "params": [
                {
                    "name": "regexp",
                    "description": "New regexp to whitelist urls with.",
                    "type": "RegExp="
                }
            ],
            "return": {
                "description": "Current RegExp if called without value or self for\n   chaining otherwise.",
                "type": "RegExp|ng.$compileProvider"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 6584,
            "ngdoc": "method",
            "name": "$compileProvider#imgSrcSanitizationWhitelist",
            "kind": "function",
            "description": "Retrieves or overrides the default regular expression that is used for whitelisting of safe\nurls during img[src] sanitization.\n\nThe sanitization is a security measure aimed at prevent XSS attacks via html links.\n\nAny url about to be assigned to img[src] via data-binding is first normalized and turned into\nan absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\nregular expression. If a match is found, the original url is written into the dom. Otherwise,\nthe absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.",
            "params": [
                {
                    "name": "regexp",
                    "description": "New regexp to whitelist urls with.",
                    "type": "RegExp="
                }
            ],
            "return": {
                "description": "Current RegExp if called without value or self for\n   chaining otherwise.",
                "type": "RegExp|ng.$compileProvider"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 6613,
            "ngdoc": "method",
            "name": "$compileProvider#debugInfoEnabled",
            "params": [
                {
                    "name": "enabled",
                    "description": "update the debugInfoEnabled state if provided, otherwise just return the\ncurrent debugInfoEnabled state",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "current value if used as getter or itself (chaining) if used as setter",
                "type": "*"
            },
            "kind": "function",
            "description": "Call this method to enable/disable various debug runtime information in the compiler such as adding\nbinding information and a reference to the current scope on to DOM elements.\nIf enabled, the compiler will add the following to DOM elements that have been bound to the scope\n* `ng-binding` CSS class\n* `$binding` data property containing an array of the binding expressions\n\nYou may want to disable this in production for a significant performance boost. See\n{@link guide/production#disabling-debug-data Disabling Debug Data} for more.\n\nThe default value is true.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 6667,
            "ngdoc": "method",
            "name": "$compile.directive.Attributes#$normalize",
            "kind": "function",
            "description": "Converts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with `x-` or\n`data-`) to its normalized, camelCase form.\n\nAlso there is special case for Moz prefix starting with upper case letter.\n\nFor further information check out the guide on {@link guide/directive#matching-directives Matching Directives}",
            "params": [
                {
                    "name": "name",
                    "description": "Name to normalize",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 6685,
            "ngdoc": "method",
            "name": "$compile.directive.Attributes#$addClass",
            "kind": "function",
            "description": "Adds the CSS class value specified by the classVal parameter to the element. If animations\nare enabled then an animation will be triggered for the class addition.",
            "params": [
                {
                    "name": "classVal",
                    "description": "The className value that will be added to the element",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 6702,
            "ngdoc": "method",
            "name": "$compile.directive.Attributes#$removeClass",
            "kind": "function",
            "description": "Removes the CSS class value specified by the classVal parameter from the element. If\nanimations are enabled then an animation will be triggered for the class removal.",
            "params": [
                {
                    "name": "classVal",
                    "description": "The className value that will be removed from the element",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 6719,
            "ngdoc": "method",
            "name": "$compile.directive.Attributes#$updateClass",
            "kind": "function",
            "description": "Adds and removes the appropriate CSS class values to the element based on the difference\nbetween the new and old CSS class values (specified as newClasses and oldClasses).",
            "params": [
                {
                    "name": "newClasses",
                    "description": "The current CSS className value",
                    "type": "String"
                },
                {
                    "name": "oldClasses",
                    "description": "The former CSS className value",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 6743,
            "description": "Set a normalized attribute on the element in a way such that all directives\ncan share the attribute. This function properly handles boolean attributes.",
            "params": [
                {
                    "name": "key",
                    "description": "Normalized key. (ie ngAttribute)",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value to set. If `null` attribute will be deleted.",
                    "type": "String|boolean"
                },
                {
                    "name": "writeAttr",
                    "description": "If false, does not write the value to DOM element attribute.\n    Defaults to true.",
                    "type": "Boolean="
                },
                {
                    "name": "attrName",
                    "description": "Optional none normalized name. Defaults to key.",
                    "type": "String="
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 6845,
            "ngdoc": "method",
            "name": "$compile.directive.Attributes#$observe",
            "kind": "function",
            "description": "Observes an interpolated attribute.\n\nThe observer function will be invoked once during the next `$digest` following\ncompilation. The observer is then invoked whenever the interpolated value\nchanges.",
            "params": [
                {
                    "name": "key",
                    "description": "Normalized key. (ie ngAttribute) .",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "Function that will be called whenever\n               the interpolated value of the attribute changes.\n       See the {@link guide/directive#text-and-attribute-bindings Directives} guide for more info.",
                    "type": "Function(interpolatedValue)"
                }
            ],
            "return": {
                "description": "Returns a deregistration function for this observer.",
                "type": "Function()"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 7011,
            "description": "Compile function matches each node in nodeList against the directives. Once all directives\nfor a particular node are collected their compile functions are executed. The compile\nfunctions return values - the linking functions - are combined into a composite linking\nfunction, which is the a linking function for the node.",
            "params": [
                {
                    "name": "nodeList",
                    "description": "an array of nodes or NodeList to compile",
                    "type": "NodeList"
                },
                {
                    "name": "transcludeFn",
                    "description": "A linking function, where the\n       scope argument is auto-generated to the new child of the transcluded parent scope.",
                    "type": "function(angular.Scope, cloneAttachFn=)"
                },
                {
                    "name": "$rootElement",
                    "description": "If the nodeList is the root of the compilation tree then\n       the rootElement must be set the jqLite collection of the compile root. This is\n       needed so that the jqLite collection items can be replaced with widgets.",
                    "type": "DOMElement="
                },
                {
                    "name": "maxPriority",
                    "description": "Max directive priority.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "A composite linking function of all of the matched directives or null.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 7145,
            "description": "Looks for directives on the given node and adds them to the directive collection which is\nsorted.",
            "params": [
                {
                    "name": "node",
                    "description": "Node to search."
                },
                {
                    "name": "directives",
                    "description": "An array to which the directives are added to. This array is sorted before\n       the function returns."
                },
                {
                    "name": "attrs",
                    "description": "The shared attrs object which is used to populate the normalized attributes."
                },
                {
                    "name": "maxPriority",
                    "description": "Max directive priority.",
                    "type": "Number="
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 7248,
            "description": "Given a node with an directive-start it collects all of the siblings until it finds\ndirective-end.",
            "params": [
                {
                    "name": "node",
                    "description": ""
                },
                {
                    "name": "attrStart",
                    "description": ""
                },
                {
                    "name": "attrEnd",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 7280,
            "description": "Wrapper for linking function which converts normal linking function into a grouped\nlinking function.",
            "params": [
                {
                    "name": "linkFn",
                    "description": ""
                },
                {
                    "name": "attrStart",
                    "description": ""
                },
                {
                    "name": "attrEnd",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 7295,
            "description": "Once the directives have been collected, their compile functions are executed. This method\nis responsible for inlining directive templates as well as terminating the application\nof the directives if the terminal directive has been reached.",
            "params": [
                {
                    "name": "directives",
                    "description": "Array of collected directives to execute their compile function.\n       this needs to be pre-sorted by priority order.",
                    "type": "Array"
                },
                {
                    "name": "compileNode",
                    "description": "The raw DOM node to apply the compile functions to",
                    "type": "Node"
                },
                {
                    "name": "templateAttrs",
                    "description": "The shared attribute function",
                    "type": "Object"
                },
                {
                    "name": "transcludeFn",
                    "description": "A linking function, where the\n                                                 scope argument is auto-generated to the new\n                                                 child of the transcluded parent scope.",
                    "type": "function(angular.Scope, cloneAttachFn=)"
                },
                {
                    "name": "jqCollection",
                    "description": "If we are working on the root of the compile tree then this\n                             argument has the root jqLite array so that we can replace nodes\n                             on it.",
                    "type": "JQLite"
                },
                {
                    "name": "originalReplaceDirective",
                    "description": "An optional directive that will be ignored when\n                                          compiling the transclusion.",
                    "type": "Object="
                },
                {
                    "name": "preLinkFns",
                    "description": "",
                    "type": "Array.<Function>"
                },
                {
                    "name": "postLinkFns",
                    "description": "",
                    "type": "Array.<Function>"
                },
                {
                    "name": "previousCompileContext",
                    "description": "Context used for previous compilation of the current\n                                       node",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "linkFn",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 7807,
            "description": "looks up the directive and decorates it with exception handling and proper parameters. We\ncall this the boundDirective.",
            "params": [
                {
                    "name": "name",
                    "description": "name of the directive to look up.",
                    "type": "String"
                },
                {
                    "name": "location",
                    "description": "The directive must be found in specific format.\n  String containing any of theses characters:\n\n  * `E`: element name\n  * `A': attribute\n  * `C`: class\n  * `M`: comment",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true if directive was added.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 7845,
            "description": "looks up the directive and returns true if it is a multi-element directive,\nand therefore requires DOM nodes between -start and -end markers to be grouped\ntogether.",
            "params": [
                {
                    "name": "name",
                    "description": "name of the directive to look up.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true if directive was registered as multi-element."
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 7866,
            "description": "When the element is replaced with HTML template then the new attributes\non the template need to be merged with the existing attributes in the DOM.\nThe desired effect is to have both of the attributes present.",
            "params": [
                {
                    "name": "dst",
                    "description": "destination attributes (original DOM)",
                    "type": "Object"
                },
                {
                    "name": "src",
                    "description": "source attributes (from the directive template)",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8022,
            "description": "Sorting function for bound directives.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8167,
            "description": "This is a special jqLite.replaceWith, which can replace items which\nhave no parents, provided that the containing jqLite collection is provided.",
            "params": [
                {
                    "name": "$rootElement",
                    "description": "The root of the compile tree. Used so that we can replace nodes\n                              in the root of the tree.",
                    "type": "JqLite="
                },
                {
                    "name": "elementsToRemove",
                    "description": "The jqLite element which we are going to replace. We keep\n                                 the shell, but replace its DOM node reference.",
                    "type": "JqLite"
                },
                {
                    "name": "newNode",
                    "description": "The new DOM node.",
                    "type": "Node"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8267,
            "description": "Converts all accepted directives format into proper directive name.",
            "params": [
                {
                    "name": "name",
                    "description": "Name to normalize"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8275,
            "ngdoc": "type",
            "name": "$compile.directive.Attributes",
            "description": "A shared object between directive compile / linking functions which contains normalized DOM\nelement attributes. The values reflect current binding state `{{ }}`. The normalization is\nneeded since all of these are treated as equivalent in Angular:\n\n```\n   <span ng:bind=\"a\" ng-bind=\"a\" data-ng-bind=\"a\" x-ng-bind=\"a\">\n```",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8289,
            "ngdoc": "property",
            "name": "$compile.directive.Attributes#$attr",
            "description": "A map of DOM element attribute names to the normalized name. This is\nneeded to do reverse lookup from normalized name back to actual name.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8299,
            "ngdoc": "method",
            "name": "$compile.directive.Attributes#$set",
            "kind": "function",
            "description": "Set DOM element attribute value.",
            "params": [
                {
                    "name": "name",
                    "description": "Normalized element attribute name of the property to modify. The name is\n         reverse-translated using the {@link ng.$compile.directive.Attributes#$attr $attr}\n         property to the original name.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Value to set the attribute to. The value can be an interpolated string.",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8316,
            "description": "Closure compiler type information",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8370,
            "ngdoc": "provider",
            "name": "$controllerProvider",
            "description": "The {@link ng.$controller $controller service} is used by Angular to create new\ncontrollers.\n\nThis provider allows controller registration via the\n{@link ng.$controllerProvider#register register} method.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8386,
            "ngdoc": "method",
            "name": "$controllerProvider#register",
            "params": [
                {
                    "name": "name",
                    "description": "Controller name, or an object map of controllers where the keys are\n   the names and the values are the constructors.",
                    "type": "String|Object"
                },
                {
                    "name": "constructor",
                    "description": "Controller constructor fn (optionally decorated with DI\n   annotations in the array notation).",
                    "type": "Function|Array"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8403,
            "ngdoc": "method",
            "name": "$controllerProvider#allowGlobals",
            "description": "If called, allows `$controller` to find controller constructors on `window`",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8415,
            "ngdoc": "service",
            "name": "$controller",
            "requires": [
                "$injector"
            ],
            "params": [
                {
                    "name": "constructor",
                    "description": "If called with a function then it's considered to be the\n   controller constructor function. Otherwise it's considered to be a string which is used\n   to retrieve the controller constructor using the following steps:\n\n   * check if a controller with given name is registered via `$controllerProvider`\n   * check if evaluating the string on the current scope returns a constructor\n   * if $controllerProvider#allowGlobals, check `window[constructor]` on the global\n     `window` object (not recommended)\n\n   The string can use the `controller as property` syntax, where the controller instance is published\n   as the specified property on the `scope`; the `scope` must be injected into `locals` param for this\n   to work correctly.",
                    "type": "Function|string"
                },
                {
                    "name": "locals",
                    "description": "Injection locals for Controller.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Instance of given controller.",
                "type": "Object"
            },
            "description": "`$controller` service is responsible for instantiating controllers.\n\nIt's just a simple call to {@link auto.$injector $injector}, but extracted into\na service, so that one can override this service with [BC version](https://gist.github.com/1649788).",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8522,
            "ngdoc": "service",
            "name": "$document",
            "requires": [
                "$window"
            ],
            "description": "A {@link angular.element jQuery or jqLite} wrapper for the browser's `window.document` object.",
            "example": [
                "\n  <example module=\"documentExample\">\n    <file name=\"index.html\">\n      <div ng-controller=\"ExampleController\">\n        <p>$document title: <b ng-bind=\"title\"></b></p>\n        <p>window.document title: <b ng-bind=\"windowTitle\"></b></p>\n      </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('documentExample', [])\n        .controller('ExampleController', ['$scope', '$document', function($scope, $document) {\n          $scope.title = $document[0].title;\n          $scope.windowTitle = angular.element(window.document)[0].title;\n        }]);\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8553,
            "ngdoc": "service",
            "name": "$exceptionHandler",
            "requires": [
                "ng.$log"
            ],
            "description": "Any uncaught exception in angular expressions is delegated to this service.\nThe default implementation simply delegates to `$log.error` which logs it into\nthe browser console.\n\nIn unit tests, if `angular-mocks.js` is loaded, this service is overridden by\n{@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.\n\n## Example:\n\n```js\n  angular.module('exceptionOverride', []).factory('$exceptionHandler', function() {\n    return function(exception, cause) {\n      exception.message += ' (caused by \"' + cause + '\")';\n      throw exception;\n    };\n  });\n```\n\nThis example will override the normal action of `$exceptionHandler`, to make angular\nexceptions fail hard when they happen, instead of just logging to the console.\n\n<hr />\nNote, that code executed in event-listeners (even those registered using jqLite's `on`/`bind`\nmethods) does not delegate exceptions to the {@link ng.$exceptionHandler $exceptionHandler}\n(unless executed during a digest).\n\nIf you wish, you can manually delegate exceptions, e.g.\n`try { ... } catch(e) { $exceptionHandler(e); }`",
            "params": [
                {
                    "name": "exception",
                    "description": "Exception associated with the error.",
                    "type": "Error"
                },
                {
                    "name": "cause",
                    "description": "optional information about the context in which\n      the error was thrown.",
                    "type": "String="
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8631,
            "description": "Parse headers into key value object",
            "params": [
                {
                    "name": "headers",
                    "description": "Raw headers as a string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Parsed headers as key value object",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8656,
            "description": "Returns a function that provides access to parsed headers.\n\nHeaders are lazy parsed when first requested.",
            "see": [
                "parseHeaders"
            ],
            "params": [
                {
                    "name": "headers",
                    "description": "Headers to provide access to.",
                    "type": "(string|Object)"
                }
            ],
            "return": {
                "description": "Returns a getter function which if called with:\n\n  - if called with single an argument returns a single header value or null\n  - if called with no arguments returns an object containing all headers.",
                "type": "Function(string=)"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8687,
            "description": "Chain all given functions\n\nThis function is used for both request and response transforming",
            "params": [
                {
                    "name": "data",
                    "description": "Data to transform.",
                    "type": "*"
                },
                {
                    "name": "headers",
                    "description": "HTTP headers getter fn.",
                    "type": "Function(string=)"
                },
                {
                    "name": "status",
                    "description": "HTTP status code of the response.",
                    "type": "Number"
                },
                {
                    "name": "fns",
                    "description": "Function or an array of functions.",
                    "type": "(Function|Array.<Function>)"
                }
            ],
            "return": {
                "description": "Transformed data.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8715,
            "ngdoc": "provider",
            "name": "$httpProvider",
            "description": "Use `$httpProvider` to change the default behavior of the {@link ng.$http $http} service.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8722,
            "ngdoc": "property",
            "name": "$httpProvider#defaults",
            "description": "Object containing default values for all {@link ng.$http $http} requests.\n\n- **`defaults.cache`** - {Object} - an object built with {@link ng.$cacheFactory `$cacheFactory`}\nthat will provide the cache for all requests who set their `cache` property to `true`.\nIf you set the `default.cache = false` then only requests that specify their own custom\ncache object will be cached. See {@link $http#caching $http Caching} for more information.\n\n- **`defaults.xsrfCookieName`** - {string} - Name of cookie containing the XSRF token.\nDefaults value is `'XSRF-TOKEN'`.\n\n- **`defaults.xsrfHeaderName`** - {string} - Name of HTTP header to populate with the\nXSRF token. Defaults value is `'X-XSRF-TOKEN'`.\n\n- **`defaults.headers`** - {Object} - Default headers for all $http requests.\nRefer to {@link ng.$http#setting-http-headers $http} for documentation on\nsetting default headers.\n    - **`defaults.headers.common`**\n    - **`defaults.headers.post`**\n    - **`defaults.headers.put`**\n    - **`defaults.headers.patch`**",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8773,
            "ngdoc": "method",
            "name": "$httpProvider#useApplyAsync",
            "description": "Configure $http service to combine processing of multiple http responses received at around\nthe same time via {@link ng.$rootScope.Scope#$applyAsync $rootScope.$applyAsync}. This can result in\nsignificant performance improvement for bigger applications that make many HTTP requests\nconcurrently (common during application bootstrap).\n\nDefaults to false. If no value is specifed, returns the current configured value.",
            "params": [
                {
                    "name": "value",
                    "description": "If true, when requests are loaded, they will schedule a deferred\n   \"apply\" on the next tick, giving time for subsequent requests in a roughly ~10ms window\n   to load and share the same digest cycle.",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "If a value is specified, returns the $httpProvider for chaining.\n   otherwise, returns the current configured value.",
                "type": "Boolean|Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8800,
            "ngdoc": "property",
            "name": "$httpProvider#interceptors",
            "description": "Array containing service factories for all synchronous or asynchronous {@link ng.$http $http}\npre-processing of request or postprocessing of responses.\n\nThese service factories are ordered by request, i.e. they are applied in the same order as the\narray, on request, but reverse order, on response.\n\n{@link ng.$http#interceptors Interceptors detailed info}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8820,
            "description": "Interceptors stored in reverse order. Inner interceptors before outer interceptors.\nThe reversal is needed so that we can build up the interception chain around the\nserver request.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 8832,
            "ngdoc": "service",
            "kind": "function",
            "name": "pendingRequests Array of config objects for currently pending!~YUIDOC_LINE~!  requests. This is primarily meant to be used for debugging purposes.",
            "requires": [
                "ng.$httpBackend",
                "$cacheFactory",
                "$rootScope",
                "$q",
                "$injector"
            ],
            "description": "The `$http` service is a core Angular service that facilitates communication with the remote\nHTTP servers via the browser's [XMLHttpRequest](https://developer.mozilla.org/en/xmlhttprequest)\nobject or via [JSONP](http://en.wikipedia.org/wiki/JSONP).\n\nFor unit testing applications that use `$http` service, see\n{@link ngMock.$httpBackend $httpBackend mock}.\n\nFor a higher level of abstraction, please check out the {@link ngResource.$resource\n$resource} service.\n\nThe $http API is based on the {@link ng.$q deferred/promise APIs} exposed by\nthe $q service. While for simple usage patterns this doesn't matter much, for advanced usage\nit is important to familiarize yourself with these APIs and the guarantees they provide.\n\n\n## General usage\nThe `$http` service is a function which takes a single argument — a configuration object —\nthat is used to generate an HTTP request and returns  a {@link ng.$q promise}\nwith two $http specific methods: `success` and `error`.\n\n```js\n  // Simple GET request example :\n  $http.get('/someUrl').\n    success(function(data, status, headers, config) {\n      // this callback will be called asynchronously\n      // when the response is available\n    }).\n    error(function(data, status, headers, config) {\n      // called asynchronously if an error occurs\n      // or server returns response with an error status.\n    });\n```\n\n```js\n  // Simple POST request example (passing data) :\n  $http.post('/someUrl', {msg:'hello word!'}).\n    success(function(data, status, headers, config) {\n      // this callback will be called asynchronously\n      // when the response is available\n    }).\n    error(function(data, status, headers, config) {\n      // called asynchronously if an error occurs\n      // or server returns response with an error status.\n    });\n```\n\n\nSince the returned value of calling the $http function is a `promise`, you can also use\nthe `then` method to register callbacks, and these callbacks will receive a single argument –\nan object representing the response. See the API signature and type info below for more\ndetails.\n\nA response status code between 200 and 299 is considered a success status and\nwill result in the success callback being called. Note that if the response is a redirect,\nXMLHttpRequest will transparently follow it, meaning that the error callback will not be\ncalled for such responses.\n\n## Writing Unit Tests that use $http\nWhen unit testing (using {@link ngMock ngMock}), it is necessary to call\n{@link ngMock.$httpBackend#flush $httpBackend.flush()} to flush each pending\nrequest using trained responses.\n\n```\n$httpBackend.expectGET(...);\n$http.get(...);\n$httpBackend.flush();\n```\n\n## Shortcut methods\n\nShortcut methods are also available. All shortcut methods require passing in the URL, and\nrequest data must be passed in for POST/PUT requests.\n\n```js\n  $http.get('/someUrl').success(successCallback);\n  $http.post('/someUrl', data).success(successCallback);\n```\n\nComplete list of shortcut methods:\n\n- {@link ng.$http#get $http.get}\n- {@link ng.$http#head $http.head}\n- {@link ng.$http#post $http.post}\n- {@link ng.$http#put $http.put}\n- {@link ng.$http#delete $http.delete}\n- {@link ng.$http#jsonp $http.jsonp}\n- {@link ng.$http#patch $http.patch}\n\n\n## Setting HTTP Headers\n\nThe $http service will automatically add certain HTTP headers to all requests. These defaults\ncan be fully configured by accessing the `$httpProvider.defaults.headers` configuration\nobject, which currently contains this default configuration:\n\n- `$httpProvider.defaults.headers.common` (headers that are common for all requests):\n  - `Accept: application/json, text/plain, * / *`\n- `$httpProvider.defaults.headers.post`: (header defaults for POST requests)\n  - `Content-Type: application/json`\n- `$httpProvider.defaults.headers.put` (header defaults for PUT requests)\n  - `Content-Type: application/json`\n\nTo add or overwrite these defaults, simply add or remove a property from these configuration\nobjects. To add headers for an HTTP method other than POST or PUT, simply add a new object\nwith the lowercased HTTP method name as the key, e.g.\n`$httpProvider.defaults.headers.get = { 'My-Header' : 'value' }.\n\nThe defaults can also be set at runtime via the `$http.defaults` object in the same\nfashion. For example:\n\n```\nmodule.run(function($http) {\n  $http.defaults.headers.common.Authorization = 'Basic YmVlcDpib29w'\n});\n```\n\nIn addition, you can supply a `headers` property in the config object passed when\ncalling `$http(config)`, which overrides the defaults without changing them globally.\n\nTo explicitly remove a header automatically added via $httpProvider.defaults.headers on a per request basis,\nUse the `headers` property, setting the desired header to `undefined`. For example:\n\n```js\nvar req = {\n method: 'POST',\n url: 'http://example.com',\n headers: {\n   'Content-Type': undefined\n },\n data: { test: 'test' },\n}\n\n$http(req).success(function(){...}).error(function(){...});\n```\n\n## Transforming Requests and Responses\n\nBoth requests and responses can be transformed using transformation functions: `transformRequest`\nand `transformResponse`. These properties can be a single function that returns\nthe transformed value (`function(data, headersGetter, status)`) or an array of such transformation functions,\nwhich allows you to `push` or `unshift` a new transformation function into the transformation chain.\n\n### Default Transformations\n\nThe `$httpProvider` provider and `$http` service expose `defaults.transformRequest` and\n`defaults.transformResponse` properties. If a request does not provide its own transformations\nthen these will be applied.\n\nYou can augment or replace the default transformations by modifying these properties by adding to or\nreplacing the array.\n\nAngular provides the following default transformations:\n\nRequest transformations (`$httpProvider.defaults.transformRequest` and `$http.defaults.transformRequest`):\n\n- If the `data` property of the request configuration object contains an object, serialize it\n  into JSON format.\n\nResponse transformations (`$httpProvider.defaults.transformResponse` and `$http.defaults.transformResponse`):\n\n - If XSRF prefix is detected, strip it (see Security Considerations section below).\n - If JSON response is detected, deserialize it using a JSON parser.\n\n\n### Overriding the Default Transformations Per Request\n\nIf you wish override the request/response transformations only for a single request then provide\n`transformRequest` and/or `transformResponse` properties on the configuration object passed\ninto `$http`.\n\nNote that if you provide these properties on the config object the default transformations will be\noverwritten. If you wish to augment the default transformations then you must include them in your\nlocal transformation array.\n\nThe following code demonstrates adding a new response transformation to be run after the default response\ntransformations have been run.\n\n```js\nfunction appendTransform(defaults, transform) {\n\n  // We can't guarantee that the default transformation is an array\n  defaults = angular.isArray(defaults) ? defaults : [defaults];\n\n  // Append the new transformation to the defaults\n  return defaults.concat(transform);\n}\n\n$http({\n  url: '...',\n  method: 'GET',\n  transformResponse: appendTransform($http.defaults.transformResponse, function(value) {\n    return doTransform(value);\n  })\n});\n```\n\n\n## Caching\n\nTo enable caching, set the request configuration `cache` property to `true` (to use default\ncache) or to a custom cache object (built with {@link ng.$cacheFactory `$cacheFactory`}).\nWhen the cache is enabled, `$http` stores the response from the server in the specified\ncache. The next time the same request is made, the response is served from the cache without\nsending a request to the server.\n\nNote that even if the response is served from cache, delivery of the data is asynchronous in\nthe same way that real requests are.\n\nIf there are multiple GET requests for the same URL that should be cached using the same\ncache, but the cache is not populated yet, only one request to the server will be made and\nthe remaining requests will be fulfilled using the response from the first request.\n\nYou can change the default cache to a new object (built with\n{@link ng.$cacheFactory `$cacheFactory`}) by updating the\n{@link ng.$http#defaults `$http.defaults.cache`} property. All requests who set\ntheir `cache` property to `true` will now use this cache object.\n\nIf you set the default cache to `false` then only requests that specify their own custom\ncache object will be cached.\n\n## Interceptors\n\nBefore you start creating interceptors, be sure to understand the\n{@link ng.$q $q and deferred/promise APIs}.\n\nFor purposes of global error handling, authentication, or any kind of synchronous or\nasynchronous pre-processing of request or postprocessing of responses, it is desirable to be\nable to intercept requests before they are handed to the server and\nresponses before they are handed over to the application code that\ninitiated these requests. The interceptors leverage the {@link ng.$q\npromise APIs} to fulfill this need for both synchronous and asynchronous pre-processing.\n\nThe interceptors are service factories that are registered with the `$httpProvider` by\nadding them to the `$httpProvider.interceptors` array. The factory is called and\ninjected with dependencies (if specified) and returns the interceptor.\n\nThere are two kinds of interceptors (and two kinds of rejection interceptors):\n\n  * `request`: interceptors get called with a http `config` object. The function is free to\n    modify the `config` object or create a new one. The function needs to return the `config`\n    object directly, or a promise containing the `config` or a new `config` object.\n  * `requestError`: interceptor gets called when a previous interceptor threw an error or\n    resolved with a rejection.\n  * `response`: interceptors get called with http `response` object. The function is free to\n    modify the `response` object or create a new one. The function needs to return the `response`\n    object directly, or as a promise containing the `response` or a new `response` object.\n  * `responseError`: interceptor gets called when a previous interceptor threw an error or\n    resolved with a rejection.\n\n\n```js\n  // register the interceptor as a service\n  $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {\n    return {\n      // optional method\n      'request': function(config) {\n        // do something on success\n        return config;\n      },\n\n      // optional method\n     'requestError': function(rejection) {\n        // do something on error\n        if (canRecover(rejection)) {\n          return responseOrNewPromise\n        }\n        return $q.reject(rejection);\n      },\n\n\n\n      // optional method\n      'response': function(response) {\n        // do something on success\n        return response;\n      },\n\n      // optional method\n     'responseError': function(rejection) {\n        // do something on error\n        if (canRecover(rejection)) {\n          return responseOrNewPromise\n        }\n        return $q.reject(rejection);\n      }\n    };\n  });\n\n  $httpProvider.interceptors.push('myHttpInterceptor');\n\n\n  // alternatively, register the interceptor via an anonymous factory\n  $httpProvider.interceptors.push(function($q, dependency1, dependency2) {\n    return {\n     'request': function(config) {\n         // same as above\n      },\n\n      'response': function(response) {\n         // same as above\n      }\n    };\n  });\n```\n\n## Security Considerations\n\nWhen designing web applications, consider security threats from:\n\n- [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)\n- [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)\n\nBoth server and the client must cooperate in order to eliminate these threats. Angular comes\npre-configured with strategies that address these issues, but for this to work backend server\ncooperation is required.\n\n### JSON Vulnerability Protection\n\nA [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)\nallows third party website to turn your JSON resource URL into\n[JSONP](http://en.wikipedia.org/wiki/JSONP) request under some conditions. To\ncounter this your server can prefix all JSON requests with following string `\")]}',\\n\"`.\nAngular will automatically strip the prefix before processing it as JSON.\n\nFor example if your server needs to return:\n```js\n['one','two']\n```\n\nwhich is vulnerable to attack, your server can return:\n```js\n)]}',\n['one','two']\n```\n\nAngular will strip the prefix, before processing the JSON.\n\n\n### Cross Site Request Forgery (XSRF) Protection\n\n[XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery) is a technique by which\nan unauthorized site can gain your user's private data. Angular provides a mechanism\nto counter XSRF. When performing XHR requests, the $http service reads a token from a cookie\n(by default, `XSRF-TOKEN`) and sets it as an HTTP header (`X-XSRF-TOKEN`). Since only\nJavaScript that runs on your domain could read the cookie, your server can be assured that\nthe XHR came from JavaScript running on your domain. The header will not be set for\ncross-domain requests.\n\nTo take advantage of this, your server needs to set a token in a JavaScript readable session\ncookie called `XSRF-TOKEN` on the first HTTP GET request. On subsequent XHR requests the\nserver can verify that the cookie matches `X-XSRF-TOKEN` HTTP header, and therefore be sure\nthat only JavaScript running on your domain could have sent the request. The token must be\nunique for each user and must be verifiable by the server (to prevent the JavaScript from\nmaking up its own tokens). We recommend that the token is a digest of your site's\nauthentication cookie with a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography&#41;)\nfor added security.\n\nThe name of the headers can be specified using the xsrfHeaderName and xsrfCookieName\nproperties of either $httpProvider.defaults at config-time, $http.defaults at run-time,\nor the per-request config object.",
            "return": {
                "description": "Returns a {@link ng.$q promise} object with the\n  standard `then` method and two http specific methods: `success` and `error`. The `then`\n  method takes two arguments a success and an error callback which will be called with a\n  response object. The `success` and `error` methods take a single argument - a function that\n  will be called when the request succeeds or fails respectively. The arguments passed into\n  these functions are destructured representation of the response object passed into the\n  `then` method. The response object has these properties:\n\n  - **data** – `{string|Object}` – The response body transformed with the transform\n    functions.\n  - **status** – `{number}` – HTTP status code of the response.\n  - **headers** – `{function([headerName])}` – Header getter function.\n  - **config** – `{Object}` – The configuration object that was used to generate the request.\n  - **statusText** – `{string}` – HTTP status text of the response.",
                "type": "HttpPromise"
            },
            "itemtype": "property",
            "type": "Array.<Object>",
            "example": [
                "\n<example module=\"httpExample\">\n<file name=\"index.html\">\n <div ng-controller=\"FetchController\">\n   <select ng-model=\"method\">\n     <option>GET</option>\n     <option>JSONP</option>\n   </select>\n   <input type=\"text\" ng-model=\"url\" size=\"80\"/>\n   <button id=\"fetchbtn\" ng-click=\"fetch()\">fetch</button><br>\n   <button id=\"samplegetbtn\" ng-click=\"updateModel('GET', 'http-hello.html')\">Sample GET</button>\n   <button id=\"samplejsonpbtn\"\n     ng-click=\"updateModel('JSONP',\n                   'https://angularjs.org/greet.php?callback=JSON_CALLBACK&name=Super%20Hero')\">\n     Sample JSONP\n   </button>\n   <button id=\"invalidjsonpbtn\"\n     ng-click=\"updateModel('JSONP', 'https://angularjs.org/doesntexist&callback=JSON_CALLBACK')\">\n       Invalid JSONP\n     </button>\n   <pre>http status code: {{status}}</pre>\n   <pre>http response data: {{data}}</pre>\n </div>\n</file>\n<file name=\"script.js\">\n angular.module('httpExample', [])\n   .controller('FetchController', ['$scope', '$http', '$templateCache',\n     function($scope, $http, $templateCache) {\n       $scope.method = 'GET';\n       $scope.url = 'http-hello.html';\n\n       $scope.fetch = function() {\n         $scope.code = null;\n         $scope.response = null;\n\n         $http({method: $scope.method, url: $scope.url, cache: $templateCache}).\n           success(function(data, status) {\n             $scope.status = status;\n             $scope.data = data;\n           }).\n           error(function(data, status) {\n             $scope.data = data || \"Request failed\";\n             $scope.status = status;\n         });\n       };\n\n       $scope.updateModel = function(method, url) {\n         $scope.method = method;\n         $scope.url = url;\n       };\n     }]);\n</file>\n<file name=\"http-hello.html\">\n Hello, $http!\n</file>\n<file name=\"protractor.js\" type=\"protractor\">\n var status = element(by.binding('status'));\n var data = element(by.binding('data'));\n var fetchBtn = element(by.id('fetchbtn'));\n var sampleGetBtn = element(by.id('samplegetbtn'));\n var sampleJsonpBtn = element(by.id('samplejsonpbtn'));\n var invalidJsonpBtn = element(by.id('invalidjsonpbtn'));\n\n it('should make an xhr GET request', function() {\n   sampleGetBtn.click();\n   fetchBtn.click();\n   expect(status.getText()).toMatch('200');\n   expect(data.getText()).toMatch(/Hello, \\$http!/);\n });\n\n// Commented out due to flakes. See https://github.com/angular/angular.js/issues/9185\n// it('should make a JSONP request to angularjs.org', function() {\n//   sampleJsonpBtn.click();\n//   fetchBtn.click();\n//   expect(status.getText()).toMatch('200');\n//   expect(data.getText()).toMatch(/Super Hero!/);\n// });\n\n it('should make JSONP request to invalid URL and invoke the error handler',\n     function() {\n   invalidJsonpBtn.click();\n   fetchBtn.click();\n   expect(status.getText()).toMatch('0');\n   expect(data.getText()).toMatch('Request failed');\n });\n</file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ng",
            "subprops": [
                {
                    "name": "config",
                    "description": "Object describing the request to be made and how it should be\n   processed. The object has following properties:\n\n   - **method** – `{string}` – HTTP method (e.g. 'GET', 'POST', etc)\n   - **url** – `{string}` – Absolute or relative URL of the resource that is being requested.\n   - **params** – `{Object.<string|Object>}` – Map of strings or objects which will be turned\n     to `?key1=value1&key2=value2` after the url. If the value is not a string, it will be\n     JSONified.\n   - **data** – `{string|Object}` – Data to be sent as the request message data.\n   - **headers** – `{Object}` – Map of strings or functions which return strings representing\n     HTTP headers to send to the server. If the return value of a function is null, the\n     header will not be sent.\n   - **xsrfHeaderName** – `{string}` – Name of HTTP header to populate with the XSRF token.\n   - **xsrfCookieName** – `{string}` – Name of cookie containing the XSRF token.\n   - **transformRequest** –\n     `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n     transform function or an array of such functions. The transform function takes the http\n     request body and headers and returns its transformed (typically serialized) version.\n     See {@link ng.$http#overriding-the-default-transformations-per-request\n     Overriding the Default Transformations}\n   - **transformResponse** –\n     `{function(data, headersGetter, status)|Array.<function(data, headersGetter, status)>}` –\n     transform function or an array of such functions. The transform function takes the http\n     response body, headers and status and returns its transformed (typically deserialized) version.\n     See {@link ng.$http#overriding-the-default-transformations-per-request\n     Overriding the Default Transformations}\n   - **cache** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the\n     GET request, otherwise if a cache instance built with\n     {@link ng.$cacheFactory $cacheFactory}, this cache will be used for\n     caching.\n   - **timeout** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise}\n     that should abort the request when resolved.\n   - **withCredentials** - `{boolean}` - whether to set the `withCredentials` flag on the\n     XHR object. See [requests with credentials](https://developer.mozilla.org/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials)\n     for more information.\n   - **responseType** - `{string}` - see\n     [requestType](https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType).",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 9480,
            "ngdoc": "method",
            "name": "$http#get",
            "description": "Shortcut method to perform `GET` request.",
            "params": [
                {
                    "name": "url",
                    "description": "Relative or absolute URL specifying the destination of the request",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "Optional configuration object",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Future object",
                "type": "HttpPromise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 9492,
            "ngdoc": "method",
            "name": "$http#delete",
            "description": "Shortcut method to perform `DELETE` request.",
            "params": [
                {
                    "name": "url",
                    "description": "Relative or absolute URL specifying the destination of the request",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "Optional configuration object",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Future object",
                "type": "HttpPromise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 9504,
            "ngdoc": "method",
            "name": "$http#head",
            "description": "Shortcut method to perform `HEAD` request.",
            "params": [
                {
                    "name": "url",
                    "description": "Relative or absolute URL specifying the destination of the request",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "Optional configuration object",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Future object",
                "type": "HttpPromise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 9516,
            "ngdoc": "method",
            "name": "$http#jsonp",
            "description": "Shortcut method to perform `JSONP` request.",
            "params": [
                {
                    "name": "url",
                    "description": "Relative or absolute URL specifying the destination of the request.\n                    The name of the callback should be the string `JSON_CALLBACK`.",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "Optional configuration object",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Future object",
                "type": "HttpPromise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 9530,
            "ngdoc": "method",
            "name": "$http#post",
            "description": "Shortcut method to perform `POST` request.",
            "params": [
                {
                    "name": "url",
                    "description": "Relative or absolute URL specifying the destination of the request",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Request content",
                    "type": "*"
                },
                {
                    "name": "config",
                    "description": "Optional configuration object",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Future object",
                "type": "HttpPromise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 9543,
            "ngdoc": "method",
            "name": "$http#put",
            "description": "Shortcut method to perform `PUT` request.",
            "params": [
                {
                    "name": "url",
                    "description": "Relative or absolute URL specifying the destination of the request",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Request content",
                    "type": "*"
                },
                {
                    "name": "config",
                    "description": "Optional configuration object",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Future object",
                "type": "HttpPromise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 9556,
            "ngdoc": "method",
            "name": "$http#patch",
            "description": "Shortcut method to perform `PATCH` request.",
            "params": [
                {
                    "name": "url",
                    "description": "Relative or absolute URL specifying the destination of the request",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Request content",
                    "type": "*"
                },
                {
                    "name": "config",
                    "description": "Optional configuration object",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Future object",
                "type": "HttpPromise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 9570,
            "ngdoc": "property",
            "name": "$http#defaults",
            "description": "Runtime equivalent of the `$httpProvider.defaults` property. Allows configuration of\ndefault headers, withCredentials as well as request and response transformations.\n\nSee \"Setting HTTP Headers\" and \"Transforming Requests and Responses\" sections above.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 9611,
            "description": "Makes the request.\n\n!!! ACCESSES CLOSURE VARS:\n$httpBackend, defaults, $log, $rootScope, defaultCache, $http.pendingRequests",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 9674,
            "description": "Callback registered to $httpBackend():\n - caches the response if desired\n - resolves the raw $http promise\n - calls $apply",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 9703,
            "description": "Resolves the raw $http promise.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 9761,
            "ngdoc": "service",
            "name": "$httpBackend",
            "requires": [
                "$window",
                "$document"
            ],
            "description": "HTTP backend used by the {@link ng.$http service} that delegates to\nXMLHttpRequest object or JSONP and deals with browser incompatibilities.\n\nYou should never need to use this service directly, instead use the higher-level abstractions:\n{@link ng.$http $http} or {@link ngResource.$resource $resource}.\n\nDuring testing this implementation is swapped with {@link ngMock.$httpBackend mock\n$httpBackend} which can be trained with responses.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 9932,
            "ngdoc": "provider",
            "name": "$interpolateProvider",
            "description": "Used for configuring the interpolation markup. Defaults to `{{` and `}}`.",
            "example": [
                "\n<example module=\"customInterpolationApp\">\n<file name=\"index.html\">\n<script>\n var customInterpolationApp = angular.module('customInterpolationApp', []);\n\n customInterpolationApp.config(function($interpolateProvider) {\n   $interpolateProvider.startSymbol('//');\n   $interpolateProvider.endSymbol('//');\n });\n\n\n customInterpolationApp.controller('DemoController', function() {\n     this.label = \"This binding is brought you by // interpolation symbols.\";\n });\n</script>\n<div ng-app=\"App\" ng-controller=\"DemoController as demo\">\n   //demo.label//\n</div>\n</file>\n<file name=\"protractor.js\" type=\"protractor\">\n it('should interpolate binding with custom symbols', function() {\n   expect(element(by.binding('demo.label')).getText()).toBe('This binding is brought you by // interpolation symbols.');\n });\n</file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 9971,
            "ngdoc": "method",
            "name": "$interpolateProvider#startSymbol",
            "description": "Symbol to denote start of expression in the interpolated string. Defaults to `{{`.",
            "params": [
                {
                    "name": "value",
                    "description": "new value to set the starting symbol to.",
                    "type": "String="
                }
            ],
            "return": {
                "description": "Returns the symbol when used as getter and self if used as setter.",
                "type": "String|self"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 9989,
            "ngdoc": "method",
            "name": "$interpolateProvider#endSymbol",
            "description": "Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.",
            "params": [
                {
                    "name": "value",
                    "description": "new value to set the ending symbol to.",
                    "type": "String="
                }
            ],
            "return": {
                "description": "Returns the symbol when used as getter and self if used as setter.",
                "type": "String|self"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10018,
            "ngdoc": "service",
            "name": "$interpolate",
            "kind": "function",
            "requires": [
                "$parse",
                "$sce"
            ],
            "description": "Compiles a string with markup into an interpolation function. This service is used by the\nHTML {@link ng.$compile $compile} service for data binding. See\n{@link ng.$interpolateProvider $interpolateProvider} for configuring the\ninterpolation markup.\n\n\n```js\n  var $interpolate = ...; // injected\n  var exp = $interpolate('Hello {{name | uppercase}}!');\n  expect(exp({name:'Angular'}).toEqual('Hello ANGULAR!');\n```\n\n`$interpolate` takes an optional fourth argument, `allOrNothing`. If `allOrNothing` is\n`true`, the interpolation function will return `undefined` unless all embedded expressions\nevaluate to a value other than `undefined`.\n\n```js\n  var $interpolate = ...; // injected\n  var context = {greeting: 'Hello', name: undefined };\n\n  // default \"forgiving\" mode\n  var exp = $interpolate('{{greeting}} {{name}}!');\n  expect(exp(context)).toEqual('Hello !');\n\n  // \"allOrNothing\" mode\n  exp = $interpolate('{{greeting}} {{name}}!', false, null, true);\n  expect(exp(context)).toBeUndefined();\n  context.name = 'Angular';\n  expect(exp(context)).toEqual('Hello Angular!');\n```\n\n`allOrNothing` is useful for interpolating URLs. `ngSrc` and `ngSrcset` use this behavior.\n\n####Escaped Interpolation\n$interpolate provides a mechanism for escaping interpolation markers. Start and end markers\ncan be escaped by preceding each of their characters with a REVERSE SOLIDUS U+005C (backslash).\nIt will be rendered as a regular start/end marker, and will not be interpreted as an expression\nor binding.\n\nThis enables web-servers to prevent script injection attacks and defacing attacks, to some\ndegree, while also enabling code examples to work without relying on the\n{@link ng.directive:ngNonBindable ngNonBindable} directive.\n\n**For security purposes, it is strongly encouraged that web servers escape user-supplied data,\nreplacing angle brackets (&lt;, &gt;) with &amp;lt; and &amp;gt; respectively, and replacing all\ninterpolation start/end markers with their escaped counterparts.**\n\nEscaped interpolation markers are only replaced with the actual interpolation markers in rendered\noutput when the $interpolate service processes the text. So, for HTML elements interpolated\nby {@link ng.$compile $compile}, or otherwise interpolated with the `mustHaveExpression` parameter\nset to `true`, the interpolated text must contain an unescaped interpolation expression. As such,\nthis is typically useful only when user-data is used in rendering a template from the server, or\nwhen otherwise untrusted data is used by a directive.\n\n<example>\n <file name=\"index.html\">\n   <div ng-init=\"username='A user'\">\n     <p ng-init=\"apptitle='Escaping demo'\">{{apptitle}}: \\{\\{ username = \"defaced value\"; \\}\\}\n       </p>\n     <p><strong>{{username}}</strong> attempts to inject code which will deface the\n       application, but fails to accomplish their task, because the server has correctly\n       escaped the interpolation start/end markers with REVERSE SOLIDUS U+005C (backslash)\n       characters.</p>\n     <p>Instead, the result of the attempted script injection is visible, and can be removed\n       from the database by an administrator.</p>\n   </div>\n </file>\n</example>",
            "params": [
                {
                    "name": "text",
                    "description": "The text with markup to interpolate.",
                    "type": "String"
                },
                {
                    "name": "mustHaveExpression",
                    "description": "if set to true then the interpolation string must have\n   embedded expression in order to return an interpolation function. Strings with no\n   embedded expression will return null for the interpolation function.",
                    "type": "Boolean="
                },
                {
                    "name": "trustedContext",
                    "description": "when provided, the returned function passes the interpolated\n   result through {@link ng.$sce#getTrusted $sce.getTrusted(interpolatedResult,\n   trustedContext)} before returning it.  Refer to the {@link ng.$sce $sce} service that\n   provides Strict Contextual Escaping for details.",
                    "type": "String="
                },
                {
                    "name": "allOrNothing",
                    "description": "if `true`, then the returned function returns undefined\n   unless all embedded expressions evaluate to a value other than `undefined`.",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "an interpolation function which is used to compute the\n   interpolated string. The function has these parameters:\n\n- `context`: evaluation context for all expressions embedded in the interpolated text",
                "type": "Function(context)"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10242,
            "ngdoc": "method",
            "name": "$interpolate#startSymbol",
            "description": "Symbol to denote the start of expression in the interpolated string. Defaults to `{{`.\n\nUse {@link ng.$interpolateProvider#startSymbol `$interpolateProvider.startSymbol`} to change\nthe symbol.",
            "return": {
                "description": "start symbol.",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10258,
            "ngdoc": "method",
            "name": "$interpolate#endSymbol",
            "description": "Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n\nUse {@link ng.$interpolateProvider#endSymbol `$interpolateProvider.endSymbol`} to change\nthe symbol.",
            "return": {
                "description": "end symbol.",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10283,
            "ngdoc": "service",
            "name": "$interval",
            "description": "Angular's wrapper for `window.setInterval`. The `fn` function is executed every `delay`\nmilliseconds.\n\nThe return value of registering an interval function is a promise. This promise will be\nnotified upon each tick of the interval, and will be resolved after `count` iterations, or\nrun indefinitely if `count` is not defined. The value of the notification will be the\nnumber of iterations that have run.\nTo cancel an interval, call `$interval.cancel(promise)`.\n\nIn tests you can use {@link ngMock.$interval#flush `$interval.flush(millis)`} to\nmove forward by `millis` milliseconds and trigger any functions scheduled to run in that\ntime.\n\n<div class=\"alert alert-warning\">\n**Note**: Intervals created by this service must be explicitly destroyed when you are finished\nwith them.  In particular they are not automatically destroyed when a controller's scope or a\ndirective's element are destroyed.\nYou should take this into consideration and make sure to always cancel the interval at the\nappropriate moment.  See the example below for more details on how and when to do this.\n</div>",
            "params": [
                {
                    "name": "fn",
                    "description": "A function that should be called repeatedly.",
                    "type": "Function()"
                },
                {
                    "name": "delay",
                    "description": "Number of milliseconds between each function call.",
                    "type": "Number"
                },
                {
                    "name": "count",
                    "description": "Number of times to repeat. If not set, or 0, will repeat\n  indefinitely.",
                    "type": "Number=",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "invokeApply",
                    "description": "If set to `false` skips model dirty checking, otherwise\n  will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.",
                    "type": "Boolean=",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "A promise which will be notified on each iteration.",
                "type": "Promise"
            },
            "example": [
                "\n<example module=\"intervalExample\">\n<file name=\"index.html\">\n  <script>\n    angular.module('intervalExample', [])\n      .controller('ExampleController', ['$scope', '$interval',\n        function($scope, $interval) {\n          $scope.format = 'M/d/yy h:mm:ss a';\n          $scope.blood_1 = 100;\n          $scope.blood_2 = 120;\n\n          var stop;\n          $scope.fight = function() {\n            // Don't start a new fight if we are already fighting\n            if ( angular.isDefined(stop) ) return;\n\n            stop = $interval(function() {\n              if ($scope.blood_1 > 0 && $scope.blood_2 > 0) {\n                $scope.blood_1 = $scope.blood_1 - 3;\n                $scope.blood_2 = $scope.blood_2 - 4;\n              } else {\n                $scope.stopFight();\n              }\n            }, 100);\n          };\n\n          $scope.stopFight = function() {\n            if (angular.isDefined(stop)) {\n              $interval.cancel(stop);\n              stop = undefined;\n            }\n          };\n\n          $scope.resetFight = function() {\n            $scope.blood_1 = 100;\n            $scope.blood_2 = 120;\n          };\n\n          $scope.$on('$destroy', function() {\n            // Make sure that the interval is destroyed too\n            $scope.stopFight();\n          });\n        }])\n      // Register the 'myCurrentTime' directive factory method.\n      // We inject $interval and dateFilter service since the factory method is DI.\n      .directive('myCurrentTime', ['$interval', 'dateFilter',\n        function($interval, dateFilter) {\n          // return the directive link function. (compile function not needed)\n          return function(scope, element, attrs) {\n            var format,  // date format\n                stopTime; // so that we can cancel the time updates\n\n            // used to update the UI\n            function updateTime() {\n              element.text(dateFilter(new Date(), format));\n            }\n\n            // watch the expression, and update the UI on change.\n            scope.$watch(attrs.myCurrentTime, function(value) {\n              format = value;\n              updateTime();\n            });\n\n            stopTime = $interval(updateTime, 1000);\n\n            // listen on DOM destroy (removal) event, and cancel the next UI update\n            // to prevent updating time after the DOM element was removed.\n            element.on('$destroy', function() {\n              $interval.cancel(stopTime);\n            });\n          }\n        }]);\n  </script>\n\n  <div>\n    <div ng-controller=\"ExampleController\">\n      Date format: <input ng-model=\"format\"> <hr/>\n      Current time is: <span my-current-time=\"format\"></span>\n      <hr/>\n      Blood 1 : <font color='red'>{{blood_1}}</font>\n      Blood 2 : <font color='red'>{{blood_2}}</font>\n      <button type=\"button\" data-ng-click=\"fight()\">Fight</button>\n      <button type=\"button\" data-ng-click=\"stopFight()\">StopFight</button>\n      <button type=\"button\" data-ng-click=\"resetFight()\">resetFight</button>\n    </div>\n  </div>\n\n</file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10438,
            "ngdoc": "method",
            "name": "$interval#cancel",
            "description": "Cancels a task associated with the `promise`.",
            "params": [
                {
                    "name": "promise",
                    "description": "returned by the `$interval` function.",
                    "type": "Promise"
                }
            ],
            "return": {
                "description": "Returns `true` if the task was successfully canceled.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10462,
            "ngdoc": "service",
            "name": "$locale",
            "description": "$locale service provides localization rules for various Angular components. As of right now the\nonly public api is:\n\n* `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10547,
            "description": "Encode path using encodeUriSegment, ignoring forward slashes",
            "params": [
                {
                    "name": "path",
                    "description": "Path to encode",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10591,
            "params": [
                {
                    "name": "begin",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "whole",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "returns text from whole after begin or undefined if it does not begin with\n                   expected string.",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10625,
            "description": "LocationHtml5Url represents an url\nThis object is exposed as $location service when HTML5 mode is enabled and supported",
            "is_constructor": 1,
            "params": [
                {
                    "name": "appBase",
                    "description": "application base URL",
                    "type": "String"
                },
                {
                    "name": "basePrefix",
                    "description": "url path prefix",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10640,
            "description": "Parse given html5 (regular) url string into properties",
            "params": [
                {
                    "name": "url",
                    "description": "HTML5 url",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10661,
            "description": "Compose url and update `absUrl` property",
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10703,
            "description": "LocationHashbangUrl represents url\nThis object is exposed as $location service when developer doesn't opt into html5 mode.\nIt also serves as the base class for html5 mode fallback on legacy browsers.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "appBase",
                    "description": "application base URL",
                    "type": "String"
                },
                {
                    "name": "hashPrefix",
                    "description": "hashbang prefix",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10718,
            "description": "Parse given hashbang url into properties",
            "params": [
                {
                    "name": "url",
                    "description": "Hashbang url",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10785,
            "description": "Compose hashbang url and update `absUrl` property",
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10807,
            "description": "LocationHashbangUrl represents url\nThis object is exposed as $location service when html5 history api is enabled but the browser\ndoes not support it.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "appBase",
                    "description": "application base URL",
                    "type": "String"
                },
                {
                    "name": "hashPrefix",
                    "description": "hashbang prefix",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10860,
            "description": "Are we in html5 mode?",
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10866,
            "description": "Has any change been replacing?",
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10872,
            "ngdoc": "method",
            "name": "$location#absUrl",
            "description": "This method is getter only.\n\nReturn full url representation with all segments encoded according to rules specified in\n[RFC 3986](http://www.ietf.org/rfc/rfc3986.txt).\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar absUrl = $location.absUrl();\n// => \"http://example.com/#/some/path?foo=bar&baz=xoxo\"\n```",
            "return": {
                "description": "full url",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10893,
            "ngdoc": "method",
            "name": "$location#url",
            "description": "This method is getter / setter.\n\nReturn url (e.g. `/path?a=b#hash`) when called without any parameter.\n\nChange path, search and hash, when called with parameter and return `$location`.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar url = $location.url();\n// => \"/some/path?foo=bar&baz=xoxo\"\n```",
            "params": [
                {
                    "name": "url",
                    "description": "New url without base prefix (e.g. `/path?a=b#hash`)",
                    "type": "String="
                }
            ],
            "return": {
                "description": "url",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10926,
            "ngdoc": "method",
            "name": "$location#protocol",
            "description": "This method is getter only.\n\nReturn protocol of current url.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar protocol = $location.protocol();\n// => \"http\"\n```",
            "return": {
                "description": "protocol of current url",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10946,
            "ngdoc": "method",
            "name": "$location#host",
            "description": "This method is getter only.\n\nReturn host of current url.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar host = $location.host();\n// => \"example.com\"\n```",
            "return": {
                "description": "host of current url.",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10966,
            "ngdoc": "method",
            "name": "$location#port",
            "description": "This method is getter only.\n\nReturn port of current url.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar port = $location.port();\n// => 80\n```",
            "return": {
                "description": "port",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 10986,
            "ngdoc": "method",
            "name": "$location#path",
            "description": "This method is getter / setter.\n\nReturn path of current url when called without any parameter.\n\nChange path when called with parameter and return `$location`.\n\nNote: Path should always begin with forward slash (/), this method will add the forward slash\nif it is missing.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar path = $location.path();\n// => \"/some/path\"\n```",
            "params": [
                {
                    "name": "path",
                    "description": "New path",
                    "type": "(string|number)="
                }
            ],
            "return": {
                "description": "path",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11015,
            "ngdoc": "method",
            "name": "$location#search",
            "description": "This method is getter / setter.\n\nReturn search part (as object) of current url when called without any parameter.\n\nChange search part when called with parameter and return `$location`.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar searchObject = $location.search();\n// => {foo: 'bar', baz: 'xoxo'}\n\n// set foo to 'yipee'\n$location.search('foo', 'yipee');\n// $location.search() => {foo: 'yipee', baz: 'xoxo'}\n```",
            "params": [
                {
                    "name": "search",
                    "description": "New search params - string or\nhash object.\n\nWhen called with a single argument the method acts as a setter, setting the `search` component\nof `$location` to the specified value.\n\nIf the argument is a hash object containing an array of values, these values will be encoded\nas duplicate search parameters in the url.",
                    "type": "string|Object.<string>|Object.<Array.<string>>"
                },
                {
                    "name": "paramValue",
                    "description": "If `search` is a string or number, then `paramValue`\nwill override only a single search property.\n\nIf `paramValue` is an array, it will override the property of the `search` component of\n`$location` specified via the first argument.\n\nIf `paramValue` is `null`, the property specified via the first argument will be deleted.\n\nIf `paramValue` is `true`, the property specified via the first argument will be added with no\nvalue nor trailing equal sign.",
                    "type": "(string|Number|Array<string>|boolean)="
                }
            ],
            "return": {
                "description": "If called with no arguments returns the parsed `search` object. If called with\none or more arguments returns `$location` object itself.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11093,
            "ngdoc": "method",
            "name": "$location#hash",
            "description": "This method is getter / setter.\n\nReturn hash fragment when called without any parameter.\n\nChange hash fragment when called with parameter and return `$location`.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo#hashValue\nvar hash = $location.hash();\n// => \"hashValue\"\n```",
            "params": [
                {
                    "name": "hash",
                    "description": "New hash fragment",
                    "type": "(string|number)="
                }
            ],
            "return": {
                "description": "hash",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11118,
            "ngdoc": "method",
            "name": "$location#replace",
            "description": "If called, all changes to $location during current `$digest` will be replacing current history\nrecord, instead of adding new one.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11135,
            "ngdoc": "method",
            "name": "$location#state",
            "description": "This method is getter / setter.\n\nReturn the history state object when called without any parameter.\n\nChange the history state object when called with one parameter and return `$location`.\nThe state object is later passed to `pushState` or `replaceState`.\n\nNOTE: This method is supported only in HTML5 mode and only in browsers supporting\nthe HTML5 History API (i.e. methods `pushState` and `replaceState`). If you need to support\nolder browsers (like IE9 or Android < 4.0), don't use this method.",
            "params": [
                {
                    "name": "state",
                    "description": "State object for pushState or replaceState",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "state",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11192,
            "ngdoc": "service",
            "name": "$location",
            "requires": [
                "$rootElement"
            ],
            "description": "The $location service parses the URL in the browser address bar (based on the\n[window.location](https://developer.mozilla.org/en/window.location)) and makes the URL\navailable to your application. Changes to the URL in the address bar are reflected into\n$location service and changes to $location are reflected into the browser address bar.\n\n**The $location service:**\n\n- Exposes the current URL in the browser address bar, so you can\n  - Watch and observe the URL.\n  - Change the URL.\n- Synchronizes the URL with the browser when the user\n  - Changes the address bar.\n  - Clicks the back or forward button (or clicks a History link).\n  - Clicks on a link.\n- Represents the URL object as a set of methods (protocol, host, port, path, search, hash).\n\nFor more information see {@link guide/$location Developer Guide: Using $location}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11218,
            "ngdoc": "provider",
            "name": "$locationProvider",
            "description": "Use the `$locationProvider` to configure how the application deep linking paths are stored.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11232,
            "ngdoc": "method",
            "name": "$locationProvider#hashPrefix",
            "description": "",
            "params": [
                {
                    "name": "prefix",
                    "description": "Prefix for hash part (containing path and search)",
                    "type": "String="
                }
            ],
            "return": {
                "description": "current value if used as getter or itself (chaining) if used as setter",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11248,
            "ngdoc": "method",
            "name": "$locationProvider#html5Mode",
            "description": "",
            "params": [
                {
                    "name": "mode",
                    "description": "If boolean, sets `html5Mode.enabled` to value.\n  If object, sets `enabled`, `requireBase` and `rewriteLinks` to respective values. Supported\n  properties:\n  - **enabled** – `{boolean}` – (default: false) If true, will rely on `history.pushState` to\n    change urls where supported. Will fall back to hash-prefixed paths in browsers that do not\n    support `pushState`.\n  - **requireBase** - `{boolean}` - (default: `true`) When html5Mode is enabled, specifies\n    whether or not a <base> tag is required to be present. If `enabled` and `requireBase` are\n    true, and a base tag is not present, an error will be thrown when `$location` is injected.\n    See the {@link guide/$location $location guide for more information}\n  - **rewriteLinks** - `{boolean}` - (default: `true`) When html5Mode is enabled,\n    enables/disables url rewriting for relative links.",
                    "type": "(boolean|Object)="
                }
            ],
            "return": {
                "description": "html5Mode object if used as getter or itself (chaining) if used as setter",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11291,
            "ngdoc": "event",
            "name": "$location#$locationChangeStart",
            "eventtype": "broadcast on root scope",
            "description": "Broadcasted before a URL will change.\n\nThis change can be prevented by calling\n`preventDefault` method of the event. See {@link ng.$rootScope.Scope#$on} for more\ndetails about event object. Upon successful change\n{@link ng.$location#$locationChangeSuccess $locationChangeSuccess} is fired.\n\nThe `newState` and `oldState` parameters may be defined only in HTML5 mode and when\nthe browser supports the HTML5 History API.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "newUrl",
                    "description": "New URL",
                    "type": "String"
                },
                {
                    "name": "oldUrl",
                    "description": "URL that was before it was changed.",
                    "type": "String="
                },
                {
                    "name": "newState",
                    "description": "New history state object",
                    "type": "String="
                },
                {
                    "name": "oldState",
                    "description": "History state object that was before it was changed.",
                    "type": "String="
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11313,
            "ngdoc": "event",
            "name": "$location#$locationChangeSuccess",
            "eventtype": "broadcast on root scope",
            "description": "Broadcasted after a URL was changed.\n\nThe `newState` and `oldState` parameters may be defined only in HTML5 mode and when\nthe browser supports the HTML5 History API.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "newUrl",
                    "description": "New URL",
                    "type": "String"
                },
                {
                    "name": "oldUrl",
                    "description": "URL that was before it was changed.",
                    "type": "String="
                },
                {
                    "name": "newState",
                    "description": "New history state object",
                    "type": "String="
                },
                {
                    "name": "oldState",
                    "description": "History state object that was before it was changed.",
                    "type": "String="
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11505,
            "ngdoc": "service",
            "name": "$log",
            "requires": [
                "$window"
            ],
            "description": "Simple service for logging. Default implementation safely writes the message\ninto the browser's console (if present).\n\nThe main purpose of this service is to simplify debugging and troubleshooting.\n\nThe default is to log `debug` messages. You can use\n{@link ng.$logProvider ng.$logProvider#debugEnabled} to change this.",
            "example": [
                "\n  <example module=\"logExample\">\n    <file name=\"script.js\">\n      angular.module('logExample', [])\n        .controller('LogController', ['$scope', '$log', function($scope, $log) {\n          $scope.$log = $log;\n          $scope.message = 'Hello World!';\n        }]);\n    </file>\n    <file name=\"index.html\">\n      <div ng-controller=\"LogController\">\n        <p>Reload this page with open console, enter text and hit the log button...</p>\n        Message:\n        <input type=\"text\" ng-model=\"message\"/>\n        <button ng-click=\"$log.log(message)\">log</button>\n        <button ng-click=\"$log.warn(message)\">warn</button>\n        <button ng-click=\"$log.info(message)\">info</button>\n        <button ng-click=\"$log.error(message)\">error</button>\n        <button ng-click=\"$log.debug(message)\">debug</button>\n      </div>\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11543,
            "ngdoc": "provider",
            "name": "$logProvider",
            "description": "Use the `$logProvider` to configure how the application logs messages",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11553,
            "ngdoc": "method",
            "name": "$logProvider#debugEnabled",
            "description": "",
            "params": [
                {
                    "name": "flag",
                    "description": "enable or disable debug level messages",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "current value if used as getter or itself (chaining) if used as setter",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11571,
            "ngdoc": "method",
            "name": "$log#log",
            "description": "Write a log message",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11580,
            "ngdoc": "method",
            "name": "$log#info",
            "description": "Write an information message",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11589,
            "ngdoc": "method",
            "name": "$log#warn",
            "description": "Write a warning message",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11598,
            "ngdoc": "method",
            "name": "$log#error",
            "description": "Write an error message",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11607,
            "ngdoc": "method",
            "name": "$log#debug",
            "description": "Write a debug message",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11818,
            "is_constructor": 1,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 11997,
            "is_constructor": 1,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 12511,
            "description": "Implementation of the \"Black Hole\" variant from:\n- http://jsperf.com/angularjs-parse-getter/4\n- http://jsperf.com/path-evaluation-simplified/7",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 12638,
            "ngdoc": "service",
            "name": "$parse",
            "kind": "function",
            "description": "Converts Angular {@link guide/expression expression} into a function.\n\n```js\n  var getter = $parse('user.name');\n  var setter = getter.assign;\n  var context = {user:{name:'angular'}};\n  var locals = {user:{name:'local'}};\n\n  expect(getter(context)).toEqual('angular');\n  setter(context, 'newValue');\n  expect(context.user.name).toEqual('newValue');\n  expect(getter(context, locals)).toEqual('local');\n```",
            "params": [
                {
                    "name": "expression",
                    "description": "String expression to compile.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a function which represents the compiled expression:\n\n   * `context` – `{object}` – an object against which any expressions embedded in the strings\n     are evaluated against (typically a scope object).\n   * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     `context`.\n\n   The returned function also has the following properties:\n     * `literal` – `{boolean}` – whether the expression's top-level node is a JavaScript\n       literal.\n     * `constant` – `{boolean}` – whether the expression is made entirely of JavaScript\n       constant literals.\n     * `assign` – `{?function(context, value)}` – if the expression is assignable, this will be\n       set to a function to change its value on the given context.",
                "type": "Function(context, locals)"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 12679,
            "ngdoc": "provider",
            "name": "$parseProvider",
            "description": "`$parseProvider` can be used for configuring the default behavior of the {@link ng.$parse $parse}\n service.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 12936,
            "ngdoc": "service",
            "name": "$q",
            "requires": [
                "$rootScope"
            ],
            "description": "A service that helps you run functions asynchronously, and use their return values (or exceptions)\nwhen they are done processing.\n\nThis is an implementation of promises/deferred objects inspired by\n[Kris Kowal's Q](https://github.com/kriskowal/q).\n\n$q can be used in two fashions --- one which is more similar to Kris Kowal's Q or jQuery's Deferred\nimplementations, and the other which resembles ES6 promises to some degree.\n\n# $q constructor\n\nThe streamlined ES6 style promise is essentially just using $q as a constructor which takes a `resolver`\nfunction as the first argument. This is similar to the native Promise implementation from ES6 Harmony,\nsee [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n\nWhile the constructor-style use is supported, not all of the supporting methods from ES6 Harmony promises are\navailable yet.\n\nIt can be used like so:\n\n```js\n  // for the purpose of this example let's assume that variables `$q` and `okToGreet`\n  // are available in the current lexical scope (they could have been injected or passed in).\n\n  function asyncGreet(name) {\n    // perform some asynchronous operation, resolve or reject the promise when appropriate.\n    return $q(function(resolve, reject) {\n      setTimeout(function() {\n        if (okToGreet(name)) {\n          resolve('Hello, ' + name + '!');\n        } else {\n          reject('Greeting ' + name + ' is not allowed.');\n        }\n      }, 1000);\n    });\n  }\n\n  var promise = asyncGreet('Robin Hood');\n  promise.then(function(greeting) {\n    alert('Success: ' + greeting);\n  }, function(reason) {\n    alert('Failed: ' + reason);\n  });\n```\n\nNote: progress/notify callbacks are not currently supported via the ES6-style interface.\n\nHowever, the more traditional CommonJS-style usage is still available, and documented below.\n\n[The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an\ninterface for interacting with an object that represents the result of an action that is\nperformed asynchronously, and may or may not be finished at any given point in time.\n\nFrom the perspective of dealing with error handling, deferred and promise APIs are to\nasynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.\n\n```js\n  // for the purpose of this example let's assume that variables `$q` and `okToGreet`\n  // are available in the current lexical scope (they could have been injected or passed in).\n\n  function asyncGreet(name) {\n    var deferred = $q.defer();\n\n    setTimeout(function() {\n      deferred.notify('About to greet ' + name + '.');\n\n      if (okToGreet(name)) {\n        deferred.resolve('Hello, ' + name + '!');\n      } else {\n        deferred.reject('Greeting ' + name + ' is not allowed.');\n      }\n    }, 1000);\n\n    return deferred.promise;\n  }\n\n  var promise = asyncGreet('Robin Hood');\n  promise.then(function(greeting) {\n    alert('Success: ' + greeting);\n  }, function(reason) {\n    alert('Failed: ' + reason);\n  }, function(update) {\n    alert('Got notification: ' + update);\n  });\n```\n\nAt first it might not be obvious why this extra complexity is worth the trouble. The payoff\ncomes in the way of guarantees that promise and deferred APIs make, see\nhttps://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md.\n\nAdditionally the promise api allows for composition that is very hard to do with the\ntraditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.\nFor more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the\nsection on serial or parallel joining of promises.\n\n# The Deferred API\n\nA new instance of deferred is constructed by calling `$q.defer()`.\n\nThe purpose of the deferred object is to expose the associated Promise instance as well as APIs\nthat can be used for signaling the successful or unsuccessful completion, as well as the status\nof the task.\n\n**Methods**\n\n- `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection\n  constructed via `$q.reject`, the promise will be rejected instead.\n- `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to\n  resolving it with a rejection constructed via `$q.reject`.\n- `notify(value)` - provides updates on the status of the promise's execution. This may be called\n  multiple times before the promise is either resolved or rejected.\n\n**Properties**\n\n- promise – `{Promise}` – promise object associated with this deferred.\n\n\n# The Promise API\n\nA new promise instance is created when a deferred instance is created and can be retrieved by\ncalling `deferred.promise`.\n\nThe purpose of the promise object is to allow for interested parties to get access to the result\nof the deferred task when it completes.\n\n**Methods**\n\n- `then(successCallback, errorCallback, notifyCallback)` – regardless of when the promise was or\n  will be resolved or rejected, `then` calls one of the success or error callbacks asynchronously\n  as soon as the result is available. The callbacks are called with a single argument: the result\n  or rejection reason. Additionally, the notify callback may be called zero or more times to\n  provide a progress indication, before the promise is resolved or rejected.\n\n  This method *returns a new promise* which is resolved or rejected via the return value of the\n  `successCallback`, `errorCallback`. It also notifies via the return value of the\n  `notifyCallback` method. The promise cannot be resolved or rejected from the notifyCallback\n  method.\n\n- `catch(errorCallback)` – shorthand for `promise.then(null, errorCallback)`\n\n- `finally(callback, notifyCallback)` – allows you to observe either the fulfillment or rejection of a promise,\n  but to do so without modifying the final value. This is useful to release resources or do some\n  clean-up that needs to be done whether the promise was rejected or resolved. See the [full\n  specification](https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback) for\n  more information.\n\n# Chaining promises\n\nBecause calling the `then` method of a promise returns a new derived promise, it is easily\npossible to create a chain of promises:\n\n```js\n  promiseB = promiseA.then(function(result) {\n    return result + 1;\n  });\n\n  // promiseB will be resolved immediately after promiseA is resolved and its value\n  // will be the result of promiseA incremented by 1\n```\n\nIt is possible to create chains of any length and since a promise can be resolved with another\npromise (which will defer its resolution further), it is possible to pause/defer resolution of\nthe promises at any point in the chain. This makes it possible to implement powerful APIs like\n$http's response interceptors.\n\n\n# Differences between Kris Kowal's Q and $q\n\n There are two main differences:\n\n- $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation\n  mechanism in angular, which means faster propagation of resolution or rejection into your\n  models and avoiding unnecessary browser repaints, which would result in flickering UI.\n- Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains\n  all the important functionality needed for common async tasks.\n\n # Testing\n\n ```js\n   it('should simulate promise', inject(function($q, $rootScope) {\n     var deferred = $q.defer();\n     var promise = deferred.promise;\n     var resolvedValue;\n\n     promise.then(function(value) { resolvedValue = value; });\n     expect(resolvedValue).toBeUndefined();\n\n     // Simulate resolving of promise\n     deferred.resolve(123);\n     // Note that the 'then' function does not get called synchronously.\n     // This is because we want the promise API to always be async, whether or not\n     // it got called synchronously or asynchronously.\n     expect(resolvedValue).toBeUndefined();\n\n     // Propagate promise resolution to 'then' functions using $apply().\n     $rootScope.$apply();\n     expect(resolvedValue).toEqual(123);\n   }));\n ```",
            "params": [
                {
                    "name": "resolver",
                    "description": "Function which is responsible for resolving or\n  rejecting the newly created promise. The first parameter is a function which resolves the\n  promise, the second parameter is a function which rejects the promise.",
                    "type": "Function(function, function)"
                }
            ],
            "return": {
                "description": "The newly created promise.",
                "type": "Promise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 13165,
            "description": "Constructs a promise manager.",
            "params": [
                {
                    "name": "nextTick",
                    "description": "Function for executing functions in the next turn.",
                    "type": "Function(function)"
                },
                {
                    "name": "exceptionHandler",
                    "description": "Function into which unexpected exceptions are passed for\n    debugging purposes.",
                    "type": "function(...*)"
                }
            ],
            "return": {
                "description": "Promise manager.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 13188,
            "ngdoc": "method",
            "name": "ng.$q#defer",
            "kind": "function",
            "description": "Creates a `Deferred` object which represents a task which will finish in the future.",
            "return": {
                "description": "Returns a new instance of deferred.",
                "type": "Deferred"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 13340,
            "ngdoc": "method",
            "name": "$q#reject",
            "kind": "function",
            "description": "Creates a promise that is resolved as rejected with the specified `reason`. This api should be\nused to forward rejection in a chain of promises. If you are dealing with the last promise in\na promise chain, you don't need to worry about it.\n\nWhen comparing deferreds/promises to the familiar behavior of try/catch/throw, think of\n`reject` as the `throw` keyword in JavaScript. This also means that if you \"catch\" an error via\na promise error callback and you want to forward the error to the promise derived from the\ncurrent promise, you have to \"rethrow\" the error by returning a rejection constructed via\n`reject`.\n\n```js\n  promiseB = promiseA.then(function(result) {\n    // success: do something and resolve promiseB\n    //          with the old or a new result\n    return result;\n  }, function(reason) {\n    // error: handle the error if possible and\n    //        resolve promiseB with newPromiseOrValue,\n    //        otherwise forward the rejection to promiseB\n    if (canHandle(reason)) {\n     // handle the error and recover\n     return newPromiseOrValue;\n    }\n    return $q.reject(reason);\n  });\n```",
            "params": [
                {
                    "name": "reason",
                    "description": "Constant, message, exception or an object representing the rejection reason.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns a promise that was already resolved as rejected with the `reason`.",
                "type": "Promise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 13410,
            "ngdoc": "method",
            "name": "$q#when",
            "kind": "function",
            "description": "Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.\nThis is useful when you are dealing with an object that might or might not be a promise, or if\nthe promise comes from a source that can't be trusted.",
            "params": [
                {
                    "name": "value",
                    "description": "Value or a promise",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns a promise of the passed value or promise",
                "type": "Promise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 13431,
            "ngdoc": "method",
            "name": "$q#all",
            "kind": "function",
            "description": "Combines multiple promises into a single promise that is resolved when all of the input\npromises are resolved.",
            "params": [
                {
                    "name": "promises",
                    "description": "An array or hash of promises.",
                    "type": "Array.<Promise>|Object.<Promise>"
                }
            ],
            "return": {
                "description": "Returns a single promise that will be resolved with an array/hash of values,\n  each value corresponding to the promise at the same index/key in the `promises` array/hash.\n  If any of the promises is resolved with a rejection, this resulting promise will be rejected\n  with the same rejection value.",
                "type": "Promise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 13534,
            "description": "DESIGN NOTES\n\nThe design decisions behind the scope are heavily favored for speed and memory consumption.\n\nThe typical use of scope is to watch the expressions, which most of the time return the same\nvalue as last time so we optimize the operation.\n\nClosures construction is expensive in terms of speed as well as memory:\n  - No closures, instead use prototypical inheritance for API\n  - Internal state needs to be stored on scope directly, which means that private state is\n    exposed as $$____ properties\n\nLoop operations are optimized by using while(count--) { ... }\n  - this means that in order to keep the same order of execution as addition we have to add\n    items to the array at the beginning (unshift) instead of at the end (push)\n\nChild scopes are created and removed often\n  - Using an array would be slow since inserts in middle are expensive so we use linked list\n\nThere are few watches then a lot of observers. This is why you don't want the observer to be\nimplemented in the same way as watch. Watch requires return of initialization function which\nare expensive to construct.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 13560,
            "ngdoc": "provider",
            "name": "$rootScopeProvider",
            "description": "Provider for the $rootScope service.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 13568,
            "ngdoc": "method",
            "name": "$rootScopeProvider#digestTtl",
            "description": "Sets the number of `$digest` iterations the scope should attempt to execute before giving up and\nassuming that the model is unstable.\n\nThe current default is 10 iterations.\n\nIn complex applications it's possible that the dependencies between `$watch`s will result in\nseveral digest iterations. However if an application needs more than the default 10 digest\niterations for its model to stabilize then you should investigate what is causing the model to\ncontinuously change during the digest.\n\nIncreasing the TTL could have performance implications, so you should not change it without\nproper justification.",
            "params": [
                {
                    "name": "limit",
                    "description": "The number of digest iterations.",
                    "type": "Number"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 13590,
            "ngdoc": "service",
            "name": "$rootScope",
            "description": "Every application has a single root {@link ng.$rootScope.Scope scope}.\nAll other scopes are descendant scopes of the root scope. Scopes provide separation\nbetween the model and the view, via a mechanism for watching the model for changes.\nThey also provide an event emission/broadcast and subscription facility. See the\n{@link guide/scope developer guide on scopes}.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 13635,
            "ngdoc": "type",
            "name": "$rootScope.Scope",
            "description": "A root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the\n{@link auto.$injector $injector}. Child scopes are created using the\n{@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when\ncompiled HTML template is executed.)\n\nHere is a simple scope snippet to show how you can interact with the scope.\n```html\n<file src=\"./test/ng/rootScopeSpec.js\" tag=\"docs1\" />\n```\n\n# Inheritance\nA scope can inherit from a parent scope, as in this example:\n```js\n        var parent = $rootScope;\n        var child = parent.$new();\n\n        parent.salutation = \"Hello\";\n        expect(child.salutation).toEqual('Hello');\n\n        child.salutation = \"Welcome\";\n        expect(child.salutation).toEqual('Welcome');\n        expect(parent.salutation).toEqual('Hello');\n```\n\nWhen interacting with `Scope` in tests, additional helper methods are available on the\ninstances of `Scope` type. See {@link ngMock.$rootScope.Scope ngMock Scope} for additional\ndetails.",
            "params": [
                {
                    "name": "providers",
                    "description": "Map of service factory which need to be\n                                      provided for the current scope. Defaults to {@link ng}.",
                    "type": "Object.<string, function()>="
                },
                {
                    "name": "instanceCache",
                    "description": "Provides pre-instantiated services which should\n                             append/override services provided by `providers`. This is handy\n                             when unit-testing and having the need to override a default\n                             service.",
                    "type": "Object.<string, *>="
                }
            ],
            "return": {
                "description": "Newly created scope.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 13690,
            "ngdoc": "property",
            "name": "$rootScope.Scope#$id",
            "description": "Unique scope ID (monotonically increasing) useful for debugging.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 13698,
            "ngdoc": "property",
            "name": "$rootScope.Scope#$parent",
            "description": "Reference to the parent scope.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 13706,
            "ngdoc": "property",
            "name": "$rootScope.Scope#$root",
            "description": "Reference to the root scope.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 13716,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$new",
            "kind": "function",
            "description": "Creates a new child {@link ng.$rootScope.Scope scope}.\n\nThe parent scope will propagate the {@link ng.$rootScope.Scope#$digest $digest()} event.\nThe scope can be removed from the scope hierarchy using {@link ng.$rootScope.Scope#$destroy $destroy()}.\n\n{@link ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is\ndesired for the scope and its child scopes to be permanently detached from the parent and\nthus stop participating in model change detection and listener notification by invoking.",
            "params": [
                {
                    "name": "isolate",
                    "description": "If true, then the scope does not prototypically inherit from the\n        parent scope. The scope is isolated, as it can not see parent scope properties.\n        When creating widgets, it is useful for the widget to not accidentally read parent\n        state.",
                    "type": "Boolean"
                },
                {
                    "name": "parent",
                    "description": "The {@link ng.$rootScope.Scope `Scope`} that will be the `$parent`\n                             of the newly created scope. Defaults to `this` scope if not provided.\n                             This is used when creating a transclude scope to correctly place it\n                             in the scope hierarchy while maintaining the correct prototypical\n                             inheritance.",
                    "type": "Scope",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "return": {
                "description": "The newly created child scope.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 13780,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$watch",
            "kind": "function",
            "description": "Registers a `listener` callback to be executed whenever the `watchExpression` changes.\n\n- The `watchExpression` is called on every call to {@link ng.$rootScope.Scope#$digest\n  $digest()} and should return the value that will be watched. (Since\n  {@link ng.$rootScope.Scope#$digest $digest()} reruns when it detects changes the\n  `watchExpression` can execute multiple times per\n  {@link ng.$rootScope.Scope#$digest $digest()} and should be idempotent.)\n- The `listener` is called only when the value from the current `watchExpression` and the\n  previous call to `watchExpression` are not equal (with the exception of the initial run,\n  see below). Inequality is determined according to reference inequality,\n  [strict comparison](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators)\n   via the `!==` Javascript operator, unless `objectEquality == true`\n  (see next point)\n- When `objectEquality == true`, inequality of the `watchExpression` is determined\n  according to the {@link angular.equals} function. To save the value of the object for\n  later comparison, the {@link angular.copy} function is used. This therefore means that\n  watching complex objects will have adverse memory and performance implications.\n- The watch `listener` may change the model, which may trigger other `listener`s to fire.\n  This is achieved by rerunning the watchers until no changes are detected. The rerun\n  iteration limit is 10 to prevent an infinite loop deadlock.\n\n\nIf you want to be notified whenever {@link ng.$rootScope.Scope#$digest $digest} is called,\nyou can register a `watchExpression` function with no `listener`. (Since `watchExpression`\ncan execute multiple times per {@link ng.$rootScope.Scope#$digest $digest} cycle when a\nchange is detected, be prepared for multiple calls to your listener.)\n\nAfter a watcher is registered with the scope, the `listener` fn is called asynchronously\n(via {@link ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the\nwatcher. In rare cases, this is undesirable because the listener is called when the result\nof `watchExpression` didn't change. To detect this scenario within the `listener` fn, you\ncan compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the\nlistener was called due to initialization.\n\n\n\n# Example\n```js\n          // let's assume that scope was dependency injected as the $rootScope\n          var scope = $rootScope;\n          scope.name = 'misko';\n          scope.counter = 0;\n\n          expect(scope.counter).toEqual(0);\n          scope.$watch('name', function(newValue, oldValue) {\n            scope.counter = scope.counter + 1;\n          });\n          expect(scope.counter).toEqual(0);\n\n          scope.$digest();\n          // the listener is always called during the first $digest loop after it was registered\n          expect(scope.counter).toEqual(1);\n\n          scope.$digest();\n          // but now it will not be called unless the value changes\n          expect(scope.counter).toEqual(1);\n\n          scope.name = 'adam';\n          scope.$digest();\n          expect(scope.counter).toEqual(2);\n\n\n\n          // Using a function as a watchExpression\n          var food;\n          scope.foodCounter = 0;\n          expect(scope.foodCounter).toEqual(0);\n          scope.$watch(\n            // This function returns the value being watched. It is called for each turn of the $digest loop\n            function() { return food; },\n            // This is the change listener, called when the value returned from the above function changes\n            function(newValue, oldValue) {\n              if ( newValue !== oldValue ) {\n                // Only increment the counter if the value changed\n                scope.foodCounter = scope.foodCounter + 1;\n              }\n            }\n          );\n          // No digest has been run so the counter will be zero\n          expect(scope.foodCounter).toEqual(0);\n\n          // Run the digest but since food has not changed count will still be zero\n          scope.$digest();\n          expect(scope.foodCounter).toEqual(0);\n\n          // Update food and run digest.  Now the counter will increment\n          food = 'cheeseburger';\n          scope.$digest();\n          expect(scope.foodCounter).toEqual(1);\n\n```",
            "params": [
                {
                    "name": "watchExpression",
                    "description": "Expression that is evaluated on each\n   {@link ng.$rootScope.Scope#$digest $digest} cycle. A change in the return value triggers\n   a call to the `listener`.\n\n   - `string`: Evaluated as {@link guide/expression expression}\n   - `function(scope)`: called with current `scope` as a parameter.",
                    "type": "(function()|string)"
                },
                {
                    "name": "listener",
                    "description": "Callback called whenever the value\n   of `watchExpression` changes.\n\n   - `newVal` contains the current value of the `watchExpression`\n   - `oldVal` contains the previous value of the `watchExpression`\n   - `scope` refers to the current scope",
                    "type": "Function(newVal, oldVal, scope)"
                },
                {
                    "name": "objectEquality",
                    "description": "Compare for object equality using {@link angular.equals} instead of\n    comparing for reference equality.",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "Returns a deregistration function for this listener.",
                "type": "Function()"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 13931,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$watchGroup",
            "kind": "function",
            "description": "A variant of {@link ng.$rootScope.Scope#$watch $watch()} where it watches an array of `watchExpressions`.\nIf any one expression in the collection changes the `listener` is executed.\n\n- The items in the `watchExpressions` array are observed via standard $watch operation and are examined on every\n  call to $digest() to see if any items changes.\n- The `listener` is called whenever any expression in the `watchExpressions` array changes.",
            "params": [
                {
                    "name": "watchExpressions",
                    "description": "Array of expressions that will be individually\nwatched using {@link ng.$rootScope.Scope#$watch $watch()}",
                    "type": "Array.<string|Function(scope)>"
                },
                {
                    "name": "listener",
                    "description": "Callback called whenever the return value of any\n   expression in `watchExpressions` changes\n   The `newValues` array contains the current values of the `watchExpressions`, with the indexes matching\n   those of `watchExpression`\n   and the `oldValues` array contains the previous values of the `watchExpressions`, with the indexes matching\n   those of `watchExpression`\n   The `scope` refers to the current scope.",
                    "type": "Function(newValues, oldValues, scope)"
                }
            ],
            "return": {
                "description": "Returns a de-registration function for all listeners.",
                "type": "Function()"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 14015,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$watchCollection",
            "kind": "function",
            "description": "Shallow watches the properties of an object and fires whenever any of the properties change\n(for arrays, this implies watching the array items; for object maps, this implies watching\nthe properties). If a change is detected, the `listener` callback is fired.\n\n- The `obj` collection is observed via standard $watch operation and is examined on every\n  call to $digest() to see if any items have been added, removed, or moved.\n- The `listener` is called whenever anything within the `obj` has changed. Examples include\n  adding, removing, and moving items belonging to an object or array.\n\n\n# Example\n```js\n         $scope.names = ['igor', 'matias', 'misko', 'james'];\n         $scope.dataCount = 4;\n\n         $scope.$watchCollection('names', function(newNames, oldNames) {\n           $scope.dataCount = newNames.length;\n         });\n\n         expect($scope.dataCount).toEqual(4);\n         $scope.$digest();\n\n         //still at 4 ... no changes\n         expect($scope.dataCount).toEqual(4);\n\n         $scope.names.pop();\n         $scope.$digest();\n\n         //now there's been a change\n         expect($scope.dataCount).toEqual(3);\n```",
            "params": [
                {
                    "name": "obj",
                    "description": "Evaluated as {@link guide/expression expression}. The\n   expression value should evaluate to an object or an array which is observed on each\n   {@link ng.$rootScope.Scope#$digest $digest} cycle. Any shallow change within the\n   collection will trigger a call to the `listener`.",
                    "type": "String|function(scope)"
                },
                {
                    "name": "listener",
                    "description": "a callback function called\n   when a change is detected.\n   - The `newCollection` object is the newly modified data obtained from the `obj` expression\n   - The `oldCollection` object is a copy of the former collection data.\n     Due to performance considerations, the`oldCollection` value is computed only if the\n     `listener` function declares two or more arguments.\n   - The `scope` argument refers to the current scope.",
                    "type": "Function(newCollection, oldCollection, scope)"
                }
            ],
            "return": {
                "description": "Returns a de-registration function for this listener. When the\n   de-registration function is executed, the internal watch operation is terminated.",
                "type": "Function()"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 14202,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$digest",
            "kind": "function",
            "description": "Processes all of the {@link ng.$rootScope.Scope#$watch watchers} of the current scope and\nits children. Because a {@link ng.$rootScope.Scope#$watch watcher}'s listener can change\nthe model, the `$digest()` keeps calling the {@link ng.$rootScope.Scope#$watch watchers}\nuntil no more listeners are firing. This means that it is possible to get into an infinite\nloop. This function will throw `'Maximum iteration limit exceeded.'` if the number of\niterations exceeds 10.\n\nUsually, you don't call `$digest()` directly in\n{@link ng.directive:ngController controllers} or in\n{@link ng.$compileProvider#directive directives}.\nInstead, you should call {@link ng.$rootScope.Scope#$apply $apply()} (typically from within\na {@link ng.$compileProvider#directive directive}), which will force a `$digest()`.\n\nIf you want to be notified whenever `$digest()` is called,\nyou can register a `watchExpression` function with\n{@link ng.$rootScope.Scope#$watch $watch()} with no `listener`.\n\nIn unit tests, you may need to call `$digest()` to simulate the scope life cycle.\n\n# Example\n```js\n          var scope = ...;\n          scope.name = 'misko';\n          scope.counter = 0;\n\n          expect(scope.counter).toEqual(0);\n          scope.$watch('name', function(newValue, oldValue) {\n            scope.counter = scope.counter + 1;\n          });\n          expect(scope.counter).toEqual(0);\n\n          scope.$digest();\n          // the listener is always called during the first $digest loop after it was registered\n          expect(scope.counter).toEqual(1);\n\n          scope.$digest();\n          // but now it will not be called unless the value changes\n          expect(scope.counter).toEqual(1);\n\n          scope.name = 'adam';\n          scope.$digest();\n          expect(scope.counter).toEqual(2);\n```",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 14366,
            "ngdoc": "event",
            "name": "$rootScope.Scope#$destroy",
            "eventtype": "broadcast on scope being destroyed",
            "description": "Broadcasted when a scope and its children are being destroyed.\n\nNote that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\nclean up DOM bindings before an element is removed from the DOM.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 14378,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$destroy",
            "kind": "function",
            "description": "Removes the current scope (and all of its children) from the parent scope. Removal implies\nthat calls to {@link ng.$rootScope.Scope#$digest $digest()} will no longer\npropagate to the current scope and its children. Removal also implies that the current\nscope is eligible for garbage collection.\n\nThe `$destroy()` is usually used by directives such as\n{@link ng.directive:ngRepeat ngRepeat} for managing the\nunrolling of the loop.\n\nJust before a scope is destroyed, a `$destroy` event is broadcasted on this scope.\nApplication code can register a `$destroy` event handler that will give it a chance to\nperform any necessary cleanup.\n\nNote that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\nclean up DOM bindings before an element is removed from the DOM.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 14437,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$eval",
            "kind": "function",
            "description": "Executes the `expression` on the current scope and returns the result. Any exceptions in\nthe expression are propagated (uncaught). This is useful when evaluating Angular\nexpressions.\n\n# Example\n```js\n          var scope = ng.$rootScope.Scope();\n          scope.a = 1;\n          scope.b = 2;\n\n          expect(scope.$eval('a+b')).toEqual(3);\n          expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);\n```",
            "params": [
                {
                    "name": "expression",
                    "description": "An angular expression to be executed.\n\n   - `string`: execute using the rules as defined in  {@link guide/expression expression}.\n   - `function(scope)`: execute the function with the current `scope` parameter.",
                    "type": "(string|function())="
                },
                {
                    "name": "locals",
                    "description": "Local variables object, useful for overriding values in scope.",
                    "type": "(object)="
                }
            ],
            "return": {
                "description": "The result of evaluating the expression.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 14469,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$evalAsync",
            "kind": "function",
            "description": "Executes the expression on the current scope at a later point in time.\n\nThe `$evalAsync` makes no guarantees as to when the `expression` will be executed, only\nthat:\n\n  - it will execute after the function that scheduled the evaluation (preferably before DOM\n    rendering).\n  - at least one {@link ng.$rootScope.Scope#$digest $digest cycle} will be performed after\n    `expression` execution.\n\nAny exceptions from the execution of the expression are forwarded to the\n{@link ng.$exceptionHandler $exceptionHandler} service.\n\n__Note:__ if this function is called outside of a `$digest` cycle, a new `$digest` cycle\nwill be scheduled. However, it is encouraged to always call code that changes the model\nfrom within an `$apply` call. That includes code evaluated via `$evalAsync`.",
            "params": [
                {
                    "name": "expression",
                    "description": "An angular expression to be executed.\n\n   - `string`: execute using the rules as defined in {@link guide/expression expression}.\n   - `function(scope)`: execute the function with the current `scope` parameter.",
                    "type": "(string|function())="
                },
                {
                    "name": "locals",
                    "description": "Local variables object, useful for overriding values in scope.",
                    "type": "(object)="
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 14517,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$apply",
            "kind": "function",
            "description": "`$apply()` is used to execute an expression in angular from outside of the angular\nframework. (For example from browser DOM events, setTimeout, XHR or third party libraries).\nBecause we are calling into the angular framework we need to perform proper scope life\ncycle of {@link ng.$exceptionHandler exception handling},\n{@link ng.$rootScope.Scope#$digest executing watches}.\n\n## Life cycle\n\n# Pseudo-Code of `$apply()`\n```js\n          function $apply(expr) {\n            try {\n              return $eval(expr);\n            } catch (e) {\n              $exceptionHandler(e);\n            } finally {\n              $root.$digest();\n            }\n          }\n```\n\n\nScope's `$apply()` method transitions through the following stages:\n\n1. The {@link guide/expression expression} is executed using the\n   {@link ng.$rootScope.Scope#$eval $eval()} method.\n2. Any exceptions from the execution of the expression are forwarded to the\n   {@link ng.$exceptionHandler $exceptionHandler} service.\n3. The {@link ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the\n   expression was executed using the {@link ng.$rootScope.Scope#$digest $digest()} method.",
            "params": [
                {
                    "name": "exp",
                    "description": "An angular expression to be executed.\n\n   - `string`: execute using the rules as defined in {@link guide/expression expression}.\n   - `function(scope)`: execute the function with current `scope` parameter.",
                    "type": "(string|function())="
                }
            ],
            "return": {
                "description": "The result of evaluating the expression.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 14579,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$applyAsync",
            "kind": "function",
            "description": "Schedule the invocation of $apply to occur at a later time. The actual time difference\nvaries across browsers, but is typically around ~10 milliseconds.\n\nThis can be used to queue up multiple expressions which need to be evaluated in the same\ndigest.",
            "params": [
                {
                    "name": "exp",
                    "description": "An angular expression to be executed.\n\n   - `string`: execute using the rules as defined in {@link guide/expression expression}.\n   - `function(scope)`: execute the function with current `scope` parameter.",
                    "type": "(string|function())="
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 14606,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$on",
            "kind": "function",
            "description": "Listens on events of a given type. See {@link ng.$rootScope.Scope#$emit $emit} for\ndiscussion of event life cycle.\n\nThe event listener function format is: `function(event, args...)`. The `event` object\npassed into the listener has the following attributes:\n\n  - `targetScope` - `{Scope}`: the scope on which the event was `$emit`-ed or\n    `$broadcast`-ed.\n  - `currentScope` - `{Scope}`: the scope that is currently handling the event. Once the\n    event propagates through the scope hierarchy, this property is set to null.\n  - `name` - `{string}`: name of the event.\n  - `stopPropagation` - `{function=}`: calling `stopPropagation` function will cancel\n    further event propagation (available only for events that were `$emit`-ed).\n  - `preventDefault` - `{function}`: calling `preventDefault` sets `defaultPrevented` flag\n    to true.\n  - `defaultPrevented` - `{boolean}`: true if `preventDefault` was called.",
            "params": [
                {
                    "name": "name",
                    "description": "Event name to listen on.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "Function to call when the event is emitted.",
                    "type": "function(event, ...args)"
                }
            ],
            "return": {
                "description": "Returns a deregistration function for this listener.",
                "type": "Function()"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 14659,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$emit",
            "kind": "function",
            "description": "Dispatches an event `name` upwards through the scope hierarchy notifying the\nregistered {@link ng.$rootScope.Scope#$on} listeners.\n\nThe event life cycle starts at the scope on which `$emit` was called. All\n{@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\nnotified. Afterwards, the event traverses upwards toward the root scope and calls all\nregistered listeners along the way. The event will stop propagating if one of the listeners\ncancels it.\n\nAny exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\nonto the {@link ng.$exceptionHandler $exceptionHandler} service.",
            "params": [
                {
                    "name": "name",
                    "description": "Event name to emit.",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "Optional one or more arguments which will be passed onto the event listeners.",
                    "type": "...*"
                }
            ],
            "return": {
                "description": "Event object (see {@link ng.$rootScope.Scope#$on}).",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 14732,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$broadcast",
            "kind": "function",
            "description": "Dispatches an event `name` downwards to all child scopes (and their children) notifying the\nregistered {@link ng.$rootScope.Scope#$on} listeners.\n\nThe event life cycle starts at the scope on which `$broadcast` was called. All\n{@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\nnotified. Afterwards, the event propagates to all direct and indirect scopes of the current\nscope and calls all registered listeners along the way. The event cannot be canceled.\n\nAny exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\nonto the {@link ng.$exceptionHandler $exceptionHandler} service.",
            "params": [
                {
                    "name": "name",
                    "description": "Event name to broadcast.",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "Optional one or more arguments which will be passed onto the event listeners.",
                    "type": "...*"
                }
            ],
            "return": {
                "description": "Event object, see {@link ng.$rootScope.Scope#$on}",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 14841,
            "description": "function used as an initial value for watchers.\nbecause it's unique we can easily tell it apart from other values",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 14868,
            "description": "Private service to sanitize uris for links and images. Used by $compile and $sanitize.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 14876,
            "description": "Retrieves or overrides the default regular expression that is used for whitelisting of safe\nurls during a[href] sanitization.\n\nThe sanitization is a security measure aimed at prevent XSS attacks via html links.\n\nAny url about to be assigned to a[href] via data-binding is first normalized and turned into\nan absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\nregular expression. If a match is found, the original url is written into the dom. Otherwise,\nthe absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.",
            "params": [
                {
                    "name": "regexp",
                    "description": "New regexp to whitelist urls with.",
                    "type": "RegExp="
                }
            ],
            "return": {
                "description": "Current RegExp if called without value or self for\n   chaining otherwise.",
                "type": "RegExp|ng.$compileProvider"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 14901,
            "description": "Retrieves or overrides the default regular expression that is used for whitelisting of safe\nurls during img[src] sanitization.\n\nThe sanitization is a security measure aimed at prevent XSS attacks via html links.\n\nAny url about to be assigned to img[src] via data-binding is first normalized and turned into\nan absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\nregular expression. If a match is found, the original url is written into the dom. Otherwise,\nthe absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.",
            "params": [
                {
                    "name": "regexp",
                    "description": "New regexp to whitelist urls with.",
                    "type": "RegExp="
                }
            ],
            "return": {
                "description": "Current RegExp if called without value or self for\n   chaining otherwise.",
                "type": "RegExp|ng.$compileProvider"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15002,
            "ngdoc": "service",
            "name": "$sceDelegate",
            "kind": "function",
            "description": "`$sceDelegate` is a service that is used by the `$sce` service to provide {@link ng.$sce Strict\nContextual Escaping (SCE)} services to AngularJS.\n\nTypically, you would configure or override the {@link ng.$sceDelegate $sceDelegate} instead of\nthe `$sce` service to customize the way Strict Contextual Escaping works in AngularJS.  This is\nbecause, while the `$sce` provides numerous shorthand methods, etc., you really only need to\noverride 3 core functions (`trustAs`, `getTrusted` and `valueOf`) to replace the way things\nwork because `$sce` delegates to `$sceDelegate` for these operations.\n\nRefer {@link ng.$sceDelegateProvider $sceDelegateProvider} to configure this service.\n\nThe default instance of `$sceDelegate` should work out of the box with little pain.  While you\ncan override it completely to change the behavior of `$sce`, the common case would\ninvolve configuring the {@link ng.$sceDelegateProvider $sceDelegateProvider} instead by setting\nyour own whitelists and blacklists for trusting URLs used for loading AngularJS resources such as\ntemplates.  Refer {@link ng.$sceDelegateProvider#resourceUrlWhitelist\n$sceDelegateProvider.resourceUrlWhitelist} and {@link\nng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15029,
            "ngdoc": "provider",
            "name": "$sceDelegateProvider",
            "description": "The `$sceDelegateProvider` provider allows developers to configure the {@link ng.$sceDelegate\n$sceDelegate} service.  This allows one to get/set the whitelists and blacklists used to ensure\nthat the URLs used for sourcing Angular templates are safe.  Refer {@link\nng.$sceDelegateProvider#resourceUrlWhitelist $sceDelegateProvider.resourceUrlWhitelist} and\n{@link ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}\n\nFor the general details about this service in Angular, read the main page for {@link ng.$sce\nStrict Contextual Escaping (SCE)}.\n\n**Example**:  Consider the following case. <a name=\"example\"></a>\n\n- your app is hosted at url `http://myapp.example.com/`\n- but some of your templates are hosted on other domains you control such as\n  `http://srv01.assets.example.com/`,  `http://srv02.assets.example.com/`, etc.\n- and you have an open redirect at `http://myapp.example.com/clickThru?...`.\n\nHere is what a secure configuration for this scenario might look like:\n\n```\n angular.module('myApp', []).config(function($sceDelegateProvider) {\n   $sceDelegateProvider.resourceUrlWhitelist([\n     // Allow same origin resource loads.\n     'self',\n     // Allow loading from our assets domain.  Notice the difference between * and **.\n     'http://srv*.assets.example.com/**'\n   ]);\n\n   // The blacklist overrides the whitelist so the open redirect here is blocked.\n   $sceDelegateProvider.resourceUrlBlacklist([\n     'http://myapp.example.com/clickThru**'\n   ]);\n });\n```",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15076,
            "ngdoc": "method",
            "name": "$sceDelegateProvider#resourceUrlWhitelist",
            "kind": "function",
            "params": [
                {
                    "name": "whitelist",
                    "description": "When provided, replaces the resourceUrlWhitelist with the value\n    provided.  This must be an array or null.  A snapshot of this array is used so further\n    changes to the array are ignored.\n\n    Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items\n    allowed in this array.\n\n    Note: **an empty whitelist array will block all URLs**!",
                    "type": "Array="
                }
            ],
            "return": {
                "description": "the currently set whitelist array.\n\nThe **default value** when no whitelist has been explicitly set is `['self']` allowing only\nsame origin resource requests.",
                "type": "Array"
            },
            "description": "Sets/Gets the whitelist of trusted resource URLs.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15105,
            "ngdoc": "method",
            "name": "$sceDelegateProvider#resourceUrlBlacklist",
            "kind": "function",
            "params": [
                {
                    "name": "blacklist",
                    "description": "When provided, replaces the resourceUrlBlacklist with the value\n    provided.  This must be an array or null.  A snapshot of this array is used so further\n    changes to the array are ignored.\n\n    Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items\n    allowed in this array.\n\n    The typical usage for the blacklist is to **block\n    [open redirects](http://cwe.mitre.org/data/definitions/601.html)** served by your domain as\n    these would otherwise be trusted but actually return content from the redirected domain.\n\n    Finally, **the blacklist overrides the whitelist** and has the final say.",
                    "type": "Array="
                }
            ],
            "return": {
                "description": "the currently set blacklist array.\n\nThe **default value** when no whitelist has been explicitly set is the empty array (i.e. there\nis no blacklist.)",
                "type": "Array"
            },
            "description": "Sets/Gets the blacklist of trusted resource URLs.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15208,
            "ngdoc": "method",
            "name": "$sceDelegate#trustAs",
            "description": "Returns an object that is trusted by angular for use in specified strict\ncontextual escaping contexts (such as ng-bind-html, ng-include, any src\nattribute interpolation, any dom event binding attribute interpolation\nsuch as for onclick,  etc.) that uses the provided value.\nSee {@link ng.$sce $sce} for enabling strict contextual escaping.",
            "params": [
                {
                    "name": "type",
                    "description": "The kind of context in which this value is safe for use.  e.g. url,\n  resourceUrl, html, js and css.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value that that should be considered trusted/safe.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "A value that can be used to stand in for the provided `value` in places\nwhere Angular expects a $sce.trustAs() return value.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15245,
            "ngdoc": "method",
            "name": "$sceDelegate#valueOf",
            "description": "If the passed parameter had been returned by a prior call to {@link ng.$sceDelegate#trustAs\n`$sceDelegate.trustAs`}, returns the value that had been passed to {@link\nng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.\n\nIf the passed parameter is not a value that had been returned by {@link\nng.$sceDelegate#trustAs `$sceDelegate.trustAs`}, returns it as-is.",
            "params": [
                {
                    "name": "value",
                    "description": "The result of a prior {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}\n     call or anything else.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The `value` that was originally provided to {@link ng.$sceDelegate#trustAs\n    `$sceDelegate.trustAs`} if `value` is the result of such a call.  Otherwise, returns\n    `value` unchanged.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15271,
            "ngdoc": "method",
            "name": "$sceDelegate#getTrusted",
            "description": "Takes the result of a {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`} call and\nreturns the originally supplied value if the queried context type is a supertype of the\ncreated type.  If this condition isn't satisfied, throws an exception.",
            "params": [
                {
                    "name": "type",
                    "description": "The kind of context in which this value is to be used.",
                    "type": "String"
                },
                {
                    "name": "maybeTrusted",
                    "description": "The result of a prior {@link ng.$sceDelegate#trustAs\n    `$sceDelegate.trustAs`} call.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The value the was originally provided to {@link ng.$sceDelegate#trustAs\n    `$sceDelegate.trustAs`} if valid in this context.  Otherwise, throws an exception.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15318,
            "ngdoc": "provider",
            "name": "$sceProvider",
            "description": "The $sceProvider provider allows developers to configure the {@link ng.$sce $sce} service.\n-   enable/disable Strict Contextual Escaping (SCE) in a module\n-   override the default implementation with a custom delegate\n\nRead more about {@link ng.$sce Strict Contextual Escaping (SCE)}.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15332,
            "ngdoc": "service",
            "name": "$sce",
            "kind": "function",
            "description": "`$sce` is a service that provides Strict Contextual Escaping services to AngularJS.\n\n# Strict Contextual Escaping\n\nStrict Contextual Escaping (SCE) is a mode in which AngularJS requires bindings in certain\ncontexts to result in a value that is marked as safe to use for that context.  One example of\nsuch a context is binding arbitrary html controlled by the user via `ng-bind-html`.  We refer\nto these contexts as privileged or SCE contexts.\n\nAs of version 1.2, Angular ships with SCE enabled by default.\n\nNote:  When enabled (the default), IE<11 in quirks mode is not supported.  In this mode, IE<11 allow\none to execute arbitrary javascript by the use of the expression() syntax.  Refer\n<http://blogs.msdn.com/b/ie/archive/2008/10/16/ending-expressions.aspx> to learn more about them.\nYou can ensure your document is in standards mode and not quirks mode by adding `<!doctype html>`\nto the top of your HTML document.\n\nSCE assists in writing code in way that (a) is secure by default and (b) makes auditing for\nsecurity vulnerabilities such as XSS, clickjacking, etc. a lot easier.\n\nHere's an example of a binding in a privileged context:\n\n```\n<input ng-model=\"userHtml\">\n<div ng-bind-html=\"userHtml\"></div>\n```\n\nNotice that `ng-bind-html` is bound to `userHtml` controlled by the user.  With SCE\ndisabled, this application allows the user to render arbitrary HTML into the DIV.\nIn a more realistic example, one may be rendering user comments, blog articles, etc. via\nbindings.  (HTML is just one example of a context where rendering user controlled input creates\nsecurity vulnerabilities.)\n\nFor the case of HTML, you might use a library, either on the client side, or on the server side,\nto sanitize unsafe HTML before binding to the value and rendering it in the document.\n\nHow would you ensure that every place that used these types of bindings was bound to a value that\nwas sanitized by your library (or returned as safe for rendering by your server?)  How can you\nensure that you didn't accidentally delete the line that sanitized the value, or renamed some\nproperties/fields and forgot to update the binding to the sanitized value?\n\nTo be secure by default, you want to ensure that any such bindings are disallowed unless you can\ndetermine that something explicitly says it's safe to use a value for binding in that\ncontext.  You can then audit your code (a simple grep would do) to ensure that this is only done\nfor those values that you can easily tell are safe - because they were received from your server,\nsanitized by your library, etc.  You can organize your codebase to help with this - perhaps\nallowing only the files in a specific directory to do this.  Ensuring that the internal API\nexposed by that code doesn't markup arbitrary values as safe then becomes a more manageable task.\n\nIn the case of AngularJS' SCE service, one uses {@link ng.$sce#trustAs $sce.trustAs}\n(and shorthand methods such as {@link ng.$sce#trustAsHtml $sce.trustAsHtml}, etc.) to\nobtain values that will be accepted by SCE / privileged contexts.\n\n\n## How does it work?\n\nIn privileged contexts, directives and code will bind to the result of {@link ng.$sce#getTrusted\n$sce.getTrusted(context, value)} rather than to the value directly.  Directives use {@link\nng.$sce#parseAs $sce.parseAs} rather than `$parse` to watch attribute bindings, which performs the\n{@link ng.$sce#getTrusted $sce.getTrusted} behind the scenes on non-constant literals.\n\nAs an example, {@link ng.directive:ngBindHtml ngBindHtml} uses {@link\nng.$sce#parseAsHtml $sce.parseAsHtml(binding expression)}.  Here's the actual code (slightly\nsimplified):\n\n```\nvar ngBindHtmlDirective = ['$sce', function($sce) {\n  return function(scope, element, attr) {\n    scope.$watch($sce.parseAsHtml(attr.ngBindHtml), function(value) {\n      element.html(value || '');\n    });\n  };\n}];\n```\n\n## Impact on loading templates\n\nThis applies both to the {@link ng.directive:ngInclude `ng-include`} directive as well as\n`templateUrl`'s specified by {@link guide/directive directives}.\n\nBy default, Angular only loads templates from the same domain and protocol as the application\ndocument.  This is done by calling {@link ng.$sce#getTrustedResourceUrl\n$sce.getTrustedResourceUrl} on the template URL.  To load templates from other domains and/or\nprotocols, you may either either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist\nthem} or {@link ng.$sce#trustAsResourceUrl wrap it} into a trusted value.\n\n*Please note*:\nThe browser's\n[Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\nand [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\npolicy apply in addition to this and may further restrict whether the template is successfully\nloaded.  This means that without the right CORS policy, loading templates from a different domain\nwon't work on all browsers.  Also, loading templates from `file://` URL does not work on some\nbrowsers.\n\n## This feels like too much overhead\n\nIt's important to remember that SCE only applies to interpolation expressions.\n\nIf your expressions are constant literals, they're automatically trusted and you don't need to\ncall `$sce.trustAs` on them (remember to include the `ngSanitize` module) (e.g.\n`<div ng-bind-html=\"'<b>implicitly trusted</b>'\"></div>`) just works.\n\nAdditionally, `a[href]` and `img[src]` automatically sanitize their URLs and do not pass them\nthrough {@link ng.$sce#getTrusted $sce.getTrusted}.  SCE doesn't play a role here.\n\nThe included {@link ng.$sceDelegate $sceDelegate} comes with sane defaults to allow you to load\ntemplates in `ng-include` from your application's domain without having to even know about SCE.\nIt blocks loading templates from other domains or loading templates over http from an https\nserved document.  You can change these by setting your own custom {@link\nng.$sceDelegateProvider#resourceUrlWhitelist whitelists} and {@link\nng.$sceDelegateProvider#resourceUrlBlacklist blacklists} for matching such URLs.\n\nThis significantly reduces the overhead.  It is far easier to pay the small overhead and have an\napplication that's secure and can be audited to verify that with much more ease than bolting\nsecurity onto an application later.\n\n<a name=\"contexts\"></a>\n## What trusted context types are supported?\n\n| Context             | Notes          |\n|---------------------|----------------|\n| `$sce.HTML`         | For HTML that's safe to source into the application.  The {@link ng.directive:ngBindHtml ngBindHtml} directive uses this context for bindings. If an unsafe value is encountered and the {@link ngSanitize $sanitize} module is present this will sanitize the value instead of throwing an error. |\n| `$sce.CSS`          | For CSS that's safe to source into the application.  Currently unused.  Feel free to use it in your own directives. |\n| `$sce.URL`          | For URLs that are safe to follow as links.  Currently unused (`<a href=` and `<img src=` sanitize their urls and don't constitute an SCE context. |\n| `$sce.RESOURCE_URL` | For URLs that are not only safe to follow as links, but whose contents are also safe to include in your application.  Examples include `ng-include`, `src` / `ngSrc` bindings for tags other than `IMG` (e.g. `IFRAME`, `OBJECT`, etc.)  <br><br>Note that `$sce.RESOURCE_URL` makes a stronger statement about the URL than `$sce.URL` does and therefore contexts requiring values trusted for `$sce.RESOURCE_URL` can be used anywhere that values trusted for `$sce.URL` are required. |\n| `$sce.JS`           | For JavaScript that is safe to execute in your application's context.  Currently unused.  Feel free to use it in your own directives. |\n\n## Format of items in {@link ng.$sceDelegateProvider#resourceUrlWhitelist resourceUrlWhitelist}/{@link ng.$sceDelegateProvider#resourceUrlBlacklist Blacklist} <a name=\"resourceUrlPatternItem\"></a>\n\n Each element in these arrays must be one of the following:\n\n - **'self'**\n   - The special **string**, `'self'`, can be used to match against all URLs of the **same\n     domain** as the application document using the **same protocol**.\n - **String** (except the special value `'self'`)\n   - The string is matched against the full *normalized / absolute URL* of the resource\n     being tested (substring matches are not good enough.)\n   - There are exactly **two wildcard sequences** - `*` and `**`.  All other characters\n     match themselves.\n   - `*`: matches zero or more occurrences of any character other than one of the following 6\n     characters: '`:`', '`/`', '`.`', '`?`', '`&`' and ';'.  It's a useful wildcard for use\n     in a whitelist.\n   - `**`: matches zero or more occurrences of *any* character.  As such, it's not\n     not appropriate to use in for a scheme, domain, etc. as it would match too much.  (e.g.\n     http://**.example.com/ would match http://evil.com/?ignore=.example.com/ and that might\n     not have been the intention.)  Its usage at the very end of the path is ok.  (e.g.\n     http://foo.example.com/templates/**).\n - **RegExp** (*see caveat below*)\n   - *Caveat*:  While regular expressions are powerful and offer great flexibility,  their syntax\n     (and all the inevitable escaping) makes them *harder to maintain*.  It's easy to\n     accidentally introduce a bug when one updates a complex expression (imho, all regexes should\n     have good test coverage.).  For instance, the use of `.` in the regex is correct only in a\n     small number of cases.  A `.` character in the regex used when matching the scheme or a\n     subdomain could be matched against a `:` or literal `.` that was likely not intended.   It\n     is highly recommended to use the string patterns and only fall back to regular expressions\n     if they as a last resort.\n   - The regular expression must be an instance of RegExp (i.e. not a string.)  It is\n     matched against the **entire** *normalized / absolute URL* of the resource being tested\n     (even when the RegExp did not have the `^` and `$` codes.)  In addition, any flags\n     present on the RegExp (such as multiline, global, ignoreCase) are ignored.\n   - If you are generating your JavaScript from some other templating engine (not\n     recommended, e.g. in issue [#4006](https://github.com/angular/angular.js/issues/4006)),\n     remember to escape your regular expression (and be aware that you might need more than\n     one level of escaping depending on your templating engine and the way you interpolated\n     the value.)  Do make use of your platform's escaping mechanism as it might be good\n     enough before coding your own.  e.g. Ruby has\n     [Regexp.escape(str)](http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape)\n     and Python has [re.escape](http://docs.python.org/library/re.html#re.escape).\n     Javascript lacks a similar built in function for escaping.  Take a look at Google\n     Closure library's [goog.string.regExpEscape(s)](\n     http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962).\n\nRefer {@link ng.$sceDelegateProvider $sceDelegateProvider} for an example.\n\n## Show me an example using SCE.\n\n<example module=\"mySceApp\" deps=\"angular-sanitize.js\">\n<file name=\"index.html\">\n  <div ng-controller=\"AppController as myCtrl\">\n    <i ng-bind-html=\"myCtrl.explicitlyTrustedHtml\" id=\"explicitlyTrustedHtml\"></i><br><br>\n    <b>User comments</b><br>\n    By default, HTML that isn't explicitly trusted (e.g. Alice's comment) is sanitized when\n    $sanitize is available.  If $sanitize isn't available, this results in an error instead of an\n    exploit.\n    <div class=\"well\">\n      <div ng-repeat=\"userComment in myCtrl.userComments\">\n        <b>{{userComment.name}}</b>:\n        <span ng-bind-html=\"userComment.htmlComment\" class=\"htmlComment\"></span>\n        <br>\n      </div>\n    </div>\n  </div>\n</file>\n\n<file name=\"script.js\">\n  angular.module('mySceApp', ['ngSanitize'])\n    .controller('AppController', ['$http', '$templateCache', '$sce',\n      function($http, $templateCache, $sce) {\n        var self = this;\n        $http.get(\"test_data.json\", {cache: $templateCache}).success(function(userComments) {\n          self.userComments = userComments;\n        });\n        self.explicitlyTrustedHtml = $sce.trustAsHtml(\n            '<span onmouseover=\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\n            'sanitization.&quot;\">Hover over this text.</span>');\n      }]);\n</file>\n\n<file name=\"test_data.json\">\n[\n  { \"name\": \"Alice\",\n    \"htmlComment\":\n        \"<span onmouseover='this.textContent=\\\"PWN3D!\\\"'>Is <i>anyone</i> reading this?</span>\"\n  },\n  { \"name\": \"Bob\",\n    \"htmlComment\": \"<i>Yes!</i>  Am I the only other one?\"\n  }\n]\n</file>\n\n<file name=\"protractor.js\" type=\"protractor\">\n  describe('SCE doc demo', function() {\n    it('should sanitize untrusted values', function() {\n      expect(element.all(by.css('.htmlComment')).first().getInnerHtml())\n          .toBe('<span>Is <i>anyone</i> reading this?</span>');\n    });\n\n    it('should NOT sanitize explicitly trusted values', function() {\n      expect(element(by.id('explicitlyTrustedHtml')).getInnerHtml()).toBe(\n          '<span onmouseover=\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\n          'sanitization.&quot;\">Hover over this text.</span>');\n    });\n  });\n</file>\n</example>\n\n\n\n## Can I disable SCE completely?\n\nYes, you can.  However, this is strongly discouraged.  SCE gives you a lot of security benefits\nfor little coding overhead.  It will be much harder to take an SCE disabled application and\neither secure it on your own or enable SCE at a later stage.  It might make sense to disable SCE\nfor cases where you have a lot of existing code that was written before SCE was introduced and\nyou're migrating them a module at a time.\n\nThat said, here's how you can completely disable SCE:\n\n```\nangular.module('myAppWithSceDisabledmyApp', []).config(function($sceProvider) {\n  // Completely disable SCE.  For demonstration purposes only!\n  // Do not use in new projects.\n  $sceProvider.enabled(false);\n});\n```",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15602,
            "ngdoc": "method",
            "name": "$sceProvider#enabled",
            "kind": "function",
            "params": [
                {
                    "name": "value",
                    "description": "If provided, then enables/disables SCE.",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "true if SCE is enabled, false otherwise.",
                "type": "Boolean"
            },
            "description": "Enables/disables SCE and returns the current value.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15680,
            "ngdoc": "method",
            "name": "$sce#isEnabled",
            "kind": "function",
            "return": {
                "description": "true if SCE is enabled, false otherwise.  If you want to set the value, you\nhave to do it at module config time on {@link ng.$sceProvider $sceProvider}.",
                "type": "Boolean"
            },
            "description": "Returns a boolean indicating if SCE is enabled.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15703,
            "ngdoc": "method",
            "name": "$sce#parseAs",
            "description": "Converts Angular {@link guide/expression expression} into a function.  This is like {@link\nng.$parse $parse} and is identical when the expression is a literal constant.  Otherwise, it\nwraps the expression in a call to {@link ng.$sce#getTrusted $sce.getTrusted(*type*,\n*result*)}",
            "params": [
                {
                    "name": "type",
                    "description": "The kind of SCE context in which this result will be used.",
                    "type": "String"
                },
                {
                    "name": "expression",
                    "description": "String expression to compile.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a function which represents the compiled expression:\n\n   * `context` – `{object}` – an object against which any expressions embedded in the strings\n     are evaluated against (typically a scope object).\n   * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     `context`.",
                "type": "Function(context, locals)"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15733,
            "ngdoc": "method",
            "name": "$sce#trustAs",
            "description": "Delegates to {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.  As such,\nreturns an object that is trusted by angular for use in specified strict contextual\nescaping contexts (such as ng-bind-html, ng-include, any src attribute\ninterpolation, any dom event binding attribute interpolation such as for onclick,  etc.)\nthat uses the provided value.  See * {@link ng.$sce $sce} for enabling strict contextual\nescaping.",
            "params": [
                {
                    "name": "type",
                    "description": "The kind of context in which this value is safe for use.  e.g. url,\n  resource_url, html, js and css.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value that that should be considered trusted/safe.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "A value that can be used to stand in for the provided `value` in places\nwhere Angular expects a $sce.trustAs() return value.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15752,
            "ngdoc": "method",
            "name": "$sce#trustAsHtml",
            "description": "Shorthand method.  `$sce.trustAsHtml(value)` →\n    {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.HTML, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to trustAs.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "An object that can be passed to {@link ng.$sce#getTrustedHtml\n    $sce.getTrustedHtml(value)} to obtain the original value.  (privileged directives\n    only accept expressions that are either literal constants or are the\n    return value of {@link ng.$sce#trustAs $sce.trustAs}.)",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15767,
            "ngdoc": "method",
            "name": "$sce#trustAsUrl",
            "description": "Shorthand method.  `$sce.trustAsUrl(value)` →\n    {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.URL, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to trustAs.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "An object that can be passed to {@link ng.$sce#getTrustedUrl\n    $sce.getTrustedUrl(value)} to obtain the original value.  (privileged directives\n    only accept expressions that are either literal constants or are the\n    return value of {@link ng.$sce#trustAs $sce.trustAs}.)",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15782,
            "ngdoc": "method",
            "name": "$sce#trustAsResourceUrl",
            "description": "Shorthand method.  `$sce.trustAsResourceUrl(value)` →\n    {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.RESOURCE_URL, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to trustAs.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "An object that can be passed to {@link ng.$sce#getTrustedResourceUrl\n    $sce.getTrustedResourceUrl(value)} to obtain the original value.  (privileged directives\n    only accept expressions that are either literal constants or are the return\n    value of {@link ng.$sce#trustAs $sce.trustAs}.)",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15797,
            "ngdoc": "method",
            "name": "$sce#trustAsJs",
            "description": "Shorthand method.  `$sce.trustAsJs(value)` →\n    {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.JS, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to trustAs.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "An object that can be passed to {@link ng.$sce#getTrustedJs\n    $sce.getTrustedJs(value)} to obtain the original value.  (privileged directives\n    only accept expressions that are either literal constants or are the\n    return value of {@link ng.$sce#trustAs $sce.trustAs}.)",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15812,
            "ngdoc": "method",
            "name": "$sce#getTrusted",
            "description": "Delegates to {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted`}.  As such,\ntakes the result of a {@link ng.$sce#trustAs `$sce.trustAs`}() call and returns the\noriginally supplied value if the queried context type is a supertype of the created type.\nIf this condition isn't satisfied, throws an exception.",
            "params": [
                {
                    "name": "type",
                    "description": "The kind of context in which this value is to be used.",
                    "type": "String"
                },
                {
                    "name": "maybeTrusted",
                    "description": "The result of a prior {@link ng.$sce#trustAs `$sce.trustAs`}\n                        call.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The value the was originally provided to\n             {@link ng.$sce#trustAs `$sce.trustAs`} if valid in this context.\n             Otherwise, throws an exception.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15830,
            "ngdoc": "method",
            "name": "$sce#getTrustedHtml",
            "description": "Shorthand method.  `$sce.getTrustedHtml(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.HTML, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to pass to `$sce.getTrusted`.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The return value of `$sce.getTrusted($sce.HTML, value)`",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15842,
            "ngdoc": "method",
            "name": "$sce#getTrustedCss",
            "description": "Shorthand method.  `$sce.getTrustedCss(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.CSS, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to pass to `$sce.getTrusted`.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The return value of `$sce.getTrusted($sce.CSS, value)`",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15854,
            "ngdoc": "method",
            "name": "$sce#getTrustedUrl",
            "description": "Shorthand method.  `$sce.getTrustedUrl(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.URL, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to pass to `$sce.getTrusted`.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The return value of `$sce.getTrusted($sce.URL, value)`",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15866,
            "ngdoc": "method",
            "name": "$sce#getTrustedResourceUrl",
            "description": "Shorthand method.  `$sce.getTrustedResourceUrl(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.RESOURCE_URL, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to pass to `$sceDelegate.getTrusted`.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The return value of `$sce.getTrusted($sce.RESOURCE_URL, value)`",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15878,
            "ngdoc": "method",
            "name": "$sce#getTrustedJs",
            "description": "Shorthand method.  `$sce.getTrustedJs(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.JS, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to pass to `$sce.getTrusted`.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The return value of `$sce.getTrusted($sce.JS, value)`",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15890,
            "ngdoc": "method",
            "name": "$sce#parseAsHtml",
            "description": "Shorthand method.  `$sce.parseAsHtml(expression string)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.HTML, value)`}",
            "params": [
                {
                    "name": "expression",
                    "description": "String expression to compile.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a function which represents the compiled expression:\n\n   * `context` – `{object}` – an object against which any expressions embedded in the strings\n     are evaluated against (typically a scope object).\n   * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     `context`.",
                "type": "Function(context, locals)"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15907,
            "ngdoc": "method",
            "name": "$sce#parseAsCss",
            "description": "Shorthand method.  `$sce.parseAsCss(value)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.CSS, value)`}",
            "params": [
                {
                    "name": "expression",
                    "description": "String expression to compile.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a function which represents the compiled expression:\n\n   * `context` – `{object}` – an object against which any expressions embedded in the strings\n     are evaluated against (typically a scope object).\n   * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     `context`.",
                "type": "Function(context, locals)"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15924,
            "ngdoc": "method",
            "name": "$sce#parseAsUrl",
            "description": "Shorthand method.  `$sce.parseAsUrl(value)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.URL, value)`}",
            "params": [
                {
                    "name": "expression",
                    "description": "String expression to compile.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a function which represents the compiled expression:\n\n   * `context` – `{object}` – an object against which any expressions embedded in the strings\n     are evaluated against (typically a scope object).\n   * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     `context`.",
                "type": "Function(context, locals)"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15941,
            "ngdoc": "method",
            "name": "$sce#parseAsResourceUrl",
            "description": "Shorthand method.  `$sce.parseAsResourceUrl(value)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.RESOURCE_URL, value)`}",
            "params": [
                {
                    "name": "expression",
                    "description": "String expression to compile.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a function which represents the compiled expression:\n\n   * `context` – `{object}` – an object against which any expressions embedded in the strings\n     are evaluated against (typically a scope object).\n   * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     `context`.",
                "type": "Function(context, locals)"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15958,
            "ngdoc": "method",
            "name": "$sce#parseAsJs",
            "description": "Shorthand method.  `$sce.parseAsJs(value)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.JS, value)`}",
            "params": [
                {
                    "name": "expression",
                    "description": "String expression to compile.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a function which represents the compiled expression:\n\n   * `context` – `{object}` – an object against which any expressions embedded in the strings\n     are evaluated against (typically a scope object).\n   * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     `context`.",
                "type": "Function(context, locals)"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 15997,
            "description": "This is very simple implementation of testing browser's features.",
            "name": "{boolean} animations Does the browser support CSS animation events ?",
            "requires": [
                "$window",
                "$document"
            ],
            "itemtype": "property",
            "type": "Boolean",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16086,
            "ngdoc": "service",
            "name": "totalPendingRequests total amount of pending template requests being downloaded.",
            "description": "The `$templateRequest` service downloads the provided template using `$http` and, upon success,\nstores the contents inside of `$templateCache`. If the HTTP request fails or the response data\nof the HTTP request is empty, a `$compile` error will be thrown (the exception can be thwarted\nby setting the 2nd parameter of the function to true).",
            "return": {
                "description": "the HTTP Promise for the given.",
                "type": "Promise"
            },
            "itemtype": "property",
            "type": "Number",
            "class": "Gruntfile",
            "module": "ng",
            "subprops": [
                {
                    "name": "tpl",
                    "description": "The HTTP request template URL",
                    "type": "String"
                },
                {
                    "name": "ignoreRequestError",
                    "description": "Whether or not to ignore the exception when the request fails or the template is empty",
                    "type": "Boolean="
                }
            ]
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16149,
            "name": "$testability",
            "description": "The private $$testability service provides a collection of methods for use when debugging\nor by automated test and debugging tools.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16158,
            "name": "$$testability#findBindings",
            "description": "Returns an array of elements that are bound (via ng-bind or {{}})\nto expressions matching the input.",
            "params": [
                {
                    "name": "element",
                    "description": "The element root to search from.",
                    "type": "Element"
                },
                {
                    "name": "expression",
                    "description": "The binding expression to match.",
                    "type": "String"
                },
                {
                    "name": "opt_exactMatch",
                    "description": "If true, only returns exact matches\n    for the expression. Filters and whitespace are ignored.",
                    "type": "Boolean"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16193,
            "name": "$$testability#findModels",
            "description": "Returns an array of elements that are two-way found via ng-model to\nexpressions matching the input.",
            "params": [
                {
                    "name": "element",
                    "description": "The element root to search from.",
                    "type": "Element"
                },
                {
                    "name": "expression",
                    "description": "The model expression to match.",
                    "type": "String"
                },
                {
                    "name": "opt_exactMatch",
                    "description": "If true, only returns exact matches\n    for the expression.",
                    "type": "Boolean"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16217,
            "name": "$$testability#getLocation",
            "description": "Shortcut for getting the location in a browser agnostic way. Returns\n    the path, search, and hash. (e.g. /path?a=b#hash)",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16228,
            "name": "$$testability#setLocation",
            "description": "Shortcut for navigating to a location without doing a full page reload.",
            "params": [
                {
                    "name": "url",
                    "description": "The location url (path, search and hash,\n    e.g. /path?a=b#hash) to go to.",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16244,
            "name": "$$testability#whenStable",
            "description": "Calls the callback when $timeout and $http requests are completed.",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16266,
            "ngdoc": "service",
            "name": "$timeout",
            "description": "Angular's wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch\nblock and delegates any exceptions to\n{@link ng.$exceptionHandler $exceptionHandler} service.\n\nThe return value of registering a timeout function is a promise, which will be resolved when\nthe timeout is reached and the timeout function is executed.\n\nTo cancel a timeout request, call `$timeout.cancel(promise)`.\n\nIn tests you can use {@link ngMock.$timeout `$timeout.flush()`} to\nsynchronously flush the queue of deferred functions.",
            "params": [
                {
                    "name": "fn",
                    "description": "A function, whose execution should be delayed.",
                    "type": "Function()"
                },
                {
                    "name": "delay",
                    "description": "Delay in milliseconds.",
                    "type": "Number=",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "invokeApply",
                    "description": "If set to `false` skips model dirty checking, otherwise\n  will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.",
                    "type": "Boolean=",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "Promise that will be resolved when the timeout is reached. The value this\n  promise will be resolved with is the return value of the `fn` function.",
                "type": "Promise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16318,
            "ngdoc": "method",
            "name": "$timeout#cancel",
            "description": "Cancels a task associated with the `promise`. As a result of this, the promise will be\nresolved with a rejection.",
            "params": [
                {
                    "name": "promise",
                    "description": "Promise returned by the `$timeout` function.",
                    "type": "Promise="
                }
            ],
            "return": {
                "description": "Returns `true` if the task hasn't executed yet and was successfully\n  canceled.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16354,
            "description": "Normalizes and parses a URL.",
            "kind": "function",
            "params": [
                {
                    "name": "url",
                    "description": "The URL to be parsed.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the normalized URL as a dictionary.\n  | member name   | Description    |\n   |---------------|----------------|\n   | href          | A normalized version of the provided URL if it was not an absolute URL |\n   | protocol      | The protocol including the trailing colon                              |\n   | host          | The host and port (if the port is non-default) of the normalizedUrl    |\n   | search        | The search params, minus the question mark                             |\n   | hash          | The hash string, minus the hash symbol\n   | hostname      | The hostname\n   | port          | The port, without \":\"\n   | pathname      | The pathname, beginning with \"/\"",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16433,
            "description": "Parse a request URL and determine whether this is a same-origin request as the application document.",
            "params": [
                {
                    "name": "requestUrl",
                    "description": "The url of the request as a string that will be resolved\nor a parsed URL object.",
                    "type": "String|object"
                }
            ],
            "return": {
                "description": "Whether the request is for the same origin as the application document.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16446,
            "ngdoc": "service",
            "name": "$window",
            "description": "A reference to the browser's `window` object. While `window`\nis globally available in JavaScript, it causes testability problems, because\nit is a global variable. In angular we always refer to it through the\n`$window` service, so it may be overridden, removed or mocked for testing.\n\nExpressions, like the one defined for the `ngClick` directive in the example\nbelow, are evaluated with respect to the current scope.  Therefore, there is\nno risk of inadvertently coding in a dependency on a global value in such an\nexpression.",
            "example": [
                "\n  <example module=\"windowExample\">\n    <file name=\"index.html\">\n      <script>\n        angular.module('windowExample', [])\n          .controller('ExampleController', ['$scope', '$window', function($scope, $window) {\n            $scope.greeting = 'Hello, World!';\n            $scope.doGreeting = function(greeting) {\n              $window.alert(greeting);\n            };\n          }]);\n      </script>\n      <div ng-controller=\"ExampleController\">\n        <input type=\"text\" ng-model=\"greeting\" />\n        <button ng-click=\"doGreeting(greeting)\">ALERT</button>\n      </div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n     it('should display the greeting in the input box', function() {\n      element(by.model('greeting')).sendKeys('Hello, E2E Tests');\n      // If we click the button it will block the test runner\n      // element(':button').click();\n     });\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16502,
            "ngdoc": "provider",
            "name": "$filterProvider",
            "description": "Filters are just functions which transform input to an output. However filters need to be\nDependency Injected. To achieve this a filter definition consists of a factory function which is\nannotated with dependencies and is responsible for creating a filter function.\n\n```js\n  // Filter registration\n  function MyModule($provide, $filterProvider) {\n    // create a service to demonstrate injection (not always needed)\n    $provide.value('greet', function(name){\n      return 'Hello ' + name + '!';\n    });\n\n    // register a filter factory which uses the\n    // greet service to demonstrate DI.\n    $filterProvider.register('greet', function(greet){\n      // return the filter function which uses the greet service\n      // to generate salutation\n      return function(text) {\n        // filters need to be forgiving so check input validity\n        return text && greet(text) || text;\n      };\n    });\n  }\n```\n\nThe filter function is registered with the `$injector` under the filter name suffix with\n`Filter`.\n\n```js\n  it('should be the same instance', inject(\n    function($filterProvider) {\n      $filterProvider.register('reverse', function(){\n        return ...;\n      });\n    },\n    function($filter, reverseFilter) {\n      expect($filter('reverse')).toBe(reverseFilter);\n    });\n```\n\n\nFor more information about how angular filters work, and how to create your own filters, see\n{@link guide/filter Filters} in the Angular Developer Guide.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16552,
            "ngdoc": "service",
            "name": "$filter",
            "kind": "function",
            "description": "Filters are used for formatting data displayed to the user.\n\nThe general syntax in templates is as follows:\n\n        {{ expression [| filter_name[:parameter_value] ... ] }}",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the filter function to retrieve",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the filter function",
                "type": "Function"
            },
            "example": [
                "\n  <example name=\"$filter\" module=\"filterExample\">\n    <file name=\"index.html\">\n      <div ng-controller=\"MainCtrl\">\n       <h3>{{ originalText }}</h3>\n       <h3>{{ filteredText }}</h3>\n      </div>\n    </file>\n\n    <file name=\"script.js\">\n     angular.module('filterExample', [])\n     .controller('MainCtrl', function($scope, $filter) {\n       $scope.originalText = 'hello';\n       $scope.filteredText = $filter('uppercase')($scope.originalText);\n     });\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16587,
            "ngdoc": "method",
            "name": "$filterProvider#register",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the filter function, or an object map of filters where\n   the keys are the filter names and the values are the filter factories.",
                    "type": "String|Object"
                }
            ],
            "return": {
                "description": "Registered filter instance, or if a map of filters was provided then a map\n   of the registered filter instances.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16639,
            "ngdoc": "filter",
            "name": "filter",
            "kind": "function",
            "description": "Selects a subset of items from `array` and returns it as a new array.",
            "params": [
                {
                    "name": "array",
                    "description": "The source array.",
                    "type": "Array"
                },
                {
                    "name": "expression",
                    "description": "The predicate to be used for selecting items from\n  `array`.\n\n  Can be one of:\n\n  - `string`: The string is used for matching against the contents of the `array`. All strings or\n    objects with string properties in `array` that match this string will be returned. This also\n    applies to nested object properties.\n    The predicate can be negated by prefixing the string with `!`.\n\n  - `Object`: A pattern object can be used to filter specific properties on objects contained\n    by `array`. For example `{name:\"M\", phone:\"1\"}` predicate will return an array of items\n    which have property `name` containing \"M\" and property `phone` containing \"1\". A special\n    property name `$` can be used (as in `{$:\"text\"}`) to accept a match against any\n    property of the object or its nested object properties. That's equivalent to the simple\n    substring match with a `string` as described above. The predicate can be negated by prefixing\n    the string with `!`.\n    For example `{name: \"!M\"}` predicate will return an array of items which have property `name`\n    not containing \"M\".\n\n    Note that a named property will match properties on the same level only, while the special\n    `$` property will match properties on the same level or deeper. E.g. an array item like\n    `{name: {first: 'John', last: 'Doe'}}` will **not** be matched by `{name: 'John'}`, but\n    **will** be matched by `{$: 'John'}`.\n\n  - `function(value, index)`: A predicate function can be used to write arbitrary filters. The\n    function is called for each element of `array`. The final result is an array of those\n    elements that the predicate returned true for.",
                    "type": "String|Object|function()"
                },
                {
                    "name": "comparator",
                    "description": "Comparator which is used in\n    determining if the expected value (from the filter expression) and actual value (from\n    the object in the array) should be considered a match.\n\n  Can be one of:\n\n  - `function(actual, expected)`:\n    The function will be given the object value and the predicate value to compare and\n    should return true if both values should be considered equal.\n\n  - `true`: A shorthand for `function(actual, expected) { return angular.equals(actual, expected)}`.\n    This is essentially strict comparison of expected and actual.\n\n  - `false|undefined`: A short hand for a function which will look for a substring match in case\n    insensitive way.",
                    "type": "Function(actual, expected)|true|undefined"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n      <div ng-init=\"friends = [{name:'John', phone:'555-1276'},\n                               {name:'Mary', phone:'800-BIG-MARY'},\n                               {name:'Mike', phone:'555-4321'},\n                               {name:'Adam', phone:'555-5678'},\n                               {name:'Julie', phone:'555-8765'},\n                               {name:'Juliette', phone:'555-5678'}]\"></div>\n\n      Search: <input ng-model=\"searchText\">\n      <table id=\"searchTextResults\">\n        <tr><th>Name</th><th>Phone</th></tr>\n        <tr ng-repeat=\"friend in friends | filter:searchText\">\n          <td>{{friend.name}}</td>\n          <td>{{friend.phone}}</td>\n        </tr>\n      </table>\n      <hr>\n      Any: <input ng-model=\"search.$\"> <br>\n      Name only <input ng-model=\"search.name\"><br>\n      Phone only <input ng-model=\"search.phone\"><br>\n      Equality <input type=\"checkbox\" ng-model=\"strict\"><br>\n      <table id=\"searchObjResults\">\n        <tr><th>Name</th><th>Phone</th></tr>\n        <tr ng-repeat=\"friendObj in friends | filter:search:strict\">\n          <td>{{friendObj.name}}</td>\n          <td>{{friendObj.phone}}</td>\n        </tr>\n      </table>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var expectFriendNames = function(expectedNames, key) {\n        element.all(by.repeater(key + ' in friends').column(key + '.name')).then(function(arr) {\n          arr.forEach(function(wd, i) {\n            expect(wd.getText()).toMatch(expectedNames[i]);\n          });\n        });\n      };\n\n      it('should search across all fields when filtering with a string', function() {\n        var searchText = element(by.model('searchText'));\n        searchText.clear();\n        searchText.sendKeys('m');\n        expectFriendNames(['Mary', 'Mike', 'Adam'], 'friend');\n\n        searchText.clear();\n        searchText.sendKeys('76');\n        expectFriendNames(['John', 'Julie'], 'friend');\n      });\n\n      it('should search in specific fields when filtering with a predicate object', function() {\n        var searchAny = element(by.model('search.$'));\n        searchAny.clear();\n        searchAny.sendKeys('i');\n        expectFriendNames(['Mary', 'Mike', 'Julie', 'Juliette'], 'friendObj');\n      });\n      it('should use a equal comparison when comparator is true', function() {\n        var searchName = element(by.model('search.name'));\n        var strict = element(by.model('strict'));\n        searchName.clear();\n        searchName.sendKeys('Julie');\n        strict.click();\n        expectFriendNames(['Julie'], 'friendObj');\n      });\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16868,
            "ngdoc": "filter",
            "name": "currency",
            "kind": "function",
            "description": "Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default\nsymbol for current locale is used.",
            "params": [
                {
                    "name": "amount",
                    "description": "Input to filter.",
                    "type": "Number"
                },
                {
                    "name": "symbol",
                    "description": "Currency symbol or identifier to be displayed.",
                    "type": "String="
                },
                {
                    "name": "fractionSize",
                    "description": "Number of decimal places to round the amount to, defaults to default max fraction size for current locale",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "Formatted number.",
                "type": "String"
            },
            "example": [
                "\n  <example module=\"currencyExample\">\n    <file name=\"index.html\">\n      <script>\n        angular.module('currencyExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.amount = 1234.56;\n          }]);\n      </script>\n      <div ng-controller=\"ExampleController\">\n        <input type=\"number\" ng-model=\"amount\"> <br>\n        default currency symbol ($): <span id=\"currency-default\">{{amount | currency}}</span><br>\n        custom currency identifier (USD$): <span id=\"currency-custom\">{{amount | currency:\"USD$\"}}</span>\n        no fractions (0): <span id=\"currency-no-fractions\">{{amount | currency:\"USD$\":0}}</span>\n      </div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should init with 1234.56', function() {\n        expect(element(by.id('currency-default')).getText()).toBe('$1,234.56');\n        expect(element(by.id('currency-custom')).getText()).toBe('USD$1,234.56');\n        expect(element(by.id('currency-no-fractions')).getText()).toBe('USD$1,235');\n      });\n      it('should update', function() {\n        if (browser.params.browser == 'safari') {\n          // Safari does not understand the minus key. See\n          // https://github.com/angular/protractor/issues/481\n          return;\n        }\n        element(by.model('amount')).clear();\n        element(by.model('amount')).sendKeys('-1234');\n        expect(element(by.id('currency-default')).getText()).toBe('($1,234.00)');\n        expect(element(by.id('currency-custom')).getText()).toBe('(USD$1,234.00)');\n        expect(element(by.id('currency-no-fractions')).getText()).toBe('(USD$1,234)');\n      });\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 16940,
            "ngdoc": "filter",
            "name": "number",
            "kind": "function",
            "description": "Formats a number as text.\n\nIf the input is not a number an empty string is returned.",
            "params": [
                {
                    "name": "number",
                    "description": "Number to format.",
                    "type": "Number|string"
                },
                {
                    "name": "fractionSize",
                    "description": "Number of decimal places to round the number to.\nIf this is not provided then the fraction size is computed from the current locale's number\nformatting pattern. In the case of the default locale, it will be 3.",
                    "type": "(number|string)="
                }
            ],
            "return": {
                "description": "Number rounded to decimalPlaces and places a “,” after each third digit.",
                "type": "String"
            },
            "example": [
                "\n  <example module=\"numberFilterExample\">\n    <file name=\"index.html\">\n      <script>\n        angular.module('numberFilterExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.val = 1234.56789;\n          }]);\n      </script>\n      <div ng-controller=\"ExampleController\">\n        Enter number: <input ng-model='val'><br>\n        Default formatting: <span id='number-default'>{{val | number}}</span><br>\n        No fractions: <span>{{val | number:0}}</span><br>\n        Negative number: <span>{{-val | number:4}}</span>\n      </div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should format numbers', function() {\n        expect(element(by.id('number-default')).getText()).toBe('1,234.568');\n        expect(element(by.binding('val | number:0')).getText()).toBe('1,235');\n        expect(element(by.binding('-val | number:4')).getText()).toBe('-1,234.5679');\n      });\n\n      it('should update', function() {\n        element(by.model('val')).clear();\n        element(by.model('val')).sendKeys('3374.333');\n        expect(element(by.id('number-default')).getText()).toBe('3,374.333');\n        expect(element(by.binding('val | number:0')).getText()).toBe('3,374');\n        expect(element(by.binding('-val | number:4')).getText()).toBe('-3,374.3330');\n     });\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 17204,
            "ngdoc": "filter",
            "name": "date",
            "kind": "function",
            "description": "Formats `date` to a string based on the requested `format`.\n\n  `format` string can be composed of the following elements:\n\n  * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)\n  * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n  * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)\n  * `'MMMM'`: Month in year (January-December)\n  * `'MMM'`: Month in year (Jan-Dec)\n  * `'MM'`: Month in year, padded (01-12)\n  * `'M'`: Month in year (1-12)\n  * `'dd'`: Day in month, padded (01-31)\n  * `'d'`: Day in month (1-31)\n  * `'EEEE'`: Day in Week,(Sunday-Saturday)\n  * `'EEE'`: Day in Week, (Sun-Sat)\n  * `'HH'`: Hour in day, padded (00-23)\n  * `'H'`: Hour in day (0-23)\n  * `'hh'`: Hour in AM/PM, padded (01-12)\n  * `'h'`: Hour in AM/PM, (1-12)\n  * `'mm'`: Minute in hour, padded (00-59)\n  * `'m'`: Minute in hour (0-59)\n  * `'ss'`: Second in minute, padded (00-59)\n  * `'s'`: Second in minute (0-59)\n  * `'sss'`: Millisecond in second, padded (000-999)\n  * `'a'`: AM/PM marker\n  * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)\n  * `'ww'`: Week of year, padded (00-53). Week 01 is the week with the first Thursday of the year\n  * `'w'`: Week of year (0-53). Week 1 is the week with the first Thursday of the year\n  * `'G'`, `'GG'`, `'GGG'`: The abbreviated form of the era string (e.g. 'AD')\n  * `'GGGG'`: The long form of the era string (e.g. 'Anno Domini')\n\n  `format` string can also be one of the following predefined\n  {@link guide/i18n localizable formats}:\n\n  * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale\n    (e.g. Sep 3, 2010 12:05:08 PM)\n  * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 PM)\n  * `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` for en_US  locale\n    (e.g. Friday, September 3, 2010)\n  * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010)\n  * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)\n  * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)\n  * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 PM)\n  * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 PM)\n\n  `format` string can contain literal values. These need to be escaped by surrounding with single quotes (e.g.\n  `\"h 'in the morning'\"`). In order to output a single quote, escape it - i.e., two single quotes in a sequence\n  (e.g. `\"h 'o''clock'\"`).",
            "params": [
                {
                    "name": "date",
                    "description": "Date to format either as Date object, milliseconds (string or\n   number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.sssZ and its\n   shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is\n   specified in the string input, the time is considered to be in the local timezone.",
                    "type": "(Date|number|string)"
                },
                {
                    "name": "format",
                    "description": "Formatting rules (see Description). If not specified,\n   `mediumDate` is used.",
                    "type": "String="
                },
                {
                    "name": "timezone",
                    "description": "Timezone to be used for formatting. Right now, only `'UTC'` is supported.\n   If not specified, the timezone of the browser will be used.",
                    "type": "String="
                }
            ],
            "return": {
                "description": "Formatted string or the input if input is not recognized as date/millis.",
                "type": "String"
            },
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n      <span ng-non-bindable>{{1288323623006 | date:'medium'}}</span>:\n          <span>{{1288323623006 | date:'medium'}}</span><br>\n      <span ng-non-bindable>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span>:\n         <span>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span><br>\n      <span ng-non-bindable>{{1288323623006 | date:'MM/dd/yyyy @ h:mma'}}</span>:\n         <span>{{'1288323623006' | date:'MM/dd/yyyy @ h:mma'}}</span><br>\n      <span ng-non-bindable>{{1288323623006 | date:\"MM/dd/yyyy 'at' h:mma\"}}</span>:\n         <span>{{'1288323623006' | date:\"MM/dd/yyyy 'at' h:mma\"}}</span><br>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should format date', function() {\n        expect(element(by.binding(\"1288323623006 | date:'medium'\")).getText()).\n           toMatch(/Oct 2\\d, 2010 \\d{1,2}:\\d{2}:\\d{2} (AM|PM)/);\n        expect(element(by.binding(\"1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'\")).getText()).\n           toMatch(/2010\\-10\\-2\\d \\d{2}:\\d{2}:\\d{2} (\\-|\\+)?\\d{4}/);\n        expect(element(by.binding(\"'1288323623006' | date:'MM/dd/yyyy @ h:mma'\")).getText()).\n           toMatch(/10\\/2\\d\\/2010 @ \\d{1,2}:\\d{2}(AM|PM)/);\n        expect(element(by.binding(\"'1288323623006' | date:\\\"MM/dd/yyyy 'at' h:mma\\\"\")).getText()).\n           toMatch(/10\\/2\\d\\/2010 at \\d{1,2}:\\d{2}(AM|PM)/);\n      });\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 17371,
            "ngdoc": "filter",
            "name": "json",
            "kind": "function",
            "description": "Allows you to convert a JavaScript object into JSON string.\n\n  This filter is mostly useful for debugging. When using the double curly {{value}} notation\n  the binding is automatically converted to JSON.",
            "params": [
                {
                    "name": "object",
                    "description": "Any JavaScript object (including arrays and primitive types) to filter.",
                    "type": "*"
                },
                {
                    "name": "spacing",
                    "description": "The number of spaces to use per indentation, defaults to 2.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "JSON string.",
                "type": "String"
            },
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n      <pre id=\"default-spacing\">{{ {'name':'value'} | json }}</pre>\n      <pre id=\"custom-spacing\">{{ {'name':'value'} | json:4 }}</pre>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should jsonify filtered objects', function() {\n        expect(element(by.id('default-spacing')).getText()).toMatch(/\\{\\n  \"name\": ?\"value\"\\n}/);\n        expect(element(by.id('custom-spacing')).getText()).toMatch(/\\{\\n    \"name\": ?\"value\"\\n}/);\n      });\n    </file>\n  </example>\n"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 17412,
            "ngdoc": "filter",
            "name": "lowercase",
            "kind": "function",
            "description": "Converts string to lowercase.",
            "see": [
                "angular.lowercase"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 17423,
            "ngdoc": "filter",
            "name": "uppercase",
            "kind": "function",
            "description": "Converts string to uppercase.",
            "see": [
                "angular.uppercase"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 17433,
            "ngdoc": "filter",
            "name": "limitTo",
            "kind": "function",
            "description": "Creates a new array or string containing only a specified number of elements. The elements\nare taken from either the beginning or the end of the source array, string or number, as specified by\nthe value and sign (positive or negative) of `limit`. If a number is used as input, it is\nconverted to a string.",
            "params": [
                {
                    "name": "input",
                    "description": "Source array, string or number to be limited.",
                    "type": "Array|string|number"
                },
                {
                    "name": "limit",
                    "description": "The length of the returned array or string. If the `limit` number\n    is positive, `limit` number of items from the beginning of the source array/string are copied.\n    If the number is negative, `limit` number  of items from the end of the source array/string\n    are copied. The `limit` will be trimmed if it exceeds `array.length`",
                    "type": "String|number"
                }
            ],
            "return": {
                "description": "A new sub-array or substring of length `limit` or less if input array\n    had less than `limit` elements.",
                "type": "Array|string"
            },
            "example": [
                "\n  <example module=\"limitToExample\">\n    <file name=\"index.html\">\n      <script>\n        angular.module('limitToExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.numbers = [1,2,3,4,5,6,7,8,9];\n            $scope.letters = \"abcdefghi\";\n            $scope.longNumber = 2345432342;\n            $scope.numLimit = 3;\n            $scope.letterLimit = 3;\n            $scope.longNumberLimit = 3;\n          }]);\n      </script>\n      <div ng-controller=\"ExampleController\">\n        Limit {{numbers}} to: <input type=\"number\" step=\"1\" ng-model=\"numLimit\">\n        <p>Output numbers: {{ numbers | limitTo:numLimit }}</p>\n        Limit {{letters}} to: <input type=\"number\" step=\"1\" ng-model=\"letterLimit\">\n        <p>Output letters: {{ letters | limitTo:letterLimit }}</p>\n        Limit {{longNumber}} to: <input type=\"number\" step=\"1\" ng-model=\"longNumberLimit\">\n        <p>Output long number: {{ longNumber | limitTo:longNumberLimit }}</p>\n      </div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var numLimitInput = element(by.model('numLimit'));\n      var letterLimitInput = element(by.model('letterLimit'));\n      var longNumberLimitInput = element(by.model('longNumberLimit'));\n      var limitedNumbers = element(by.binding('numbers | limitTo:numLimit'));\n      var limitedLetters = element(by.binding('letters | limitTo:letterLimit'));\n      var limitedLongNumber = element(by.binding('longNumber | limitTo:longNumberLimit'));\n\n      it('should limit the number array to first three items', function() {\n        expect(numLimitInput.getAttribute('value')).toBe('3');\n        expect(letterLimitInput.getAttribute('value')).toBe('3');\n        expect(longNumberLimitInput.getAttribute('value')).toBe('3');\n        expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3]');\n        expect(limitedLetters.getText()).toEqual('Output letters: abc');\n        expect(limitedLongNumber.getText()).toEqual('Output long number: 234');\n      });\n\n      // There is a bug in safari and protractor that doesn't like the minus key\n      // it('should update the output when -3 is entered', function() {\n      //   numLimitInput.clear();\n      //   numLimitInput.sendKeys('-3');\n      //   letterLimitInput.clear();\n      //   letterLimitInput.sendKeys('-3');\n      //   longNumberLimitInput.clear();\n      //   longNumberLimitInput.sendKeys('-3');\n      //   expect(limitedNumbers.getText()).toEqual('Output numbers: [7,8,9]');\n      //   expect(limitedLetters.getText()).toEqual('Output letters: ghi');\n      //   expect(limitedLongNumber.getText()).toEqual('Output long number: 342');\n      // });\n\n      it('should not exceed the maximum size of input array', function() {\n        numLimitInput.clear();\n        numLimitInput.sendKeys('100');\n        letterLimitInput.clear();\n        letterLimitInput.sendKeys('100');\n        longNumberLimitInput.clear();\n        longNumberLimitInput.sendKeys('100');\n        expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3,4,5,6,7,8,9]');\n        expect(limitedLetters.getText()).toEqual('Output letters: abcdefghi');\n        expect(limitedLongNumber.getText()).toEqual('Output long number: 2345432342');\n      });\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 17539,
            "ngdoc": "filter",
            "name": "orderBy",
            "kind": "function",
            "description": "Orders a specified `array` by the `expression` predicate. It is ordered alphabetically\nfor strings and numerically for numbers. Note: if you notice numbers are not being sorted\ncorrectly, make sure they are actually being saved as numbers and not strings.",
            "params": [
                {
                    "name": "array",
                    "description": "The array to sort.",
                    "type": "Array"
                },
                {
                    "name": "expression",
                    "description": "A predicate to be\n   used by the comparator to determine the order of elements.\n\n   Can be one of:\n\n   - `function`: Getter function. The result of this function will be sorted using the\n     `<`, `=`, `>` operator.\n   - `string`: An Angular expression. The result of this expression is used to compare elements\n     (for example `name` to sort by a property called `name` or `name.substr(0, 3)` to sort by\n     3 first characters of a property called `name`). The result of a constant expression\n     is interpreted as a property name to be used in comparisons (for example `\"special name\"`\n     to sort object by the value of their `special name` property). An expression can be\n     optionally prefixed with `+` or `-` to control ascending or descending sort order\n     (for example, `+name` or `-name`). If no property is provided, (e.g. `'+'`) then the array\n     element itself is used to compare where sorting.\n   - `Array`: An array of function or string predicates. The first predicate in the array\n     is used for sorting, but when two items are equivalent, the next predicate is used.\n\n   If the predicate is missing or empty then it defaults to `'+'`.",
                    "type": "function(*)|string|Array.<(function(*)|string)>="
                },
                {
                    "name": "reverse",
                    "description": "Reverse the order of the array.",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "Sorted copy of the source array.",
                "type": "Array"
            },
            "example": [
                "\nThe example below demonstrates a simple ngRepeat, where the data is sorted\nby age in descending order (predicate is set to `'-age'`).\n`reverse` is not set, which means it defaults to `false`.\n  <example module=\"orderByExample\">\n    <file name=\"index.html\">\n      <script>\n        angular.module('orderByExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.friends =\n                [{name:'John', phone:'555-1212', age:10},\n                 {name:'Mary', phone:'555-9876', age:19},\n                 {name:'Mike', phone:'555-4321', age:21},\n                 {name:'Adam', phone:'555-5678', age:35},\n                 {name:'Julie', phone:'555-8765', age:29}];\n          }]);\n      </script>\n      <div ng-controller=\"ExampleController\">\n        <table class=\"friend\">\n          <tr>\n            <th>Name</th>\n            <th>Phone Number</th>\n            <th>Age</th>\n          </tr>\n          <tr ng-repeat=\"friend in friends | orderBy:'-age'\">\n            <td>{{friend.name}}</td>\n            <td>{{friend.phone}}</td>\n            <td>{{friend.age}}</td>\n          </tr>\n        </table>\n      </div>\n    </file>\n  </example>\n\nThe predicate and reverse parameters can be controlled dynamically through scope properties,\nas shown in the next example.",
                "\n  <example module=\"orderByExample\">\n    <file name=\"index.html\">\n      <script>\n        angular.module('orderByExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.friends =\n                [{name:'John', phone:'555-1212', age:10},\n                 {name:'Mary', phone:'555-9876', age:19},\n                 {name:'Mike', phone:'555-4321', age:21},\n                 {name:'Adam', phone:'555-5678', age:35},\n                 {name:'Julie', phone:'555-8765', age:29}];\n            $scope.predicate = '-age';\n          }]);\n      </script>\n      <div ng-controller=\"ExampleController\">\n        <pre>Sorting predicate = {{predicate}}; reverse = {{reverse}}</pre>\n        <hr/>\n        [ <a href=\"\" ng-click=\"predicate=''\">unsorted</a> ]\n        <table class=\"friend\">\n          <tr>\n            <th><a href=\"\" ng-click=\"predicate = 'name'; reverse=false\">Name</a>\n                (<a href=\"\" ng-click=\"predicate = '-name'; reverse=false\">^</a>)</th>\n            <th><a href=\"\" ng-click=\"predicate = 'phone'; reverse=!reverse\">Phone Number</a></th>\n            <th><a href=\"\" ng-click=\"predicate = 'age'; reverse=!reverse\">Age</a></th>\n          </tr>\n          <tr ng-repeat=\"friend in friends | orderBy:predicate:reverse\">\n            <td>{{friend.name}}</td>\n            <td>{{friend.phone}}</td>\n            <td>{{friend.age}}</td>\n          </tr>\n        </table>\n      </div>\n    </file>\n  </example>\n\nIt's also possible to call the orderBy filter manually, by injecting `$filter`, retrieving the\nfilter routine with `$filter('orderBy')`, and calling the returned filter routine with the\ndesired parameters.\n\nExample:",
                "\n <example module=\"orderByExample\">\n   <file name=\"index.html\">\n     <div ng-controller=\"ExampleController\">\n       <table class=\"friend\">\n         <tr>\n           <th><a href=\"\" ng-click=\"reverse=false;order('name', false)\">Name</a>\n             (<a href=\"\" ng-click=\"order('-name',false)\">^</a>)</th>\n           <th><a href=\"\" ng-click=\"reverse=!reverse;order('phone', reverse)\">Phone Number</a></th>\n           <th><a href=\"\" ng-click=\"reverse=!reverse;order('age',reverse)\">Age</a></th>\n         </tr>\n         <tr ng-repeat=\"friend in friends\">\n           <td>{{friend.name}}</td>\n           <td>{{friend.phone}}</td>\n           <td>{{friend.age}}</td>\n         </tr>\n       </table>\n     </div>\n   </file>\n\n   <file name=\"script.js\">\n     angular.module('orderByExample', [])\n       .controller('ExampleController', ['$scope', '$filter', function($scope, $filter) {\n         var orderBy = $filter('orderBy');\n         $scope.friends = [\n           { name: 'John',    phone: '555-1212',    age: 10 },\n           { name: 'Mary',    phone: '555-9876',    age: 19 },\n           { name: 'Mike',    phone: '555-4321',    age: 21 },\n           { name: 'Adam',    phone: '555-5678',    age: 35 },\n           { name: 'Julie',   phone: '555-8765',    age: 29 }\n         ];\n         $scope.order = function(predicate, reverse) {\n           $scope.friends = orderBy($scope.friends, predicate, reverse);\n         };\n         $scope.order('-age',false);\n       }]);\n   </file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 17790,
            "ngdoc": "directive",
            "name": "a",
            "restrict": "E",
            "description": "Modifies the default behavior of the html A tag so that the default action is prevented when\nthe href attribute is empty.\n\nThis change permits the easy creation of action links with the `ngClick` directive\nwithout changing the location or causing page reloads, e.g.:\n`<a href=\"\" ng-click=\"list.addItem()\">Add Item</a>`",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 17825,
            "ngdoc": "directive",
            "name": "ngHref",
            "restrict": "A",
            "priority": "99",
            "description": "Using Angular markup like `{{hash}}` in an href attribute will\nmake the link go to the wrong URL if the user clicks it before\nAngular has a chance to replace the `{{hash}}` markup with its\nvalue. Until Angular replaces the markup the link will be broken\nand will most likely return a 404 error. The `ngHref` directive\nsolves this problem.\n\nThe wrong way to write it:\n```html\n<a href=\"http://www.gravatar.com/avatar/{{hash}}\">link1</a>\n```\n\nThe correct way to write it:\n```html\n<a ng-href=\"http://www.gravatar.com/avatar/{{hash}}\">link1</a>\n```",
            "element": "A",
            "params": [
                {
                    "name": "ngHref",
                    "description": "any string which can contain `{{}}` markup.",
                    "type": "Template"
                }
            ],
            "example": [
                "\nThis example shows various combinations of `href`, `ng-href` and `ng-click` attributes\nin links and their different behaviors:\n   <example>\n     <file name=\"index.html\">\n       <input ng-model=\"value\" /><br />\n       <a id=\"link-1\" href ng-click=\"value = 1\">link 1</a> (link, don't reload)<br />\n       <a id=\"link-2\" href=\"\" ng-click=\"value = 2\">link 2</a> (link, don't reload)<br />\n       <a id=\"link-3\" ng-href=\"/{{'123'}}\">link 3</a> (link, reload!)<br />\n       <a id=\"link-4\" href=\"\" name=\"xx\" ng-click=\"value = 4\">anchor</a> (link, don't reload)<br />\n       <a id=\"link-5\" name=\"xxx\" ng-click=\"value = 5\">anchor</a> (no link)<br />\n       <a id=\"link-6\" ng-href=\"{{value}}\">link</a> (link, change location)\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should execute ng-click but not reload when href without value', function() {\n         element(by.id('link-1')).click();\n         expect(element(by.model('value')).getAttribute('value')).toEqual('1');\n         expect(element(by.id('link-1')).getAttribute('href')).toBe('');\n       });\n\n       it('should execute ng-click but not reload when href empty string', function() {\n         element(by.id('link-2')).click();\n         expect(element(by.model('value')).getAttribute('value')).toEqual('2');\n         expect(element(by.id('link-2')).getAttribute('href')).toBe('');\n       });\n\n       it('should execute ng-click and change url when ng-href specified', function() {\n         expect(element(by.id('link-3')).getAttribute('href')).toMatch(/\\/123$/);\n\n         element(by.id('link-3')).click();\n\n         // At this point, we navigate away from an Angular page, so we need\n         // to use browser.driver to get the base webdriver.\n\n         browser.wait(function() {\n           return browser.driver.getCurrentUrl().then(function(url) {\n             return url.match(/\\/123$/);\n           });\n         }, 5000, 'page should navigate to /123');\n       });\n\n       xit('should execute ng-click but not reload when href empty string and name specified', function() {\n         element(by.id('link-4')).click();\n         expect(element(by.model('value')).getAttribute('value')).toEqual('4');\n         expect(element(by.id('link-4')).getAttribute('href')).toBe('');\n       });\n\n       it('should execute ng-click but not reload when no href but name specified', function() {\n         element(by.id('link-5')).click();\n         expect(element(by.model('value')).getAttribute('value')).toEqual('5');\n         expect(element(by.id('link-5')).getAttribute('href')).toBe(null);\n       });\n\n       it('should only change url when only ng-href', function() {\n         element(by.model('value')).clear();\n         element(by.model('value')).sendKeys('6');\n         expect(element(by.id('link-6')).getAttribute('href')).toMatch(/\\/6$/);\n\n         element(by.id('link-6')).click();\n\n         // At this point, we navigate away from an Angular page, so we need\n         // to use browser.driver to get the base webdriver.\n         browser.wait(function() {\n           return browser.driver.getCurrentUrl().then(function(url) {\n             return url.match(/\\/6$/);\n           });\n         }, 5000, 'page should navigate to /6');\n       });\n     </file>\n   </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 17924,
            "ngdoc": "directive",
            "name": "ngSrc",
            "restrict": "A",
            "priority": "99",
            "description": "Using Angular markup like `{{hash}}` in a `src` attribute doesn't\nwork right: The browser will fetch from the URL with the literal\ntext `{{hash}}` until Angular replaces the expression inside\n`{{hash}}`. The `ngSrc` directive solves this problem.\n\nThe buggy way to write it:\n```html\n<img src=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n```\n\nThe correct way to write it:\n```html\n<img ng-src=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n```",
            "element": "IMG",
            "params": [
                {
                    "name": "ngSrc",
                    "description": "any string which can contain `{{}}` markup.",
                    "type": "Template"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 17950,
            "ngdoc": "directive",
            "name": "ngSrcset",
            "restrict": "A",
            "priority": "99",
            "description": "Using Angular markup like `{{hash}}` in a `srcset` attribute doesn't\nwork right: The browser will fetch from the URL with the literal\ntext `{{hash}}` until Angular replaces the expression inside\n`{{hash}}`. The `ngSrcset` directive solves this problem.\n\nThe buggy way to write it:\n```html\n<img srcset=\"http://www.gravatar.com/avatar/{{hash}} 2x\"/>\n```\n\nThe correct way to write it:\n```html\n<img ng-srcset=\"http://www.gravatar.com/avatar/{{hash}} 2x\"/>\n```",
            "element": "IMG",
            "params": [
                {
                    "name": "ngSrcset",
                    "description": "any string which can contain `{{}}` markup.",
                    "type": "Template"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 17976,
            "ngdoc": "directive",
            "name": "ngDisabled",
            "restrict": "A",
            "priority": "100",
            "description": "This directive sets the `disabled` attribute on the element if the\n{@link guide/expression expression} inside `ngDisabled` evaluates to truthy.\n\nA special directive is necessary because we cannot use interpolation inside the `disabled`\nattribute.  The following example would make the button enabled on Chrome/Firefox\nbut not on older IEs:\n\n```html\n<!-- See below for an example of ng-disabled being used correctly -->\n<div ng-init=\"isDisabled = false\">\n <button disabled=\"{{isDisabled}}\">Disabled</button>\n</div>\n```\n\nThis is because the HTML specification does not require browsers to preserve the values of\nboolean attributes such as `disabled` (Their presence means true and their absence means false.)\nIf we put an Angular interpolation expression into such an attribute then the\nbinding information would be lost when the browser removes the attribute.",
            "example": [
                "\n   <example>\n     <file name=\"index.html\">\n       Click me to toggle: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n       <button ng-model=\"button\" ng-disabled=\"checked\">Button</button>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should toggle button', function() {\n         expect(element(by.css('button')).getAttribute('disabled')).toBeFalsy();\n         element(by.model('checked')).click();\n         expect(element(by.css('button')).getAttribute('disabled')).toBeTruthy();\n       });\n     </file>\n   </example>"
            ],
            "element": "INPUT",
            "params": [
                {
                    "name": "ngDisabled",
                    "description": "If the {@link guide/expression expression} is truthy,\n    then the `disabled` attribute will be set on the element",
                    "type": "Expression"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18024,
            "ngdoc": "directive",
            "name": "ngChecked",
            "restrict": "A",
            "priority": "100",
            "description": "The HTML specification does not require browsers to preserve the values of boolean attributes\nsuch as checked. (Their presence means true and their absence means false.)\nIf we put an Angular interpolation expression into such an attribute then the\nbinding information would be lost when the browser removes the attribute.\nThe `ngChecked` directive solves this problem for the `checked` attribute.\nThis complementary directive is not removed by the browser and so provides\na permanent reliable place to store the binding information.",
            "example": [
                "\n   <example>\n     <file name=\"index.html\">\n       Check me to check both: <input type=\"checkbox\" ng-model=\"master\"><br/>\n       <input id=\"checkSlave\" type=\"checkbox\" ng-checked=\"master\">\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check both checkBoxes', function() {\n         expect(element(by.id('checkSlave')).getAttribute('checked')).toBeFalsy();\n         element(by.model('master')).click();\n         expect(element(by.id('checkSlave')).getAttribute('checked')).toBeTruthy();\n       });\n     </file>\n   </example>"
            ],
            "element": "INPUT",
            "params": [
                {
                    "name": "ngChecked",
                    "description": "If the {@link guide/expression expression} is truthy,\n    then special attribute \"checked\" will be set on the element",
                    "type": "Expression"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18059,
            "ngdoc": "directive",
            "name": "ngReadonly",
            "restrict": "A",
            "priority": "100",
            "description": "The HTML specification does not require browsers to preserve the values of boolean attributes\nsuch as readonly. (Their presence means true and their absence means false.)\nIf we put an Angular interpolation expression into such an attribute then the\nbinding information would be lost when the browser removes the attribute.\nThe `ngReadonly` directive solves this problem for the `readonly` attribute.\nThis complementary directive is not removed by the browser and so provides\na permanent reliable place to store the binding information.",
            "example": [
                "\n   <example>\n     <file name=\"index.html\">\n       Check me to make text readonly: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n       <input type=\"text\" ng-readonly=\"checked\" value=\"I'm Angular\"/>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should toggle readonly attr', function() {\n         expect(element(by.css('[type=\"text\"]')).getAttribute('readonly')).toBeFalsy();\n         element(by.model('checked')).click();\n         expect(element(by.css('[type=\"text\"]')).getAttribute('readonly')).toBeTruthy();\n       });\n     </file>\n   </example>"
            ],
            "element": "INPUT",
            "params": [
                {
                    "name": "ngReadonly",
                    "description": "If the {@link guide/expression expression} is truthy,\n    then special attribute \"readonly\" will be set on the element",
                    "type": "Expression"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18094,
            "ngdoc": "directive",
            "name": "ngSelected",
            "restrict": "A",
            "priority": "100",
            "description": "The HTML specification does not require browsers to preserve the values of boolean attributes\nsuch as selected. (Their presence means true and their absence means false.)\nIf we put an Angular interpolation expression into such an attribute then the\nbinding information would be lost when the browser removes the attribute.\nThe `ngSelected` directive solves this problem for the `selected` attribute.\nThis complementary directive is not removed by the browser and so provides\na permanent reliable place to store the binding information.",
            "example": [
                "\n   <example>\n     <file name=\"index.html\">\n       Check me to select: <input type=\"checkbox\" ng-model=\"selected\"><br/>\n       <select>\n         <option>Hello!</option>\n         <option id=\"greet\" ng-selected=\"selected\">Greetings!</option>\n       </select>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should select Greetings!', function() {\n         expect(element(by.id('greet')).getAttribute('selected')).toBeFalsy();\n         element(by.model('selected')).click();\n         expect(element(by.id('greet')).getAttribute('selected')).toBeTruthy();\n       });\n     </file>\n   </example>"
            ],
            "element": "OPTION",
            "params": [
                {
                    "name": "ngSelected",
                    "description": "If the {@link guide/expression expression} is truthy,\n    then special attribute \"selected\" will be set on the element",
                    "type": "Expression"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18132,
            "ngdoc": "directive",
            "name": "ngOpen",
            "restrict": "A",
            "priority": "100",
            "description": "The HTML specification does not require browsers to preserve the values of boolean attributes\nsuch as open. (Their presence means true and their absence means false.)\nIf we put an Angular interpolation expression into such an attribute then the\nbinding information would be lost when the browser removes the attribute.\nThe `ngOpen` directive solves this problem for the `open` attribute.\nThis complementary directive is not removed by the browser and so provides\na permanent reliable place to store the binding information.",
            "example": [
                "\n    <example>\n      <file name=\"index.html\">\n        Check me check multiple: <input type=\"checkbox\" ng-model=\"open\"><br/>\n        <details id=\"details\" ng-open=\"open\">\n           <summary>Show/Hide me</summary>\n        </details>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should toggle open', function() {\n          expect(element(by.id('details')).getAttribute('open')).toBeFalsy();\n          element(by.model('open')).click();\n          expect(element(by.id('details')).getAttribute('open')).toBeTruthy();\n        });\n      </file>\n    </example>"
            ],
            "element": "DETAILS",
            "params": [
                {
                    "name": "ngOpen",
                    "description": "If the {@link guide/expression expression} is truthy,\n    then special attribute \"open\" will be set on the element",
                    "type": "Expression"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18269,
            "ngdoc": "type",
            "name": "{Object} $error Is an object hash, containing references to controls or\n forms with failing validators, where:\n\n - keys are validation tokens (error names),\n - values are arrays of controls or forms that have a failing validator for given error name.\n\n Built-in validation tokens:\n\n - `email`\n - `max`\n - `maxlength`\n - `min`\n - `minlength`\n - `number`\n - `pattern`\n - `required`\n - `url`\n - `date`\n - `datetimelocal`\n - `time`\n - `week`\n - `month`",
            "itemtype": "property",
            "type": "Boolean",
            "description": "`FormController` keeps track of all its controls and nested forms as well as the state of them,\nsuch as being valid/invalid or dirty/pristine.\n\nEach {@link ng.directive:form form} directive creates an instance\nof `FormController`.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18331,
            "ngdoc": "method",
            "name": "form.FormController#$rollbackViewValue",
            "description": "Rollback all form controls pending updates to the `$modelValue`.\n\nUpdates may be pending by a debounced event or because the input is waiting for a some future\nevent defined in `ng-model-options`. This method is typically needed by the reset button of\na form that uses `ng-model-options` to pend updates.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18348,
            "ngdoc": "method",
            "name": "form.FormController#$commitViewValue",
            "description": "Commit all form controls pending updates to the `$modelValue`.\n\nUpdates may be pending by a debounced event or because the input is waiting for a some future\nevent defined in `ng-model-options`. This method is rarely needed as `NgModelController`\nusually handles calling this in response to input events.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18365,
            "ngdoc": "method",
            "name": "form.FormController#$addControl",
            "description": "Register a control with the form.\n\nInput elements using ngModelController do this automatically when they are linked.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18396,
            "ngdoc": "method",
            "name": "form.FormController#$removeControl",
            "description": "Deregister a control from the form.\n\nInput elements using ngModelController do this automatically when they are destroyed.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18423,
            "ngdoc": "method",
            "name": "form.FormController#$setValidity",
            "description": "Sets the validity of a form control.\n\nThis method will also propagate to parent forms.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18460,
            "ngdoc": "method",
            "name": "form.FormController#$setDirty",
            "description": "Sets the form to a dirty state.\n\nThis method can be called to add the 'ng-dirty' class and set the form to a dirty\nstate (ng-dirty class). This method will also propagate to parent forms.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18478,
            "ngdoc": "method",
            "name": "form.FormController#$setPristine",
            "description": "Sets the form to its pristine state.\n\nThis method can be called to remove the 'ng-dirty' class and set the form to its pristine\nstate (ng-pristine class). This method will also propagate to all the controls contained\nin this form.\n\nSetting a form back to a pristine state is often useful when we want to 'reuse' a form after\nsaving or resetting it.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18502,
            "ngdoc": "method",
            "name": "form.FormController#$setUntouched",
            "description": "Sets the form to its untouched state.\n\nThis method can be called to remove the 'ng-touched' class and set the form controls to their\nuntouched state (ng-untouched class).\n\nSetting a form controls back to their untouched state is often useful when setting the form\nback to its pristine state.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18521,
            "ngdoc": "method",
            "name": "form.FormController#$setSubmitted",
            "description": "Sets the form to its submitted state.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18535,
            "ngdoc": "directive",
            "name": "ngForm",
            "restrict": "EAC",
            "description": "Nestable alias of {@link ng.directive:form `form`} directive. HTML\ndoes not allow nesting of form elements. It is useful to nest forms, for example if the validity of a\nsub-group of controls needs to be determined.\n\nNote: the purpose of `ngForm` is to group controls,\nbut not to be a replacement for the `<form>` tag with all of its capabilities\n(e.g. posting to the server, ...).",
            "params": [
                {
                    "name": "ngForm|name",
                    "description": "Name of the form. If specified, the form controller will be published into\n                      related scope, under this name.",
                    "type": "String="
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18554,
            "ngdoc": "directive",
            "name": "form",
            "restrict": "E",
            "description": "Directive that instantiates\n{@link form.FormController FormController}.\n\nIf the `name` attribute is specified, the form controller is published onto the current scope under\nthis name.\n\n# Alias: {@link ng.directive:ngForm `ngForm`}\n\nIn Angular, forms can be nested. This means that the outer form is valid when all of the child\nforms are valid as well. However, browsers do not allow nesting of `<form>` elements, so\nAngular provides the {@link ng.directive:ngForm `ngForm`} directive which behaves identically to\n`<form>` but can be nested.  This allows you to have nested forms, which is very useful when\nusing Angular validation directives in forms that are dynamically generated using the\n{@link ng.directive:ngRepeat `ngRepeat`} directive. Since you cannot dynamically generate the `name`\nattribute of input elements using interpolation, you have to wrap each set of repeated inputs in an\n`ngForm` directive and nest these in an outer `form` element.\n\n\n# CSS classes\n - `ng-valid` is set if the form is valid.\n - `ng-invalid` is set if the form is invalid.\n - `ng-pristine` is set if the form is pristine.\n - `ng-dirty` is set if the form is dirty.\n - `ng-submitted` is set if the form was submitted.\n\nKeep in mind that ngAnimate can detect each of these classes when added and removed.\n\n\n# Submitting a form and preventing the default action\n\nSince the role of forms in client-side Angular applications is different than in classical\nroundtrip apps, it is desirable for the browser not to translate the form submission into a full\npage reload that sends the data to the server. Instead some javascript logic should be triggered\nto handle the form submission in an application-specific way.\n\nFor this reason, Angular prevents the default action (form submission to the server) unless the\n`<form>` element has an `action` attribute specified.\n\nYou can use one of the following two ways to specify what javascript method should be called when\na form is submitted:\n\n- {@link ng.directive:ngSubmit ngSubmit} directive on the form element\n- {@link ng.directive:ngClick ngClick} directive on the first\n button or input field of type submit (input[type=submit])\n\nTo prevent double execution of the handler, use only one of the {@link ng.directive:ngSubmit ngSubmit}\nor {@link ng.directive:ngClick ngClick} directives.\nThis is because of the following form submission rules in the HTML specification:\n\n- If a form has only one input field then hitting enter in this field triggers form submit\n(`ngSubmit`)\n- if a form has 2+ input fields and no buttons or input[type=submit] then hitting enter\ndoesn't trigger submit\n- if a form has one or more input fields and one or more buttons or input[type=submit] then\nhitting enter in any of the input fields will trigger the click handler on the *first* button or\ninput[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)\n\nAny pending `ngModelOptions` changes will take place immediately when an enclosing form is\nsubmitted. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`\nto have access to the updated model.\n\n## Animation Hooks\n\nAnimations in ngForm are triggered when any of the associated CSS classes are added and removed.\nThese classes are: `.ng-pristine`, `.ng-dirty`, `.ng-invalid` and `.ng-valid` as well as any\nother validations that are performed within the form. Animations in ngForm are similar to how\nthey work in ngClass and animations can be hooked into using CSS transitions, keyframes as well\nas JS animations.\n\nThe following example shows a simple way to utilize CSS transitions to style a form element\nthat has been rendered as invalid after it has been validated:\n\n<pre>\n//be sure to include ngAnimate as a module to hook into more\n//advanced animations\n.my-form {\n  transition:0.5s linear all;\n  background: white;\n}\n.my-form.ng-invalid {\n  background: red;\n  color:white;\n}\n</pre>",
            "example": [
                "\n   <example deps=\"angular-animate.js\" animations=\"true\" fixBase=\"true\" module=\"formExample\">\n     <file name=\"index.html\">\n      <script>\n        angular.module('formExample', [])\n          .controller('FormController', ['$scope', function($scope) {\n            $scope.userType = 'guest';\n          }]);\n      </script>\n      <style>\n       .my-form {\n         -webkit-transition:all linear 0.5s;\n         transition:all linear 0.5s;\n         background: transparent;\n       }\n       .my-form.ng-invalid {\n         background: red;\n       }\n      </style>\n      <form name=\"myForm\" ng-controller=\"FormController\" class=\"my-form\">\n        userType: <input name=\"input\" ng-model=\"userType\" required>\n        <span class=\"error\" ng-show=\"myForm.input.$error.required\">Required!</span><br>\n        <tt>userType = {{userType}}</tt><br>\n        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br>\n        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br>\n        <tt>myForm.$valid = {{myForm.$valid}}</tt><br>\n        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>\n       </form>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should initialize to model', function() {\n         var userType = element(by.binding('userType'));\n         var valid = element(by.binding('myForm.input.$valid'));\n\n         expect(userType.getText()).toContain('guest');\n         expect(valid.getText()).toContain('true');\n       });\n\n       it('should be invalid if empty', function() {\n         var userType = element(by.binding('userType'));\n         var valid = element(by.binding('myForm.input.$valid'));\n         var userInput = element(by.model('userType'));\n\n         userInput.clear();\n         userInput.sendKeys('');\n\n         expect(userType.getText()).toEqual('userType =');\n         expect(valid.getText()).toContain('false');\n       });\n     </file>\n   </example>"
            ],
            "params": [
                {
                    "name": "name",
                    "description": "Name of the form. If specified, the form controller will be published into\n                      related scope, under this name.",
                    "type": "String="
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18794,
            "ngdoc": "input",
            "name": "input[text]",
            "description": "Standard HTML text input with angular data binding, inherited by most of the `input` elements.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Adds `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngMinlength",
                    "description": "Sets `minlength` validation error key if the value is shorter than\n   minlength.",
                    "type": "Number="
                },
                {
                    "name": "ngMaxlength",
                    "description": "Sets `maxlength` validation error key if the value is longer than\n   maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\n   any length.",
                    "type": "Number="
                },
                {
                    "name": "pattern",
                    "description": "Similar to `ngPattern` except that the attribute value is the actual string\n   that contains the regular expression body that will be converted to a regular expression\n   as in the ngPattern directive.",
                    "type": "String="
                },
                {
                    "name": "ngPattern",
                    "description": "Sets `pattern` validation error key if the ngModel value does not match\n   a RegExp found by evaluating the Angular expression given in the attribute value.\n   If the expression evaluates to a RegExp object then this is used directly.\n   If the expression is a string then it will be converted to a RegExp after wrapping it in `^` and `$`\n   characters. For instance, `\"abc\"` will be converted to `new RegExp('^abc$')`.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                },
                {
                    "name": "[ngTrim=true] If set to false Angular will not automatically trim the input.\n   This parameter is ignored for input[type=password]",
                    "description": "controls, which will never trim the\n   input.",
                    "type": "Boolean="
                }
            ],
            "example": [
                "\n     <example name=\"text-input-directive\" module=\"textInputExample\">\n       <file name=\"index.html\">\n        <script>\n          angular.module('textInputExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.example = {\n                text: 'guest',\n                word: /^\\s*\\w*\\s*$/\n              };\n            }]);\n        </script>\n        <form name=\"myForm\" ng-controller=\"ExampleController\">\n          Single word: <input type=\"text\" name=\"input\" ng-model=\"example.text\"\n                              ng-pattern=\"example.word\" required ng-trim=\"false\">\n          <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n            Required!</span>\n          <span class=\"error\" ng-show=\"myForm.input.$error.pattern\">\n            Single word only!</span>\n\n          <tt>text = {{example.text}}</tt><br/>\n          <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n          <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n          <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n          <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n         </form>\n       </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         var text = element(by.binding('example.text'));\n         var valid = element(by.binding('myForm.input.$valid'));\n         var input = element(by.model('example.text'));\n\n         it('should initialize to model', function() {\n           expect(text.getText()).toContain('guest');\n           expect(valid.getText()).toContain('true');\n         });\n\n         it('should be invalid if empty', function() {\n           input.clear();\n           input.sendKeys('');\n\n           expect(text.getText()).toEqual('text =');\n           expect(valid.getText()).toContain('false');\n         });\n\n         it('should be invalid if multi word', function() {\n           input.clear();\n           input.sendKeys('hello world');\n\n           expect(valid.getText()).toContain('false');\n         });\n       </file>\n     </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18883,
            "ngdoc": "input",
            "name": "input[date]",
            "description": "Input with date validation and transformation. In browsers that do not yet support\nthe HTML5 date input, a text element will be used. In that case, text must be entered in a valid ISO-8601\ndate format (yyyy-MM-dd), for example: `2009-01-06`. Since many\nmodern browsers do not yet support this input type, it is important to provide cues to users on the\nexpected input format via a placeholder or label.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "min",
                    "description": "Sets the `min` validation error key if the value entered is less than `min`. This must be a\nvalid ISO date string (yyyy-MM-dd).",
                    "type": "String="
                },
                {
                    "name": "max",
                    "description": "Sets the `max` validation error key if the value entered is greater than `max`. This must be\na valid ISO date string (yyyy-MM-dd).",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n    <example name=\"date-input-directive\" module=\"dateInputExample\">\n    <file name=\"index.html\">\n      <script>\n         angular.module('dateInputExample', [])\n           .controller('DateController', ['$scope', function($scope) {\n             $scope.example = {\n               value: new Date(2013, 9, 22)\n             };\n           }]);\n      </script>\n      <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n         Pick a date in 2013:\n         <input type=\"date\" id=\"exampleInput\" name=\"input\" ng-model=\"example.value\"\n             placeholder=\"yyyy-MM-dd\" min=\"2013-01-01\" max=\"2013-12-31\" required />\n         <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n         <span class=\"error\" ng-show=\"myForm.input.$error.date\">\n             Not a valid date!</span>\n          <tt>value = {{example.value | date: \"yyyy-MM-dd\"}}</tt><br/>\n          <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n          <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n          <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n          <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n      </form>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n       var value = element(by.binding('example.value | date: \"yyyy-MM-dd\"'));\n       var valid = element(by.binding('myForm.input.$valid'));\n       var input = element(by.model('example.value'));\n\n       // currently protractor/webdriver does not support\n       // sending keys to all known HTML5 input controls\n       // for various browsers (see https://github.com/angular/protractor/issues/562).\n       function setInput(val) {\n         // set the value of the element and force validation.\n         var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n         \"ipt.value = '\" + val + \"';\" +\n         \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n         browser.executeScript(scr);\n       }\n\n       it('should initialize to model', function() {\n         expect(value.getText()).toContain('2013-10-22');\n         expect(valid.getText()).toContain('myForm.input.$valid = true');\n       });\n\n       it('should be invalid if empty', function() {\n         setInput('');\n         expect(value.getText()).toEqual('value =');\n         expect(valid.getText()).toContain('myForm.input.$valid = false');\n       });\n\n       it('should be invalid if over max', function() {\n         setInput('2015-01-01');\n         expect(value.getText()).toContain('');\n         expect(valid.getText()).toContain('myForm.input.$valid = false');\n       });\n    </file>\n    </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 18978,
            "ngdoc": "input",
            "name": "input[datetime-local]",
            "description": "Input with datetime validation and transformation. In browsers that do not yet support\nthe HTML5 date input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\nlocal datetime format (yyyy-MM-ddTHH:mm:ss), for example: `2010-12-28T14:57:00`.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "min",
                    "description": "Sets the `min` validation error key if the value entered is less than `min`. This must be a\nvalid ISO datetime format (yyyy-MM-ddTHH:mm:ss).",
                    "type": "String="
                },
                {
                    "name": "max",
                    "description": "Sets the `max` validation error key if the value entered is greater than `max`. This must be\na valid ISO datetime format (yyyy-MM-ddTHH:mm:ss).",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n   <example name=\"datetimelocal-input-directive\" module=\"dateExample\">\n   <file name=\"index.html\">\n     <script>\n       angular.module('dateExample', [])\n         .controller('DateController', ['$scope', function($scope) {\n           $scope.example = {\n             value: new Date(2010, 11, 28, 14, 57)\n           };\n         }]);\n     </script>\n     <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n       Pick a date between in 2013:\n       <input type=\"datetime-local\" id=\"exampleInput\" name=\"input\" ng-model=\"example.value\"\n           placeholder=\"yyyy-MM-ddTHH:mm:ss\" min=\"2001-01-01T00:00:00\" max=\"2013-12-31T00:00:00\" required />\n       <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n           Required!</span>\n       <span class=\"error\" ng-show=\"myForm.input.$error.datetimelocal\">\n           Not a valid date!</span>\n       <tt>value = {{example.value | date: \"yyyy-MM-ddTHH:mm:ss\"}}</tt><br/>\n       <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n       <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n       <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n       <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n     </form>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     var value = element(by.binding('example.value | date: \"yyyy-MM-ddTHH:mm:ss\"'));\n     var valid = element(by.binding('myForm.input.$valid'));\n     var input = element(by.model('example.value'));\n\n     // currently protractor/webdriver does not support\n     // sending keys to all known HTML5 input controls\n     // for various browsers (https://github.com/angular/protractor/issues/562).\n     function setInput(val) {\n       // set the value of the element and force validation.\n       var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n       \"ipt.value = '\" + val + \"';\" +\n       \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n       browser.executeScript(scr);\n     }\n\n     it('should initialize to model', function() {\n       expect(value.getText()).toContain('2010-12-28T14:57:00');\n       expect(valid.getText()).toContain('myForm.input.$valid = true');\n     });\n\n     it('should be invalid if empty', function() {\n       setInput('');\n       expect(value.getText()).toEqual('value =');\n       expect(valid.getText()).toContain('myForm.input.$valid = false');\n     });\n\n     it('should be invalid if over max', function() {\n       setInput('2015-01-01T23:59:00');\n       expect(value.getText()).toContain('');\n       expect(valid.getText()).toContain('myForm.input.$valid = false');\n     });\n   </file>\n   </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 19071,
            "ngdoc": "input",
            "name": "input[time]",
            "description": "Input with time validation and transformation. In browsers that do not yet support\nthe HTML5 date input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\nlocal time format (HH:mm:ss), for example: `14:57:00`. Model must be a Date object. This binding will always output a\nDate object to the model of January 1, 1970, or local date `new Date(1970, 0, 1, HH, mm, ss)`.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "min",
                    "description": "Sets the `min` validation error key if the value entered is less than `min`. This must be a\nvalid ISO time format (HH:mm:ss).",
                    "type": "String="
                },
                {
                    "name": "max",
                    "description": "Sets the `max` validation error key if the value entered is greater than `max`. This must be a\nvalid ISO time format (HH:mm:ss).",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n  <example name=\"time-input-directive\" module=\"timeExample\">\n  <file name=\"index.html\">\n    <script>\n     angular.module('timeExample', [])\n       .controller('DateController', ['$scope', function($scope) {\n         $scope.example = {\n           value: new Date(1970, 0, 1, 14, 57, 0)\n         };\n       }]);\n    </script>\n    <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n       Pick a between 8am and 5pm:\n       <input type=\"time\" id=\"exampleInput\" name=\"input\" ng-model=\"example.value\"\n           placeholder=\"HH:mm:ss\" min=\"08:00:00\" max=\"17:00:00\" required />\n       <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n           Required!</span>\n       <span class=\"error\" ng-show=\"myForm.input.$error.time\">\n           Not a valid date!</span>\n       <tt>value = {{example.value | date: \"HH:mm:ss\"}}</tt><br/>\n       <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n       <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n       <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n       <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n    </form>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n     var value = element(by.binding('example.value | date: \"HH:mm:ss\"'));\n     var valid = element(by.binding('myForm.input.$valid'));\n     var input = element(by.model('example.value'));\n\n     // currently protractor/webdriver does not support\n     // sending keys to all known HTML5 input controls\n     // for various browsers (https://github.com/angular/protractor/issues/562).\n     function setInput(val) {\n       // set the value of the element and force validation.\n       var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n       \"ipt.value = '\" + val + \"';\" +\n       \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n       browser.executeScript(scr);\n     }\n\n     it('should initialize to model', function() {\n       expect(value.getText()).toContain('14:57:00');\n       expect(valid.getText()).toContain('myForm.input.$valid = true');\n     });\n\n     it('should be invalid if empty', function() {\n       setInput('');\n       expect(value.getText()).toEqual('value =');\n       expect(valid.getText()).toContain('myForm.input.$valid = false');\n     });\n\n     it('should be invalid if over max', function() {\n       setInput('23:59:00');\n       expect(value.getText()).toContain('');\n       expect(valid.getText()).toContain('myForm.input.$valid = false');\n     });\n  </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 19165,
            "ngdoc": "input",
            "name": "input[week]",
            "description": "Input with week-of-the-year validation and transformation to Date. In browsers that do not yet support\nthe HTML5 week input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\nweek format (yyyy-W##), for example: `2013-W02`.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "min",
                    "description": "Sets the `min` validation error key if the value entered is less than `min`. This must be a\nvalid ISO week format (yyyy-W##).",
                    "type": "String="
                },
                {
                    "name": "max",
                    "description": "Sets the `max` validation error key if the value entered is greater than `max`. This must be\na valid ISO week format (yyyy-W##).",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n   <example name=\"week-input-directive\" module=\"weekExample\">\n   <file name=\"index.html\">\n     <script>\n     angular.module('weekExample', [])\n       .controller('DateController', ['$scope', function($scope) {\n         $scope.example = {\n           value: new Date(2013, 0, 3)\n         };\n       }]);\n     </script>\n     <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n       Pick a date between in 2013:\n       <input id=\"exampleInput\" type=\"week\" name=\"input\" ng-model=\"example.value\"\n           placeholder=\"YYYY-W##\" min=\"2012-W32\" max=\"2013-W52\" required />\n       <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n           Required!</span>\n       <span class=\"error\" ng-show=\"myForm.input.$error.week\">\n           Not a valid date!</span>\n       <tt>value = {{example.value | date: \"yyyy-Www\"}}</tt><br/>\n       <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n       <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n       <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n       <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n     </form>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     var value = element(by.binding('example.value | date: \"yyyy-Www\"'));\n     var valid = element(by.binding('myForm.input.$valid'));\n     var input = element(by.model('example.value'));\n\n     // currently protractor/webdriver does not support\n     // sending keys to all known HTML5 input controls\n     // for various browsers (https://github.com/angular/protractor/issues/562).\n     function setInput(val) {\n       // set the value of the element and force validation.\n       var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n       \"ipt.value = '\" + val + \"';\" +\n       \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n       browser.executeScript(scr);\n     }\n\n     it('should initialize to model', function() {\n       expect(value.getText()).toContain('2013-W01');\n       expect(valid.getText()).toContain('myForm.input.$valid = true');\n     });\n\n     it('should be invalid if empty', function() {\n       setInput('');\n       expect(value.getText()).toEqual('value =');\n       expect(valid.getText()).toContain('myForm.input.$valid = false');\n     });\n\n     it('should be invalid if over max', function() {\n       setInput('2015-W01');\n       expect(value.getText()).toContain('');\n       expect(valid.getText()).toContain('myForm.input.$valid = false');\n     });\n   </file>\n   </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 19256,
            "ngdoc": "input",
            "name": "input[month]",
            "description": "Input with month validation and transformation. In browsers that do not yet support\nthe HTML5 month input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\nmonth format (yyyy-MM), for example: `2009-01`.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\nIf the model is not set to the first of the month, the next view to model update will set it\nto the first of the month.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "min",
                    "description": "Sets the `min` validation error key if the value entered is less than `min`. This must be\na valid ISO month format (yyyy-MM).",
                    "type": "String="
                },
                {
                    "name": "max",
                    "description": "Sets the `max` validation error key if the value entered is greater than `max`. This must\nbe a valid ISO month format (yyyy-MM).",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n  <example name=\"month-input-directive\" module=\"monthExample\">\n  <file name=\"index.html\">\n    <script>\n     angular.module('monthExample', [])\n       .controller('DateController', ['$scope', function($scope) {\n         $scope.example = {\n           value: new Date(2013, 9, 1)\n         };\n       }]);\n    </script>\n    <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n      Pick a month in 2013:\n      <input id=\"exampleInput\" type=\"month\" name=\"input\" ng-model=\"example.value\"\n         placeholder=\"yyyy-MM\" min=\"2013-01\" max=\"2013-12\" required />\n      <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n         Required!</span>\n      <span class=\"error\" ng-show=\"myForm.input.$error.month\">\n         Not a valid month!</span>\n      <tt>value = {{example.value | date: \"yyyy-MM\"}}</tt><br/>\n      <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n      <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n      <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n      <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n    </form>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n     var value = element(by.binding('example.value | date: \"yyyy-MM\"'));\n     var valid = element(by.binding('myForm.input.$valid'));\n     var input = element(by.model('example.value'));\n\n     // currently protractor/webdriver does not support\n     // sending keys to all known HTML5 input controls\n     // for various browsers (https://github.com/angular/protractor/issues/562).\n     function setInput(val) {\n       // set the value of the element and force validation.\n       var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n       \"ipt.value = '\" + val + \"';\" +\n       \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n       browser.executeScript(scr);\n     }\n\n     it('should initialize to model', function() {\n       expect(value.getText()).toContain('2013-10');\n       expect(valid.getText()).toContain('myForm.input.$valid = true');\n     });\n\n     it('should be invalid if empty', function() {\n       setInput('');\n       expect(value.getText()).toEqual('value =');\n       expect(valid.getText()).toContain('myForm.input.$valid = false');\n     });\n\n     it('should be invalid if over max', function() {\n       setInput('2015-01');\n       expect(value.getText()).toContain('');\n       expect(valid.getText()).toContain('myForm.input.$valid = false');\n     });\n  </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 19351,
            "ngdoc": "input",
            "name": "input[number]",
            "description": "Text input with number validation and transformation. Sets the `number` validation\nerror if not a valid number.\n\nThe model must always be a number, otherwise Angular will throw an error.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "min",
                    "description": "Sets the `min` validation error key if the value entered is less than `min`.",
                    "type": "String="
                },
                {
                    "name": "max",
                    "description": "Sets the `max` validation error key if the value entered is greater than `max`.",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngMinlength",
                    "description": "Sets `minlength` validation error key if the value is shorter than\n   minlength.",
                    "type": "Number="
                },
                {
                    "name": "ngMaxlength",
                    "description": "Sets `maxlength` validation error key if the value is longer than\n   maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\n   any length.",
                    "type": "Number="
                },
                {
                    "name": "pattern",
                    "description": "Similar to `ngPattern` except that the attribute value is the actual string\n   that contains the regular expression body that will be converted to a regular expression\n   as in the ngPattern directive.",
                    "type": "String="
                },
                {
                    "name": "ngPattern",
                    "description": "Sets `pattern` validation error key if the ngModel value does not match\n   a RegExp found by evaluating the Angular expression given in the attribute value.\n   If the expression evaluates to a RegExp object then this is used directly.\n   If the expression is a string then it will be converted to a RegExp after wrapping it in `^` and `$`\n   characters. For instance, `\"abc\"` will be converted to `new RegExp('^abc$')`.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n     <example name=\"number-input-directive\" module=\"numberExample\">\n       <file name=\"index.html\">\n        <script>\n          angular.module('numberExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.example = {\n                value: 12\n              };\n            }]);\n        </script>\n        <form name=\"myForm\" ng-controller=\"ExampleController\">\n          Number: <input type=\"number\" name=\"input\" ng-model=\"example.value\"\n                         min=\"0\" max=\"99\" required>\n          <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n            Required!</span>\n          <span class=\"error\" ng-show=\"myForm.input.$error.number\">\n            Not valid number!</span>\n          <tt>value = {{example.value}}</tt><br/>\n          <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n          <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n          <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n          <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n         </form>\n       </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         var value = element(by.binding('example.value'));\n         var valid = element(by.binding('myForm.input.$valid'));\n         var input = element(by.model('example.value'));\n\n         it('should initialize to model', function() {\n           expect(value.getText()).toContain('12');\n           expect(valid.getText()).toContain('true');\n         });\n\n         it('should be invalid if empty', function() {\n           input.clear();\n           input.sendKeys('');\n           expect(value.getText()).toEqual('value =');\n           expect(valid.getText()).toContain('false');\n         });\n\n         it('should be invalid if over max', function() {\n           input.clear();\n           input.sendKeys('123');\n           expect(value.getText()).toEqual('value =');\n           expect(valid.getText()).toContain('false');\n         });\n       </file>\n     </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 19439,
            "ngdoc": "input",
            "name": "input[url]",
            "description": "Text input with URL validation. Sets the `url` validation error key if the content is not a\nvalid URL.\n\n<div class=\"alert alert-warning\">\n**Note:** `input[url]` uses a regex to validate urls that is derived from the regex\nused in Chromium. If you need stricter validation, you can use `ng-pattern` or modify\nthe built-in validators (see the {@link guide/forms Forms guide})\n</div>",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngMinlength",
                    "description": "Sets `minlength` validation error key if the value is shorter than\n   minlength.",
                    "type": "Number="
                },
                {
                    "name": "ngMaxlength",
                    "description": "Sets `maxlength` validation error key if the value is longer than\n   maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\n   any length.",
                    "type": "Number="
                },
                {
                    "name": "pattern",
                    "description": "Similar to `ngPattern` except that the attribute value is the actual string\n   that contains the regular expression body that will be converted to a regular expression\n   as in the ngPattern directive.",
                    "type": "String="
                },
                {
                    "name": "ngPattern",
                    "description": "Sets `pattern` validation error key if the ngModel value does not match\n   a RegExp found by evaluating the Angular expression given in the attribute value.\n   If the expression evaluates to a RegExp object then this is used directly.\n   If the expression is a string then it will be converted to a RegExp after wrapping it in `^` and `$`\n   characters. For instance, `\"abc\"` will be converted to `new RegExp('^abc$')`.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n     <example name=\"url-input-directive\" module=\"urlExample\">\n       <file name=\"index.html\">\n        <script>\n          angular.module('urlExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.url = {\n                text: 'http://google.com'\n              };\n            }]);\n        </script>\n        <form name=\"myForm\" ng-controller=\"ExampleController\">\n          URL: <input type=\"url\" name=\"input\" ng-model=\"url.text\" required>\n          <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n            Required!</span>\n          <span class=\"error\" ng-show=\"myForm.input.$error.url\">\n            Not valid url!</span>\n          <tt>text = {{url.text}}</tt><br/>\n          <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n          <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n          <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n          <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n          <tt>myForm.$error.url = {{!!myForm.$error.url}}</tt><br/>\n         </form>\n       </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         var text = element(by.binding('url.text'));\n         var valid = element(by.binding('myForm.input.$valid'));\n         var input = element(by.model('url.text'));\n\n         it('should initialize to model', function() {\n           expect(text.getText()).toContain('http://google.com');\n           expect(valid.getText()).toContain('true');\n         });\n\n         it('should be invalid if empty', function() {\n           input.clear();\n           input.sendKeys('');\n\n           expect(text.getText()).toEqual('text =');\n           expect(valid.getText()).toContain('false');\n         });\n\n         it('should be invalid if not url', function() {\n           input.clear();\n           input.sendKeys('box');\n\n           expect(valid.getText()).toContain('false');\n         });\n       </file>\n     </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 19530,
            "ngdoc": "input",
            "name": "input[email]",
            "description": "Text input with email validation. Sets the `email` validation error key if not a valid email\naddress.\n\n<div class=\"alert alert-warning\">\n**Note:** `input[email]` uses a regex to validate email addresses that is derived from the regex\nused in Chromium. If you need stricter validation (e.g. requiring a top-level domain), you can\nuse `ng-pattern` or modify the built-in validators (see the {@link guide/forms Forms guide})\n</div>",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngMinlength",
                    "description": "Sets `minlength` validation error key if the value is shorter than\n   minlength.",
                    "type": "Number="
                },
                {
                    "name": "ngMaxlength",
                    "description": "Sets `maxlength` validation error key if the value is longer than\n   maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\n   any length.",
                    "type": "Number="
                },
                {
                    "name": "pattern",
                    "description": "Similar to `ngPattern` except that the attribute value is the actual string\n   that contains the regular expression body that will be converted to a regular expression\n   as in the ngPattern directive.",
                    "type": "String="
                },
                {
                    "name": "ngPattern",
                    "description": "Sets `pattern` validation error key if the ngModel value does not match\n   a RegExp found by evaluating the Angular expression given in the attribute value.\n   If the expression evaluates to a RegExp object then this is used directly.\n   If the expression is a string then it will be converted to a RegExp after wrapping it in `^` and `$`\n   characters. For instance, `\"abc\"` will be converted to `new RegExp('^abc$')`.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n     <example name=\"email-input-directive\" module=\"emailExample\">\n       <file name=\"index.html\">\n        <script>\n          angular.module('emailExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.email = {\n                text: 'me@example.com'\n              };\n            }]);\n        </script>\n          <form name=\"myForm\" ng-controller=\"ExampleController\">\n            Email: <input type=\"email\" name=\"input\" ng-model=\"email.text\" required>\n            <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n              Required!</span>\n            <span class=\"error\" ng-show=\"myForm.input.$error.email\">\n              Not valid email!</span>\n            <tt>text = {{email.text}}</tt><br/>\n            <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n            <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n            <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n            <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n            <tt>myForm.$error.email = {{!!myForm.$error.email}}</tt><br/>\n          </form>\n        </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         var text = element(by.binding('email.text'));\n         var valid = element(by.binding('myForm.input.$valid'));\n         var input = element(by.model('email.text'));\n\n         it('should initialize to model', function() {\n           expect(text.getText()).toContain('me@example.com');\n           expect(valid.getText()).toContain('true');\n         });\n\n         it('should be invalid if empty', function() {\n           input.clear();\n           input.sendKeys('');\n           expect(text.getText()).toEqual('text =');\n           expect(valid.getText()).toContain('false');\n         });\n\n         it('should be invalid if not email', function() {\n           input.clear();\n           input.sendKeys('xxx');\n\n           expect(valid.getText()).toContain('false');\n         });\n       </file>\n     </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 19620,
            "ngdoc": "input",
            "name": "input[radio]",
            "description": "HTML radio button.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value to which the expression should be set when selected.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                },
                {
                    "name": "ngValue",
                    "description": "Angular expression which sets the value to which the expression should\n   be set when selected.",
                    "type": "String"
                }
            ],
            "example": [
                "\n     <example name=\"radio-input-directive\" module=\"radioExample\">\n       <file name=\"index.html\">\n        <script>\n          angular.module('radioExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.color = {\n                name: 'blue'\n              };\n              $scope.specialValue = {\n                \"id\": \"12345\",\n                \"value\": \"green\"\n              };\n            }]);\n        </script>\n        <form name=\"myForm\" ng-controller=\"ExampleController\">\n          <input type=\"radio\" ng-model=\"color.name\" value=\"red\">  Red <br/>\n          <input type=\"radio\" ng-model=\"color.name\" ng-value=\"specialValue\"> Green <br/>\n          <input type=\"radio\" ng-model=\"color.name\" value=\"blue\"> Blue <br/>\n          <tt>color = {{color.name | json}}</tt><br/>\n         </form>\n         Note that `ng-value=\"specialValue\"` sets radio item's value to be the value of `$scope.specialValue`.\n       </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         it('should change state', function() {\n           var color = element(by.binding('color.name'));\n\n           expect(color.getText()).toContain('blue');\n\n           element.all(by.model('color.name')).get(0).click();\n\n           expect(color.getText()).toContain('red');\n         });\n       </file>\n     </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 19674,
            "ngdoc": "input",
            "name": "input[checkbox]",
            "description": "HTML checkbox.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "ngTrueValue",
                    "description": "The value to which the expression should be set when selected.",
                    "type": "Expression="
                },
                {
                    "name": "ngFalseValue",
                    "description": "The value to which the expression should be set when not selected.",
                    "type": "Expression="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n     <example name=\"checkbox-input-directive\" module=\"checkboxExample\">\n       <file name=\"index.html\">\n        <script>\n          angular.module('checkboxExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.checkboxModel = {\n               value1 : true,\n               value2 : 'YES'\n             };\n            }]);\n        </script>\n        <form name=\"myForm\" ng-controller=\"ExampleController\">\n          Value1: <input type=\"checkbox\" ng-model=\"checkboxModel.value1\"> <br/>\n          Value2: <input type=\"checkbox\" ng-model=\"checkboxModel.value2\"\n                         ng-true-value=\"'YES'\" ng-false-value=\"'NO'\"> <br/>\n          <tt>value1 = {{checkboxModel.value1}}</tt><br/>\n          <tt>value2 = {{checkboxModel.value2}}</tt><br/>\n         </form>\n       </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         it('should change state', function() {\n           var value1 = element(by.binding('checkboxModel.value1'));\n           var value2 = element(by.binding('checkboxModel.value2'));\n\n           expect(value1.getText()).toContain('true');\n           expect(value2.getText()).toContain('YES');\n\n           element(by.model('checkboxModel.value1')).click();\n           element(by.model('checkboxModel.value2')).click();\n\n           expect(value1.getText()).toContain('false');\n           expect(value2.getText()).toContain('NO');\n         });\n       </file>\n     </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 20147,
            "ngdoc": "directive",
            "name": "textarea",
            "restrict": "E",
            "description": "HTML textarea element control with angular data-binding. The data-binding and validation\nproperties of this element are exactly the same as those of the\n{@link ng.directive:input input element}.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngMinlength",
                    "description": "Sets `minlength` validation error key if the value is shorter than\n   minlength.",
                    "type": "Number="
                },
                {
                    "name": "ngMaxlength",
                    "description": "Sets `maxlength` validation error key if the value is longer than\n   maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any\n   length.",
                    "type": "Number="
                },
                {
                    "name": "ngPattern",
                    "description": "Sets `pattern` validation error key if the value does not match the\n   RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   patterns defined as scope expressions.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                },
                {
                    "name": "ngTrim",
                    "description": "If set to false Angular will not automatically trim the input.",
                    "type": "Boolean=",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 20177,
            "ngdoc": "directive",
            "name": "input",
            "restrict": "E",
            "description": "HTML input element control. When used together with {@link ngModel `ngModel`}, it provides data-binding,\ninput state control, and validation.\nInput control follows HTML5 input types and polyfills the HTML5 validation behavior for older browsers.\n\n<div class=\"alert alert-warning\">\n**Note:** Not every feature offered is available for all input types.\nSpecifically, data binding and event handling via `ng-model` is unsupported for `input[file]`.\n</div>",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Sets `required` attribute if set to true",
                    "type": "Boolean="
                },
                {
                    "name": "ngMinlength",
                    "description": "Sets `minlength` validation error key if the value is shorter than\n   minlength.",
                    "type": "Number="
                },
                {
                    "name": "ngMaxlength",
                    "description": "Sets `maxlength` validation error key if the value is longer than\n   maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any\n   length.",
                    "type": "Number="
                },
                {
                    "name": "ngPattern",
                    "description": "Sets `pattern` validation error key if the value does not match the\n   RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   patterns defined as scope expressions.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                },
                {
                    "name": "[ngTrim=true] If set to false Angular will not automatically trim the input.\n   This parameter is ignored for input[type=password]",
                    "description": "controls, which will never trim the\n   input.",
                    "type": "Boolean="
                }
            ],
            "example": [
                "\n   <example name=\"input-directive\" module=\"inputExample\">\n     <file name=\"index.html\">\n      <script>\n         angular.module('inputExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.user = {name: 'guest', last: 'visitor'};\n           }]);\n      </script>\n      <div ng-controller=\"ExampleController\">\n        <form name=\"myForm\">\n          User name: <input type=\"text\" name=\"userName\" ng-model=\"user.name\" required>\n          <span class=\"error\" ng-show=\"myForm.userName.$error.required\">\n            Required!</span><br>\n          Last name: <input type=\"text\" name=\"lastName\" ng-model=\"user.last\"\n            ng-minlength=\"3\" ng-maxlength=\"10\">\n          <span class=\"error\" ng-show=\"myForm.lastName.$error.minlength\">\n            Too short!</span>\n          <span class=\"error\" ng-show=\"myForm.lastName.$error.maxlength\">\n            Too long!</span><br>\n        </form>\n        <hr>\n        <tt>user = {{user}}</tt><br/>\n        <tt>myForm.userName.$valid = {{myForm.userName.$valid}}</tt><br>\n        <tt>myForm.userName.$error = {{myForm.userName.$error}}</tt><br>\n        <tt>myForm.lastName.$valid = {{myForm.lastName.$valid}}</tt><br>\n        <tt>myForm.lastName.$error = {{myForm.lastName.$error}}</tt><br>\n        <tt>myForm.$valid = {{myForm.$valid}}</tt><br>\n        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>\n        <tt>myForm.$error.minlength = {{!!myForm.$error.minlength}}</tt><br>\n        <tt>myForm.$error.maxlength = {{!!myForm.$error.maxlength}}</tt><br>\n      </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       var user = element(by.exactBinding('user'));\n       var userNameValid = element(by.binding('myForm.userName.$valid'));\n       var lastNameValid = element(by.binding('myForm.lastName.$valid'));\n       var lastNameError = element(by.binding('myForm.lastName.$error'));\n       var formValid = element(by.binding('myForm.$valid'));\n       var userNameInput = element(by.model('user.name'));\n       var userLastInput = element(by.model('user.last'));\n\n       it('should initialize to model', function() {\n         expect(user.getText()).toContain('{\"name\":\"guest\",\"last\":\"visitor\"}');\n         expect(userNameValid.getText()).toContain('true');\n         expect(formValid.getText()).toContain('true');\n       });\n\n       it('should be invalid if empty when required', function() {\n         userNameInput.clear();\n         userNameInput.sendKeys('');\n\n         expect(user.getText()).toContain('{\"last\":\"visitor\"}');\n         expect(userNameValid.getText()).toContain('false');\n         expect(formValid.getText()).toContain('false');\n       });\n\n       it('should be valid if empty when min length is set', function() {\n         userLastInput.clear();\n         userLastInput.sendKeys('');\n\n         expect(user.getText()).toContain('{\"name\":\"guest\",\"last\":\"\"}');\n         expect(lastNameValid.getText()).toContain('true');\n         expect(formValid.getText()).toContain('true');\n       });\n\n       it('should be invalid if less than required min length', function() {\n         userLastInput.clear();\n         userLastInput.sendKeys('xx');\n\n         expect(user.getText()).toContain('{\"name\":\"guest\"}');\n         expect(lastNameValid.getText()).toContain('false');\n         expect(lastNameError.getText()).toContain('minlength');\n         expect(formValid.getText()).toContain('false');\n       });\n\n       it('should be invalid if longer than max length', function() {\n         userLastInput.clear();\n         userLastInput.sendKeys('some ridiculously long name');\n\n         expect(user.getText()).toContain('{\"name\":\"guest\"}');\n         expect(lastNameValid.getText()).toContain('false');\n         expect(lastNameError.getText()).toContain('maxlength');\n         expect(formValid.getText()).toContain('false');\n       });\n     </file>\n   </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 20317,
            "ngdoc": "directive",
            "name": "ngValue",
            "description": "Binds the given expression to the value of `<option>` or {@link input[radio] `input[radio]`},\nso that when the element is selected, the {@link ngModel `ngModel`} of that element is set to\nthe bound value.\n\n`ngValue` is useful when dynamically generating lists of radio buttons using\n{@link ngRepeat `ngRepeat`}, as shown below.\n\nLikewise, `ngValue` can be used to generate `<option>` elements for\nthe {@link select `select`} element. In that case however, only strings are supported\nfor the `value `attribute, so the resulting `ngModel` will always be a string.\nSupport for `select` models with non-string values is available via `ngOptions`.",
            "element": "input",
            "params": [
                {
                    "name": "ngValue",
                    "description": "angular expression, whose value will be bound to the `value` attribute\n  of the `input` element",
                    "type": "String="
                }
            ],
            "example": [
                "\n   <example name=\"ngValue-directive\" module=\"valueExample\">\n     <file name=\"index.html\">\n      <script>\n         angular.module('valueExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.names = ['pizza', 'unicorns', 'robots'];\n             $scope.my = { favorite: 'unicorns' };\n           }]);\n      </script>\n       <form ng-controller=\"ExampleController\">\n         <h2>Which is your favorite?</h2>\n           <label ng-repeat=\"name in names\" for=\"{{name}}\">\n             {{name}}\n             <input type=\"radio\"\n                    ng-model=\"my.favorite\"\n                    ng-value=\"name\"\n                    id=\"{{name}}\"\n                    name=\"favorite\">\n           </label>\n         <div>You chose {{my.favorite}}</div>\n       </form>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       var favorite = element(by.binding('my.favorite'));\n\n       it('should initialize to model', function() {\n         expect(favorite.getText()).toContain('unicorns');\n       });\n       it('should bind the values to the inputs', function() {\n         element.all(by.model('my.favorite')).get(0).click();\n         expect(favorite.getText()).toContain('pizza');\n       });\n     </file>\n   </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 20394,
            "ngdoc": "directive",
            "name": "ngBind",
            "restrict": "AC",
            "description": "The `ngBind` attribute tells Angular to replace the text content of the specified HTML element\nwith the value of a given expression, and to update the text content when the value of that\nexpression changes.\n\nTypically, you don't use `ngBind` directly, but instead you use the double curly markup like\n`{{ expression }}` which is similar but less verbose.\n\nIt is preferable to use `ngBind` instead of `{{ expression }}` if a template is momentarily\ndisplayed by the browser in its raw state before Angular compiles it. Since `ngBind` is an\nelement attribute, it makes the bindings invisible to the user while the page is loading.\n\nAn alternative solution to this problem would be using the\n{@link ng.directive:ngCloak ngCloak} directive.",
            "element": "ANY",
            "params": [
                {
                    "name": "ngBind",
                    "description": "{@link guide/expression Expression} to evaluate.",
                    "type": "Expression"
                }
            ],
            "example": [
                "\nEnter a name in the Live Preview text box; the greeting below the text box changes instantly.\n  <example module=\"bindExample\">\n    <file name=\"index.html\">\n      <script>\n        angular.module('bindExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.name = 'Whirled';\n          }]);\n      </script>\n      <div ng-controller=\"ExampleController\">\n        Enter name: <input type=\"text\" ng-model=\"name\"><br>\n        Hello <span ng-bind=\"name\"></span>!\n      </div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should check ng-bind', function() {\n        var nameInput = element(by.model('name'));\n\n        expect(element(by.binding('name')).getText()).toBe('Whirled');\n        nameInput.clear();\n        nameInput.sendKeys('world');\n        expect(element(by.binding('name')).getText()).toBe('world');\n      });\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 20462,
            "ngdoc": "directive",
            "name": "ngBindTemplate",
            "description": "The `ngBindTemplate` directive specifies that the element\ntext content should be replaced with the interpolation of the template\nin the `ngBindTemplate` attribute.\nUnlike `ngBind`, the `ngBindTemplate` can contain multiple `{{` `}}`\nexpressions. This directive is needed since some HTML elements\n(such as TITLE and OPTION) cannot contain SPAN elements.",
            "element": "ANY",
            "params": [
                {
                    "name": "ngBindTemplate",
                    "description": "template of form\n  <tt>{{</tt> <tt>expression</tt> <tt>}}</tt> to eval.",
                    "type": "String"
                }
            ],
            "example": [
                "\nTry it here: enter text in text box and watch the greeting change.\n  <example module=\"bindExample\">\n    <file name=\"index.html\">\n      <script>\n        angular.module('bindExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.salutation = 'Hello';\n            $scope.name = 'World';\n          }]);\n      </script>\n      <div ng-controller=\"ExampleController\">\n       Salutation: <input type=\"text\" ng-model=\"salutation\"><br>\n       Name: <input type=\"text\" ng-model=\"name\"><br>\n       <pre ng-bind-template=\"{{salutation}} {{name}}!\"></pre>\n      </div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should check ng-bind', function() {\n        var salutationElem = element(by.binding('salutation'));\n        var salutationInput = element(by.model('salutation'));\n        var nameInput = element(by.model('name'));\n\n        expect(salutationElem.getText()).toBe('Hello World!');\n\n        salutationInput.clear();\n        salutationInput.sendKeys('Greetings');\n        nameInput.clear();\n        nameInput.sendKeys('user');\n\n        expect(salutationElem.getText()).toBe('Greetings user!');\n      });\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 20530,
            "ngdoc": "directive",
            "name": "ngBindHtml",
            "description": "Evaluates the expression and inserts the resulting HTML into the element in a secure way. By default,\nthe resulting HTML content will be sanitized using the {@link ngSanitize.$sanitize $sanitize} service.\nTo utilize this functionality, ensure that `$sanitize` is available, for example, by including {@link\nngSanitize} in your module's dependencies (not in core Angular). In order to use {@link ngSanitize}\nin your module's dependencies, you need to include \"angular-sanitize.js\" in your application.\n\nYou may also bypass sanitization for values you know are safe. To do so, bind to\nan explicitly trusted value via {@link ng.$sce#trustAsHtml $sce.trustAsHtml}.  See the example\nunder {@link ng.$sce#show-me-an-example-using-sce- Strict Contextual Escaping (SCE)}.\n\nNote: If a `$sanitize` service is unavailable and the bound value isn't explicitly trusted, you\nwill have an exception (instead of an exploit.)",
            "element": "ANY",
            "params": [
                {
                    "name": "ngBindHtml",
                    "description": "{@link guide/expression Expression} to evaluate.",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n\n  <example module=\"bindHtmlExample\" deps=\"angular-sanitize.js\">\n    <file name=\"index.html\">\n      <div ng-controller=\"ExampleController\">\n       <p ng-bind-html=\"myHTML\"></p>\n      </div>\n    </file>\n\n    <file name=\"script.js\">\n      angular.module('bindHtmlExample', ['ngSanitize'])\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.myHTML =\n             'I am an <code>HTML</code>string with ' +\n             '<a href=\"#\">links!</a> and other <em>stuff</em>';\n        }]);\n    </file>\n\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should check ng-bind-html', function() {\n        expect(element(by.binding('myHTML')).getText()).toBe(\n            'I am an HTMLstring with links! and other stuff');\n      });\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 20600,
            "ngdoc": "directive",
            "name": "ngChange",
            "description": "Evaluate the given expression when the user changes the input.\nThe expression is evaluated immediately, unlike the JavaScript onchange event\nwhich only triggers at the end of a change (usually, when the user leaves the\nform element or presses the return key).\n\nThe `ngChange` expression is only evaluated when a change in the input value causes\na new value to be committed to the model.\n\nIt will not be evaluated:\n* if the value returned from the `$parsers` transformation pipeline has not changed\n* if the input has continued to be invalid since the model will stay `null`\n* if the model is changed programmatically and not by a change to the input value\n\n\nNote, this directive requires `ngModel` to be present.",
            "element": "input",
            "params": [
                {
                    "name": "ngChange",
                    "description": "{@link guide/expression Expression} to evaluate upon change\nin input value.",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n<example name=\"ngChange-directive\" module=\"changeExample\">\n  <file name=\"index.html\">\n    <script>\n      angular.module('changeExample', [])\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.counter = 0;\n          $scope.change = function() {\n            $scope.counter++;\n          };\n        }]);\n    </script>\n    <div ng-controller=\"ExampleController\">\n      <input type=\"checkbox\" ng-model=\"confirmed\" ng-change=\"change()\" id=\"ng-change-example1\" />\n      <input type=\"checkbox\" ng-model=\"confirmed\" id=\"ng-change-example2\" />\n      <label for=\"ng-change-example2\">Confirmed</label><br />\n      <tt>debug = {{confirmed}}</tt><br/>\n      <tt>counter = {{counter}}</tt><br/>\n    </div>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n    var counter = element(by.binding('counter'));\n    var debug = element(by.binding('confirmed'));\n\n    it('should evaluate the expression if changing from view', function() {\n      expect(counter.getText()).toContain('0');\n\n      element(by.id('ng-change-example1')).click();\n\n      expect(counter.getText()).toContain('1');\n      expect(debug.getText()).toContain('true');\n    });\n\n    it('should not evaluate the expression if changing from model', function() {\n      element(by.id('ng-change-example2')).click();\n\n      expect(counter.getText()).toContain('0');\n      expect(debug.getText()).toContain('true');\n    });\n  </file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 20791,
            "ngdoc": "directive",
            "name": "ngClass",
            "restrict": "AC",
            "description": "The `ngClass` directive allows you to dynamically set CSS classes on an HTML element by databinding\nan expression that represents all classes to be added.\n\nThe directive operates in three different ways, depending on which of three types the expression\nevaluates to:\n\n1. If the expression evaluates to a string, the string should be one or more space-delimited class\nnames.\n\n2. If the expression evaluates to an array, each element of the array should be a string that is\none or more space-delimited class names.\n\n3. If the expression evaluates to an object, then for each key-value pair of the\nobject with a truthy value the corresponding key is used as a class name.\n\nThe directive won't add duplicate classes if a particular class was already set.\n\nWhen the expression changes, the previously added classes are removed and only then the\nnew classes are added.",
            "animations": "**add** - happens just before the class is applied to the elements\n\n**remove** - happens just before the class is removed from the element",
            "element": "ANY",
            "params": [
                {
                    "name": "ngClass",
                    "description": "{@link guide/expression Expression} to eval. The result\n  of the evaluation can be a string representing space delimited class\n  names, an array, or a map of class names to boolean values. In the case of a map, the\n  names of the properties whose values are truthy will be added as css classes to the\n  element.",
                    "type": "Expression"
                }
            ],
            "example": [
                " Example that demonstrates basic bindings via ngClass directive.\n  <example>\n    <file name=\"index.html\">\n      <p ng-class=\"{strike: deleted, bold: important, red: error}\">Map Syntax Example</p>\n      <input type=\"checkbox\" ng-model=\"deleted\"> deleted (apply \"strike\" class)<br>\n      <input type=\"checkbox\" ng-model=\"important\"> important (apply \"bold\" class)<br>\n      <input type=\"checkbox\" ng-model=\"error\"> error (apply \"red\" class)\n      <hr>\n      <p ng-class=\"style\">Using String Syntax</p>\n      <input type=\"text\" ng-model=\"style\" placeholder=\"Type: bold strike red\">\n      <hr>\n      <p ng-class=\"[style1, style2, style3]\">Using Array Syntax</p>\n      <input ng-model=\"style1\" placeholder=\"Type: bold, strike or red\"><br>\n      <input ng-model=\"style2\" placeholder=\"Type: bold, strike or red\"><br>\n      <input ng-model=\"style3\" placeholder=\"Type: bold, strike or red\"><br>\n    </file>\n    <file name=\"style.css\">\n      .strike {\n        text-decoration: line-through;\n      }\n      .bold {\n          font-weight: bold;\n      }\n      .red {\n          color: red;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var ps = element.all(by.css('p'));\n\n      it('should let you toggle the class', function() {\n\n        expect(ps.first().getAttribute('class')).not.toMatch(/bold/);\n        expect(ps.first().getAttribute('class')).not.toMatch(/red/);\n\n        element(by.model('important')).click();\n        expect(ps.first().getAttribute('class')).toMatch(/bold/);\n\n        element(by.model('error')).click();\n        expect(ps.first().getAttribute('class')).toMatch(/red/);\n      });\n\n      it('should let you toggle string example', function() {\n        expect(ps.get(1).getAttribute('class')).toBe('');\n        element(by.model('style')).clear();\n        element(by.model('style')).sendKeys('red');\n        expect(ps.get(1).getAttribute('class')).toBe('red');\n      });\n\n      it('array example should have 3 classes', function() {\n        expect(ps.last().getAttribute('class')).toBe('');\n        element(by.model('style1')).sendKeys('bold');\n        element(by.model('style2')).sendKeys('strike');\n        element(by.model('style3')).sendKeys('red');\n        expect(ps.last().getAttribute('class')).toBe('bold strike red');\n      });\n    </file>\n  </example>\n\n  ## Animations\n\n  The example below demonstrates how to perform animations using ngClass.\n\n  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n    <file name=\"index.html\">\n     <input id=\"setbtn\" type=\"button\" value=\"set\" ng-click=\"myVar='my-class'\">\n     <input id=\"clearbtn\" type=\"button\" value=\"clear\" ng-click=\"myVar=''\">\n     <br>\n     <span class=\"base-class\" ng-class=\"myVar\">Sample Text</span>\n    </file>\n    <file name=\"style.css\">\n      .base-class {\n        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n      }\n\n      .base-class.my-class {\n        color: red;\n        font-size:3em;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should check ng-class', function() {\n        expect(element(by.css('.base-class')).getAttribute('class')).not.\n          toMatch(/my-class/);\n\n        element(by.id('setbtn')).click();\n\n        expect(element(by.css('.base-class')).getAttribute('class')).\n          toMatch(/my-class/);\n\n        element(by.id('clearbtn')).click();\n\n        expect(element(by.css('.base-class')).getAttribute('class')).not.\n          toMatch(/my-class/);\n      });\n    </file>\n  </example>\n\n\n  ## ngClass and pre-existing CSS3 Transitions/Animations\n  The ngClass directive still supports CSS3 Transitions/Animations even if they do not follow the ngAnimate CSS naming structure.\n  Upon animation ngAnimate will apply supplementary CSS classes to track the start and end of an animation, but this will not hinder\n  any pre-existing CSS transitions already on the element. To get an idea of what happens during a class-based animation, be sure\n  to view the step by step details of {@link ng.$animate#addClass $animate.addClass} and\n  {@link ng.$animate#removeClass $animate.removeClass}."
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 20938,
            "ngdoc": "directive",
            "name": "ngClassOdd",
            "restrict": "AC",
            "description": "The `ngClassOdd` and `ngClassEven` directives work exactly as\n{@link ng.directive:ngClass ngClass}, except they work in\nconjunction with `ngRepeat` and take effect only on odd (even) rows.\n\nThis directive can be applied only within the scope of an\n{@link ng.directive:ngRepeat ngRepeat}.",
            "element": "ANY",
            "params": [
                {
                    "name": "ngClassOdd",
                    "description": "{@link guide/expression Expression} to eval. The result\n  of the evaluation can be a string representing space delimited class names or an array.",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n       <ol ng-init=\"names=['John', 'Mary', 'Cate', 'Suz']\">\n         <li ng-repeat=\"name in names\">\n          <span ng-class-odd=\"'odd'\" ng-class-even=\"'even'\">\n            {{name}}\n          </span>\n         </li>\n       </ol>\n    </file>\n    <file name=\"style.css\">\n      .odd {\n        color: red;\n      }\n      .even {\n        color: blue;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should check ng-class-odd and ng-class-even', function() {\n        expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).\n          toMatch(/odd/);\n        expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).\n          toMatch(/even/);\n      });\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 20986,
            "ngdoc": "directive",
            "name": "ngClassEven",
            "restrict": "AC",
            "description": "The `ngClassOdd` and `ngClassEven` directives work exactly as\n{@link ng.directive:ngClass ngClass}, except they work in\nconjunction with `ngRepeat` and take effect only on odd (even) rows.\n\nThis directive can be applied only within the scope of an\n{@link ng.directive:ngRepeat ngRepeat}.",
            "element": "ANY",
            "params": [
                {
                    "name": "ngClassEven",
                    "description": "{@link guide/expression Expression} to eval. The\n  result of the evaluation can be a string representing space delimited class names or an array.",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n       <ol ng-init=\"names=['John', 'Mary', 'Cate', 'Suz']\">\n         <li ng-repeat=\"name in names\">\n          <span ng-class-odd=\"'odd'\" ng-class-even=\"'even'\">\n            {{name}} &nbsp; &nbsp; &nbsp;\n          </span>\n         </li>\n       </ol>\n    </file>\n    <file name=\"style.css\">\n      .odd {\n        color: red;\n      }\n      .even {\n        color: blue;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should check ng-class-odd and ng-class-even', function() {\n        expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).\n          toMatch(/odd/);\n        expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).\n          toMatch(/even/);\n      });\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21034,
            "ngdoc": "directive",
            "name": "ngCloak",
            "restrict": "AC",
            "description": "The `ngCloak` directive is used to prevent the Angular html template from being briefly\ndisplayed by the browser in its raw (uncompiled) form while your application is loading. Use this\ndirective to avoid the undesirable flicker effect caused by the html template display.\n\nThe directive can be applied to the `<body>` element, but the preferred usage is to apply\nmultiple `ngCloak` directives to small portions of the page to permit progressive rendering\nof the browser view.\n\n`ngCloak` works in cooperation with the following css rule embedded within `angular.js` and\n`angular.min.js`.\nFor CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\n\n```css\n[ng\\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {\n  display: none !important;\n}\n```\n\nWhen this css rule is loaded by the browser, all html elements (including their children) that\nare tagged with the `ngCloak` directive are hidden. When Angular encounters this directive\nduring the compilation of the template it deletes the `ngCloak` element attribute, making\nthe compiled element visible.\n\nFor the best result, the `angular.js` script must be loaded in the head section of the html\ndocument; alternatively, the css rule above must be included in the external stylesheet of the\napplication.\n\nLegacy browsers, like IE7, do not provide attribute selector support (added in CSS 2.1) so they\ncannot match the `[ng\\:cloak]` selector. To work around this limitation, you must add the css\nclass `ng-cloak` in addition to the `ngCloak` directive as shown in the example below.",
            "element": "ANY",
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n       <div id=\"template1\" ng-cloak>{{ 'hello' }}</div>\n       <div id=\"template2\" ng-cloak class=\"ng-cloak\">{{ 'hello IE7' }}</div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should remove the template directive and css class', function() {\n        expect($('#template1').getAttribute('ng-cloak')).\n          toBeNull();\n        expect($('#template2').getAttribute('ng-cloak')).\n          toBeNull();\n      });\n    </file>\n  </example>\n"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21097,
            "ngdoc": "directive",
            "name": "ngController",
            "description": "The `ngController` directive attaches a controller class to the view. This is a key aspect of how angular\nsupports the principles behind the Model-View-Controller design pattern.\n\nMVC components in angular:\n\n* Model — Models are the properties of a scope; scopes are attached to the DOM where scope properties\n  are accessed through bindings.\n* View — The template (HTML with data bindings) that is rendered into the View.\n* Controller — The `ngController` directive specifies a Controller class; the class contains business\n  logic behind the application to decorate the scope with functions and values\n\nNote that you can also attach controllers to the DOM by declaring it in a route definition\nvia the {@link ngRoute.$route $route} service. A common mistake is to declare the controller\nagain using `ng-controller` in the template itself.  This will cause the controller to be attached\nand executed twice.",
            "element": "ANY",
            "scope": "",
            "priority": "500",
            "params": [
                {
                    "name": "ngController",
                    "description": "Name of a constructor function registered with the current\n{@link ng.$controllerProvider $controllerProvider} or an {@link guide/expression expression}\nthat on the current scope evaluates to a constructor function.\n\nThe controller instance can be published into a scope property by specifying\n`ng-controller=\"as propertyName\"`.\n\nIf the current `$controllerProvider` is configured to use globals (via\n{@link ng.$controllerProvider#allowGlobals `$controllerProvider.allowGlobals()` }), this may\nalso be the name of a globally accessible constructor function (not recommended).",
                    "type": "Expression"
                }
            ],
            "example": [
                "\nHere is a simple form for editing user contact information. Adding, removing, clearing, and\ngreeting are methods declared on the controller (see source tab). These methods can\neasily be called from the angular markup. Any changes to the data are automatically reflected\nin the View without the need for a manual update.\n\nTwo different declaration styles are included below:\n\n* one binds methods and properties directly onto the controller using `this`:\n`ng-controller=\"SettingsController1 as settings\"`\n* one injects `$scope` into the controller:\n`ng-controller=\"SettingsController2\"`\n\nThe second option is more common in the Angular community, and is generally used in boilerplates\nand in this guide. However, there are advantages to binding properties directly to the controller\nand avoiding scope.\n\n* Using `controller as` makes it obvious which controller you are accessing in the template when\nmultiple controllers apply to an element.\n* If you are writing your controllers as classes you have easier access to the properties and\nmethods, which will appear on the scope, from inside the controller code.\n* Since there is always a `.` in the bindings, you don't have to worry about prototypal\ninheritance masking primitives.\n\nThis example demonstrates the `controller as` syntax.\n\n<example name=\"ngControllerAs\" module=\"controllerAsExample\">\n  <file name=\"index.html\">\n   <div id=\"ctrl-as-exmpl\" ng-controller=\"SettingsController1 as settings\">\n     Name: <input type=\"text\" ng-model=\"settings.name\"/>\n     [ <a href=\"\" ng-click=\"settings.greet()\">greet</a> ]<br/>\n     Contact:\n     <ul>\n       <li ng-repeat=\"contact in settings.contacts\">\n         <select ng-model=\"contact.type\">\n            <option>phone</option>\n            <option>email</option>\n         </select>\n         <input type=\"text\" ng-model=\"contact.value\"/>\n         [ <a href=\"\" ng-click=\"settings.clearContact(contact)\">clear</a>\n         | <a href=\"\" ng-click=\"settings.removeContact(contact)\">X</a> ]\n       </li>\n       <li>[ <a href=\"\" ng-click=\"settings.addContact()\">add</a> ]</li>\n    </ul>\n   </div>\n  </file>\n  <file name=\"app.js\">\n   angular.module('controllerAsExample', [])\n     .controller('SettingsController1', SettingsController1);\n\n   function SettingsController1() {\n     this.name = \"John Smith\";\n     this.contacts = [\n       {type: 'phone', value: '408 555 1212'},\n       {type: 'email', value: 'john.smith@example.org'} ];\n   }\n\n   SettingsController1.prototype.greet = function() {\n     alert(this.name);\n   };\n\n   SettingsController1.prototype.addContact = function() {\n     this.contacts.push({type: 'email', value: 'yourname@example.org'});\n   };\n\n   SettingsController1.prototype.removeContact = function(contactToRemove) {\n    var index = this.contacts.indexOf(contactToRemove);\n     this.contacts.splice(index, 1);\n   };\n\n   SettingsController1.prototype.clearContact = function(contact) {\n     contact.type = 'phone';\n     contact.value = '';\n   };\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n    it('should check controller as', function() {\n      var container = element(by.id('ctrl-as-exmpl'));\n        expect(container.element(by.model('settings.name'))\n          .getAttribute('value')).toBe('John Smith');\n\n      var firstRepeat =\n          container.element(by.repeater('contact in settings.contacts').row(0));\n      var secondRepeat =\n          container.element(by.repeater('contact in settings.contacts').row(1));\n\n      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n          .toBe('408 555 1212');\n\n      expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))\n          .toBe('john.smith@example.org');\n\n      firstRepeat.element(by.linkText('clear')).click();\n\n      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n          .toBe('');\n\n      container.element(by.linkText('add')).click();\n\n      expect(container.element(by.repeater('contact in settings.contacts').row(2))\n          .element(by.model('contact.value'))\n          .getAttribute('value'))\n          .toBe('yourname@example.org');\n    });\n  </file>\n</example>\n\nThis example demonstrates the \"attach to `$scope`\" style of controller.\n\n<example name=\"ngController\" module=\"controllerExample\">\n <file name=\"index.html\">\n  <div id=\"ctrl-exmpl\" ng-controller=\"SettingsController2\">\n    Name: <input type=\"text\" ng-model=\"name\"/>\n    [ <a href=\"\" ng-click=\"greet()\">greet</a> ]<br/>\n    Contact:\n    <ul>\n      <li ng-repeat=\"contact in contacts\">\n        <select ng-model=\"contact.type\">\n           <option>phone</option>\n           <option>email</option>\n        </select>\n        <input type=\"text\" ng-model=\"contact.value\"/>\n        [ <a href=\"\" ng-click=\"clearContact(contact)\">clear</a>\n        | <a href=\"\" ng-click=\"removeContact(contact)\">X</a> ]\n      </li>\n      <li>[ <a href=\"\" ng-click=\"addContact()\">add</a> ]</li>\n   </ul>\n  </div>\n </file>\n <file name=\"app.js\">\n  angular.module('controllerExample', [])\n    .controller('SettingsController2', ['$scope', SettingsController2]);\n\n  function SettingsController2($scope) {\n    $scope.name = \"John Smith\";\n    $scope.contacts = [\n      {type:'phone', value:'408 555 1212'},\n      {type:'email', value:'john.smith@example.org'} ];\n\n    $scope.greet = function() {\n      alert($scope.name);\n    };\n\n    $scope.addContact = function() {\n      $scope.contacts.push({type:'email', value:'yourname@example.org'});\n    };\n\n    $scope.removeContact = function(contactToRemove) {\n      var index = $scope.contacts.indexOf(contactToRemove);\n      $scope.contacts.splice(index, 1);\n    };\n\n    $scope.clearContact = function(contact) {\n      contact.type = 'phone';\n      contact.value = '';\n    };\n  }\n </file>\n <file name=\"protractor.js\" type=\"protractor\">\n   it('should check controller', function() {\n     var container = element(by.id('ctrl-exmpl'));\n\n     expect(container.element(by.model('name'))\n         .getAttribute('value')).toBe('John Smith');\n\n     var firstRepeat =\n         container.element(by.repeater('contact in contacts').row(0));\n     var secondRepeat =\n         container.element(by.repeater('contact in contacts').row(1));\n\n     expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n         .toBe('408 555 1212');\n     expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))\n         .toBe('john.smith@example.org');\n\n     firstRepeat.element(by.linkText('clear')).click();\n\n     expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n         .toBe('');\n\n     container.element(by.linkText('add')).click();\n\n     expect(container.element(by.repeater('contact in contacts').row(2))\n         .element(by.model('contact.value'))\n         .getAttribute('value'))\n         .toBe('yourname@example.org');\n   });\n </file>\n</example>\n"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21332,
            "ngdoc": "directive",
            "name": "ngCsp",
            "element": "html",
            "description": "Enables [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) support.\n\nThis is necessary when developing things like Google Chrome Extensions or Universal Windows Apps.\n\nCSP forbids apps to use `eval` or `Function(string)` generated functions (among other things).\nFor Angular to be CSP compatible there are only two things that we need to do differently:\n\n- don't use `Function` constructor to generate optimized value getters\n- don't inject custom stylesheet into the document\n\nAngularJS uses `Function(string)` generated functions as a speed optimization. Applying the `ngCsp`\ndirective will cause Angular to use CSP compatibility mode. When this mode is on AngularJS will\nevaluate all expressions up to 30% slower than in non-CSP mode, but no security violations will\nbe raised.\n\nCSP forbids JavaScript to inline stylesheet rules. In non CSP mode Angular automatically\nincludes some CSS rules (e.g. {@link ng.directive:ngCloak ngCloak}).\nTo make those directives work in CSP mode, include the `angular-csp.css` manually.\n\nAngular tries to autodetect if CSP is active and automatically turn on the CSP-safe mode. This\nautodetection however triggers a CSP error to be logged in the console:\n\n```\nRefused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of\nscript in the following Content Security Policy directive: \"default-src 'self'\". Note that\n'script-src' was not explicitly set, so 'default-src' is used as a fallback.\n```\n\nThis error is harmless but annoying. To prevent the error from showing up, put the `ngCsp`\ndirective on the root element of the application or on the `angular.js` script tag, whichever\nappears first in the html document.\n\n*Note: This directive is only available in the `ng-csp` and `data-ng-csp` attribute form.*",
            "example": [
                "\nThis example shows how to apply the `ngCsp` directive to the `html` tag.\n  ```html\n    <!doctype html>\n    <html ng-app ng-csp>\n    ...\n    ...\n    </html>\n  ```",
                "\n     // Note: the suffix `.csp` in the example name triggers\n     // csp mode in our http server!\n     <example name=\"example.csp\" module=\"cspExample\" ng-csp=\"true\">\n       <file name=\"index.html\">\n         <div ng-controller=\"MainController as ctrl\">\n           <div>\n             <button ng-click=\"ctrl.inc()\" id=\"inc\">Increment</button>\n             <span id=\"counter\">\n               {{ctrl.counter}}\n             </span>\n           </div>\n\n           <div>\n             <button ng-click=\"ctrl.evil()\" id=\"evil\">Evil</button>\n             <span id=\"evilError\">\n               {{ctrl.evilError}}\n             </span>\n           </div>\n         </div>\n       </file>\n       <file name=\"script.js\">\n          angular.module('cspExample', [])\n            .controller('MainController', function() {\n               this.counter = 0;\n               this.inc = function() {\n                 this.counter++;\n               };\n               this.evil = function() {\n                 // jshint evil:true\n                 try {\n                   eval('1+2');\n                 } catch (e) {\n                   this.evilError = e.message;\n                 }\n               };\n             });\n       </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         var util, webdriver;\n\n         var incBtn = element(by.id('inc'));\n         var counter = element(by.id('counter'));\n         var evilBtn = element(by.id('evil'));\n         var evilError = element(by.id('evilError'));\n\n         function getAndClearSevereErrors() {\n           return browser.manage().logs().get('browser').then(function(browserLog) {\n             return browserLog.filter(function(logEntry) {\n               return logEntry.level.value > webdriver.logging.Level.WARNING.value;\n             });\n           });\n         }\n\n         function clearErrors() {\n           getAndClearSevereErrors();\n         }\n\n         function expectNoErrors() {\n           getAndClearSevereErrors().then(function(filteredLog) {\n             expect(filteredLog.length).toEqual(0);\n             if (filteredLog.length) {\n               console.log('browser console errors: ' + util.inspect(filteredLog));\n             }\n           });\n         }\n\n         function expectError(regex) {\n           getAndClearSevereErrors().then(function(filteredLog) {\n             var found = false;\n             filteredLog.forEach(function(log) {\n               if (log.message.match(regex)) {\n                 found = true;\n               }\n             });\n             if (!found) {\n               throw new Error('expected an error that matches ' + regex);\n             }\n           });\n         }\n\n         beforeEach(function() {\n           util = require('util');\n           webdriver = require('protractor/node_modules/selenium-webdriver');\n         });\n\n         // For now, we only test on Chrome,\n         // as Safari does not load the page with Protractor's injected scripts,\n         // and Firefox webdriver always disables content security policy (#6358)\n         if (browser.params.browser !== 'chrome') {\n           return;\n         }\n\n         it('should not report errors when the page is loaded', function() {\n           // clear errors so we are not dependent on previous tests\n           clearErrors();\n           // Need to reload the page as the page is already loaded when\n           // we come here\n           browser.driver.getCurrentUrl().then(function(url) {\n             browser.get(url);\n           });\n           expectNoErrors();\n         });\n\n         it('should evaluate expressions', function() {\n           expect(counter.getText()).toEqual('0');\n           incBtn.click();\n           expect(counter.getText()).toEqual('1');\n           expectNoErrors();\n         });\n\n         it('should throw and report an error when using \"eval\"', function() {\n           evilBtn.click();\n           expect(evilError.getText()).toMatch(/Content Security Policy/);\n           expectError(/Content Security Policy/);\n         });\n       </file>\n     </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21505,
            "ngdoc": "directive",
            "name": "ngClick",
            "description": "The ngClick directive allows you to specify custom behavior when\nan element is clicked.",
            "element": "ANY",
            "priority": "0",
            "params": [
                {
                    "name": "ngClick",
                    "description": "{@link guide/expression Expression} to evaluate upon\nclick. ({@link guide/expression#-event- Event object is available as `$event`})",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n     <button ng-click=\"count = count + 1\" ng-init=\"count=0\">\n       Increment\n     </button>\n     <span>\n       count: {{count}}\n     </span>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should check ng-click', function() {\n        expect(element(by.binding('count')).getText()).toMatch('0');\n        element(by.css('button')).click();\n        expect(element(by.binding('count')).getText()).toMatch('1');\n      });\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21581,
            "ngdoc": "directive",
            "name": "ngDblclick",
            "description": "The `ngDblclick` directive allows you to specify custom behavior on a dblclick event.",
            "element": "ANY",
            "priority": "0",
            "params": [
                {
                    "name": "ngDblclick",
                    "description": "{@link guide/expression Expression} to evaluate upon\na dblclick. (The Event object is available as `$event`)",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n     <button ng-dblclick=\"count = count + 1\" ng-init=\"count=0\">\n       Increment (on double click)\n     </button>\n     count: {{count}}\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21605,
            "ngdoc": "directive",
            "name": "ngMousedown",
            "description": "The ngMousedown directive allows you to specify custom behavior on mousedown event.",
            "element": "ANY",
            "priority": "0",
            "params": [
                {
                    "name": "ngMousedown",
                    "description": "{@link guide/expression Expression} to evaluate upon\nmousedown. ({@link guide/expression#-event- Event object is available as `$event`})",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n     <button ng-mousedown=\"count = count + 1\" ng-init=\"count=0\">\n       Increment (on mouse down)\n     </button>\n     count: {{count}}\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21629,
            "ngdoc": "directive",
            "name": "ngMouseup",
            "description": "Specify custom behavior on mouseup event.",
            "element": "ANY",
            "priority": "0",
            "params": [
                {
                    "name": "ngMouseup",
                    "description": "{@link guide/expression Expression} to evaluate upon\nmouseup. ({@link guide/expression#-event- Event object is available as `$event`})",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n     <button ng-mouseup=\"count = count + 1\" ng-init=\"count=0\">\n       Increment (on mouse up)\n     </button>\n     count: {{count}}\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21652,
            "ngdoc": "directive",
            "name": "ngMouseover",
            "description": "Specify custom behavior on mouseover event.",
            "element": "ANY",
            "priority": "0",
            "params": [
                {
                    "name": "ngMouseover",
                    "description": "{@link guide/expression Expression} to evaluate upon\nmouseover. ({@link guide/expression#-event- Event object is available as `$event`})",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n     <button ng-mouseover=\"count = count + 1\" ng-init=\"count=0\">\n       Increment (when mouse is over)\n     </button>\n     count: {{count}}\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21676,
            "ngdoc": "directive",
            "name": "ngMouseenter",
            "description": "Specify custom behavior on mouseenter event.",
            "element": "ANY",
            "priority": "0",
            "params": [
                {
                    "name": "ngMouseenter",
                    "description": "{@link guide/expression Expression} to evaluate upon\nmouseenter. ({@link guide/expression#-event- Event object is available as `$event`})",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n     <button ng-mouseenter=\"count = count + 1\" ng-init=\"count=0\">\n       Increment (when mouse enters)\n     </button>\n     count: {{count}}\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21700,
            "ngdoc": "directive",
            "name": "ngMouseleave",
            "description": "Specify custom behavior on mouseleave event.",
            "element": "ANY",
            "priority": "0",
            "params": [
                {
                    "name": "ngMouseleave",
                    "description": "{@link guide/expression Expression} to evaluate upon\nmouseleave. ({@link guide/expression#-event- Event object is available as `$event`})",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n     <button ng-mouseleave=\"count = count + 1\" ng-init=\"count=0\">\n       Increment (when mouse leaves)\n     </button>\n     count: {{count}}\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21724,
            "ngdoc": "directive",
            "name": "ngMousemove",
            "description": "Specify custom behavior on mousemove event.",
            "element": "ANY",
            "priority": "0",
            "params": [
                {
                    "name": "ngMousemove",
                    "description": "{@link guide/expression Expression} to evaluate upon\nmousemove. ({@link guide/expression#-event- Event object is available as `$event`})",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n     <button ng-mousemove=\"count = count + 1\" ng-init=\"count=0\">\n       Increment (when mouse moves)\n     </button>\n     count: {{count}}\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21748,
            "ngdoc": "directive",
            "name": "ngKeydown",
            "description": "Specify custom behavior on keydown event.",
            "element": "ANY",
            "priority": "0",
            "params": [
                {
                    "name": "ngKeydown",
                    "description": "{@link guide/expression Expression} to evaluate upon\nkeydown. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n     <input ng-keydown=\"count = count + 1\" ng-init=\"count=0\">\n     key down count: {{count}}\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21770,
            "ngdoc": "directive",
            "name": "ngKeyup",
            "description": "Specify custom behavior on keyup event.",
            "element": "ANY",
            "priority": "0",
            "params": [
                {
                    "name": "ngKeyup",
                    "description": "{@link guide/expression Expression} to evaluate upon\nkeyup. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n      <p>Typing in the input box below updates the key count</p>\n      <input ng-keyup=\"count = count + 1\" ng-init=\"count=0\"> key up count: {{count}}\n\n      <p>Typing in the input box below updates the keycode</p>\n      <input ng-keyup=\"event=$event\">\n      <p>event keyCode: {{ event.keyCode }}</p>\n      <p>event altKey: {{ event.altKey }}</p>\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21797,
            "ngdoc": "directive",
            "name": "ngKeypress",
            "description": "Specify custom behavior on keypress event.",
            "element": "ANY",
            "params": [
                {
                    "name": "ngKeypress",
                    "description": "{@link guide/expression Expression} to evaluate upon\nkeypress. ({@link guide/expression#-event- Event object is available as `$event`}\nand can be interrogated for keyCode, altKey, etc.)",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n     <input ng-keypress=\"count = count + 1\" ng-init=\"count=0\">\n     key press count: {{count}}\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21819,
            "ngdoc": "directive",
            "name": "ngSubmit",
            "description": "Enables binding angular expressions to onsubmit events.\n\nAdditionally it prevents the default action (which for form means sending the request to the\nserver and reloading the current page), but only if the form does not contain `action`,\n`data-action`, or `x-action` attributes.\n\n<div class=\"alert alert-warning\">\n**Warning:** Be careful not to cause \"double-submission\" by using both the `ngClick` and\n`ngSubmit` handlers together. See the\n{@link form#submitting-a-form-and-preventing-the-default-action `form` directive documentation}\nfor a detailed discussion of when `ngSubmit` may be triggered.\n</div>",
            "element": "form",
            "priority": "0",
            "params": [
                {
                    "name": "ngSubmit",
                    "description": "{@link guide/expression Expression} to eval.\n({@link guide/expression#-event- Event object is available as `$event`})",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example module=\"submitExample\">\n    <file name=\"index.html\">\n     <script>\n       angular.module('submitExample', [])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.list = [];\n           $scope.text = 'hello';\n           $scope.submit = function() {\n             if ($scope.text) {\n               $scope.list.push(this.text);\n               $scope.text = '';\n             }\n           };\n         }]);\n     </script>\n     <form ng-submit=\"submit()\" ng-controller=\"ExampleController\">\n       Enter text and hit enter:\n       <input type=\"text\" ng-model=\"text\" name=\"text\" />\n       <input type=\"submit\" id=\"submit\" value=\"Submit\" />\n       <pre>list={{list}}</pre>\n     </form>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should check ng-submit', function() {\n        expect(element(by.binding('list')).getText()).toBe('list=[]');\n        element(by.css('#submit')).click();\n        expect(element(by.binding('list')).getText()).toContain('hello');\n        expect(element(by.model('text')).getAttribute('value')).toBe('');\n      });\n      it('should ignore empty strings', function() {\n        expect(element(by.binding('list')).getText()).toBe('list=[]');\n        element(by.css('#submit')).click();\n        element(by.css('#submit')).click();\n        expect(element(by.binding('list')).getText()).toContain('hello');\n       });\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21882,
            "ngdoc": "directive",
            "name": "ngFocus",
            "description": "Specify custom behavior on focus event.\n\nNote: As the `focus` event is executed synchronously when calling `input.focus()`\nAngularJS executes the expression using `scope.$evalAsync` if the event is fired\nduring an `$apply` to ensure a consistent state.",
            "element": "window, input, select, textarea, a",
            "priority": "0",
            "params": [
                {
                    "name": "ngFocus",
                    "description": "{@link guide/expression Expression} to evaluate upon\nfocus. ({@link guide/expression#-event- Event object is available as `$event`})",
                    "type": "Expression"
                }
            ],
            "example": [
                "\nSee {@link ng.directive:ngClick ngClick}"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21902,
            "ngdoc": "directive",
            "name": "ngBlur",
            "description": "Specify custom behavior on blur event.\n\nA [blur event](https://developer.mozilla.org/en-US/docs/Web/Events/blur) fires when\nan element has lost focus.\n\nNote: As the `blur` event is executed synchronously also during DOM manipulations\n(e.g. removing a focussed input),\nAngularJS executes the expression using `scope.$evalAsync` if the event is fired\nduring an `$apply` to ensure a consistent state.",
            "element": "window, input, select, textarea, a",
            "priority": "0",
            "params": [
                {
                    "name": "ngBlur",
                    "description": "{@link guide/expression Expression} to evaluate upon\nblur. ({@link guide/expression#-event- Event object is available as `$event`})",
                    "type": "Expression"
                }
            ],
            "example": [
                "\nSee {@link ng.directive:ngClick ngClick}"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21926,
            "ngdoc": "directive",
            "name": "ngCopy",
            "description": "Specify custom behavior on copy event.",
            "element": "window, input, select, textarea, a",
            "priority": "0",
            "params": [
                {
                    "name": "ngCopy",
                    "description": "{@link guide/expression Expression} to evaluate upon\ncopy. ({@link guide/expression#-event- Event object is available as `$event`})",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n     <input ng-copy=\"copied=true\" ng-init=\"copied=false; value='copy me'\" ng-model=\"value\">\n     copied: {{copied}}\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21947,
            "ngdoc": "directive",
            "name": "ngCut",
            "description": "Specify custom behavior on cut event.",
            "element": "window, input, select, textarea, a",
            "priority": "0",
            "params": [
                {
                    "name": "ngCut",
                    "description": "{@link guide/expression Expression} to evaluate upon\ncut. ({@link guide/expression#-event- Event object is available as `$event`})",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n     <input ng-cut=\"cut=true\" ng-init=\"cut=false; value='cut me'\" ng-model=\"value\">\n     cut: {{cut}}\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21968,
            "ngdoc": "directive",
            "name": "ngPaste",
            "description": "Specify custom behavior on paste event.",
            "element": "window, input, select, textarea, a",
            "priority": "0",
            "params": [
                {
                    "name": "ngPaste",
                    "description": "{@link guide/expression Expression} to evaluate upon\npaste. ({@link guide/expression#-event- Event object is available as `$event`})",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n     <input ng-paste=\"paste=true\" ng-init=\"paste=false\" placeholder='paste here'>\n     pasted: {{paste}}\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 21989,
            "ngdoc": "directive",
            "name": "ngIf",
            "restrict": "A",
            "description": "The `ngIf` directive removes or recreates a portion of the DOM tree based on an\n{expression}. If the expression assigned to `ngIf` evaluates to a false\nvalue then the element is removed from the DOM, otherwise a clone of the\nelement is reinserted into the DOM.\n\n`ngIf` differs from `ngShow` and `ngHide` in that `ngIf` completely removes and recreates the\nelement in the DOM rather than changing its visibility via the `display` css property.  A common\ncase when this difference is significant is when using css selectors that rely on an element's\nposition within the DOM, such as the `:first-child` or `:last-child` pseudo-classes.\n\nNote that when an element is removed using `ngIf` its scope is destroyed and a new scope\nis created when the element is restored.  The scope created within `ngIf` inherits from\nits parent scope using\n[prototypal inheritance](https://github.com/angular/angular.js/wiki/Understanding-Scopes#javascript-prototypal-inheritance).\nAn important implication of this is if `ngModel` is used within `ngIf` to bind to\na javascript primitive defined in the parent scope. In this case any modifications made to the\nvariable within the child scope will override (hide) the value in the parent scope.\n\nAlso, `ngIf` recreates elements using their compiled state. An example of this behavior\nis if an element's class attribute is directly modified after it's compiled, using something like\njQuery's `.addClass()` method, and the element is later removed. When `ngIf` recreates the element\nthe added class will be lost because the original compiled state is used to regenerate the element.\n\nAdditionally, you can provide animations via the `ngAnimate` module to animate the `enter`\nand `leave` effects.",
            "animations": "enter - happens just after the `ngIf` contents change and a new DOM element is created and injected into the `ngIf` container\nleave - happens just before the `ngIf` contents are removed from the DOM",
            "element": "ANY",
            "scope": "",
            "priority": "600",
            "params": [
                {
                    "name": "ngIf",
                    "description": "If the {@link guide/expression expression} is falsy then\n    the element is removed from the DOM tree. If it is truthy a copy of the compiled\n    element is added to the DOM tree.",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n   <file name=\"index.html\">\n     Click me: <input type=\"checkbox\" ng-model=\"checked\" ng-init=\"checked=true\" /><br/>\n     Show when checked:\n     <span ng-if=\"checked\" class=\"animate-if\">\n       This is removed when the checkbox is unchecked.\n     </span>\n   </file>\n   <file name=\"animations.css\">\n     .animate-if {\n       background:white;\n       border:1px solid black;\n       padding:10px;\n     }\n\n     .animate-if.ng-enter, .animate-if.ng-leave {\n       -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n       transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n     }\n\n     .animate-if.ng-enter,\n     .animate-if.ng-leave.ng-leave-active {\n       opacity:0;\n     }\n\n     .animate-if.ng-leave,\n     .animate-if.ng-enter.ng-enter-active {\n       opacity:1;\n     }\n   </file>\n </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 22113,
            "ngdoc": "directive",
            "name": "ngInclude",
            "restrict": "ECA",
            "description": "Fetches, compiles and includes an external HTML fragment.\n\nBy default, the template URL is restricted to the same domain and protocol as the\napplication document. This is done by calling {@link $sce#getTrustedResourceUrl\n$sce.getTrustedResourceUrl} on it. To load templates from other domains or protocols\nyou may either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist them} or\n{@link $sce#trustAsResourceUrl wrap them} as trusted values. Refer to Angular's {@link\nng.$sce Strict Contextual Escaping}.\n\nIn addition, the browser's\n[Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\nand [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\npolicy may further restrict whether the template is successfully loaded.\nFor example, `ngInclude` won't work for cross-domain requests on all browsers and for `file://`\naccess on some browsers.",
            "animations": "enter - animation is used to bring new content into the browser.\nleave - animation is used to animate existing content away.\n\nThe enter and leave animation occur concurrently.",
            "scope": "",
            "priority": "400",
            "params": [
                {
                    "name": "ngInclude|src",
                    "description": "angular expression evaluating to URL. If the source is a string constant,\n                make sure you wrap it in **single** quotes, e.g. `src=\"'myPartialTemplate.html'\"`.",
                    "type": "String"
                },
                {
                    "name": "onload",
                    "description": "Expression to evaluate when a new partial is loaded.",
                    "type": "String="
                },
                {
                    "name": "autoscroll",
                    "description": "Whether `ngInclude` should call {@link ng.$anchorScroll\n                 $anchorScroll} to scroll the viewport after the content is loaded.\n\n                 - If the attribute is not set, disable scrolling.\n                 - If the attribute is set without value, enable scrolling.\n                 - Otherwise enable scrolling only if the expression evaluates to truthy value.",
                    "type": "String="
                }
            ],
            "example": [
                "\n <example module=\"includeExample\" deps=\"angular-animate.js\" animations=\"true\">\n   <file name=\"index.html\">\n    <div ng-controller=\"ExampleController\">\n      <select ng-model=\"template\" ng-options=\"t.name for t in templates\">\n       <option value=\"\">(blank)</option>\n      </select>\n      url of the template: <code>{{template.url}}</code>\n      <hr/>\n      <div class=\"slide-animate-container\">\n        <div class=\"slide-animate\" ng-include=\"template.url\"></div>\n      </div>\n    </div>\n   </file>\n   <file name=\"script.js\">\n     angular.module('includeExample', ['ngAnimate'])\n       .controller('ExampleController', ['$scope', function($scope) {\n         $scope.templates =\n           [ { name: 'template1.html', url: 'template1.html'},\n             { name: 'template2.html', url: 'template2.html'} ];\n         $scope.template = $scope.templates[0];\n       }]);\n    </file>\n   <file name=\"template1.html\">\n     Content of template1.html\n   </file>\n   <file name=\"template2.html\">\n     Content of template2.html\n   </file>\n   <file name=\"animations.css\">\n     .slide-animate-container {\n       position:relative;\n       background:white;\n       border:1px solid black;\n       height:40px;\n       overflow:hidden;\n     }\n\n     .slide-animate {\n       padding:10px;\n     }\n\n     .slide-animate.ng-enter, .slide-animate.ng-leave {\n       -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n       transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\n       position:absolute;\n       top:0;\n       left:0;\n       right:0;\n       bottom:0;\n       display:block;\n       padding:10px;\n     }\n\n     .slide-animate.ng-enter {\n       top:-50px;\n     }\n     .slide-animate.ng-enter.ng-enter-active {\n       top:0;\n     }\n\n     .slide-animate.ng-leave {\n       top:0;\n     }\n     .slide-animate.ng-leave.ng-leave-active {\n       top:50px;\n     }\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     var templateSelect = element(by.model('template'));\n     var includeElem = element(by.css('[ng-include]'));\n\n     it('should load template1.html', function() {\n       expect(includeElem.getText()).toMatch(/Content of template1.html/);\n     });\n\n     it('should load template2.html', function() {\n       if (browser.params.browser == 'firefox') {\n         // Firefox can't handle using selects\n         // See https://github.com/angular/protractor/issues/480\n         return;\n       }\n       templateSelect.click();\n       templateSelect.all(by.css('option')).get(2).click();\n       expect(includeElem.getText()).toMatch(/Content of template2.html/);\n     });\n\n     it('should change to blank', function() {\n       if (browser.params.browser == 'firefox') {\n         // Firefox can't handle using selects\n         return;\n       }\n       templateSelect.click();\n       templateSelect.all(by.css('option')).get(0).click();\n       expect(includeElem.isPresent()).toBe(false);\n     });\n   </file>\n </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 22257,
            "ngdoc": "event",
            "name": "ngInclude#$includeContentRequested",
            "eventtype": "emit on the scope ngInclude was declared in",
            "description": "Emitted every time the ngInclude content is requested.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "src",
                    "description": "URL of content to load.",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 22269,
            "ngdoc": "event",
            "name": "ngInclude#$includeContentLoaded",
            "eventtype": "emit on the current ngInclude scope",
            "description": "Emitted every time the ngInclude content is reloaded.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "src",
                    "description": "URL of content to load.",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 22281,
            "ngdoc": "event",
            "name": "ngInclude#$includeContentError",
            "eventtype": "emit on the scope ngInclude was declared in",
            "description": "Emitted when a template HTTP request yields an erroneous response (status < 200 || status > 299)",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "src",
                    "description": "URL of content to load.",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 22407,
            "ngdoc": "directive",
            "name": "ngInit",
            "restrict": "AC",
            "description": "The `ngInit` directive allows you to evaluate an expression in the\ncurrent scope.\n\n<div class=\"alert alert-error\">\nThe only appropriate use of `ngInit` is for aliasing special properties of\n{@link ng.directive:ngRepeat `ngRepeat`}, as seen in the demo below. Besides this case, you\nshould use {@link guide/controller controllers} rather than `ngInit`\nto initialize values on a scope.\n</div>\n<div class=\"alert alert-warning\">\n**Note**: If you have assignment in `ngInit` along with {@link ng.$filter `$filter`}, make\nsure you have parenthesis for correct precedence:\n<pre class=\"prettyprint\">\n`<div ng-init=\"test1 = (data | orderBy:'name')\"></div>`\n</pre>\n</div>",
            "priority": "450",
            "element": "ANY",
            "params": [
                {
                    "name": "ngInit",
                    "description": "{@link guide/expression Expression} to eval.",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example module=\"initExample\">\n    <file name=\"index.html\">\n  <script>\n    angular.module('initExample', [])\n      .controller('ExampleController', ['$scope', function($scope) {\n        $scope.list = [['a', 'b'], ['c', 'd']];\n      }]);\n  </script>\n  <div ng-controller=\"ExampleController\">\n    <div ng-repeat=\"innerList in list\" ng-init=\"outerIndex = $index\">\n      <div ng-repeat=\"value in innerList\" ng-init=\"innerIndex = $index\">\n         <span class=\"example-init\">list[ {{outerIndex}} ][ {{innerIndex}} ] = {{value}};</span>\n      </div>\n    </div>\n  </div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should alias index positions', function() {\n        var elements = element.all(by.css('.example-init'));\n        expect(elements.get(0).getText()).toBe('list[ 0 ][ 0 ] = a;');\n        expect(elements.get(1).getText()).toBe('list[ 0 ][ 1 ] = b;');\n        expect(elements.get(2).getText()).toBe('list[ 1 ][ 0 ] = c;');\n        expect(elements.get(3).getText()).toBe('list[ 1 ][ 1 ] = d;');\n      });\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 22474,
            "ngdoc": "directive",
            "name": "ngList",
            "description": "Text input that converts between a delimited string and an array of strings. The default\ndelimiter is a comma followed by a space - equivalent to `ng-list=\", \"`. You can specify a custom\ndelimiter as the value of the `ngList` attribute - for example, `ng-list=\" | \"`.\n\nThe behaviour of the directive is affected by the use of the `ngTrim` attribute.\n* If `ngTrim` is set to `\"false\"` then whitespace around both the separator and each\n  list item is respected. This implies that the user of the directive is responsible for\n  dealing with whitespace but also allows you to use whitespace as a delimiter, such as a\n  tab or newline character.\n* Otherwise whitespace around the delimiter is ignored when splitting (although it is respected\n  when joining the list items back together) and whitespace around each list item is stripped\n  before it is added to the model.\n\n### Example with Validation\n\n<example name=\"ngList-directive\" module=\"listExample\">\n  <file name=\"app.js\">\n     angular.module('listExample', [])\n       .controller('ExampleController', ['$scope', function($scope) {\n         $scope.names = ['morpheus', 'neo', 'trinity'];\n       }]);\n  </file>\n  <file name=\"index.html\">\n   <form name=\"myForm\" ng-controller=\"ExampleController\">\n     List: <input name=\"namesInput\" ng-model=\"names\" ng-list required>\n     <span class=\"error\" ng-show=\"myForm.namesInput.$error.required\">\n       Required!</span>\n     <br>\n     <tt>names = {{names}}</tt><br/>\n     <tt>myForm.namesInput.$valid = {{myForm.namesInput.$valid}}</tt><br/>\n     <tt>myForm.namesInput.$error = {{myForm.namesInput.$error}}</tt><br/>\n     <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n     <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n    </form>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n    var listInput = element(by.model('names'));\n    var names = element(by.exactBinding('names'));\n    var valid = element(by.binding('myForm.namesInput.$valid'));\n    var error = element(by.css('span.error'));\n\n    it('should initialize to model', function() {\n      expect(names.getText()).toContain('[\"morpheus\",\"neo\",\"trinity\"]');\n      expect(valid.getText()).toContain('true');\n      expect(error.getCssValue('display')).toBe('none');\n    });\n\n    it('should be invalid if empty', function() {\n      listInput.clear();\n      listInput.sendKeys('');\n\n      expect(names.getText()).toContain('');\n      expect(valid.getText()).toContain('false');\n      expect(error.getCssValue('display')).not.toBe('none');\n    });\n  </file>\n</example>\n\n### Example - splitting on whitespace\n<example name=\"ngList-directive-newlines\">\n  <file name=\"index.html\">\n   <textarea ng-model=\"list\" ng-list=\"&#10;\" ng-trim=\"false\"></textarea>\n   <pre>{{ list | json }}</pre>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n    it(\"should split the text by newlines\", function() {\n      var listInput = element(by.model('list'));\n      var output = element(by.binding('list | json'));\n      listInput.sendKeys('abc\\ndef\\nghi');\n      expect(output.getText()).toContain('[\\n  \"abc\",\\n  \"def\",\\n  \"ghi\"\\n]');\n    });\n  </file>\n</example>",
            "element": "input",
            "params": [
                {
                    "name": "ngList",
                    "description": "optional delimiter that should be used to split the value.",
                    "type": "String="
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 22619,
            "ngdoc": "type",
            "name": "{string} $name The name attribute of the control.",
            "itemtype": "property",
            "type": "String",
            "description": "`NgModelController` provides API for the {@link ngModel `ngModel`} directive.\nThe controller contains services for data-binding, validation, CSS updates, and value formatting\nand parsing. It purposefully does not contain any logic which deals with DOM rendering or\nlistening to DOM events.\nSuch DOM related logic should be provided by other directives which make use of\n`NgModelController` for data-binding to control elements.\nAngular provides this DOM logic for most {@link input `input`} elements.\nAt the end of this page you can find a {@link ngModel.NgModelController#custom-control-example\ncustom control example} that uses `ngModelController` to bind to `contenteditable` elements.",
            "example": [
                "\n### Custom Control Example\nThis example shows how to use `NgModelController` with a custom control to achieve\ndata-binding. Notice how different directives (`contenteditable`, `ng-model`, and `required`)\ncollaborate together to achieve the desired result.\n\n`contenteditable` is an HTML5 attribute, which tells the browser to let the element\ncontents be edited in place by the user.\n\nWe are using the {@link ng.service:$sce $sce} service here and include the {@link ngSanitize $sanitize}\nmodule to automatically remove \"bad\" content like inline event listener (e.g. `<span onclick=\"...\">`).\nHowever, as we are using `$sce` the model can still decide to provide unsafe content if it marks\nthat content using the `$sce` service.\n\n<example name=\"NgModelController\" module=\"customControl\" deps=\"angular-sanitize.js\">\n   <file name=\"style.css\">\n     [contenteditable] {\n       border: 1px solid black;\n       background-color: white;\n       min-height: 20px;\n     }\n\n     .ng-invalid {\n       border: 1px solid red;\n     }\n\n   </file>\n   <file name=\"script.js\">\n     angular.module('customControl', ['ngSanitize']).\n       directive('contenteditable', ['$sce', function($sce) {\n         return {\n           restrict: 'A', // only activate on element attribute\n           require: '?ngModel', // get a hold of NgModelController\n           link: function(scope, element, attrs, ngModel) {\n             if (!ngModel) return; // do nothing if no ng-model\n\n             // Specify how UI should be updated\n             ngModel.$render = function() {\n               element.html($sce.getTrustedHtml(ngModel.$viewValue || ''));\n             };\n\n             // Listen for change events to enable binding\n             element.on('blur keyup change', function() {\n               scope.$evalAsync(read);\n             });\n             read(); // initialize\n\n             // Write data to the model\n             function read() {\n               var html = element.html();\n               // When we clear the content editable the browser leaves a <br> behind\n               // If strip-br attribute is provided then we strip this out\n               if ( attrs.stripBr && html == '<br>' ) {\n                 html = '';\n               }\n               ngModel.$setViewValue(html);\n             }\n           }\n         };\n       }]);\n   </file>\n   <file name=\"index.html\">\n     <form name=\"myForm\">\n      <div contenteditable\n           name=\"myWidget\" ng-model=\"userContent\"\n           strip-br=\"true\"\n           required>Change me!</div>\n       <span ng-show=\"myForm.myWidget.$error.required\">Required!</span>\n      <hr>\n      <textarea ng-model=\"userContent\"></textarea>\n     </form>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n   it('should data-bind and become invalid', function() {\n     if (browser.params.browser == 'safari' || browser.params.browser == 'firefox') {\n       // SafariDriver can't handle contenteditable\n       // and Firefox driver can't clear contenteditables very well\n       return;\n     }\n     var contentEditable = element(by.css('[contenteditable]'));\n     var content = 'Change me!';\n\n     expect(contentEditable.getText()).toEqual(content);\n\n     contentEditable.clear();\n     contentEditable.sendKeys(protractor.Key.BACK_SPACE);\n     expect(contentEditable.getText()).toEqual('');\n     expect(contentEditable.getAttribute('class')).toMatch(/ng-invalid-required/);\n   });\n   </file>\n</example>\n\n"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 22873,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$render",
            "description": "Called when the view needs to be updated. It is expected that the user of the ng-model\ndirective will implement this method.\n\nThe `$render()` method is invoked in the following situations:\n\n* `$rollbackViewValue()` is called.  If we are rolling back the view value to the last\n  committed value then `$render()` is called to update the input control.\n* The value referenced by `ng-model` is changed programmatically and both the `$modelValue` and\n  the `$viewValue` are different to last time.\n\nSince `ng-model` does not do a deep watch, `$render()` is only invoked if the values of\n`$modelValue` and `$viewValue` are actually different to their previous value. If `$modelValue`\nor `$viewValue` are objects (rather than a string or number) then `$render()` will not be\ninvoked if you only change a property on the objects.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 22895,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$isEmpty",
            "description": "This is called when we need to determine if the value of an input is empty.\n\nFor instance, the required directive does this to work out if the input has data or not.\n\nThe default `$isEmpty` function checks whether the value is `undefined`, `''`, `null` or `NaN`.\n\nYou can override this for input directives whose concept of being empty is different to the\ndefault. The `checkboxInputType` directive does this because in its case a value of `false`\nimplies empty.",
            "params": [
                {
                    "name": "value",
                    "description": "The value of the input to check for emptiness.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "True if `value` is \"empty\".",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 22920,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$setValidity",
            "description": "Change the validity state, and notify the form.\n\nThis method can be called within $parsers/$formatters or a custom validation implementation.\nHowever, in most cases it should be sufficient to use the `ngModel.$validators` and\n`ngModel.$asyncValidators` collections which will call `$setValidity` automatically.",
            "params": [
                {
                    "name": "validationErrorKey",
                    "description": "Name of the validator. The `validationErrorKey` will be assigned\n       to either `$error[validationErrorKey]` or `$pending[validationErrorKey]`\n       (for unfulfilled `$asyncValidators`), so that it is available for data-binding.\n       The `validationErrorKey` should be in camelCase and will get converted into dash-case\n       for class name. Example: `myError` will result in `ng-valid-my-error` and `ng-invalid-my-error`\n       class and can be bound to as  `{{someForm.someControl.$error.myError}}` .",
                    "type": "String"
                },
                {
                    "name": "isValid",
                    "description": "Whether the current state is valid (true), invalid (false), pending (undefined),\n                         or skipped (null). Pending is used for unfulfilled `$asyncValidators`.\n                         Skipped is used by Angular when validators do not run because of parse errors and\n                         when `$asyncValidators` do not run because any of the `$validators` failed.",
                    "type": "Boolean"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 22955,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$setPristine",
            "description": "Sets the control to its pristine state.\n\nThis method can be called to remove the `ng-dirty` class and set the control to its pristine\nstate (`ng-pristine` class). A model is considered to be pristine when the control\nhas not been changed from when first compiled.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 22973,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$setDirty",
            "description": "Sets the control to its dirty state.\n\nThis method can be called to remove the `ng-pristine` class and set the control to its dirty\nstate (`ng-dirty` class). A model is considered to be dirty when the control has been changed\nfrom when first compiled.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 22992,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$setUntouched",
            "description": "Sets the control to its untouched state.\n\nThis method can be called to remove the `ng-touched` class and set the control to its\nuntouched state (`ng-untouched` class). Upon compilation, a model is set as untouched\nby default, however this function can be used to restore that state if the model has\nalready been touched by the user.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 23010,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$setTouched",
            "description": "Sets the control to its touched state.\n\nThis method can be called to remove the `ng-untouched` class and set the control to its\ntouched state (`ng-touched` class). A model is considered to be touched when the user has\nfirst focused the control element and then shifted focus away from the control (blur event).",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 23027,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$rollbackViewValue",
            "description": "Cancel an update and reset the input element's value to prevent an update to the `$modelValue`,\nwhich may be caused by a pending debounced event or because the input is waiting for a some\nfuture event.\n\nIf you have an input that uses `ng-model-options` to set up debounced events or events such\nas blur you can have a situation where there is a period when the `$viewValue`\nis out of synch with the ngModel's `$modelValue`.\n\nIn this case, you can run into difficulties if you try to update the ngModel's `$modelValue`\nprogrammatically before these debounced/future events have resolved/occurred, because Angular's\ndirty checking mechanism is not able to tell whether the model has actually changed or not.\n\nThe `$rollbackViewValue()` method should be called before programmatically changing the model of an\ninput which may have such events pending. This is important in order to make sure that the\ninput field will be updated with the new model value and any pending operations are cancelled.\n\n<example name=\"ng-model-cancel-update\" module=\"cancel-update-example\">\n  <file name=\"app.js\">\n    angular.module('cancel-update-example', [])\n\n    .controller('CancelUpdateController', ['$scope', function($scope) {\n      $scope.resetWithCancel = function(e) {\n        if (e.keyCode == 27) {\n          $scope.myForm.myInput1.$rollbackViewValue();\n          $scope.myValue = '';\n        }\n      };\n      $scope.resetWithoutCancel = function(e) {\n        if (e.keyCode == 27) {\n          $scope.myValue = '';\n        }\n      };\n    }]);\n  </file>\n  <file name=\"index.html\">\n    <div ng-controller=\"CancelUpdateController\">\n      <p>Try typing something in each input.  See that the model only updates when you\n         blur off the input.\n       </p>\n       <p>Now see what happens if you start typing then press the Escape key</p>\n\n      <form name=\"myForm\" ng-model-options=\"{ updateOn: 'blur' }\">\n        <p>With $rollbackViewValue()</p>\n        <input name=\"myInput1\" ng-model=\"myValue\" ng-keydown=\"resetWithCancel($event)\"><br/>\n        myValue: \"{{ myValue }}\"\n\n        <p>Without $rollbackViewValue()</p>\n        <input name=\"myInput2\" ng-model=\"myValue\" ng-keydown=\"resetWithoutCancel($event)\"><br/>\n        myValue: \"{{ myValue }}\"\n      </form>\n    </div>\n  </file>\n</example>",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 23092,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$validate",
            "description": "Runs each of the registered validators (first synchronous validators and then\nasynchronous validators).\nIf the validity changes to invalid, the model will be set to `undefined`,\nunless {@link ngModelOptions `ngModelOptions.allowInvalid`} is `true`.\nIf the validity changes to valid, it will set the model to the last available valid\nmodelValue, i.e. either the last parsed value or the last value set from the scope.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 23231,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$commitViewValue",
            "description": "Commit a pending update to the `$modelValue`.\n\nUpdates may be pending by a debounced event or because the input is waiting for a some future\nevent defined in `ng-model-options`. this method is rarely needed as `NgModelController`\nusually handles calling this in response to input events.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 23320,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$setViewValue",
            "description": "Update the view value.\n\nThis method should be called when an input directive want to change the view value; typically,\nthis is done from within a DOM event handler.\n\nFor example {@link ng.directive:input input} calls it when the value of the input changes and\n{@link ng.directive:select select} calls it when an option is selected.\n\nIf the new `value` is an object (rather than a string or a number), we should make a copy of the\nobject before passing it to `$setViewValue`.  This is because `ngModel` does not perform a deep\nwatch of objects, it only looks for a change of identity. If you only change the property of\nthe object then ngModel will not realise that the object has changed and will not invoke the\n`$parsers` and `$validators` pipelines.\n\nFor this reason, you should not change properties of the copy once it has been passed to\n`$setViewValue`. Otherwise you may cause the model value on the scope to change incorrectly.\n\nWhen this method is called, the new `value` will be staged for committing through the `$parsers`\nand `$validators` pipelines. If there are no special {@link ngModelOptions} specified then the staged\nvalue sent directly for processing, finally to be applied to `$modelValue` and then the\n**expression** specified in the `ng-model` attribute.\n\nLastly, all the registered change listeners, in the `$viewChangeListeners` list, are called.\n\nIn case the {@link ng.directive:ngModelOptions ngModelOptions} directive is used with `updateOn`\nand the `default` trigger is not listed, all those actions will remain pending until one of the\n`updateOn` events is triggered on the DOM element.\nAll these actions will be debounced if the {@link ng.directive:ngModelOptions ngModelOptions}\ndirective is used with a custom debounce for this particular event.\n\nNote that calling this function does not trigger a `$digest`.",
            "params": [
                {
                    "name": "value",
                    "description": "Value from the view.",
                    "type": "String"
                },
                {
                    "name": "trigger",
                    "description": "Event that triggered the update.",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 23434,
            "ngdoc": "directive",
            "name": "ngModel",
            "element": "input",
            "priority": "1",
            "description": "The `ngModel` directive binds an `input`,`select`, `textarea` (or custom form control) to a\nproperty on the scope using {@link ngModel.NgModelController NgModelController},\nwhich is created and exposed by this directive.\n\n`ngModel` is responsible for:\n\n- Binding the view into the model, which other directives such as `input`, `textarea` or `select`\n  require.\n- Providing validation behavior (i.e. required, number, email, url).\n- Keeping the state of the control (valid/invalid, dirty/pristine, touched/untouched, validation errors).\n- Setting related css classes on the element (`ng-valid`, `ng-invalid`, `ng-dirty`, `ng-pristine`, `ng-touched`, `ng-untouched`) including animations.\n- Registering the control with its parent {@link ng.directive:form form}.\n\nNote: `ngModel` will try to bind to the property given by evaluating the expression on the\ncurrent scope. If the property doesn't already exist on this scope, it will be created\nimplicitly and added to the scope.\n\nFor best practices on using `ngModel`, see:\n\n - [Understanding Scopes](https://github.com/angular/angular.js/wiki/Understanding-Scopes)\n\nFor basic examples, how to use `ngModel`, see:\n\n - {@link ng.directive:input input}\n   - {@link input[text] text}\n   - {@link input[checkbox] checkbox}\n   - {@link input[radio] radio}\n   - {@link input[number] number}\n   - {@link input[email] email}\n   - {@link input[url] url}\n   - {@link input[date] date}\n   - {@link input[datetime-local] datetime-local}\n   - {@link input[time] time}\n   - {@link input[month] month}\n   - {@link input[week] week}\n - {@link ng.directive:select select}\n - {@link ng.directive:textarea textarea}\n\n# CSS classes\nThe following CSS classes are added and removed on the associated input/select/textarea element\ndepending on the validity of the model.\n\n - `ng-valid`: the model is valid\n - `ng-invalid`: the model is invalid\n - `ng-valid-[key]`: for each valid key added by `$setValidity`\n - `ng-invalid-[key]`: for each invalid key added by `$setValidity`\n - `ng-pristine`: the control hasn't been interacted with yet\n - `ng-dirty`: the control has been interacted with\n - `ng-touched`: the control has been blurred\n - `ng-untouched`: the control hasn't been blurred\n - `ng-pending`: any `$asyncValidators` are unfulfilled\n\nKeep in mind that ngAnimate can detect each of these classes when added and removed.\n\n## Animation Hooks\n\nAnimations within models are triggered when any of the associated CSS classes are added and removed\non the input element which is attached to the model. These classes are: `.ng-pristine`, `.ng-dirty`,\n`.ng-invalid` and `.ng-valid` as well as any other validations that are performed on the model itself.\nThe animations that are triggered within ngModel are similar to how they work in ngClass and\nanimations can be hooked into using CSS transitions, keyframes as well as JS animations.\n\nThe following example shows a simple way to utilize CSS transitions to style an input element\nthat has been rendered as invalid after it has been validated:\n\n<pre>\n//be sure to include ngAnimate as a module to hook into more\n//advanced animations\n.my-input {\n  transition:0.5s linear all;\n  background: white;\n}\n.my-input.ng-invalid {\n  background: red;\n  color:white;\n}\n</pre>",
            "example": [
                "\n<example deps=\"angular-animate.js\" animations=\"true\" fixBase=\"true\" module=\"inputExample\">\n    <file name=\"index.html\">\n      <script>\n       angular.module('inputExample', [])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.val = '1';\n         }]);\n      </script>\n      <style>\n        .my-input {\n          -webkit-transition:all linear 0.5s;\n          transition:all linear 0.5s;\n          background: transparent;\n        }\n        .my-input.ng-invalid {\n          color:white;\n          background: red;\n        }\n      </style>\n      Update input to see transitions when valid/invalid.\n      Integer is a valid value.\n      <form name=\"testForm\" ng-controller=\"ExampleController\">\n        <input ng-model=\"val\" ng-pattern=\"/^\\d+$/\" name=\"anim\" class=\"my-input\" />\n      </form>\n    </file>\n</example>\n\n## Binding to a getter/setter\n\nSometimes it's helpful to bind `ngModel` to a getter/setter function.  A getter/setter is a\nfunction that returns a representation of the model when called with zero arguments, and sets\nthe internal state of a model when called with an argument. It's sometimes useful to use this\nfor models that have an internal representation that's different than what the model exposes\nto the view.\n\n<div class=\"alert alert-success\">\n**Best Practice:** It's best to keep getters fast because Angular is likely to call them more\nfrequently than other parts of your code.\n</div>\n\nYou use this behavior by adding `ng-model-options=\"{ getterSetter: true }\"` to an element that\nhas `ng-model` attached to it. You can also add `ng-model-options=\"{ getterSetter: true }\"` to\na `<form>`, which will enable this behavior for all `<input>`s within it. See\n{@link ng.directive:ngModelOptions `ngModelOptions`} for more.\n\nThe following example shows how to use `ngModel` with a getter/setter:",
                "\n<example name=\"ngModel-getter-setter\" module=\"getterSetterExample\">\n    <file name=\"index.html\">\n      <div ng-controller=\"ExampleController\">\n        <form name=\"userForm\">\n          Name:\n          <input type=\"text\" name=\"userName\"\n                 ng-model=\"user.name\"\n                 ng-model-options=\"{ getterSetter: true }\" />\n        </form>\n        <pre>user.name = <span ng-bind=\"user.name()\"></span></pre>\n      </div>\n    </file>\n    <file name=\"app.js\">\n      angular.module('getterSetterExample', [])\n        .controller('ExampleController', ['$scope', function($scope) {\n          var _name = 'Brian';\n          $scope.user = {\n            name: function(newName) {\n              if (angular.isDefined(newName)) {\n                _name = newName;\n              }\n              return _name;\n            }\n          };\n        }]);\n    </file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 23655,
            "ngdoc": "directive",
            "name": "ngModelOptions",
            "description": "Allows tuning how model updates are done. Using `ngModelOptions` you can specify a custom list of\nevents that will trigger a model update and/or a debouncing delay so that the actual update only\ntakes place when a timer expires; this timer will be reset after another change takes place.\n\nGiven the nature of `ngModelOptions`, the value displayed inside input fields in the view might\nbe different than the value in the actual model. This means that if you update the model you\nshould also invoke {@link ngModel.NgModelController `$rollbackViewValue`} on the relevant input field in\norder to make sure it is synchronized with the model and that any debounced action is canceled.\n\nThe easiest way to reference the control's {@link ngModel.NgModelController `$rollbackViewValue`}\nmethod is by making sure the input is placed inside a form that has a `name` attribute. This is\nimportant because `form` controllers are published to the related scope under the name in their\n`name` attribute.\n\nAny pending changes will take place immediately when an enclosing form is submitted via the\n`submit` event. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`\nto have access to the updated model.\n\n`ngModelOptions` has an effect on the element it's declared on and its descendants.",
            "params": [
                {
                    "name": "ngModelOptions",
                    "description": "options to apply to the current model. Valid keys are:\n  - `updateOn`: string specifying which event should the input be bound to. You can set several\n    events using an space delimited list. There is a special event called `default` that\n    matches the default events belonging of the control.\n  - `debounce`: integer value which contains the debounce model update value in milliseconds. A\n    value of 0 triggers an immediate update. If an object is supplied instead, you can specify a\n    custom value for each event. For example:\n    `ng-model-options=\"{ updateOn: 'default blur', debounce: {'default': 500, 'blur': 0} }\"`\n  - `allowInvalid`: boolean value which indicates that the model can be set with values that did\n    not validate correctly instead of the default behavior of setting the model to undefined.\n  - `getterSetter`: boolean value which determines whether or not to treat functions bound to\n      `ngModel` as getters/setters.\n  - `timezone`: Defines the timezone to be used to read/write the `Date` instance in the model for\n    `<input type=\"date\">`, `<input type=\"time\">`, ... . Right now, the only supported value is `'UTC'`,\n    otherwise the default timezone of the browser will be used.",
                    "type": "Object"
                }
            ],
            "example": [
                "\n\n The following example shows how to override immediate updates. Changes on the inputs within the\n form will update the model only when the control loses focus (blur event). If `escape` key is\n pressed while the input field is focused, the value is reset to the value in the current model.\n\n <example name=\"ngModelOptions-directive-blur\" module=\"optionsExample\">\n   <file name=\"index.html\">\n     <div ng-controller=\"ExampleController\">\n       <form name=\"userForm\">\n         Name:\n         <input type=\"text\" name=\"userName\"\n                ng-model=\"user.name\"\n                ng-model-options=\"{ updateOn: 'blur' }\"\n                ng-keyup=\"cancel($event)\" /><br />\n\n         Other data:\n         <input type=\"text\" ng-model=\"user.data\" /><br />\n       </form>\n       <pre>user.name = <span ng-bind=\"user.name\"></span></pre>\n     </div>\n   </file>\n   <file name=\"app.js\">\n     angular.module('optionsExample', [])\n       .controller('ExampleController', ['$scope', function($scope) {\n         $scope.user = { name: 'say', data: '' };\n\n         $scope.cancel = function(e) {\n           if (e.keyCode == 27) {\n             $scope.userForm.userName.$rollbackViewValue();\n           }\n         };\n       }]);\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     var model = element(by.binding('user.name'));\n     var input = element(by.model('user.name'));\n     var other = element(by.model('user.data'));\n\n     it('should allow custom events', function() {\n       input.sendKeys(' hello');\n       input.click();\n       expect(model.getText()).toEqual('say');\n       other.click();\n       expect(model.getText()).toEqual('say hello');\n     });\n\n     it('should $rollbackViewValue when model changes', function() {\n       input.sendKeys(' hello');\n       expect(input.getAttribute('value')).toEqual('say hello');\n       input.sendKeys(protractor.Key.ESCAPE);\n       expect(input.getAttribute('value')).toEqual('say');\n       other.click();\n       expect(model.getText()).toEqual('say');\n     });\n   </file>\n </example>\n\n This one shows how to debounce model changes. Model will be updated only 1 sec after last change.\n If the `Clear` button is pressed, any debounced action is canceled and the value becomes empty.\n\n <example name=\"ngModelOptions-directive-debounce\" module=\"optionsExample\">\n   <file name=\"index.html\">\n     <div ng-controller=\"ExampleController\">\n       <form name=\"userForm\">\n         Name:\n         <input type=\"text\" name=\"userName\"\n                ng-model=\"user.name\"\n                ng-model-options=\"{ debounce: 1000 }\" />\n         <button ng-click=\"userForm.userName.$rollbackViewValue(); user.name=''\">Clear</button><br />\n       </form>\n       <pre>user.name = <span ng-bind=\"user.name\"></span></pre>\n     </div>\n   </file>\n   <file name=\"app.js\">\n     angular.module('optionsExample', [])\n       .controller('ExampleController', ['$scope', function($scope) {\n         $scope.user = { name: 'say' };\n       }]);\n   </file>\n </example>\n\n This one shows how to bind to getter/setters:\n\n <example name=\"ngModelOptions-directive-getter-setter\" module=\"getterSetterExample\">\n   <file name=\"index.html\">\n     <div ng-controller=\"ExampleController\">\n       <form name=\"userForm\">\n         Name:\n         <input type=\"text\" name=\"userName\"\n                ng-model=\"user.name\"\n                ng-model-options=\"{ getterSetter: true }\" />\n       </form>\n       <pre>user.name = <span ng-bind=\"user.name()\"></span></pre>\n     </div>\n   </file>\n   <file name=\"app.js\">\n     angular.module('getterSetterExample', [])\n       .controller('ExampleController', ['$scope', function($scope) {\n         var _name = 'Brian';\n         $scope.user = {\n           name: function(newName) {\n             return angular.isDefined(newName) ? (_name = newName) : _name;\n           }\n         };\n       }]);\n   </file>\n </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 23933,
            "ngdoc": "directive",
            "name": "ngNonBindable",
            "restrict": "AC",
            "priority": "1000",
            "description": "The `ngNonBindable` directive tells Angular not to compile or bind the contents of the current\nDOM element. This is useful if the element contains what appears to be Angular directives and\nbindings but which should be ignored by Angular. This could be the case if you have a site that\ndisplays snippets of code, for instance.",
            "element": "ANY",
            "example": [
                "\nIn this example there are two locations where a simple interpolation binding (`{{}}`) is present,\nbut the one wrapped in `ngNonBindable` is left alone.",
                "\n   <example>\n     <file name=\"index.html\">\n       <div>Normal: {{1 + 2}}</div>\n       <div ng-non-bindable>Ignored: {{1 + 2}}</div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n      it('should check ng-non-bindable', function() {\n        expect(element(by.binding('1 + 2')).getText()).toContain('3');\n        expect(element.all(by.css('div')).last().getText()).toMatch(/1 \\+ 2/);\n      });\n     </file>\n   </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 23967,
            "ngdoc": "directive",
            "name": "ngPluralize",
            "restrict": "EA",
            "description": "`ngPluralize` is a directive that displays messages according to en-US localization rules.\nThese rules are bundled with angular.js, but can be overridden\n(see {@link guide/i18n Angular i18n} dev guide). You configure ngPluralize directive\nby specifying the mappings between\n[plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\nand the strings to be displayed.\n\n# Plural categories and explicit number rules\nThere are two\n[plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\nin Angular's default en-US locale: \"one\" and \"other\".\n\nWhile a plural category may match many numbers (for example, in en-US locale, \"other\" can match\nany number that is not 1), an explicit number rule can only match one number. For example, the\nexplicit number rule for \"3\" matches the number 3. There are examples of plural categories\nand explicit number rules throughout the rest of this documentation.\n\n# Configuring ngPluralize\nYou configure ngPluralize by providing 2 attributes: `count` and `when`.\nYou can also provide an optional attribute, `offset`.\n\nThe value of the `count` attribute can be either a string or an {@link guide/expression\nAngular expression}; these are evaluated on the current scope for its bound value.\n\nThe `when` attribute specifies the mappings between plural categories and the actual\nstring to be displayed. The value of the attribute should be a JSON object.\n\nThe following example shows how to configure ngPluralize:\n\n```html\n<ng-pluralize count=\"personCount\"\n                when=\"{'0': 'Nobody is viewing.',\n                     'one': '1 person is viewing.',\n                     'other': '{} people are viewing.'}\">\n</ng-pluralize>\n```\n\nIn the example, `\"0: Nobody is viewing.\"` is an explicit number rule. If you did not\nspecify this rule, 0 would be matched to the \"other\" category and \"0 people are viewing\"\nwould be shown instead of \"Nobody is viewing\". You can specify an explicit number rule for\nother numbers, for example 12, so that instead of showing \"12 people are viewing\", you can\nshow \"a dozen people are viewing\".\n\nYou can use a set of closed braces (`{}`) as a placeholder for the number that you want substituted\ninto pluralized strings. In the previous example, Angular will replace `{}` with\n<span ng-non-bindable>`{{personCount}}`</span>. The closed braces `{}` is a placeholder\nfor <span ng-non-bindable>{{numberExpression}}</span>.\n\n# Configuring ngPluralize with offset\nThe `offset` attribute allows further customization of pluralized text, which can result in\na better user experience. For example, instead of the message \"4 people are viewing this document\",\nyou might display \"John, Kate and 2 others are viewing this document\".\nThe offset attribute allows you to offset a number by any desired value.\nLet's take a look at an example:\n\n```html\n<ng-pluralize count=\"personCount\" offset=2\n              when=\"{'0': 'Nobody is viewing.',\n                     '1': '{{person1}} is viewing.',\n                     '2': '{{person1}} and {{person2}} are viewing.',\n                     'one': '{{person1}}, {{person2}} and one other person are viewing.',\n                     'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n</ng-pluralize>\n```\n\nNotice that we are still using two plural categories(one, other), but we added\nthree explicit number rules 0, 1 and 2.\nWhen one person, perhaps John, views the document, \"John is viewing\" will be shown.\nWhen three people view the document, no explicit number rule is found, so\nan offset of 2 is taken off 3, and Angular uses 1 to decide the plural category.\nIn this case, plural category 'one' is matched and \"John, Mary and one other person are viewing\"\nis shown.\n\nNote that when you specify offsets, you must provide explicit number rules for\nnumbers from 0 up to and including the offset. If you use an offset of 3, for example,\nyou must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for\nplural categories \"one\" and \"other\".",
            "params": [
                {
                    "name": "count",
                    "description": "The variable to be bound to.",
                    "type": "String|expression"
                },
                {
                    "name": "when",
                    "description": "The mapping between plural category to its corresponding strings.",
                    "type": "String"
                },
                {
                    "name": "offset",
                    "description": "Offset to deduct from the total number.",
                    "type": "Number="
                }
            ],
            "example": [
                "\n   <example module=\"pluralizeExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('pluralizeExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.person1 = 'Igor';\n             $scope.person2 = 'Misko';\n             $scope.personCount = 1;\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         Person 1:<input type=\"text\" ng-model=\"person1\" value=\"Igor\" /><br/>\n         Person 2:<input type=\"text\" ng-model=\"person2\" value=\"Misko\" /><br/>\n         Number of People:<input type=\"text\" ng-model=\"personCount\" value=\"1\" /><br/>\n\n         <!--- Example with simple pluralization rules for en locale --->\n         Without Offset:\n         <ng-pluralize count=\"personCount\"\n                       when=\"{'0': 'Nobody is viewing.',\n                              'one': '1 person is viewing.',\n                              'other': '{} people are viewing.'}\">\n         </ng-pluralize><br>\n\n         <!--- Example with offset --->\n         With Offset(2):\n         <ng-pluralize count=\"personCount\" offset=2\n                       when=\"{'0': 'Nobody is viewing.',\n                              '1': '{{person1}} is viewing.',\n                              '2': '{{person1}} and {{person2}} are viewing.',\n                              'one': '{{person1}}, {{person2}} and one other person are viewing.',\n                              'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n         </ng-pluralize>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should show correct pluralized string', function() {\n         var withoutOffset = element.all(by.css('ng-pluralize')).get(0);\n         var withOffset = element.all(by.css('ng-pluralize')).get(1);\n         var countInput = element(by.model('personCount'));\n\n         expect(withoutOffset.getText()).toEqual('1 person is viewing.');\n         expect(withOffset.getText()).toEqual('Igor is viewing.');\n\n         countInput.clear();\n         countInput.sendKeys('0');\n\n         expect(withoutOffset.getText()).toEqual('Nobody is viewing.');\n         expect(withOffset.getText()).toEqual('Nobody is viewing.');\n\n         countInput.clear();\n         countInput.sendKeys('2');\n\n         expect(withoutOffset.getText()).toEqual('2 people are viewing.');\n         expect(withOffset.getText()).toEqual('Igor and Misko are viewing.');\n\n         countInput.clear();\n         countInput.sendKeys('3');\n\n         expect(withoutOffset.getText()).toEqual('3 people are viewing.');\n         expect(withOffset.getText()).toEqual('Igor, Misko and one other person are viewing.');\n\n         countInput.clear();\n         countInput.sendKeys('4');\n\n         expect(withoutOffset.getText()).toEqual('4 people are viewing.');\n         expect(withOffset.getText()).toEqual('Igor, Misko and 2 other people are viewing.');\n       });\n       it('should show data-bound names', function() {\n         var withOffset = element.all(by.css('ng-pluralize')).get(1);\n         var personCount = element(by.model('personCount'));\n         var person1 = element(by.model('person1'));\n         var person2 = element(by.model('person2'));\n         personCount.clear();\n         personCount.sendKeys('4');\n         person1.clear();\n         person1.sendKeys('Di');\n         person2.clear();\n         person2.sendKeys('Vojta');\n         expect(withOffset.getText()).toEqual('Di, Vojta and 2 other people are viewing.');\n       });\n     </file>\n   </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 24195,
            "ngdoc": "directive",
            "name": "ngRepeat",
            "description": "The `ngRepeat` directive instantiates a template once per item from a collection. Each template\ninstance gets its own scope, where the given loop variable is set to the current collection item,\nand `$index` is set to the item index or key.\n\nSpecial properties are exposed on the local scope of each template instance, including:\n\n| Variable  | Type            | Details                                                                     |\n|-----------|-----------------|-----------------------------------------------------------------------------|\n| `$index`  | {@type number}  | iterator offset of the repeated element (0..length-1)                       |\n| `$first`  | {@type boolean} | true if the repeated element is first in the iterator.                      |\n| `$middle` | {@type boolean} | true if the repeated element is between the first and last in the iterator. |\n| `$last`   | {@type boolean} | true if the repeated element is last in the iterator.                       |\n| `$even`   | {@type boolean} | true if the iterator position `$index` is even (otherwise false).           |\n| `$odd`    | {@type boolean} | true if the iterator position `$index` is odd (otherwise false).            |\n\nCreating aliases for these properties is possible with {@link ng.directive:ngInit `ngInit`}.\nThis may be useful when, for instance, nesting ngRepeats.\n\n# Iterating over object properties\n\nIt is possible to get `ngRepeat` to iterate over the properties of an object using the following\nsyntax:\n\n```js\n<div ng-repeat=\"(key, value) in myObj\"> ... </div>\n```\n\nYou need to be aware that the JavaScript specification does not define what order\nit will return the keys for an object. In order to have a guaranteed deterministic order\nfor the keys, Angular versions up to and including 1.3 **sort the keys alphabetically**.\n\nIf this is not desired, the recommended workaround is to convert your object into an array\nthat is sorted into the order that you prefer before providing it to `ngRepeat`.  You could\ndo this with a filter such as [toArrayFilter](http://ngmodules.org/modules/angular-toArrayFilter)\nor implement a `$watch` on the object yourself.\n\nIn version 1.4 we will remove the sorting, since it seems that browsers generally follow the\nstrategy of providing keys in the order in which they were defined, although there are exceptions\nwhen keys are deleted and reinstated.\n\n\n# Tracking and Duplicates\n\nWhen the contents of the collection change, `ngRepeat` makes the corresponding changes to the DOM:\n\n* When an item is added, a new instance of the template is added to the DOM.\n* When an item is removed, its template instance is removed from the DOM.\n* When items are reordered, their respective templates are reordered in the DOM.\n\nBy default, `ngRepeat` does not allow duplicate items in arrays. This is because when\nthere are duplicates, it is not possible to maintain a one-to-one mapping between collection\nitems and DOM elements.\n\nIf you do need to repeat duplicate items, you can substitute the default tracking behavior\nwith your own using the `track by` expression.\n\nFor example, you may track items by the index of each item in the collection, using the\nspecial scope property `$index`:\n```html\n   <div ng-repeat=\"n in [42, 42, 43, 43] track by $index\">\n     {{n}}\n   </div>\n```\n\nYou may use arbitrary expressions in `track by`, including references to custom functions\non the scope:\n```html\n   <div ng-repeat=\"n in [42, 42, 43, 43] track by myTrackingFunction(n)\">\n     {{n}}\n   </div>\n```\n\nIf you are working with objects that have an identifier property, you can track\nby the identifier instead of the whole object. Should you reload your data later, `ngRepeat`\nwill not have to rebuild the DOM elements for items it has already rendered, even if the\nJavaScript objects in the collection have been substituted for new ones:\n```html\n   <div ng-repeat=\"model in collection track by model.id\">\n     {{model.name}}\n   </div>\n```\n\nWhen no `track by` expression is provided, it is equivalent to tracking by the built-in\n`$id` function, which tracks items by their identity:\n```html\n   <div ng-repeat=\"obj in collection track by $id(obj)\">\n     {{obj.prop}}\n   </div>\n```\n\n# Special repeat start and end points\nTo repeat a series of elements instead of just one parent element, ngRepeat (as well as other ng directives) supports extending\nthe range of the repeater by defining explicit start and end points by using **ng-repeat-start** and **ng-repeat-end** respectively.\nThe **ng-repeat-start** directive works the same as **ng-repeat**, but will repeat all the HTML code (including the tag it's defined on)\nup to and including the ending HTML tag where **ng-repeat-end** is placed.\n\nThe example below makes use of this feature:\n```html\n  <header ng-repeat-start=\"item in items\">\n    Header {{ item }}\n  </header>\n  <div class=\"body\">\n    Body {{ item }}\n  </div>\n  <footer ng-repeat-end>\n    Footer {{ item }}\n  </footer>\n```\n\nAnd with an input of {@type ['A','B']} for the items variable in the example above, the output will evaluate to:\n```html\n  <header>\n    Header A\n  </header>\n  <div class=\"body\">\n    Body A\n  </div>\n  <footer>\n    Footer A\n  </footer>\n  <header>\n    Header B\n  </header>\n  <div class=\"body\">\n    Body B\n  </div>\n  <footer>\n    Footer B\n  </footer>\n```\n\nThe custom start and end points for ngRepeat also support all other HTML directive syntax flavors provided in AngularJS (such\nas **data-ng-repeat-start**, **x-ng-repeat-start** and **ng:repeat-start**).",
            "animations": "**.enter** - when a new item is added to the list or when an item is revealed after a filter\n\n**.leave** - when an item is removed from the list or when an item is filtered out\n\n**.move** - when an adjacent item is filtered out causing a reorder or when the item contents are reordered",
            "element": "ANY",
            "scope": "",
            "priority": "1000",
            "params": [
                {
                    "name": "ngRepeat",
                    "description": "The expression indicating how to enumerate a collection. These\n  formats are currently supported:\n\n  * `variable in expression` – where variable is the user defined loop variable and `expression`\n    is a scope expression giving the collection to enumerate.\n\n    For example: `album in artist.albums`.\n\n  * `(key, value) in expression` – where `key` and `value` can be any user defined identifiers,\n    and `expression` is the scope expression giving the collection to enumerate.\n\n    For example: `(name, age) in {'adam':10, 'amalie':12}`.\n\n  * `variable in expression track by tracking_expression` – You can also provide an optional tracking expression\n    which can be used to associate the objects in the collection with the DOM elements. If no tracking expression\n    is specified, ng-repeat associates elements by identity. It is an error to have\n    more than one tracking expression value resolve to the same key. (This would mean that two distinct objects are\n    mapped to the same DOM element, which is not possible.)  If filters are used in the expression, they should be\n    applied before the tracking expression.\n\n    For example: `item in items` is equivalent to `item in items track by $id(item)`. This implies that the DOM elements\n    will be associated by item identity in the array.\n\n    For example: `item in items track by $id(item)`. A built in `$id()` function can be used to assign a unique\n    `$$hashKey` property to each item in the array. This property is then used as a key to associated DOM elements\n    with the corresponding item in the array by identity. Moving the same object in array would move the DOM\n    element in the same way in the DOM.\n\n    For example: `item in items track by item.id` is a typical pattern when the items come from the database. In this\n    case the object identity does not matter. Two objects are considered equivalent as long as their `id`\n    property is same.\n\n    For example: `item in items | filter:searchText track by item.id` is a pattern that might be used to apply a filter\n    to items in conjunction with a tracking expression.\n\n  * `variable in expression as alias_expression` – You can also provide an optional alias expression which will then store the\n    intermediate results of the repeater after the filters have been applied. Typically this is used to render a special message\n    when a filter is active on the repeater, but the filtered result set is empty.\n\n    For example: `item in items | filter:x as results` will store the fragment of the repeated items as `results`, but only after\n    the items have been processed through the filter.",
                    "type": "Repeat_expression"
                }
            ],
            "example": [
                "\nThis example initializes the scope to a list of names and\nthen uses `ngRepeat` to display every person:\n <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n   <file name=\"index.html\">\n     <div ng-init=\"friends = [\n       {name:'John', age:25, gender:'boy'},\n       {name:'Jessie', age:30, gender:'girl'},\n       {name:'Johanna', age:28, gender:'girl'},\n       {name:'Joy', age:15, gender:'girl'},\n       {name:'Mary', age:28, gender:'girl'},\n       {name:'Peter', age:95, gender:'boy'},\n       {name:'Sebastian', age:50, gender:'boy'},\n       {name:'Erika', age:27, gender:'girl'},\n       {name:'Patrick', age:40, gender:'boy'},\n       {name:'Samantha', age:60, gender:'girl'}\n     ]\">\n       I have {{friends.length}} friends. They are:\n       <input type=\"search\" ng-model=\"q\" placeholder=\"filter friends...\" />\n       <ul class=\"example-animate-container\">\n         <li class=\"animate-repeat\" ng-repeat=\"friend in friends | filter:q as results\">\n           [{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.\n         </li>\n         <li class=\"animate-repeat\" ng-if=\"results.length == 0\">\n           <strong>No results found...</strong>\n         </li>\n       </ul>\n     </div>\n   </file>\n   <file name=\"animations.css\">\n     .example-animate-container {\n       background:white;\n       border:1px solid black;\n       list-style:none;\n       margin:0;\n       padding:0 10px;\n     }\n\n     .animate-repeat {\n       line-height:40px;\n       list-style:none;\n       box-sizing:border-box;\n     }\n\n     .animate-repeat.ng-move,\n     .animate-repeat.ng-enter,\n     .animate-repeat.ng-leave {\n       -webkit-transition:all linear 0.5s;\n       transition:all linear 0.5s;\n     }\n\n     .animate-repeat.ng-leave.ng-leave-active,\n     .animate-repeat.ng-move,\n     .animate-repeat.ng-enter {\n       opacity:0;\n       max-height:0;\n     }\n\n     .animate-repeat.ng-leave,\n     .animate-repeat.ng-move.ng-move-active,\n     .animate-repeat.ng-enter.ng-enter-active {\n       opacity:1;\n       max-height:40px;\n     }\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     var friends = element.all(by.repeater('friend in friends'));\n\n     it('should render initial data set', function() {\n       expect(friends.count()).toBe(10);\n       expect(friends.get(0).getText()).toEqual('[1] John who is 25 years old.');\n       expect(friends.get(1).getText()).toEqual('[2] Jessie who is 30 years old.');\n       expect(friends.last().getText()).toEqual('[10] Samantha who is 60 years old.');\n       expect(element(by.binding('friends.length')).getText())\n           .toMatch(\"I have 10 friends. They are:\");\n     });\n\n      it('should update repeater when filter predicate changes', function() {\n        expect(friends.count()).toBe(10);\n\n        element(by.model('q')).sendKeys('ma');\n\n        expect(friends.count()).toBe(2);\n        expect(friends.get(0).getText()).toEqual('[1] Mary who is 28 years old.');\n        expect(friends.last().getText()).toEqual('[2] Samantha who is 60 years old.');\n      });\n     </file>\n   </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 24708,
            "ngdoc": "directive",
            "name": "ngShow",
            "description": "The `ngShow` directive shows or hides the given HTML element based on the expression\nprovided to the `ngShow` attribute. The element is shown or hidden by removing or adding\nthe `.ng-hide` CSS class onto the element. The `.ng-hide` CSS class is predefined\nin AngularJS and sets the display style to none (using an !important flag).\nFor CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\n\n```html\n<!-- when $scope.myValue is truthy (element is visible) -->\n<div ng-show=\"myValue\"></div>\n\n<!-- when $scope.myValue is falsy (element is hidden) -->\n<div ng-show=\"myValue\" class=\"ng-hide\"></div>\n```\n\nWhen the `ngShow` expression evaluates to a falsy value then the `.ng-hide` CSS class is added to the class\nattribute on the element causing it to become hidden. When truthy, the `.ng-hide` CSS class is removed\nfrom the element causing the element not to appear hidden.\n\n## Why is !important used?\n\nYou may be wondering why !important is used for the `.ng-hide` CSS class. This is because the `.ng-hide` selector\ncan be easily overridden by heavier selectors. For example, something as simple\nas changing the display style on a HTML list item would make hidden elements appear visible.\nThis also becomes a bigger issue when dealing with CSS frameworks.\n\nBy using !important, the show and hide behavior will work as expected despite any clash between CSS selector\nspecificity (when !important isn't used with any conflicting styles). If a developer chooses to override the\nstyling to change how to hide an element then it is just a matter of using !important in their own CSS code.\n\n### Overriding `.ng-hide`\n\nBy default, the `.ng-hide` class will style the element with `display: none!important`. If you wish to change\nthe hide behavior with ngShow/ngHide then this can be achieved by restating the styles for the `.ng-hide`\nclass CSS. Note that the selector that needs to be used is actually `.ng-hide:not(.ng-hide-animate)` to cope\nwith extra animation classes that can be added.\n\n```css\n.ng-hide:not(.ng-hide-animate) {\n  /&#42; this is just another form of hiding an element &#42;/\n  display: block!important;\n  position: absolute;\n  top: -9999px;\n  left: -9999px;\n}\n```\n\nBy default you don't need to override in CSS anything and the animations will work around the display style.\n\n## A note about animations with `ngShow`\n\nAnimations in ngShow/ngHide work with the show and hide events that are triggered when the directive expression\nis true and false. This system works like the animation system present with ngClass except that\nyou must also include the !important flag to override the display property\nso that you can perform an animation when the element is hidden during the time of the animation.\n\n```css\n//\n//a working example can be found at the bottom of this page\n//\n.my-element.ng-hide-add, .my-element.ng-hide-remove {\n  /&#42; this is required as of 1.3x to properly\n     apply all styling in a show/hide animation &#42;/\n  transition: 0s linear all;\n}\n\n.my-element.ng-hide-add-active,\n.my-element.ng-hide-remove-active {\n  /&#42; the transition is defined in the active class &#42;/\n  transition: 1s linear all;\n}\n\n.my-element.ng-hide-add { ... }\n.my-element.ng-hide-add.ng-hide-add-active { ... }\n.my-element.ng-hide-remove { ... }\n.my-element.ng-hide-remove.ng-hide-remove-active { ... }\n```\n\nKeep in mind that, as of AngularJS version 1.3.0-beta.11, there is no need to change the display\nproperty to block during animation states--ngAnimate will handle the style toggling automatically for you.",
            "animations": "addClass: `.ng-hide` - happens after the `ngShow` expression evaluates to a truthy value and the just before contents are set to visible\nremoveClass: `.ng-hide` - happens after the `ngShow` expression evaluates to a non truthy value and just before the contents are set to hidden",
            "element": "ANY",
            "params": [
                {
                    "name": "ngShow",
                    "description": "If the {@link guide/expression expression} is truthy\n    then the element is shown or hidden respectively.",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n   <file name=\"index.html\">\n     Click me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n     <div>\n       Show:\n       <div class=\"check-element animate-show\" ng-show=\"checked\">\n         <span class=\"glyphicon glyphicon-thumbs-up\"></span> I show up when your checkbox is checked.\n       </div>\n     </div>\n     <div>\n       Hide:\n       <div class=\"check-element animate-show\" ng-hide=\"checked\">\n         <span class=\"glyphicon glyphicon-thumbs-down\"></span> I hide when your checkbox is checked.\n       </div>\n     </div>\n   </file>\n   <file name=\"glyphicons.css\">"
            ],
            "import": "url(../../components/bootstrap-3.1.1/css/bootstrap.css);\n   </file>\n   <file name=\"animations.css\">\n     .animate-show {\n       line-height: 20px;\n       opacity: 1;\n       padding: 10px;\n       border: 1px solid black;\n       background: white;\n     }\n\n     .animate-show.ng-hide-add.ng-hide-add-active,\n     .animate-show.ng-hide-remove.ng-hide-remove-active {\n       -webkit-transition: all linear 0.5s;\n       transition: all linear 0.5s;\n     }\n\n     .animate-show.ng-hide {\n       line-height: 0;\n       opacity: 0;\n       padding: 0 10px;\n     }\n\n     .check-element {\n       padding: 10px;\n       border: 1px solid black;\n       background: white;\n     }\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     var thumbsUp = element(by.css('span.glyphicon-thumbs-up'));\n     var thumbsDown = element(by.css('span.glyphicon-thumbs-down'));\n\n     it('should check ng-show / ng-hide', function() {\n       expect(thumbsUp.isDisplayed()).toBeFalsy();\n       expect(thumbsDown.isDisplayed()).toBeTruthy();\n\n       element(by.model('checked')).click();\n\n       expect(thumbsUp.isDisplayed()).toBeTruthy();\n       expect(thumbsDown.isDisplayed()).toBeFalsy();\n     });\n   </file>\n </example>",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 24883,
            "ngdoc": "directive",
            "name": "ngHide",
            "description": "The `ngHide` directive shows or hides the given HTML element based on the expression\nprovided to the `ngHide` attribute. The element is shown or hidden by removing or adding\nthe `ng-hide` CSS class onto the element. The `.ng-hide` CSS class is predefined\nin AngularJS and sets the display style to none (using an !important flag).\nFor CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\n\n```html\n<!-- when $scope.myValue is truthy (element is hidden) -->\n<div ng-hide=\"myValue\" class=\"ng-hide\"></div>\n\n<!-- when $scope.myValue is falsy (element is visible) -->\n<div ng-hide=\"myValue\"></div>\n```\n\nWhen the `ngHide` expression evaluates to a truthy value then the `.ng-hide` CSS class is added to the class\nattribute on the element causing it to become hidden. When falsy, the `.ng-hide` CSS class is removed\nfrom the element causing the element not to appear hidden.\n\n## Why is !important used?\n\nYou may be wondering why !important is used for the `.ng-hide` CSS class. This is because the `.ng-hide` selector\ncan be easily overridden by heavier selectors. For example, something as simple\nas changing the display style on a HTML list item would make hidden elements appear visible.\nThis also becomes a bigger issue when dealing with CSS frameworks.\n\nBy using !important, the show and hide behavior will work as expected despite any clash between CSS selector\nspecificity (when !important isn't used with any conflicting styles). If a developer chooses to override the\nstyling to change how to hide an element then it is just a matter of using !important in their own CSS code.\n\n### Overriding `.ng-hide`\n\nBy default, the `.ng-hide` class will style the element with `display: none!important`. If you wish to change\nthe hide behavior with ngShow/ngHide then this can be achieved by restating the styles for the `.ng-hide`\nclass in CSS:\n\n```css\n.ng-hide {\n  /&#42; this is just another form of hiding an element &#42;/\n  display: block!important;\n  position: absolute;\n  top: -9999px;\n  left: -9999px;\n}\n```\n\nBy default you don't need to override in CSS anything and the animations will work around the display style.\n\n## A note about animations with `ngHide`\n\nAnimations in ngShow/ngHide work with the show and hide events that are triggered when the directive expression\nis true and false. This system works like the animation system present with ngClass, except that the `.ng-hide`\nCSS class is added and removed for you instead of your own CSS class.\n\n```css\n//\n//a working example can be found at the bottom of this page\n//\n.my-element.ng-hide-add, .my-element.ng-hide-remove {\n  transition: 0.5s linear all;\n}\n\n.my-element.ng-hide-add { ... }\n.my-element.ng-hide-add.ng-hide-add-active { ... }\n.my-element.ng-hide-remove { ... }\n.my-element.ng-hide-remove.ng-hide-remove-active { ... }\n```\n\nKeep in mind that, as of AngularJS version 1.3.0-beta.11, there is no need to change the display\nproperty to block during animation states--ngAnimate will handle the style toggling automatically for you.",
            "animations": "removeClass: `.ng-hide` - happens after the `ngHide` expression evaluates to a truthy value and just before the contents are set to hidden\naddClass: `.ng-hide` - happens after the `ngHide` expression evaluates to a non truthy value and just before the contents are set to visible",
            "element": "ANY",
            "params": [
                {
                    "name": "ngHide",
                    "description": "If the {@link guide/expression expression} is truthy then\n    the element is shown or hidden respectively.",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n   <file name=\"index.html\">\n     Click me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n     <div>\n       Show:\n       <div class=\"check-element animate-hide\" ng-show=\"checked\">\n         <span class=\"glyphicon glyphicon-thumbs-up\"></span> I show up when your checkbox is checked.\n       </div>\n     </div>\n     <div>\n       Hide:\n       <div class=\"check-element animate-hide\" ng-hide=\"checked\">\n         <span class=\"glyphicon glyphicon-thumbs-down\"></span> I hide when your checkbox is checked.\n       </div>\n     </div>\n   </file>\n   <file name=\"glyphicons.css\">"
            ],
            "import": "url(../../components/bootstrap-3.1.1/css/bootstrap.css);\n   </file>\n   <file name=\"animations.css\">\n     .animate-hide {\n       -webkit-transition: all linear 0.5s;\n       transition: all linear 0.5s;\n       line-height: 20px;\n       opacity: 1;\n       padding: 10px;\n       border: 1px solid black;\n       background: white;\n     }\n\n     .animate-hide.ng-hide {\n       line-height: 0;\n       opacity: 0;\n       padding: 0 10px;\n     }\n\n     .check-element {\n       padding: 10px;\n       border: 1px solid black;\n       background: white;\n     }\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     var thumbsUp = element(by.css('span.glyphicon-thumbs-up'));\n     var thumbsDown = element(by.css('span.glyphicon-thumbs-down'));\n\n     it('should check ng-show / ng-hide', function() {\n       expect(thumbsUp.isDisplayed()).toBeFalsy();\n       expect(thumbsDown.isDisplayed()).toBeTruthy();\n\n       element(by.model('checked')).click();\n\n       expect(thumbsUp.isDisplayed()).toBeTruthy();\n       expect(thumbsDown.isDisplayed()).toBeFalsy();\n     });\n   </file>\n </example>",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 25041,
            "ngdoc": "directive",
            "name": "ngStyle",
            "restrict": "AC",
            "description": "The `ngStyle` directive allows you to set CSS style on an HTML element conditionally.",
            "element": "ANY",
            "params": [
                {
                    "name": "ngStyle\n\n{@link",
                    "description": "guide/expression Expression} which evals to an\nobject whose keys are CSS style names and values are corresponding values for those CSS\nkeys.\n\nSince some CSS style names are not valid keys for an object, they must be quoted.\nSee the 'background-color' style in the example below.",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n       <input type=\"button\" value=\"set color\" ng-click=\"myStyle={color:'red'}\">\n       <input type=\"button\" value=\"set background\" ng-click=\"myStyle={'background-color':'blue'}\">\n       <input type=\"button\" value=\"clear\" ng-click=\"myStyle={}\">\n       <br/>\n       <span ng-style=\"myStyle\">Sample Text</span>\n       <pre>myStyle={{myStyle}}</pre>\n    </file>\n    <file name=\"style.css\">\n      span {\n        color: black;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var colorSpan = element(by.css('span'));\n\n      it('should check ng-style', function() {\n        expect(colorSpan.getCssValue('color')).toBe('rgba(0, 0, 0, 1)');\n        element(by.css('input[value=\\'set color\\']')).click();\n        expect(colorSpan.getCssValue('color')).toBe('rgba(255, 0, 0, 1)');\n        element(by.css('input[value=clear]')).click();\n        expect(colorSpan.getCssValue('color')).toBe('rgba(0, 0, 0, 1)');\n      });\n    </file>\n  </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 25096,
            "ngdoc": "directive",
            "name": "ngSwitch",
            "restrict": "EA",
            "description": "The `ngSwitch` directive is used to conditionally swap DOM structure on your template based on a scope expression.\nElements within `ngSwitch` but without `ngSwitchWhen` or `ngSwitchDefault` directives will be preserved at the location\nas specified in the template.\n\nThe directive itself works similar to ngInclude, however, instead of downloading template code (or loading it\nfrom the template cache), `ngSwitch` simply chooses one of the nested elements and makes it visible based on which element\nmatches the value obtained from the evaluated expression. In other words, you define a container element\n(where you place the directive), place an expression on the **`on=\"...\"` attribute**\n(or the **`ng-switch=\"...\"` attribute**), define any inner elements inside of the directive and place\na when attribute per element. The when attribute is used to inform ngSwitch which element to display when the on\nexpression is evaluated. If a matching expression is not found via a when attribute then an element with the default\nattribute is displayed.\n\n<div class=\"alert alert-info\">\nBe aware that the attribute values to match against cannot be expressions. They are interpreted\nas literal string values to match against.\nFor example, **`ng-switch-when=\"someVal\"`** will match against the string `\"someVal\"` not against the\nvalue of the expression `$scope.someVal`.\n</div>",
            "animations": "enter - happens after the ngSwitch contents change and the matched child element is placed inside the container\nleave - happens just after the ngSwitch contents change and just before the former contents are removed from the DOM",
            "usage": "```\n<ANY ng-switch=\"expression\">\n  <ANY ng-switch-when=\"matchValue1\">...</ANY>\n  <ANY ng-switch-when=\"matchValue2\">...</ANY>\n  <ANY ng-switch-default>...</ANY>\n</ANY>\n```",
            "scope": "",
            "priority": "1200",
            "params": [
                {
                    "name": "ngSwitch|on",
                    "description": "expression to match against <tt>ng-switch-when</tt>.\nOn child elements add:\n\n* `ngSwitchWhen`: the case statement to match against. If match then this\n  case will be displayed. If the same match appears multiple times, all the\n  elements will be displayed.\n* `ngSwitchDefault`: the default case when no other case match. If there\n  are multiple default cases, all of them will be displayed when no other\n  case match.",
                    "type": "*"
                }
            ],
            "example": [
                "\n <example module=\"switchExample\" deps=\"angular-animate.js\" animations=\"true\">\n   <file name=\"index.html\">\n     <div ng-controller=\"ExampleController\">\n       <select ng-model=\"selection\" ng-options=\"item for item in items\">\n       </select>\n       <tt>selection={{selection}}</tt>\n       <hr/>\n       <div class=\"animate-switch-container\"\n         ng-switch on=\"selection\">\n           <div class=\"animate-switch\" ng-switch-when=\"settings\">Settings Div</div>\n           <div class=\"animate-switch\" ng-switch-when=\"home\">Home Span</div>\n           <div class=\"animate-switch\" ng-switch-default>default</div>\n       </div>\n     </div>\n   </file>\n   <file name=\"script.js\">\n     angular.module('switchExample', ['ngAnimate'])\n       .controller('ExampleController', ['$scope', function($scope) {\n         $scope.items = ['settings', 'home', 'other'];\n         $scope.selection = $scope.items[0];\n       }]);\n   </file>\n   <file name=\"animations.css\">\n     .animate-switch-container {\n       position:relative;\n       background:white;\n       border:1px solid black;\n       height:40px;\n       overflow:hidden;\n     }\n\n     .animate-switch {\n       padding:10px;\n     }\n\n     .animate-switch.ng-animate {\n       -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n       transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\n       position:absolute;\n       top:0;\n       left:0;\n       right:0;\n       bottom:0;\n     }\n\n     .animate-switch.ng-leave.ng-leave-active,\n     .animate-switch.ng-enter {\n       top:-50px;\n     }\n     .animate-switch.ng-leave,\n     .animate-switch.ng-enter.ng-enter-active {\n       top:0;\n     }\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     var switchElem = element(by.css('[ng-switch]'));\n     var select = element(by.model('selection'));\n\n     it('should start in settings', function() {\n       expect(switchElem.getText()).toMatch(/Settings Div/);\n     });\n     it('should change to home', function() {\n       select.all(by.css('option')).get(1).click();\n       expect(switchElem.getText()).toMatch(/Home Span/);\n     });\n     it('should select default', function() {\n       select.all(by.css('option')).get(2).click();\n       expect(switchElem.getText()).toMatch(/default/);\n     });\n   </file>\n </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 25301,
            "ngdoc": "directive",
            "name": "ngTransclude",
            "restrict": "EAC",
            "description": "Directive that marks the insertion point for the transcluded DOM of the nearest parent directive that uses transclusion.\n\nAny existing content of the element that this directive is placed on will be removed before the transcluded content is inserted.",
            "element": "ANY",
            "example": [
                "\n  <example module=\"transcludeExample\">\n    <file name=\"index.html\">\n      <script>\n        angular.module('transcludeExample', [])\n         .directive('pane', function(){\n            return {\n              restrict: 'E',\n              transclude: true,\n              scope: { title:'@' },\n              template: '<div style=\"border: 1px solid black;\">' +\n                          '<div style=\"background-color: gray\">{{title}}</div>' +\n                          '<ng-transclude></ng-transclude>' +\n                        '</div>'\n            };\n        })\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.title = 'Lorem Ipsum';\n          $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';\n        }]);\n      </script>\n      <div ng-controller=\"ExampleController\">\n        <input ng-model=\"title\"> <br/>\n        <textarea ng-model=\"text\"></textarea> <br/>\n        <pane title=\"{{title}}\">{{text}}</pane>\n      </div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n       it('should have transcluded', function() {\n         var titleElement = element(by.model('title'));\n         titleElement.clear();\n         titleElement.sendKeys('TITLE');\n         var textElement = element(by.model('text'));\n         textElement.clear();\n         textElement.sendKeys('TEXT');\n         expect(element(by.binding('title')).getText()).toEqual('TITLE');\n         expect(element(by.binding('text')).getText()).toEqual('TEXT');\n       });\n    </file>\n  </example>\n"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 25373,
            "ngdoc": "directive",
            "name": "script",
            "restrict": "E",
            "description": "Load the content of a `<script>` element into {@link ng.$templateCache `$templateCache`}, so that the\ntemplate can be used by {@link ng.directive:ngInclude `ngInclude`},\n{@link ngRoute.directive:ngView `ngView`}, or {@link guide/directive directives}. The type of the\n`<script>` element must be specified as `text/ng-template`, and a cache name for the template must be\nassigned through the element's `id`, which can then be used as a directive's `templateUrl`.",
            "params": [
                {
                    "name": "type",
                    "description": "Must be set to `'text/ng-template'`.",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "Cache name of the template.",
                    "type": "String"
                }
            ],
            "example": [
                "\n <example>\n   <file name=\"index.html\">\n     <script type=\"text/ng-template\" id=\"/tpl.html\">\n       Content of the template.\n     </script>\n\n     <a ng-click=\"currentTpl='/tpl.html'\" id=\"tpl-link\">Load inlined template</a>\n     <div id=\"tpl-content\" ng-include src=\"currentTpl\"></div>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     it('should load template defined inside script tag', function() {\n       element(by.css('#tpl-link')).click();\n       expect(element(by.css('#tpl-content')).getText()).toMatch(/Content of the template/);\n     });\n   </file>\n </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 25422,
            "ngdoc": "directive",
            "name": "select",
            "restrict": "E",
            "description": "HTML `SELECT` element with angular data-binding.\n\n# `ngOptions`\n\nThe `ngOptions` attribute can be used to dynamically generate a list of `<option>`\nelements for the `<select>` element using the array or object obtained by evaluating the\n`ngOptions` comprehension expression.\n\nIn many cases, `ngRepeat` can be used on `<option>` elements instead of `ngOptions` to achieve a\nsimilar result. However, `ngOptions` provides some benefits such as reducing memory and\nincreasing speed by not creating a new scope for each repeated instance, as well as providing\nmore flexibility in how the `<select>`'s model is assigned via the `select` **`as`** part of the\ncomprehension expression. `ngOptions` should be used when the `<select>` model needs to be bound\n to a non-string value. This is because an option element can only be bound to string values at\npresent.\n\nWhen an item in the `<select>` menu is selected, the array element or object property\nrepresented by the selected option will be bound to the model identified by the `ngModel`\ndirective.\n\nOptionally, a single hard-coded `<option>` element, with the value set to an empty string, can\nbe nested into the `<select>` element. This element will then represent the `null` or \"not selected\"\noption. See example below for demonstration.\n\n<div class=\"alert alert-warning\">\n**Note:** `ngModel` compares by reference, not value. This is important when binding to an\narray of objects. See an example [in this jsfiddle](http://jsfiddle.net/qWzTb/).\n</div>\n\n## `select` **`as`**\n\nUsing `select` **`as`** will bind the result of the `select` expression to the model, but\nthe value of the `<select>` and `<option>` html elements will be either the index (for array data sources)\nor property name (for object data sources) of the value within the collection. If a **`track by`** expression\nis used, the result of that expression will be set as the value of the `option` and `select` elements.\n\n\n### `select` **`as`** and **`track by`**\n\n<div class=\"alert alert-warning\">\nDo not use `select` **`as`** and **`track by`** in the same expression. They are not designed to work together.\n</div>\n\nConsider the following example:\n\n```html\n<select ng-options=\"item.subItem as item.label for item in values track by item.id\" ng-model=\"selected\">\n```\n\n```js\n$scope.values = [{\n  id: 1,\n  label: 'aLabel',\n  subItem: { name: 'aSubItem' }\n}, {\n  id: 2,\n  label: 'bLabel',\n  subItem: { name: 'bSubItem' }\n}];\n\n$scope.selected = { name: 'aSubItem' };\n```\n\nWith the purpose of preserving the selection, the **`track by`** expression is always applied to the element\nof the data source (to `item` in this example). To calculate whether an element is selected, we do the\nfollowing:\n\n1. Apply **`track by`** to the elements in the array. In the example: `[1, 2]`\n2. Apply **`track by`** to the already selected value in `ngModel`.\n   In the example: this is not possible as **`track by`** refers to `item.id`, but the selected\n   value from `ngModel` is `{name: 'aSubItem'}`, so the **`track by`** expression is applied to\n   a wrong object, the selected element can't be found, `<select>` is always reset to the \"not\n   selected\" option.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "The control is considered valid only if value is entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngOptions",
                    "description": "in one of the following forms:\n\n  * for array data sources:\n    * `label` **`for`** `value` **`in`** `array`\n    * `select` **`as`** `label` **`for`** `value` **`in`** `array`\n    * `label` **`group by`** `group` **`for`** `value` **`in`** `array`\n    * `label` **`group by`** `group` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`\n    * `label` **`for`** `value` **`in`** `array` | orderBy:`orderexpr` **`track by`** `trackexpr`\n       (for including a filter with `track by`)\n  * for object data sources:\n    * `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n    * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n    * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object`\n    * `select` **`as`** `label` **`group by`** `group`\n        **`for` `(`**`key`**`,`** `value`**`) in`** `object`\n\nWhere:\n\n  * `array` / `object`: an expression which evaluates to an array / object to iterate over.\n  * `value`: local variable which will refer to each item in the `array` or each property value\n     of `object` during iteration.\n  * `key`: local variable which will refer to a property name in `object` during iteration.\n  * `label`: The result of this expression will be the label for `<option>` element. The\n    `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`).\n  * `select`: The result of this expression will be bound to the model of the parent `<select>`\n     element. If not specified, `select` expression will default to `value`.\n  * `group`: The result of this expression will be used to group options using the `<optgroup>`\n     DOM element.\n  * `trackexpr`: Used when working with an array of objects. The result of this expression will be\n     used to identify the objects in the array. The `trackexpr` will most likely refer to the\n    `value` variable (e.g. `value.propertyName`). With this the selection is preserved\n     even when the options are recreated (e.g. reloaded from the server).",
                    "type": "Comprehension_expression="
                }
            ],
            "example": [
                "\n   <example module=\"selectExample\">\n     <file name=\"index.html\">\n       <script>\n       angular.module('selectExample', [])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.colors = [\n             {name:'black', shade:'dark'},\n             {name:'white', shade:'light'},\n             {name:'red', shade:'dark'},\n             {name:'blue', shade:'dark'},\n             {name:'yellow', shade:'light'}\n           ];\n           $scope.myColor = $scope.colors[2]; // red\n         }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <ul>\n           <li ng-repeat=\"color in colors\">\n             Name: <input ng-model=\"color.name\">\n             [<a href ng-click=\"colors.splice($index, 1)\">X</a>]\n           </li>\n           <li>\n             [<a href ng-click=\"colors.push({})\">add</a>]\n           </li>\n         </ul>\n         <hr/>\n         Color (null not allowed):\n         <select ng-model=\"myColor\" ng-options=\"color.name for color in colors\"></select><br>\n\n         Color (null allowed):\n         <span  class=\"nullable\">\n           <select ng-model=\"myColor\" ng-options=\"color.name for color in colors\">\n             <option value=\"\">-- choose color --</option>\n           </select>\n         </span><br/>\n\n         Color grouped by shade:\n         <select ng-model=\"myColor\" ng-options=\"color.name group by color.shade for color in colors\">\n         </select><br/>\n\n\n         Select <a href ng-click=\"myColor = { name:'not in list', shade: 'other' }\">bogus</a>.<br>\n         <hr/>\n         Currently selected: {{ {selected_color:myColor} }}\n         <div style=\"border:solid 1px black; height:20px\"\n              ng-style=\"{'background-color':myColor.name}\">\n         </div>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n        it('should check ng-options', function() {\n          expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('red');\n          element.all(by.model('myColor')).first().click();\n          element.all(by.css('select[ng-model=\"myColor\"] option')).first().click();\n          expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('black');\n          element(by.css('.nullable select[ng-model=\"myColor\"]')).click();\n          element.all(by.css('.nullable select[ng-model=\"myColor\"] option')).first().click();\n          expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('null');\n        });\n     </file>\n   </example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular/angular.js",
            "line": 25942,
            "description": "A new labelMap is created with each render.\nThis function is called for each existing option with added=false,\nand each new option with added=true.\n- Labels that are passed to this method twice,\n(once with added=true and once with added=false) will end up with a value of 0, and\nwill cause no change to happen to the corresponding option.\n- Labels that are passed to this method only once with added=false will end up with a\nvalue of -1 and will eventually be passed to selectCtrl.removeOption()\n- Labels that are passed to this method only once with added=true will end up with a\nvalue of 1 and will eventually be passed to selectCtrl.addOption()",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 12,
            "description": "$transition service provides a consistent interface to trigger CSS 3 transitions and to be informed when they complete.",
            "params": [
                {
                    "name": "element",
                    "description": "The DOMElement that will be animated.",
                    "type": "DOMElement"
                },
                {
                    "name": "trigger",
                    "description": "The thing that will cause the transition to start:\n  - As a string, it represents the css class to be added to the element.\n  - As an object, it represents a hash of style attributes to be applied to the element.\n  - As a function, it represents a function to be called that will cause the transition to occur.",
                    "type": "String|object|function"
                }
            ],
            "return": {
                "description": "A promise that is resolved when the transition finishes.",
                "type": "Promise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 417,
            "ngdoc": "overview",
            "name": "ui.bootstrap.carousel",
            "description": "AngularJS version of an image carousel.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 590,
            "ngdoc": "directive",
            "name": "ui.bootstrap.carousel.directive:carousel",
            "restrict": "EA",
            "description": "Carousel is the outer container for a set of image 'slides' to showcase.",
            "params": [
                {
                    "name": "interval",
                    "description": "The time, in milliseconds, that it will take the carousel to go to the next slide.",
                    "type": "Number="
                },
                {
                    "name": "noTransition",
                    "description": "Whether to disable transitions on the carousel.",
                    "type": "Boolean="
                },
                {
                    "name": "noPause",
                    "description": "Whether to disable pausing on the carousel (by default, the carousel interval pauses on hover).",
                    "type": "Boolean="
                }
            ],
            "example": [
                "\n<example module=\"ui.bootstrap\">\n <file name=\"index.html\">\n   <carousel>\n     <slide>\n       <img src=\"http://placekitten.com/150/150\" style=\"margin:auto;\">\n       <div class=\"carousel-caption\">\n         <p>Beautiful!</p>\n       </div>\n     </slide>\n     <slide>\n       <img src=\"http://placekitten.com/100/150\" style=\"margin:auto;\">\n       <div class=\"carousel-caption\">\n         <p>D'aww!</p>\n       </div>\n     </slide>\n   </carousel>\n </file>\n <file name=\"demo.css\">\n   .carousel-indicators {\n     top: auto;\n     bottom: 15px;\n   }\n </file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 644,
            "ngdoc": "directive",
            "name": "ui.bootstrap.carousel.directive:slide",
            "restrict": "EA",
            "description": "Creates a slide inside a {@link ui.bootstrap.carousel.directive:carousel carousel}.  Must be placed as a child of a carousel element.",
            "params": [
                {
                    "name": "active",
                    "description": "Model binding, whether or not this slide is currently active.",
                    "type": "Boolean="
                }
            ],
            "example": [
                "\n<example module=\"ui.bootstrap\">\n <file name=\"index.html\">\n<div ng-controller=\"CarouselDemoCtrl\">\n <carousel>\n   <slide ng-repeat=\"slide in slides\" active=\"slide.active\">\n     <img ng-src=\"{{slide.image}}\" style=\"margin:auto;\">\n     <div class=\"carousel-caption\">\n       <h4>Slide {{$index}}</h4>\n       <p>{{slide.text}}</p>\n     </div>\n   </slide>\n </carousel>\n Interval, in milliseconds: <input type=\"number\" ng-model=\"myInterval\">\n <br />Enter a negative number to stop the interval.\n</div>\n </file>\n <file name=\"script.js\">\nfunction CarouselDemoCtrl($scope) {\n $scope.myInterval = 5000;\n}\n </file>\n <file name=\"demo.css\">\n   .carousel-indicators {\n     top: auto;\n     bottom: 15px;\n   }\n </file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 840,
            "description": "A set of utility methods that can be use to retrieve position of DOM elements.\nIt is meant to be used where we need to absolute-position DOM elements in\nrelation to other, existing elements (this is the case for tooltips, popovers,\ntypeahead suggestions etc.).",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 858,
            "description": "Checks if a given element is statically positioned",
            "params": [
                {
                    "name": "element",
                    "description": "- raw DOM element"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 866,
            "description": "returns the closest, non-statically positioned parentOffset of a given element",
            "params": [
                {
                    "name": "element",
                    "description": ""
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 880,
            "description": "Provides read-only equivalent of jQuery's position function:\nhttp://api.jquery.com/position/",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 903,
            "description": "Provides read-only equivalent of jQuery's offset function:\nhttp://api.jquery.com/offset/",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 917,
            "description": "Provides coordinates for the targetEl in relation to hostEl",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 1795,
            "description": "A helper, internal data structure that acts as a map but also allows getting / removing\nelements in the LIFO order",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 1849,
            "description": "A helper directive for the $modal service. It creates a backdrop element.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 1890,
            "description": "Auto-focusing of a freshly-opened modal element causes any child elements\nwith the autofocus attribute to lose focus. This is an issue on touch\nbased devices which will show and then hide the onscreen keyboard.\nAttempts to refocus the autofocus element via JavaScript will not reopen\nthe onscreen keyboard. Fixed by updated the focusing logic to only autofocus\nthe modal element if the modal does not contain an autofocus element.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 2424,
            "description": "The following features are still outstanding: animation as a\nfunction, placement as a function, inside, support for more triggers than\njust mouse enter/leave, html tooltips, and selector delegation.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 2431,
            "description": "The $tooltip service creates tooltip- and popover-like directives as well as\nhouses global options for them.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 2453,
            "description": "`options({})` allows global configuration of all tooltips in the\napplication.\n\n  var app = angular.module( 'App', ['ui.bootstrap.tooltip'], function( $tooltipProvider ) {\n    // place tooltips left instead of top by default\n    $tooltipProvider.options( { placement: 'left' } );\n  });",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 2466,
            "description": "This allows you to extend the set of trigger mappings available. E.g.:\n\n  $tooltipProvider.setTriggers( 'openTrigger': 'closeTrigger' );",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 2475,
            "description": "This is a helper function for translating camel-case to snake-case.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 2486,
            "description": "Returns the actual instance of the $tooltip service.\nTODO support multiple triggers",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 2494,
            "description": "Returns an object of show and hide triggers.\n\nIf a trigger is supplied,\nit is used to show the tooltip; otherwise, it will use the `trigger`\noption passed to the `$tooltipProvider.options` method; else it will\ndefault to the trigger supplied to this directive factory.\n\nThe hide trigger is based on the show trigger. If the `trigger` option\nwas passed to the `$tooltipProvider.options` method, it will use the\nmapped trigger from `triggerMap` or the passed trigger if the map is\nundefined; otherwise, it uses the `triggerMap` value of the show\ntrigger; else it will just use the show trigger.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 2681,
            "description": "Observe the relevant attributes.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 2785,
            "description": "The following features are still outstanding: popup delay, animation as a\nfunction, placement as a function, inside, support for more triggers than\njust mouse enter/leave, html popovers, and selector delegatation.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 2970,
            "ngdoc": "overview",
            "name": "ui.bootstrap.tabs",
            "description": "AngularJS version of the tabs directive.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 3023,
            "ngdoc": "directive",
            "name": "ui.bootstrap.tabs.directive:tabset",
            "restrict": "EA",
            "description": "Tabset is the outer container for the tabs directive",
            "params": [
                {
                    "name": "vertical",
                    "description": "Whether or not to use vertical styling for the tabs.",
                    "type": "Boolean="
                },
                {
                    "name": "justified",
                    "description": "Whether or not to use justified styling for the tabs.",
                    "type": "Boolean="
                }
            ],
            "example": [
                "\n<example module=\"ui.bootstrap\">\n <file name=\"index.html\">\n   <tabset>\n     <tab heading=\"Tab 1\"><b>First</b> Content!</tab>\n     <tab heading=\"Tab 2\"><i>Second</i> Content!</tab>\n   </tabset>\n   <hr />\n   <tabset vertical=\"true\">\n     <tab heading=\"Vertical Tab 1\"><b>First</b> Vertical Content!</tab>\n     <tab heading=\"Vertical Tab 2\"><i>Second</i> Vertical Content!</tab>\n   </tabset>\n   <tabset justified=\"true\">\n     <tab heading=\"Justified Tab 1\"><b>First</b> Justified Content!</tab>\n     <tab heading=\"Justified Tab 2\"><i>Second</i> Justified Content!</tab>\n   </tabset>\n </file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 3070,
            "ngdoc": "directive",
            "name": "ui.bootstrap.tabs.directive:tab",
            "restrict": "EA",
            "params": [
                {
                    "name": "heading",
                    "description": "The visible heading, or title, of the tab. Set HTML headings with {@link ui.bootstrap.tabs.directive:tabHeading tabHeading}.",
                    "type": "String="
                },
                {
                    "name": "select",
                    "description": "An expression to evaluate when the tab is selected.",
                    "type": "String="
                },
                {
                    "name": "active",
                    "description": "A binding, telling whether or not this tab is selected.",
                    "type": "Boolean="
                },
                {
                    "name": "disabled",
                    "description": "A binding, telling whether or not this tab is disabled.",
                    "type": "Boolean="
                }
            ],
            "description": "Creates a tab with a heading and content. Must be placed within a {@link ui.bootstrap.tabs.directive:tabset tabset}.",
            "example": [
                "\n<example module=\"ui.bootstrap\">\n <file name=\"index.html\">\n   <div ng-controller=\"TabsDemoCtrl\">\n     <button class=\"btn btn-small\" ng-click=\"items[0].active = true\">\n       Select item 1, using active binding\n     </button>\n     <button class=\"btn btn-small\" ng-click=\"items[1].disabled = !items[1].disabled\">\n       Enable/disable item 2, using disabled binding\n     </button>\n     <br />\n     <tabset>\n       <tab heading=\"Tab 1\">First Tab</tab>\n       <tab select=\"alertMe()\">\n         <tab-heading><i class=\"icon-bell\"></i> Alert me!</tab-heading>\n         Second Tab, with alert callback and html heading!\n       </tab>\n       <tab ng-repeat=\"item in items\"\n         heading=\"{{item.title}}\"\n         disabled=\"item.disabled\"\n         active=\"item.active\">\n         {{item.content}}\n       </tab>\n     </tabset>\n   </div>\n </file>\n <file name=\"script.js\">\n   function TabsDemoCtrl($scope) {\n     $scope.items = [\n       { title:\"Dynamic Title 1\", content:\"Dynamic Item 0\" },\n       { title:\"Dynamic Title 2\", content:\"Dynamic Item 1\", disabled: true }\n     ];\n\n     $scope.alertMe = function() {\n       setTimeout(function() {\n         alert(\"You've selected the alert tab!\");\n       });\n     };\n   };\n </file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 3126,
            "ngdoc": "directive",
            "name": "ui.bootstrap.tabs.directive:tabHeading",
            "restrict": "EA",
            "description": "Creates an HTML heading for a {@link ui.bootstrap.tabs.directive:tab tab}. Must be placed as a child of a tab element.",
            "example": [
                "\n<example module=\"ui.bootstrap\">\n <file name=\"index.html\">\n   <tabset>\n     <tab>\n       <tab-heading><b>HTML</b> in my titles?!</tab-heading>\n       And some content, too!\n     </tab>\n     <tab>\n       <tab-heading><i class=\"icon-heart\"></i> Icon heading?!?</tab-heading>\n       That's right.\n     </tab>\n   </tabset>\n </file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
            "line": 3506,
            "description": "A helper service that can parse typeahead's syntax (string provided by users)\nExtracted to a separate service for ease of unit testing",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 11,
            "description": "$transition service provides a consistent interface to trigger CSS 3 transitions and to be informed when they complete.",
            "params": [
                {
                    "name": "element",
                    "description": "The DOMElement that will be animated.",
                    "type": "DOMElement"
                },
                {
                    "name": "trigger",
                    "description": "The thing that will cause the transition to start:\n  - As a string, it represents the css class to be added to the element.\n  - As an object, it represents a hash of style attributes to be applied to the element.\n  - As a function, it represents a function to be called that will cause the transition to occur.",
                    "type": "String|object|function"
                }
            ],
            "return": {
                "description": "A promise that is resolved when the transition finishes.",
                "type": "Promise"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 416,
            "ngdoc": "overview",
            "name": "ui.bootstrap.carousel",
            "description": "AngularJS version of an image carousel.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 589,
            "ngdoc": "directive",
            "name": "ui.bootstrap.carousel.directive:carousel",
            "restrict": "EA",
            "description": "Carousel is the outer container for a set of image 'slides' to showcase.",
            "params": [
                {
                    "name": "interval",
                    "description": "The time, in milliseconds, that it will take the carousel to go to the next slide.",
                    "type": "Number="
                },
                {
                    "name": "noTransition",
                    "description": "Whether to disable transitions on the carousel.",
                    "type": "Boolean="
                },
                {
                    "name": "noPause",
                    "description": "Whether to disable pausing on the carousel (by default, the carousel interval pauses on hover).",
                    "type": "Boolean="
                }
            ],
            "example": [
                "\n<example module=\"ui.bootstrap\">\n <file name=\"index.html\">\n   <carousel>\n     <slide>\n       <img src=\"http://placekitten.com/150/150\" style=\"margin:auto;\">\n       <div class=\"carousel-caption\">\n         <p>Beautiful!</p>\n       </div>\n     </slide>\n     <slide>\n       <img src=\"http://placekitten.com/100/150\" style=\"margin:auto;\">\n       <div class=\"carousel-caption\">\n         <p>D'aww!</p>\n       </div>\n     </slide>\n   </carousel>\n </file>\n <file name=\"demo.css\">\n   .carousel-indicators {\n     top: auto;\n     bottom: 15px;\n   }\n </file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 643,
            "ngdoc": "directive",
            "name": "ui.bootstrap.carousel.directive:slide",
            "restrict": "EA",
            "description": "Creates a slide inside a {@link ui.bootstrap.carousel.directive:carousel carousel}.  Must be placed as a child of a carousel element.",
            "params": [
                {
                    "name": "active",
                    "description": "Model binding, whether or not this slide is currently active.",
                    "type": "Boolean="
                }
            ],
            "example": [
                "\n<example module=\"ui.bootstrap\">\n <file name=\"index.html\">\n<div ng-controller=\"CarouselDemoCtrl\">\n <carousel>\n   <slide ng-repeat=\"slide in slides\" active=\"slide.active\">\n     <img ng-src=\"{{slide.image}}\" style=\"margin:auto;\">\n     <div class=\"carousel-caption\">\n       <h4>Slide {{$index}}</h4>\n       <p>{{slide.text}}</p>\n     </div>\n   </slide>\n </carousel>\n Interval, in milliseconds: <input type=\"number\" ng-model=\"myInterval\">\n <br />Enter a negative number to stop the interval.\n</div>\n </file>\n <file name=\"script.js\">\nfunction CarouselDemoCtrl($scope) {\n $scope.myInterval = 5000;\n}\n </file>\n <file name=\"demo.css\">\n   .carousel-indicators {\n     top: auto;\n     bottom: 15px;\n   }\n </file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 839,
            "description": "A set of utility methods that can be use to retrieve position of DOM elements.\nIt is meant to be used where we need to absolute-position DOM elements in\nrelation to other, existing elements (this is the case for tooltips, popovers,\ntypeahead suggestions etc.).",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 857,
            "description": "Checks if a given element is statically positioned",
            "params": [
                {
                    "name": "element",
                    "description": "- raw DOM element"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 865,
            "description": "returns the closest, non-statically positioned parentOffset of a given element",
            "params": [
                {
                    "name": "element",
                    "description": ""
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 879,
            "description": "Provides read-only equivalent of jQuery's position function:\nhttp://api.jquery.com/position/",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 902,
            "description": "Provides read-only equivalent of jQuery's offset function:\nhttp://api.jquery.com/offset/",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 916,
            "description": "Provides coordinates for the targetEl in relation to hostEl",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 1794,
            "description": "A helper, internal data structure that acts as a map but also allows getting / removing\nelements in the LIFO order",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 1848,
            "description": "A helper directive for the $modal service. It creates a backdrop element.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 1889,
            "description": "Auto-focusing of a freshly-opened modal element causes any child elements\nwith the autofocus attribute to lose focus. This is an issue on touch\nbased devices which will show and then hide the onscreen keyboard.\nAttempts to refocus the autofocus element via JavaScript will not reopen\nthe onscreen keyboard. Fixed by updated the focusing logic to only autofocus\nthe modal element if the modal does not contain an autofocus element.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 2423,
            "description": "The following features are still outstanding: animation as a\nfunction, placement as a function, inside, support for more triggers than\njust mouse enter/leave, html tooltips, and selector delegation.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 2430,
            "description": "The $tooltip service creates tooltip- and popover-like directives as well as\nhouses global options for them.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 2452,
            "description": "`options({})` allows global configuration of all tooltips in the\napplication.\n\n  var app = angular.module( 'App', ['ui.bootstrap.tooltip'], function( $tooltipProvider ) {\n    // place tooltips left instead of top by default\n    $tooltipProvider.options( { placement: 'left' } );\n  });",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 2465,
            "description": "This allows you to extend the set of trigger mappings available. E.g.:\n\n  $tooltipProvider.setTriggers( 'openTrigger': 'closeTrigger' );",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 2474,
            "description": "This is a helper function for translating camel-case to snake-case.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 2485,
            "description": "Returns the actual instance of the $tooltip service.\nTODO support multiple triggers",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 2493,
            "description": "Returns an object of show and hide triggers.\n\nIf a trigger is supplied,\nit is used to show the tooltip; otherwise, it will use the `trigger`\noption passed to the `$tooltipProvider.options` method; else it will\ndefault to the trigger supplied to this directive factory.\n\nThe hide trigger is based on the show trigger. If the `trigger` option\nwas passed to the `$tooltipProvider.options` method, it will use the\nmapped trigger from `triggerMap` or the passed trigger if the map is\nundefined; otherwise, it uses the `triggerMap` value of the show\ntrigger; else it will just use the show trigger.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 2680,
            "description": "Observe the relevant attributes.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 2784,
            "description": "The following features are still outstanding: popup delay, animation as a\nfunction, placement as a function, inside, support for more triggers than\njust mouse enter/leave, html popovers, and selector delegatation.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 2969,
            "ngdoc": "overview",
            "name": "ui.bootstrap.tabs",
            "description": "AngularJS version of the tabs directive.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 3022,
            "ngdoc": "directive",
            "name": "ui.bootstrap.tabs.directive:tabset",
            "restrict": "EA",
            "description": "Tabset is the outer container for the tabs directive",
            "params": [
                {
                    "name": "vertical",
                    "description": "Whether or not to use vertical styling for the tabs.",
                    "type": "Boolean="
                },
                {
                    "name": "justified",
                    "description": "Whether or not to use justified styling for the tabs.",
                    "type": "Boolean="
                }
            ],
            "example": [
                "\n<example module=\"ui.bootstrap\">\n <file name=\"index.html\">\n   <tabset>\n     <tab heading=\"Tab 1\"><b>First</b> Content!</tab>\n     <tab heading=\"Tab 2\"><i>Second</i> Content!</tab>\n   </tabset>\n   <hr />\n   <tabset vertical=\"true\">\n     <tab heading=\"Vertical Tab 1\"><b>First</b> Vertical Content!</tab>\n     <tab heading=\"Vertical Tab 2\"><i>Second</i> Vertical Content!</tab>\n   </tabset>\n   <tabset justified=\"true\">\n     <tab heading=\"Justified Tab 1\"><b>First</b> Justified Content!</tab>\n     <tab heading=\"Justified Tab 2\"><i>Second</i> Justified Content!</tab>\n   </tabset>\n </file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 3069,
            "ngdoc": "directive",
            "name": "ui.bootstrap.tabs.directive:tab",
            "restrict": "EA",
            "params": [
                {
                    "name": "heading",
                    "description": "The visible heading, or title, of the tab. Set HTML headings with {@link ui.bootstrap.tabs.directive:tabHeading tabHeading}.",
                    "type": "String="
                },
                {
                    "name": "select",
                    "description": "An expression to evaluate when the tab is selected.",
                    "type": "String="
                },
                {
                    "name": "active",
                    "description": "A binding, telling whether or not this tab is selected.",
                    "type": "Boolean="
                },
                {
                    "name": "disabled",
                    "description": "A binding, telling whether or not this tab is disabled.",
                    "type": "Boolean="
                }
            ],
            "description": "Creates a tab with a heading and content. Must be placed within a {@link ui.bootstrap.tabs.directive:tabset tabset}.",
            "example": [
                "\n<example module=\"ui.bootstrap\">\n <file name=\"index.html\">\n   <div ng-controller=\"TabsDemoCtrl\">\n     <button class=\"btn btn-small\" ng-click=\"items[0].active = true\">\n       Select item 1, using active binding\n     </button>\n     <button class=\"btn btn-small\" ng-click=\"items[1].disabled = !items[1].disabled\">\n       Enable/disable item 2, using disabled binding\n     </button>\n     <br />\n     <tabset>\n       <tab heading=\"Tab 1\">First Tab</tab>\n       <tab select=\"alertMe()\">\n         <tab-heading><i class=\"icon-bell\"></i> Alert me!</tab-heading>\n         Second Tab, with alert callback and html heading!\n       </tab>\n       <tab ng-repeat=\"item in items\"\n         heading=\"{{item.title}}\"\n         disabled=\"item.disabled\"\n         active=\"item.active\">\n         {{item.content}}\n       </tab>\n     </tabset>\n   </div>\n </file>\n <file name=\"script.js\">\n   function TabsDemoCtrl($scope) {\n     $scope.items = [\n       { title:\"Dynamic Title 1\", content:\"Dynamic Item 0\" },\n       { title:\"Dynamic Title 2\", content:\"Dynamic Item 1\", disabled: true }\n     ];\n\n     $scope.alertMe = function() {\n       setTimeout(function() {\n         alert(\"You've selected the alert tab!\");\n       });\n     };\n   };\n </file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 3125,
            "ngdoc": "directive",
            "name": "ui.bootstrap.tabs.directive:tabHeading",
            "restrict": "EA",
            "description": "Creates an HTML heading for a {@link ui.bootstrap.tabs.directive:tab tab}. Must be placed as a child of a tab element.",
            "example": [
                "\n<example module=\"ui.bootstrap\">\n <file name=\"index.html\">\n   <tabset>\n     <tab>\n       <tab-heading><b>HTML</b> in my titles?!</tab-heading>\n       And some content, too!\n     </tab>\n     <tab>\n       <tab-heading><i class=\"icon-heart\"></i> Icon heading?!?</tab-heading>\n       That's right.\n     </tab>\n   </tabset>\n </file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-bootstrap/ui-bootstrap.js",
            "line": 3505,
            "description": "A helper service that can parse typeahead's syntax (string provided by users)\nExtracted to a separate service for ease of unit testing",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-cookies/angular-cookies.js",
            "line": 1,
            "license": "AngularJS v1.3.15\n(c) 2010-2014 Google, Inc. http://angularjs.org\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-cookies/angular-cookies.js",
            "line": 8,
            "ngdoc": "module",
            "name": "ngCookies",
            "description": "# ngCookies\n\nThe `ngCookies` module provides a convenient wrapper for reading and writing browser cookies.\n\n\n<div doc-module-components=\"ngCookies\"></div>\n\nSee {@link ngCookies.$cookies `$cookies`} and\n{@link ngCookies.$cookieStore `$cookieStore`} for usage.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-cookies/angular-cookies.js",
            "line": 26,
            "ngdoc": "service",
            "name": "$cookies",
            "description": "Provides read/write access to browser's cookies.\n\nOnly a simple Object is exposed and by adding or removing properties to/from this object, new\ncookies are created/deleted at the end of current $eval.\nThe object's properties can only be strings.\n\nRequires the {@link ngCookies `ngCookies`} module to be installed.",
            "example": [
                "\n\n```js\nangular.module('cookiesExample', ['ngCookies'])\n  .controller('ExampleController', ['$cookies', function($cookies) {\n    // Retrieving a cookie\n    var favoriteCookie = $cookies.myFavorite;\n    // Setting a cookie\n    $cookies.myFavorite = 'oatmeal';\n  }]);\n```"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-cookies/angular-cookies.js",
            "line": 80,
            "description": "Pushes all the cookies from the service to the browser and verifies if all cookies were\nstored.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-cookies/angular-cookies.js",
            "line": 131,
            "ngdoc": "service",
            "name": "$cookieStore",
            "requires": [
                "$cookies"
            ],
            "description": "Provides a key-value (string-object) storage, that is backed by session cookies.\nObjects put or retrieved from this storage are automatically serialized or\ndeserialized by angular's toJson/fromJson.\n\nRequires the {@link ngCookies `ngCookies`} module to be installed.",
            "example": [
                "\n\n```js\nangular.module('cookieStoreExample', ['ngCookies'])\n  .controller('ExampleController', ['$cookieStore', function($cookieStore) {\n    // Put cookie\n    $cookieStore.put('myFavorite','oatmeal');\n    // Get cookie\n    var favoriteCookie = $cookieStore.get('myFavorite');\n    // Removing a cookie\n    $cookieStore.remove('myFavorite');\n  }]);\n```"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-cookies/angular-cookies.js",
            "line": 160,
            "ngdoc": "method",
            "name": "$cookieStore#get",
            "description": "Returns the value of given cookie key",
            "params": [
                {
                    "name": "key",
                    "description": "Id to use for lookup.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Deserialized cookie value.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-cookies/angular-cookies.js",
            "line": 175,
            "ngdoc": "method",
            "name": "$cookieStore#put",
            "description": "Sets a value for given cookie key",
            "params": [
                {
                    "name": "key",
                    "description": "Id for the `value`.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Value to be stored.",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-cookies/angular-cookies.js",
            "line": 189,
            "ngdoc": "method",
            "name": "$cookieStore#remove",
            "description": "Remove given cookie",
            "params": [
                {
                    "name": "key",
                    "description": "Id of the key-value pair to delete.",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 3,
            "description": "Classes\n\nFileUploader\nFileUploader.FileLikeObject\nFileUploader.FileItem\nFileUploader.FileDirective\nFileUploader.FileSelect\nFileUploader.FileDrop\nFileUploader.FileOver",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 36,
            "description": "Creates an instance of FileUploader",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 54,
            "description": "PUBLIC",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 57,
            "description": "Checks a support the html5 uploader",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "readonly": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 63,
            "description": "Adds items to the queue",
            "params": [
                {
                    "name": "files",
                    "description": "",
                    "type": "File|HTMLInputElement|Object|FileList|Array<Object>"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "filters",
                    "description": "",
                    "type": "Array<Function>|String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 97,
            "description": "Remove items from the queue. Remove last: index = -1",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "FileItem|Number"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 109,
            "description": "Clears the queue",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 118,
            "description": "Uploads a item from the queue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "FileItem|Number"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 133,
            "description": "Cancels uploading of item from the queue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "FileItem|Number"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 143,
            "description": "Uploads all not uploaded items of queue",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 157,
            "description": "Cancels all uploads",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 166,
            "description": "Returns \"true\" if value an instance of File",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 176,
            "description": "Returns \"true\" if value an instance of FileLikeObject",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 185,
            "description": "Returns \"true\" if value is array like object",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 193,
            "description": "Returns a index of item from the queue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Item|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 201,
            "description": "Returns not uploaded items",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 210,
            "description": "Returns items ready for upload",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 223,
            "description": "Destroys instance of FileUploader",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 233,
            "description": "Callback",
            "params": [
                {
                    "name": "fileItems",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 238,
            "description": "Callback",
            "params": [
                {
                    "name": "fileItem",
                    "description": "",
                    "type": "FileItem"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 243,
            "description": "Callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "File|Object"
                },
                {
                    "name": "filter",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 251,
            "description": "Callback",
            "params": [
                {
                    "name": "fileItem",
                    "description": "",
                    "type": "FileItem"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 256,
            "description": "Callback",
            "params": [
                {
                    "name": "fileItem",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "progress",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 262,
            "description": "Callback",
            "params": [
                {
                    "name": "progress",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 267,
            "description": "Callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 275,
            "description": "Callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 283,
            "description": "Callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 291,
            "description": "Callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 299,
            "description": "Callback",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 303,
            "description": "PRIVATE",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 306,
            "description": "Returns the total progress",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 322,
            "description": "Returns array of filters",
            "params": [
                {
                    "name": "filters",
                    "description": "",
                    "type": "Array<Function>|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array<Function>"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 336,
            "description": "Updates html",
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 343,
            "description": "Returns \"true\" if item is a file (not folder)",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "File|FileLikeObject"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 352,
            "description": "Returns \"true\" if the limit has not been reached",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 360,
            "description": "Returns \"true\" if file pass all filters",
            "params": [
                {
                    "name": "file",
                    "description": "",
                    "type": "File|Object"
                },
                {
                    "name": "filters",
                    "description": "",
                    "type": "Array<Function>"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 375,
            "description": "Checks whether upload successful",
            "params": [
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 384,
            "description": "Transforms the server response",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 398,
            "description": "Parsed response headers",
            "params": [
                {
                    "name": "headers",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "see": [
                "https://github.com/angular/angular.js/blob/master/src/ng/http.js"
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 422,
            "description": "Returns function that returns headers",
            "params": [
                {
                    "name": "parsedHeaders",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 436,
            "description": "The XMLHttpRequest transport",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 495,
            "description": "The IFrame transport",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 572,
            "description": "Inner callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "File|Object"
                },
                {
                    "name": "filter",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 582,
            "description": "Inner callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 589,
            "description": "Inner callback",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "Array<FileItem>"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 596,
            "description": "Inner callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 605,
            "description": "Inner callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "progress",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 619,
            "description": "Inner callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 631,
            "description": "Inner callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 643,
            "description": "Inner callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 655,
            "description": "Inner callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 679,
            "description": "STATIC",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 682,
            "borrows": "FileUploader.prototype.isFile",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 686,
            "borrows": "FileUploader.prototype.isFileLikeObject",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 690,
            "borrows": "FileUploader.prototype.isArrayLikeObject",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 694,
            "borrows": "FileUploader.prototype.isHTML5",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 698,
            "description": "Inherits a target (Class_1) by a source (Class_2)",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "source",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 717,
            "description": "Creates an instance of FileLikeObject",
            "params": [
                {
                    "name": "fileOrInput",
                    "description": "",
                    "type": "File|HTMLInputElement|Object"
                }
            ],
            "is_constructor": 1,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 730,
            "description": "Creates file like object from fake path string",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 741,
            "description": "Creates file like object from object",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "File|FileLikeObject"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 755,
            "description": "Creates an instance of FileItem",
            "params": [
                {
                    "name": "uploader",
                    "description": "",
                    "type": "FileUploader"
                },
                {
                    "name": "some",
                    "description": "",
                    "type": "File|HTMLInputElement|Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 792,
            "description": "PUBLIC",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 795,
            "description": "Uploads a FileItem",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 801,
            "description": "Cancels uploading of FileItem",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 807,
            "description": "Removes a FileItem",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 813,
            "description": "Callback",
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 818,
            "description": "Callback",
            "params": [
                {
                    "name": "progress",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 824,
            "description": "Callback",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 831,
            "description": "Callback",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 838,
            "description": "Callback",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 845,
            "description": "Callback",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 852,
            "description": "PRIVATE",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 855,
            "description": "Inner callback",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 868,
            "description": "Inner callback",
            "params": [
                {
                    "name": "progress",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 877,
            "description": "Inner callback",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 895,
            "description": "Inner callback",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 913,
            "description": "Inner callback",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 931,
            "description": "Inner callback",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 942,
            "description": "Destroys a FileItem",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 951,
            "description": "Prepares to uploading",
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 959,
            "description": "Replaces input element on his clone",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "JQLite|jQuery"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 973,
            "description": "Creates instance of {FileDirective} object",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "uploader",
                            "description": "",
                            "type": "Object"
                        },
                        {
                            "name": "element",
                            "description": "",
                            "type": "HTMLElement"
                        },
                        {
                            "name": "events",
                            "description": "",
                            "type": "Object"
                        },
                        {
                            "name": "prop",
                            "description": "",
                            "type": "String"
                        }
                    ]
                }
            ],
            "is_constructor": 1,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 988,
            "description": "Map of events",
            "type": "{Object}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 993,
            "description": "Binds events handles",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1002,
            "description": "Unbinds events handles",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1010,
            "description": "Destroys directive",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1019,
            "description": "Saves links to functions",
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1034,
            "description": "Creates instance of {FileSelect} object",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1047,
            "description": "Map of events",
            "type": "{Object}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1055,
            "description": "Name of property inside uploader._directive object",
            "type": "{String}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1060,
            "description": "Returns options",
            "return": {
                "description": "",
                "type": "Object|undefined"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1065,
            "description": "Returns filters",
            "return": {
                "description": "",
                "type": "Array<Function>|String|undefined"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1070,
            "description": "If returns \"true\" then HTMLInputElement will be cleared",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1077,
            "description": "Event handler",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1094,
            "description": "Creates instance of {FileDrop} object",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1102,
            "description": "Map of events",
            "type": "{Object}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1112,
            "description": "Name of property inside uploader._directive object",
            "type": "{String}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1117,
            "description": "Returns options",
            "return": {
                "description": "",
                "type": "Object|undefined"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1122,
            "description": "Returns filters",
            "return": {
                "description": "",
                "type": "Array<Function>|String|undefined"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1127,
            "description": "Event handler",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1139,
            "description": "Event handler",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1149,
            "description": "Event handler",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1157,
            "description": "Helper",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1163,
            "description": "Helper",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1170,
            "description": "Returns \"true\" if types contains files",
            "params": [
                {
                    "name": "types",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1184,
            "description": "Callback",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1190,
            "description": "Callback",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1201,
            "description": "Creates instance of {FileDrop} object",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1209,
            "description": "Map of events",
            "type": "{Object}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1216,
            "description": "Name of property inside uploader._directive object",
            "type": "{String}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1221,
            "description": "Over class",
            "type": "{string}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1226,
            "description": "Adds over class",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1232,
            "description": "Removes over class",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/src/module.js",
            "line": 1238,
            "description": "Returns over class",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 19,
            "description": "Classes\n\nFileUploader\nFileUploader.FileLikeObject\nFileUploader.FileItem\nFileUploader.FileDirective\nFileUploader.FileSelect\nFileUploader.FileDrop\nFileUploader.FileOver",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 52,
            "description": "Creates an instance of FileUploader",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 70,
            "description": "PUBLIC",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 73,
            "description": "Checks a support the html5 uploader",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "readonly": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 79,
            "description": "Adds items to the queue",
            "params": [
                {
                    "name": "files",
                    "description": "",
                    "type": "File|HTMLInputElement|Object|FileList|Array<Object>"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "filters",
                    "description": "",
                    "type": "Array<Function>|String"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 113,
            "description": "Remove items from the queue. Remove last: index = -1",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "FileItem|Number"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 125,
            "description": "Clears the queue",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 134,
            "description": "Uploads a item from the queue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "FileItem|Number"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 149,
            "description": "Cancels uploading of item from the queue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "FileItem|Number"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 159,
            "description": "Uploads all not uploaded items of queue",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 173,
            "description": "Cancels all uploads",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 182,
            "description": "Returns \"true\" if value an instance of File",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 192,
            "description": "Returns \"true\" if value an instance of FileLikeObject",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 201,
            "description": "Returns \"true\" if value is array like object",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 209,
            "description": "Returns a index of item from the queue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Item|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 217,
            "description": "Returns not uploaded items",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 226,
            "description": "Returns items ready for upload",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 239,
            "description": "Destroys instance of FileUploader",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 249,
            "description": "Callback",
            "params": [
                {
                    "name": "fileItems",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 254,
            "description": "Callback",
            "params": [
                {
                    "name": "fileItem",
                    "description": "",
                    "type": "FileItem"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 259,
            "description": "Callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "File|Object"
                },
                {
                    "name": "filter",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 267,
            "description": "Callback",
            "params": [
                {
                    "name": "fileItem",
                    "description": "",
                    "type": "FileItem"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 272,
            "description": "Callback",
            "params": [
                {
                    "name": "fileItem",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "progress",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 278,
            "description": "Callback",
            "params": [
                {
                    "name": "progress",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 283,
            "description": "Callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 291,
            "description": "Callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 299,
            "description": "Callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 307,
            "description": "Callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 315,
            "description": "Callback",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 319,
            "description": "PRIVATE",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 322,
            "description": "Returns the total progress",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 338,
            "description": "Returns array of filters",
            "params": [
                {
                    "name": "filters",
                    "description": "",
                    "type": "Array<Function>|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array<Function>"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 352,
            "description": "Updates html",
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 359,
            "description": "Returns \"true\" if item is a file (not folder)",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "File|FileLikeObject"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 368,
            "description": "Returns \"true\" if the limit has not been reached",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 376,
            "description": "Returns \"true\" if file pass all filters",
            "params": [
                {
                    "name": "file",
                    "description": "",
                    "type": "File|Object"
                },
                {
                    "name": "filters",
                    "description": "",
                    "type": "Array<Function>"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 391,
            "description": "Checks whether upload successful",
            "params": [
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 400,
            "description": "Transforms the server response",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 414,
            "description": "Parsed response headers",
            "params": [
                {
                    "name": "headers",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "see": [
                "https://github.com/angular/angular.js/blob/master/src/ng/http.js"
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 438,
            "description": "Returns function that returns headers",
            "params": [
                {
                    "name": "parsedHeaders",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 452,
            "description": "The XMLHttpRequest transport",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 511,
            "description": "The IFrame transport",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 588,
            "description": "Inner callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "File|Object"
                },
                {
                    "name": "filter",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 598,
            "description": "Inner callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 605,
            "description": "Inner callback",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "Array<FileItem>"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 612,
            "description": "Inner callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 621,
            "description": "Inner callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "progress",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 635,
            "description": "Inner callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 647,
            "description": "Inner callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 659,
            "description": "Inner callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 671,
            "description": "Inner callback",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "FileItem"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 695,
            "description": "STATIC",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 698,
            "borrows": "FileUploader.prototype.isFile",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 702,
            "borrows": "FileUploader.prototype.isFileLikeObject",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 706,
            "borrows": "FileUploader.prototype.isArrayLikeObject",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 710,
            "borrows": "FileUploader.prototype.isHTML5",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 714,
            "description": "Inherits a target (Class_1) by a source (Class_2)",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "source",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 733,
            "description": "Creates an instance of FileLikeObject",
            "params": [
                {
                    "name": "fileOrInput",
                    "description": "",
                    "type": "File|HTMLInputElement|Object"
                }
            ],
            "is_constructor": 1,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 746,
            "description": "Creates file like object from fake path string",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 757,
            "description": "Creates file like object from object",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "File|FileLikeObject"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 771,
            "description": "Creates an instance of FileItem",
            "params": [
                {
                    "name": "uploader",
                    "description": "",
                    "type": "FileUploader"
                },
                {
                    "name": "some",
                    "description": "",
                    "type": "File|HTMLInputElement|Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 808,
            "description": "PUBLIC",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 811,
            "description": "Uploads a FileItem",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 817,
            "description": "Cancels uploading of FileItem",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 823,
            "description": "Removes a FileItem",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 829,
            "description": "Callback",
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 834,
            "description": "Callback",
            "params": [
                {
                    "name": "progress",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 840,
            "description": "Callback",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 847,
            "description": "Callback",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 854,
            "description": "Callback",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 861,
            "description": "Callback",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 868,
            "description": "PRIVATE",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 871,
            "description": "Inner callback",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 884,
            "description": "Inner callback",
            "params": [
                {
                    "name": "progress",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 893,
            "description": "Inner callback",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 911,
            "description": "Inner callback",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 929,
            "description": "Inner callback",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 947,
            "description": "Inner callback",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 958,
            "description": "Destroys a FileItem",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 967,
            "description": "Prepares to uploading",
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 975,
            "description": "Replaces input element on his clone",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "JQLite|jQuery"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 989,
            "description": "Creates instance of {FileDirective} object",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "uploader",
                            "description": "",
                            "type": "Object"
                        },
                        {
                            "name": "element",
                            "description": "",
                            "type": "HTMLElement"
                        },
                        {
                            "name": "events",
                            "description": "",
                            "type": "Object"
                        },
                        {
                            "name": "prop",
                            "description": "",
                            "type": "String"
                        }
                    ]
                }
            ],
            "is_constructor": 1,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1004,
            "description": "Map of events",
            "type": "{Object}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1009,
            "description": "Binds events handles",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1018,
            "description": "Unbinds events handles",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1026,
            "description": "Destroys directive",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1035,
            "description": "Saves links to functions",
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1050,
            "description": "Creates instance of {FileSelect} object",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1063,
            "description": "Map of events",
            "type": "{Object}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1071,
            "description": "Name of property inside uploader._directive object",
            "type": "{String}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1076,
            "description": "Returns options",
            "return": {
                "description": "",
                "type": "Object|undefined"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1081,
            "description": "Returns filters",
            "return": {
                "description": "",
                "type": "Array<Function>|String|undefined"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1086,
            "description": "If returns \"true\" then HTMLInputElement will be cleared",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1093,
            "description": "Event handler",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1110,
            "description": "Creates instance of {FileDrop} object",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1118,
            "description": "Map of events",
            "type": "{Object}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1128,
            "description": "Name of property inside uploader._directive object",
            "type": "{String}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1133,
            "description": "Returns options",
            "return": {
                "description": "",
                "type": "Object|undefined"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1138,
            "description": "Returns filters",
            "return": {
                "description": "",
                "type": "Array<Function>|String|undefined"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1143,
            "description": "Event handler",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1155,
            "description": "Event handler",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1165,
            "description": "Event handler",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1173,
            "description": "Helper",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1179,
            "description": "Helper",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1186,
            "description": "Returns \"true\" if types contains files",
            "params": [
                {
                    "name": "types",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1200,
            "description": "Callback",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1206,
            "description": "Callback",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1217,
            "description": "Creates instance of {FileDrop} object",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1225,
            "description": "Map of events",
            "type": "{Object}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1232,
            "description": "Name of property inside uploader._directive object",
            "type": "{String}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1237,
            "description": "Over class",
            "type": "{string}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1242,
            "description": "Adds over class",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1248,
            "description": "Removes over class",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-file-upload/angular-file-upload.js",
            "line": 1254,
            "description": "Returns over class",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1,
            "description": "Bunch of useful filters for angularJS(with no external dependencies!)",
            "version": "v0.5.4 - 2015-02-20 * @link https://github.com/a8m/angular-filter",
            "author": "Ariel Mashraki <ariel@mashraki.co.il>",
            "license": "MIT License, http://www.opensource.org/licenses/MIT",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 24,
            "description": "get an object and return array of values",
            "params": [
                {
                    "name": "object",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 37,
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 45,
            "description": "return if object contains partial object",
            "params": [
                {
                    "name": "partial",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "object",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 61,
            "description": "search for approximate pattern in string",
            "params": [
                {
                    "name": "word",
                    "description": ""
                },
                {
                    "name": "pattern",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 80,
            "description": "return the first n element of an array,\nif expression provided, is returns as long the expression return truthy",
            "params": [
                {
                    "name": "array",
                    "description": ""
                },
                {
                    "name": "n",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "expression",
                    "description": "",
                    "type": "$parse"
                }
            ],
            "return": {
                "description": "array or single object"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 99,
            "description": "Polyfill to ECMA6 String.prototype.contains",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 108,
            "params": [
                {
                    "name": "num",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "decimal",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "$math",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 118,
            "description": "Get an object, and return an array composed of it's properties names(nested too).",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "stack",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "parent",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "example": [
                "\nparseKeys({ a:1, b: { c:2, d: { e: 3 } } }) ==> [\"a\", \"b.c\", \"b.d.e\"]"
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 147,
            "description": "Test if given object is a Scope instance",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 157,
            "ngdoc": "filter",
            "name": "a8m.angular",
            "kind": "function",
            "description": "reference to angular function",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 209,
            "ngdoc": "filter",
            "name": "a8m.conditions",
            "kind": "function",
            "description": "reference to math conditions",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 292,
            "ngdoc": "filter",
            "name": "isNull",
            "kind": "function",
            "description": "checks if value is null or not",
            "return": {
                "description": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 308,
            "ngdoc": "filter",
            "name": "after-where",
            "kind": "function",
            "description": "get a collection and properties object, and returns all of the items\nin the collection after the first that found with the given properties.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 337,
            "ngdoc": "filter",
            "name": "after",
            "kind": "function",
            "description": "get a collection and specified count, and returns all of the items\nin the collection after the specified count.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 361,
            "ngdoc": "filter",
            "name": "before-where",
            "kind": "function",
            "description": "get a collection and properties object, and returns all of the items\nin the collection before the first that found with the given properties.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 389,
            "ngdoc": "filter",
            "name": "before",
            "kind": "function",
            "description": "get a collection and specified count, and returns all of the items\nin the collection before the specified count.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 411,
            "ngdoc": "filter",
            "name": "concat",
            "kind": "function",
            "description": "get (array/object, object/array) and return merged collection",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 444,
            "ngdoc": "filter",
            "name": "contains",
            "kind": "function",
            "description": "Checks if given expression is present in one or more object in the collection",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 476,
            "ngdoc": "filter",
            "name": "countBy",
            "kind": "function",
            "description": "Sorts a list into groups and returns a count for the number of objects in each group.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 514,
            "ngdoc": "filter",
            "name": "defaults",
            "kind": "function",
            "description": "defaultsFilter allows to specify a default fallback value for properties that resolve to undefined.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 550,
            "ngdoc": "filter",
            "name": "every",
            "kind": "function",
            "description": "Checks if given expression is present in all members in the collection",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 576,
            "ngdoc": "filter",
            "name": "filterBy",
            "kind": "function",
            "description": "filter by specific properties, avoid the rest",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 602,
            "description": "check if there is concatenate properties\nexample:\nobject: { first: 'foo', last:'bar' }\nfilterBy: ['first + last'] => search by full name(i.e 'foo bar')",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 626,
            "ngdoc": "filter",
            "name": "first",
            "kind": "function",
            "description": "Gets the first element or first n elements of an array\nif callback is provided, is returns as long the callback return truthy",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 660,
            "ngdoc": "filter",
            "name": "flatten",
            "kind": "function",
            "description": "Flattens a nested array (the nesting can be to any depth).\nIf you pass shallow, the array will only be flattened a single level",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 688,
            "description": "flatten nested array (the nesting can be to any depth).",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "i",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 708,
            "ngdoc": "filter",
            "name": "fuzzyByKey",
            "kind": "function",
            "description": "fuzzy string searching by key",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 747,
            "ngdoc": "filter",
            "name": "fuzzy",
            "kind": "function",
            "description": "fuzzy string searching for array of strings, objects",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 780,
            "description": "checks if object has key{string} that match\nto fuzzy search pattern",
            "params": [
                {
                    "name": "object",
                    "description": ""
                },
                {
                    "name": "search",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 810,
            "ngdoc": "filter",
            "name": "groupBy",
            "kind": "function",
            "description": "Create an object composed of keys generated from the result of running each element of a collection,\neach key is an array of the elements.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 835,
            "description": "groupBy function",
            "params": [
                {
                    "name": "collection",
                    "description": ""
                },
                {
                    "name": "getter",
                    "description": ""
                }
            ],
            "return": {
                "description": "}"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 858,
            "ngdoc": "filter",
            "name": "isEmpty",
            "kind": "function",
            "description": "get collection or string and return if it empty",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 875,
            "ngdoc": "filter",
            "name": "join",
            "kind": "function",
            "description": "join a collection by a provided delimiter (space by default)",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 898,
            "ngdoc": "filter",
            "name": "last",
            "kind": "function",
            "description": "Gets the last element or last n elements of an array\nif callback is provided, is returns as long the callback return truthy",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 937,
            "ngdoc": "filter",
            "name": "map",
            "kind": "function",
            "description": "Returns a new collection of the results of each expression execution.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 963,
            "ngdoc": "filter",
            "name": "omit",
            "kind": "function",
            "description": "filter collection by expression",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 991,
            "ngdoc": "filter",
            "name": "omit",
            "kind": "function",
            "description": "filter collection by expression",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1019,
            "ngdoc": "filter",
            "name": "removeWith",
            "kind": "function",
            "description": "get collection and properties object, and removed elements\nwith this properties",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1047,
            "ngdoc": "filter",
            "name": "remove",
            "kind": "function",
            "description": "remove specific members from collection",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1078,
            "ngdoc": "filter",
            "name": "reverse",
            "kind": "function",
            "description": "Reverses a string or collection",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1101,
            "ngdoc": "filter",
            "name": "searchField",
            "kind": "function",
            "description": "for each member, join several strings field and add them to\nnew field called 'searchField' (use for search filtering)",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1136,
            "ngdoc": "filter",
            "name": "toArray",
            "kind": "function",
            "description": "Convert objects into stable arrays.\nif addKey set to true,the filter also attaches a new property\n$key to the value containing the original key that was used in\nthe object we are iterating over to reference the property",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1163,
            "ngdoc": "filter",
            "name": "unique/uniq",
            "kind": "function",
            "description": "get collection and filter duplicate members\nif uniqueFilter get a property(nested to) as argument it's\nfilter by this property as unique identifier",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1220,
            "ngdoc": "filter",
            "name": "where",
            "kind": "function",
            "description": "of each element in a collection to the given properties object,\nreturning an array of all elements that have equivalent property values.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1247,
            "ngdoc": "filter",
            "name": "xor",
            "kind": "function",
            "description": "Exclusive or filter by expression",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1284,
            "ngdoc": "filter",
            "name": "formatBytes",
            "kind": "function",
            "description": "Convert bytes into appropriate display \n1024 bytes => 1 KB",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1314,
            "ngdoc": "filter",
            "name": "degrees",
            "kind": "function",
            "description": "Convert angle from radians to degrees",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1339,
            "ngdoc": "filter",
            "name": "formatBytes",
            "kind": "function",
            "description": "Convert bytes into appropriate display \n1024 kilobytes => 1 MB",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1366,
            "ngdoc": "module",
            "name": "math",
            "description": "reference to global Math object",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1377,
            "ngdoc": "filter",
            "name": "max",
            "kind": "function",
            "description": "Math.max will get an array and return the max value. if an expression\nis provided, will return max value by expression.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1398,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": ""
                },
                {
                    "name": "exp",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number|*|Number"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1411,
            "ngdoc": "filter",
            "name": "min",
            "kind": "function",
            "description": "Math.min will get an array and return the min value. if an expression\nis provided, will return min value by expression.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1432,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": ""
                },
                {
                    "name": "exp",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number|*|Number"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1445,
            "ngdoc": "filter",
            "name": "Percent",
            "kind": "function",
            "description": "percentage between two numbers",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1469,
            "ngdoc": "filter",
            "name": "toRadians",
            "kind": "function",
            "description": "Convert angle from degrees to radians",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1493,
            "ngdoc": "filter",
            "name": "Radix",
            "kind": "function",
            "description": "converting decimal numbers to different bases(radix)",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1514,
            "ngdoc": "filter",
            "name": "formatBytes",
            "kind": "function",
            "description": "Convert number into abbreviations.\ni.e: K for one thousand, M for Million, B for billion\ne.g: number of users:235,221, decimal:1 => 235.2 K",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1544,
            "ngdoc": "filter",
            "name": "sum",
            "kind": "function",
            "description": "Sum up all values within an array",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1563,
            "ngdoc": "filter",
            "name": "endsWith",
            "kind": "function",
            "description": "checks whether string ends with the ends parameter.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1590,
            "ngdoc": "filter",
            "name": "latinize",
            "kind": "function",
            "description": "remove accents/diacritics from a string",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1712,
            "ngdoc": "filter",
            "name": "ltrim",
            "kind": "function",
            "description": "Left trim. Similar to trimFilter, but only for left side.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1732,
            "ngdoc": "filter",
            "name": "match",
            "kind": "function",
            "description": "Return the matched pattern in a string.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1752,
            "ngdoc": "filter",
            "name": "repeat",
            "kind": "function",
            "description": "Repeats a string n times",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1776,
            "description": "Repeats a string n times with given separator",
            "params": [
                {
                    "name": "str",
                    "description": "string to repeat"
                },
                {
                    "name": "n",
                    "description": "number of times"
                },
                {
                    "name": "sep",
                    "description": "separator"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1789,
            "ngdoc": "filter",
            "name": "rtrim",
            "kind": "function",
            "description": "Right trim. Similar to trimFilter, but only for right side.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1809,
            "ngdoc": "filter",
            "name": "slugify",
            "kind": "function",
            "description": "remove spaces from string, replace with \"-\" or given argument",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1829,
            "ngdoc": "filter",
            "name": "startWith",
            "kind": "function",
            "description": "checks whether string starts with the starts parameter.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1853,
            "ngdoc": "filter",
            "name": "stringular",
            "kind": "function",
            "description": "get string with {n} and replace match with enumeration values",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1873,
            "ngdoc": "filter",
            "name": "stripTags",
            "kind": "function",
            "description": "strip html tags from string",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1890,
            "ngdoc": "filter",
            "name": "test",
            "kind": "function",
            "description": "test if a string match a pattern.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1910,
            "ngdoc": "filter",
            "name": "trim",
            "kind": "function",
            "description": "Strip whitespace (or other characters) from the beginning and end of a string",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1930,
            "ngdoc": "filter",
            "name": "truncate",
            "kind": "function",
            "description": "truncates a string given a specified length, providing a custom string to denote an omission.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1954,
            "ngdoc": "filter",
            "name": "ucfirst",
            "kind": "function",
            "description": "ucfirst",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1976,
            "ngdoc": "filter",
            "name": "uriComponentEncode",
            "kind": "function",
            "description": "get string as parameter and return encoded string",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 1993,
            "ngdoc": "filter",
            "name": "uriEncode",
            "kind": "function",
            "description": "get string as parameter and return encoded string",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 2010,
            "ngdoc": "filter",
            "name": "wrap",
            "kind": "function",
            "description": "Wrap a string with another string",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 2027,
            "ngdoc": "provider",
            "name": "filterWatcher",
            "kind": "function",
            "description": "store specific filters result in $$cache, based on scope life time(avoid memory leak).\non scope.$destroy remove it's cache from $$cache container",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 2042,
            "description": "Cache storing",
            "type": "{Object}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 2048,
            "description": "Scope listeners container\nscope.$destroy => remove all cache keys\nbind to current scope.",
            "type": "{Object}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 2056,
            "description": "$timeout without triggering the digest cycle",
            "type": "{function}",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 2062,
            "description": "get `HashKey` string based on the given arguments.",
            "params": [
                {
                    "name": "fName",
                    "description": ""
                },
                {
                    "name": "args",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 2075,
            "description": "fir on $scope.$destroy,\nremove cache based scope from `$$cache`,\nand remove itself from `$$listeners`",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 2090,
            "description": "for angular version that greater than v.1.3.0\nif clear cache when the digest cycle end.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 2102,
            "description": "Store hashKeys in $$listeners container\non scope.$destroy, remove them all(bind an event).",
            "params": [
                {
                    "name": "scope",
                    "description": ""
                },
                {
                    "name": "hashKey",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 2119,
            "description": "return the `cacheKey` or undefined.",
            "params": [
                {
                    "name": "filterName",
                    "description": ""
                },
                {
                    "name": "args",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 2131,
            "description": "store `result` in `$$cache` container, based on the hashKey.\nadd $destroy listener and return result",
            "params": [
                {
                    "name": "filterName",
                    "description": ""
                },
                {
                    "name": "args",
                    "description": ""
                },
                {
                    "name": "scope",
                    "description": ""
                },
                {
                    "name": "result",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.js",
            "line": 2164,
            "ngdoc": "module",
            "name": "angular.filters",
            "description": "Bunch of useful filters for angularJS",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-filter/dist/angular-filter.min.js",
            "line": 1,
            "description": "Bunch of useful filters for angularJS(with no external dependencies!)",
            "version": "v0.5.4 - 2015-02-20 * @link https://github.com/a8m/angular-filter",
            "author": "Ariel Mashraki <ariel@mashraki.co.il>",
            "license": "MIT License, http://www.opensource.org/licenses/MIT\n/!function(a,b,c){\"use strict\";function d(a){return D(a)?a:Object.keys(a).map(function(b){return a[b]})}function e(a){return null===a}function f(a,b){var d=Object.keys(a);return-1==d.map(function(d){return b[d]!==c&&b[d]==a[d]}).indexOf(!1)}function g(a,b){if(\"\"===b)return a;var c=a.indexOf(b.charAt(0));return-1===c?!1:g(a.substr(c+1),b.substr(1))}function h(a,b,c){var d=0;return a.filter(function(a){var e=x(c)?b>d&&c(a):b>d;return d=e?d+1:d,e})}function i(a,b,c){return c.round(a*c.pow(10,b))/c.pow(10,b)}function j(a,b,c){b=b||[];var d=Object.keys(a);return d.forEach(function(d){if(C(a[d])&&!D(a[d])){var e=c?c+\".\"+d:c;j(a[d],b,e||d)}else{var f=c?c+\".\"+d:d;b.push(f)}}),b}function k(a){return a&&a.$evalAsync&&a.$watch}function l(){return function(a,b){return a>b}}function m(){return function(a,b){return a>=b}}function n(){return function(a,b){return b>a}}function o(){return function(a,b){return b>=a}}function p(){return function(a,b){return a==b}}function q(){return function(a,b){return a!=b}}function r(){return function(a,b){return a===b}}function s(){return function(a,b){return a!==b}}function t(a){return function(b,c){return b=C(b)?d(b):b,!D(b)||y(c)?!1:b.some(function(b){return C(b)||z(c)?a(c)(b):b===c})}}function u(a,b){return b=b||0,b>=a.length?a:D(a[b])?u(a.slice(0,b).concat(a[b],a.slice(b+1)),b):u(a,b+1)}function v(a){return function(b,c){function e(a,b){return y(b)?!1:a.some(function(a){return H(a,b)})}if(b=C(b)?d(b):b,!D(b))return b;var f=[],g=a(c);return b.filter(y(c)?function(a,b,c){return c.indexOf(a)===b}:function(a){var b=g(a);return e(f,b)?!1:(f.push(b),!0)})}}function w(a,b,c){return b?a+c+w(a,--b,c):a}var x=b.isDefined,y=b.isUndefined,z=b.isFunction,A=b.isString,B=b.isNumber,C=b.isObject,D=b.isArray,E=b.forEach,F=b.extend,G=b.copy,H=b.equals;String.prototype.contains||(String.prototype.contains=function(){return-1!==String.prototype.indexOf.apply(this,arguments)}),b.module(\"a8m.angular\",[]).filter(\"isUndefined\",function(){return function(a){return b.isUndefined(a)}}).filter(\"isDefined\",function(){return function(a){return b.isDefined(a)}}).filter(\"isFunction\",function(){return function(a){return b.isFunction(a)}}).filter(\"isString\",function(){return function(a){return b.isString(a)}}).filter(\"isNumber\",function(){return function(a){return b.isNumber(a)}}).filter(\"isArray\",function(){return function(a){return b.isArray(a)}}).filter(\"isObject\",function(){return function(a){return b.isObject(a)}}).filter(\"isEqual\",function(){return function(a,c){return b.equals(a,c)}}),b.module(\"a8m.conditions\",[]).filter({isGreaterThan:l,\">\":l,isGreaterThanOrEqualTo:m,\">=\":m,isLessThan:n,\"<\":n,isLessThanOrEqualTo:o,\"<=\":o,isEqualTo:p,\"==\":p,isNotEqualTo:q,\"!=\":q,isIdenticalTo:r,\"===\":r,isNotIdenticalTo:s,\"!==\":s}),b.module(\"a8m.is-null\",[]).filter(\"isNull\",function(){return function(a){return e(a)}}),b.module(\"a8m.after-where\",[]).filter(\"afterWhere\",function(){return function(a,b){if(a=C(a)?d(a):a,!D(a)||y(b))return a;var c=a.map(function(a){return f(b,a)}).indexOf(!0);return a.slice(-1===c?0:c)}}),b.module(\"a8m.after\",[]).filter(\"after\",function(){return function(a,b){return a=C(a)?d(a):a,D(a)?a.slice(b):a}}),b.module(\"a8m.before-where\",[]).filter(\"beforeWhere\",function(){return function(a,b){if(a=C(a)?d(a):a,!D(a)||y(b))return a;var c=a.map(function(a){return f(b,a)}).indexOf(!0);return a.slice(0,-1===c?a.length:++c)}}),b.module(\"a8m.before\",[]).filter(\"before\",function(){return function(a,b){return a=C(a)?d(a):a,D(a)?a.slice(0,b?--b:b):a}}),b.module(\"a8m.concat\",[]).filter(\"concat\",[function(){return function(a,b){if(y(b))return a;if(D(a))return a.concat(C(b)?d(b):b);if(C(a)){var c=d(a);return c.concat(C(b)?d(b):b)}return a}}]),b.module(\"a8m.contains\",[]).filter({contains:[\"$parse\",t],some:[\"$parse\",t]}),b.module(\"a8m.count-by\",[]).filter(\"countBy\",[\"$parse\",function(a){return function(b,c){var e,f={},g=a(c);return b=C(b)?d(b):b,!D(b)||y(c)?b:(b.forEach(function(a){e=g(a),f[e]||(f[e]=0),f[e]++}),f)}}]),b.module(\"a8m.defaults\",[]).filter(\"defaults\",[\"$parse\",function(a){return function(b,c){if(b=C(b)?d(b):b,!D(b)||!C(c))return b;var e=j(c);return b.forEach(function(b){e.forEach(function(d){var e=a(d),f=e.assign;y(e(b))&&f(b,e(c))})}),b}}]),b.module(\"a8m.every\",[]).filter(\"every\",[\"$parse\",function(a){return function(b,c){return b=C(b)?d(b):b,!D(b)||y(c)?!0:b.every(function(b){return C(b)||z(c)?a(c)(b):b===c})}}]),b.module(\"a8m.filter-by\",[]).filter(\"filterBy\",[\"$parse\",function(a){return function(b,e,f){var g;return f=A(f)||B(f)?String(f).toLowerCase():c,b=C(b)?d(b):b,!D(b)||y(f)?b:b.filter(function(b){return e.some(function(c){if(~c.indexOf(\"+\")){var d=c.replace(new RegExp(\"\\\\s\",\"g\"),\"\").split(\"+\");g=d.reduce(function(c,d,e){return 1===e?a(c)(b)+\" \"+a(d)(b):c+\" \"+a(d)(b)})}else g=a(c)(b);return A(g)||B(g)?String(g).toLowerCase().contains(f):!1})})}}]),b.module(\"a8m.first\",[]).filter(\"first\",[\"$parse\",function(a){return function(b){var e,f,g;return b=C(b)?d(b):b,D(b)?(g=Array.prototype.slice.call(arguments,1),e=B(g[0])?g[0]:1,f=B(g[0])?B(g[1])?c:g[1]:g[0],g.length?h(b,e,f?a(f):f):b[0]):b}}]),b.module(\"a8m.flatten\",[]).filter(\"flatten\",function(){return function(a,b){return b=b||!1,a=C(a)?d(a):a,D(a)?b?[].concat.apply([],a):u(a,0):a}}),b.module(\"a8m.fuzzy-by\",[]).filter(\"fuzzyBy\",[\"$parse\",function(a){return function(b,c,e,f){var h,i,j=f||!1;return b=C(b)?d(b):b,!D(b)||y(c)||y(e)?b:(i=a(c),b.filter(function(a){return h=i(a),A(h)?(h=j?h:h.toLowerCase(),e=j?e:e.toLowerCase(),g(h,e)!==!1):!1}))}}]),b.module(\"a8m.fuzzy\",[]).filter(\"fuzzy\",function(){return function(a,b,c){function e(a,b){var c,d,e=Object.keys(a);return 0<e.filter(function(e){return c=a[e],d?!0:A(c)?(c=f?c:c.toLowerCase(),d=g(c,b)!==!1):!1}).length}var f=c||!1;return a=C(a)?d(a):a,!D(a)||y(b)?a:(b=f?b:b.toLowerCase(),a.filter(function(a){return A(a)?(a=f?a:a.toLowerCase(),g(a,b)!==!1):C(a)?e(a,b):!1}))}}),b.module(\"a8m.group-by\",[\"a8m.filter-watcher\"]).filter(\"groupBy\",[\"$parse\",\"filterWatcher\",function(a,b){return function(c,d){function e(a,b){var c,d={};return E(a,function(a){c=b(a),d[c]||(d[c]=[]),d[c].push(a)}),d}if(!C(c)||y(d))return c;var f=a(d);return b.isMemoized(\"groupBy\",arguments)||b.memoize(\"groupBy\",arguments,this,e(c,f))}}]),b.module(\"a8m.is-empty\",[]).filter(\"isEmpty\",function(){return function(a){return C(a)?!d(a).length:!a.length}}),b.module(\"a8m.join\",[]).filter(\"join\",function(){return function(a,b){return y(a)||!D(a)?a:(y(b)&&(b=\" \"),a.join(b))}}),b.module(\"a8m.last\",[]).filter(\"last\",[\"$parse\",function(a){return function(b){var e,f,g,i=G(b);return i=C(i)?d(i):i,D(i)?(g=Array.prototype.slice.call(arguments,1),e=B(g[0])?g[0]:1,f=B(g[0])?B(g[1])?c:g[1]:g[0],g.length?h(i.reverse(),e,f?a(f):f).reverse():i[i.length-1]):i}}]),b.module(\"a8m.map\",[]).filter(\"map\",[\"$parse\",function(a){return function(b,c){return b=C(b)?d(b):b,!D(b)||y(c)?b:b.map(function(b){return a(c)(b)})}}]),b.module(\"a8m.omit\",[]).filter(\"omit\",[\"$parse\",function(a){return function(b,c){return b=C(b)?d(b):b,!D(b)||y(c)?b:b.filter(function(b){return!a(c)(b)})}}]),b.module(\"a8m.pick\",[]).filter(\"pick\",[\"$parse\",function(a){return function(b,c){return b=C(b)?d(b):b,!D(b)||y(c)?b:b.filter(function(b){return a(c)(b)})}}]),b.module(\"a8m.remove-with\",[]).filter(\"removeWith\",function(){return function(a,b){return y(b)?a:(a=C(a)?d(a):a,a.filter(function(a){return!f(b,a)}))}}),b.module(\"a8m.remove\",[]).filter(\"remove\",function(){return function(a){a=C(a)?d(a):a;var b=Array.prototype.slice.call(arguments,1);return D(a)?a.filter(function(a){return!b.some(function(b){return H(b,a)})}):a}}),b.module(\"a8m.reverse\",[]).filter(\"reverse\",[function(){return function(a){return a=C(a)?d(a):a,A(a)?a.split(\"\").reverse().join(\"\"):D(a)?a.slice().reverse():a}}]),b.module(\"a8m.search-field\",[]).filter(\"searchField\",[\"$parse\",function(a){return function(b){var c,e;b=C(b)?d(b):b;var f=Array.prototype.slice.call(arguments,1);return D(b)&&f.length?b.map(function(b){return e=f.map(function(d){return(c=a(d))(b)}).join(\" \"),F(b,{searchField:e})}):b}}]),b.module(\"a8m.to-array\",[]).filter(\"toArray\",function(){return function(a,b){return C(a)?b?Object.keys(a).map(function(b){return F(a[b],{$key:b})}):d(a):a}}),b.module(\"a8m.unique\",[]).filter({unique:[\"$parse\",v],uniq:[\"$parse\",v]}),b.module(\"a8m.where\",[]).filter(\"where\",function(){return function(a,b){return y(b)?a:(a=C(a)?d(a):a,a.filter(function(a){return f(b,a)}))}}),b.module(\"a8m.xor\",[]).filter(\"xor\",[\"$parse\",function(a){return function(b,c,e){function f(b,c){var d=a(e);return c.some(function(a){return e?H(d(a),d(b)):H(a,b)})}return e=e||!1,b=C(b)?d(b):b,c=C(c)?d(c):c,D(b)&&D(c)?b.concat(c).filter(function(a){return!(f(a,b)&&f(a,c))}):b}}]),b.module(\"a8m.math.byteFmt\",[\"a8m.math\"]).filter(\"byteFmt\",[\"$math\",function(a){return function(b,c){return B(c)&&isFinite(c)&&c%1===0&&c>=0&&B(b)&&isFinite(b)?1024>b?i(b,c,a)+\" B\":1048576>b?i(b/1024,c,a)+\" KB\":1073741824>b?i(b/1048576,c,a)+\" MB\":i(b/1073741824,c,a)+\" GB\":\"NaN\"}}]),b.module(\"a8m.math.degrees\",[\"a8m.math\"]).filter(\"degrees\",[\"$math\",function(a){return function(b,c){if(B(c)&&isFinite(c)&&c%1===0&&c>=0&&B(b)&&isFinite(b)){var d=180*b/a.PI;return a.round(d*a.pow(10,c))/a.pow(10,c)}return\"NaN\"}}]),b.module(\"a8m.math.kbFmt\",[\"a8m.math\"]).filter(\"kbFmt\",[\"$math\",function(a){return function(b,c){return B(c)&&isFinite(c)&&c%1===0&&c>=0&&B(b)&&isFinite(b)?1024>b?i(b,c,a)+\" KB\":1048576>b?i(b/1024,c,a)+\" MB\":i(b/1048576,c,a)+\" GB\":\"NaN\"}}]),b.module(\"a8m.math\",[]).factory(\"$math\",[\"$window\",function(a){return a.Math}]),b.module(\"a8m.math.max\",[\"a8m.math\"]).filter(\"max\",[\"$math\",\"$parse\",function(a,b){function c(c,d){var e=c.map(function(a){return b(d)(a)});return e.indexOf(a.max.apply(a,e))}return function(b,d){return D(b)?y(d)?a.max.apply(a,b):b[c(b,d)]:b}}]),b.module(\"a8m.math.min\",[\"a8m.math\"]).filter(\"min\",[\"$math\",\"$parse\",function(a,b){function c(c,d){var e=c.map(function(a){return b(d)(a)});return e.indexOf(a.min.apply(a,e))}return function(b,d){return D(b)?y(d)?a.min.apply(a,b):b[c(b,d)]:b}}]),b.module(\"a8m.math.percent\",[\"a8m.math\"]).filter(\"percent\",[\"$math\",\"$window\",function(a,b){return function(c,d,e){var f=A(c)?b.Number(c):c;return d=d||100,e=e||!1,!B(f)||b.isNaN(f)?c:e?a.round(f/d*100):f/d*100}}]),b.module(\"a8m.math.radians\",[\"a8m.math\"]).filter(\"radians\",[\"$math\",function(a){return function(b,c){if(B(c)&&isFinite(c)&&c%1===0&&c>=0&&B(b)&&isFinite(b)){var d=3.14159265359*b/180;return a.round(d*a.pow(10,c))/a.pow(10,c)}return\"NaN\"}}]),b.module(\"a8m.math.radix\",[]).filter(\"radix\",function(){return function(a,b){var c=/^[2-9]$|^[1-2]\\d$|^3[0-6]$/;return B(a)&&c.test(b)?a.toString(b).toUpperCase():a}}),b.module(\"a8m.math.shortFmt\",[\"a8m.math\"]).filter(\"shortFmt\",[\"$math\",function(a){return function(b,c){return B(c)&&isFinite(c)&&c%1===0&&c>=0&&B(b)&&isFinite(b)?1e3>b?b:1e6>b?i(b/1e3,c,a)+\" K\":1e9>b?i(b/1e6,c,a)+\" M\":i(b/1e9,c,a)+\" B\":\"NaN\"}}]),b.module(\"a8m.math.sum\",[]).filter(\"sum\",function(){return function(a,b){return D(a)?a.reduce(function(a,b){return a+b},b||0):a}}),b.module(\"a8m.ends-with\",[]).filter(\"endsWith\",function(){return function(a,b,c){var d,e=c||!1;return!A(a)||y(b)?a:(a=e?a:a.toLowerCase(),d=a.length-b.length,-1!==a.indexOf(e?b:b.toLowerCase(),d))}}),b.module(\"a8m.latinize\",[]).filter(\"latinize\",[function(){function a(a){return a.replace(/[^\\u0000-\\u007E]/g,function(a){return c[a]||a})}for(var b=[{base:\"A\",letters:\"AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ\"},{base:\"AA\",letters:\"Ꜳ\"},{base:\"AE\",letters:\"ÆǼǢ\"},{base:\"AO\",letters:\"Ꜵ\"},{base:\"AU\",letters:\"Ꜷ\"},{base:\"AV\",letters:\"ꜸꜺ\"},{base:\"AY\",letters:\"Ꜽ\"},{base:\"B\",letters:\"BⒷＢḂḄḆɃƂƁ\"},{base:\"C\",letters:\"CⒸＣĆĈĊČÇḈƇȻꜾ\"},{base:\"D\",letters:\"DⒹＤḊĎḌḐḒḎĐƋƊƉꝹ\"},{base:\"DZ\",letters:\"ǱǄ\"},{base:\"Dz\",letters:\"ǲǅ\"},{base:\"E\",letters:\"EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ\"},{base:\"F\",letters:\"FⒻＦḞƑꝻ\"},{base:\"G\",letters:\"GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ\"},{base:\"H\",letters:\"HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ\"},{base:\"I\",letters:\"IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ\"},{base:\"J\",letters:\"JⒿＪĴɈ\"},{base:\"K\",letters:\"KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ\"},{base:\"L\",letters:\"LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ\"},{base:\"LJ\",letters:\"Ǉ\"},{base:\"Lj\",letters:\"ǈ\"},{base:\"M\",letters:\"MⓂＭḾṀṂⱮƜ\"},{base:\"N\",letters:\"NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ\"},{base:\"NJ\",letters:\"Ǌ\"},{base:\"Nj\",letters:\"ǋ\"},{base:\"O\",letters:\"OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ\"},{base:\"OI\",letters:\"Ƣ\"},{base:\"OO\",letters:\"Ꝏ\"},{base:\"OU\",letters:\"Ȣ\"},{base:\"OE\",letters:\"Œ\"},{base:\"oe\",letters:\"œ\"},{base:\"P\",letters:\"PⓅＰṔṖƤⱣꝐꝒꝔ\"},{base:\"Q\",letters:\"QⓆＱꝖꝘɊ\"},{base:\"R\",letters:\"RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ\"},{base:\"S\",letters:\"SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ\"},{base:\"T\",letters:\"TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ\"},{base:\"TZ\",letters:\"Ꜩ\"},{base:\"U\",letters:\"UⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ\"},{base:\"V\",letters:\"VⓋＶṼṾƲꝞɅ\"},{base:\"VY\",letters:\"Ꝡ\"},{base:\"W\",letters:\"WⓌＷẀẂŴẆẄẈⱲ\"},{base:\"X\",letters:\"XⓍＸẊẌ\"},{base:\"Y\",letters:\"YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ\"},{base:\"Z\",letters:\"ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ\"},{base:\"a\",letters:\"aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ\"},{base:\"aa\",letters:\"ꜳ\"},{base:\"ae\",letters:\"æǽǣ\"},{base:\"ao\",letters:\"ꜵ\"},{base:\"au\",letters:\"ꜷ\"},{base:\"av\",letters:\"ꜹꜻ\"},{base:\"ay\",letters:\"ꜽ\"},{base:\"b\",letters:\"bⓑｂḃḅḇƀƃɓ\"},{base:\"c\",letters:\"cⓒｃćĉċčçḉƈȼꜿↄ\"},{base:\"d\",letters:\"dⓓｄḋďḍḑḓḏđƌɖɗꝺ\"},{base:\"dz\",letters:\"ǳǆ\"},{base:\"e\",letters:\"eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ\"},{base:\"f\",letters:\"fⓕｆḟƒꝼ\"},{base:\"g\",letters:\"gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ\"},{base:\"h\",letters:\"hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ\"},{base:\"hv\",letters:\"ƕ\"},{base:\"i\",letters:\"iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı\"},{base:\"j\",letters:\"jⓙｊĵǰɉ\"},{base:\"k\",letters:\"kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ\"},{base:\"l\",letters:\"lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ\"},{base:\"lj\",letters:\"ǉ\"},{base:\"m\",letters:\"mⓜｍḿṁṃɱɯ\"},{base:\"n\",letters:\"nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ\"},{base:\"nj\",letters:\"ǌ\"},{base:\"o\",letters:\"oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ\"},{base:\"oi\",letters:\"ƣ\"},{base:\"ou\",letters:\"ȣ\"},{base:\"oo\",letters:\"ꝏ\"},{base:\"p\",letters:\"pⓟｐṕṗƥᵽꝑꝓꝕ\"},{base:\"q\",letters:\"qⓠｑɋꝗꝙ\"},{base:\"r\",letters:\"rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ\"},{base:\"s\",letters:\"sⓢｓßśṥŝṡšṧṣṩșşȿꞩꞅẛ\"},{base:\"t\",letters:\"tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ\"},{base:\"tz\",letters:\"ꜩ\"},{base:\"u\",letters:\"uⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ\"},{base:\"v\",letters:\"vⓥｖṽṿʋꝟʌ\"},{base:\"vy\",letters:\"ꝡ\"},{base:\"w\",letters:\"wⓦｗẁẃŵẇẅẘẉⱳ\"},{base:\"x\",letters:\"xⓧｘẋẍ\"},{base:\"y\",letters:\"yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ\"},{base:\"z\",letters:\"zⓩｚźẑżžẓẕƶȥɀⱬꝣ\"}],c={},d=0;d<b.length;d++)for(var e=b[d].letters.split(\"\"),f=0;f<e.length;f++)c[e[f]]=b[d].base;return function(b){return A(b)?a(b):b}}]),b.module(\"a8m.ltrim\",[]).filter(\"ltrim\",function(){return function(a,b){var c=b||\"\\\\s\";return A(a)?a.replace(new RegExp(\"^\"+c+\"+\"),\"\"):a}}),b.module(\"a8m.match\",[]).filter(\"match\",function(){return function(a,b,c){var d=new RegExp(b,c);return A(a)?a.match(d):null}}),b.module(\"a8m.repeat\",[]).filter(\"repeat\",[function(){return function(a,b,c){var d=~~b;return A(a)&&d?w(a,--b,c||\"\"):a}}]),b.module(\"a8m.rtrim\",[]).filter(\"rtrim\",function(){return function(a,b){var c=b||\"\\\\s\";return A(a)?a.replace(new RegExp(c+\"+$\"),\"\"):a}}),b.module(\"a8m.slugify\",[]).filter(\"slugify\",[function(){return function(a,b){var c=y(b)?\"-\":b;return A(a)?a.toLowerCase().replace(/\\s+/g,c):a}}]),b.module(\"a8m.starts-with\",[]).filter(\"startsWith\",function(){return function(a,b,c){var d=c||!1;return!A(a)||y(b)?a:(a=d?a:a.toLowerCase(),!a.indexOf(d?b:b.toLowerCase()))}}),b.module(\"a8m.stringular\",[]).filter(\"stringular\",function(){return function(a){var b=Array.prototype.slice.call(arguments,1);return a.replace(/{(\\d+)}/g,function(a,c){return y(b[c])?a:b[c]})}}),b.module(\"a8m.strip-tags\",[]).filter(\"stripTags\",function(){return function(a){return A(a)?a.replace(/<\\S[^><]*>/g,\"\"):a}}),b.module(\"a8m.test\",[]).filter(\"test\",function(){return function(a,b,c){var d=new RegExp(b,c);return A(a)?d.test(a):a}}),b.module(\"a8m.trim\",[]).filter(\"trim\",function(){return function(a,b){var c=b||\"\\\\s\";return A(a)?a.replace(new RegExp(\"^\"+c+\"+|\"+c+\"+$\",\"g\"),\"\"):a}}),b.module(\"a8m.truncate\",[]).filter(\"truncate\",function(){return function(a,b,c,d){return b=y(b)?a.length:b,d=d||!1,c=c||\"\",!A(a)||a.length<=b?a:a.substring(0,d?-1===a.indexOf(\" \",b)?a.length:a.indexOf(\" \",b):b)+c}}),b.module(\"a8m.ucfirst\",[]).filter(\"ucfirst\",[function(){return function(a){return A(a)?a.split(\" \").map(function(a){return a.charAt(0).toUpperCase()+a.substring(1)}).join(\" \"):a}}]),b.module(\"a8m.uri-component-encode\",[]).filter(\"uriComponentEncode\",[\"$window\",function(a){return function(b){return A(b)?a.encodeURIComponent(b):b}}]),b.module(\"a8m.uri-encode\",[]).filter(\"uriEncode\",[\"$window\",function(a){return function(b){return A(b)?a.encodeURI(b):b}}]),b.module(\"a8m.wrap\",[]).filter(\"wrap\",function(){return function(a,b,c){return A(a)&&x(b)?[b,a,c||b].join(\"\"):a}}),b.module(\"a8m.filter-watcher\",[]).provider(\"filterWatcher\",function(){this.$get=[\"$window\",\"$rootScope\",function(a,c){function d(a,c){return[a,b.toJson(c)].join(\"#\").replace(/\"/g,\"\")}function e(a){var b=a.targetScope.$id;E(l[b],function(a){delete j[a]}),delete l[b]}function f(){m(function(){c.$$phase||(j={})})}function g(a,b){var c=a.$id;return y(l[c])&&(a.$on(\"$destroy\",e),l[c]=[]),l[c].push(b)}function h(a,b){var c=d(a,b);return j[c]}function i(a,b,c,e){var h=d(a,b);return j[h]=e,k(c)?g(c,h):f(),e}var j={},l={},m=a.setTimeout;return{isMemoized:h,memoize:i}}]}),b.module(\"angular.filter\",[\"a8m.ucfirst\",\"a8m.uri-encode\",\"a8m.uri-component-encode\",\"a8m.slugify\",\"a8m.latinize\",\"a8m.strip-tags\",\"a8m.stringular\",\"a8m.truncate\",\"a8m.starts-with\",\"a8m.ends-with\",\"a8m.wrap\",\"a8m.trim\",\"a8m.ltrim\",\"a8m.rtrim\",\"a8m.repeat\",\"a8m.test\",\"a8m.match\",\"a8m.to-array\",\"a8m.concat\",\"a8m.contains\",\"a8m.unique\",\"a8m.is-empty\",\"a8m.after\",\"a8m.after-where\",\"a8m.before\",\"a8m.before-where\",\"a8m.defaults\",\"a8m.where\",\"a8m.reverse\",\"a8m.remove\",\"a8m.remove-with\",\"a8m.group-by\",\"a8m.count-by\",\"a8m.search-field\",\"a8m.fuzzy-by\",\"a8m.fuzzy\",\"a8m.omit\",\"a8m.pick\",\"a8m.every\",\"a8m.filter-by\",\"a8m.xor\",\"a8m.map\",\"a8m.first\",\"a8m.last\",\"a8m.flatten\",\"a8m.join\",\"a8m.math\",\"a8m.math.max\",\"a8m.math.min\",\"a8m.math.percent\",\"a8m.math.radix\",\"a8m.math.sum\",\"a8m.math.degrees\",\"a8m.math.radians\",\"a8m.math.byteFmt\",\"a8m.math.kbFmt\",\"a8m.math.shortFmt\",\"a8m.angular\",\"a8m.conditions\",\"a8m.is-null\",\"a8m.filter-watcher\"])}(window,window.angular);",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-local-storage/dist/angular-local-storage.js",
            "line": 1,
            "description": "An Angular module that gives you access to the browsers local storage",
            "version": "v0.1.5 - 2014-11-04",
            "link": "https://github.com/grevory/angular-local-storage",
            "author": "grevory <greg@gregpike.ca>",
            "license": "MIT License, http://www.opensource.org/licenses/MIT",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-local-storage/dist/angular-local-storage.min.js",
            "line": 1,
            "description": "An Angular module that gives you access to the browsers local storage",
            "version": "v0.1.5 - 2014-11-04",
            "link": "https://github.com/grevory/angular-local-storage",
            "author": "grevory <greg@gregpike.ca>",
            "license": "MIT License, http://www.opensource.org/licenses/MIT\n/!function(a,b){\"use strict\";function c(a){return/^-?\\d+\\.?\\d*$/.test(a.replace(/[\"']/g,\"\"))}var d=b.isDefined,e=b.isUndefined,f=b.isNumber,g=b.isObject,h=b.isArray,i=b.extend,j=b.toJson,k=b.fromJson,l=b.module(\"LocalStorageModule\",[]);l.provider(\"localStorageService\",function(){this.prefix=\"ls\",this.storageType=\"localStorage\",this.cookie={expiry:30,path:\"/\"},this.notify={setItem:!0,removeItem:!1},this.setPrefix=function(a){return this.prefix=a,this},this.setStorageType=function(a){return this.storageType=a,this},this.setStorageCookie=function(a,b){return this.cookie={expiry:a,path:b},this},this.setStorageCookieDomain=function(a){return this.cookie.domain=a,this},this.setNotify=function(a,b){return this.notify={setItem:a,removeItem:b},this},this.$get=[\"$rootScope\",\"$window\",\"$document\",\"$parse\",function(a,b,l,m){var n,o=this,p=o.prefix,q=o.cookie,r=o.notify,s=o.storageType;l?l[0]&&(l=l[0]):l=document,\".\"!==p.substr(-1)&&(p=p?p+\".\":\"\");var t=function(a){return p+a},u=function(){try{var c=s in b&&null!==b[s],d=t(\"__\"+Math.round(1e7*Math.random()));return c&&(n=b[s],n.setItem(d,\"\"),n.removeItem(d)),c}catch(e){return s=\"cookie\",a.$broadcast(\"LocalStorageModule.notification.error\",e.message),!1}}(),v=function(b,c){if(e(c)?c=null:(g(c)||h(c)||f(+c||c))&&(c=j(c)),!u||\"cookie\"===o.storageType)return u||a.$broadcast(\"LocalStorageModule.notification.warning\",\"LOCAL_STORAGE_NOT_SUPPORTED\"),r.setItem&&a.$broadcast(\"LocalStorageModule.notification.setitem\",{key:b,newvalue:c,storageType:\"cookie\"}),B(b,c);try{(g(c)||h(c))&&(c=j(c)),n&&n.setItem(t(b),c),r.setItem&&a.$broadcast(\"LocalStorageModule.notification.setitem\",{key:b,newvalue:c,storageType:o.storageType})}catch(d){return a.$broadcast(\"LocalStorageModule.notification.error\",d.message),B(b,c)}return!0},w=function(b){if(!u||\"cookie\"===o.storageType)return u||a.$broadcast(\"LocalStorageModule.notification.warning\",\"LOCAL_STORAGE_NOT_SUPPORTED\"),C(b);var d=n?n.getItem(t(b)):null;return d&&\"null\"!==d?\"{\"===d.charAt(0)||\"[\"===d.charAt(0)||c(d)?k(d):d:null},x=function(b){if(!u||\"cookie\"===o.storageType)return u||a.$broadcast(\"LocalStorageModule.notification.warning\",\"LOCAL_STORAGE_NOT_SUPPORTED\"),r.removeItem&&a.$broadcast(\"LocalStorageModule.notification.removeitem\",{key:b,storageType:\"cookie\"}),D(b);try{n.removeItem(t(b)),r.removeItem&&a.$broadcast(\"LocalStorageModule.notification.removeitem\",{key:b,storageType:o.storageType})}catch(c){return a.$broadcast(\"LocalStorageModule.notification.error\",c.message),D(b)}return!0},y=function(){if(!u)return a.$broadcast(\"LocalStorageModule.notification.warning\",\"LOCAL_STORAGE_NOT_SUPPORTED\"),!1;var b=p.length,c=[];for(var d in n)if(d.substr(0,b)===p)try{c.push(d.substr(b))}catch(e){return a.$broadcast(\"LocalStorageModule.notification.error\",e.Description),[]}return c},z=function(b){b=b||\"\";var c=p.slice(0,-1),d=new RegExp(c+\".\"+b);if(!u||\"cookie\"===o.storageType)return u||a.$broadcast(\"LocalStorageModule.notification.warning\",\"LOCAL_STORAGE_NOT_SUPPORTED\"),E();var e=p.length;for(var f in n)if(d.test(f))try{x(f.substr(e))}catch(g){return a.$broadcast(\"LocalStorageModule.notification.error\",g.message),E()}return!0},A=function(){try{return b.navigator.cookieEnabled||\"cookie\"in l&&(l.cookie.length>0||(l.cookie=\"test\").indexOf.call(l.cookie,\"test\")>-1)}catch(c){return a.$broadcast(\"LocalStorageModule.notification.error\",c.message),!1}}(),B=function(b,c){if(e(c))return!1;if((h(c)||g(c))&&(c=j(c)),!A)return a.$broadcast(\"LocalStorageModule.notification.error\",\"COOKIES_NOT_SUPPORTED\"),!1;try{var d=\"\",f=new Date,i=\"\";if(null===c?(f.setTime(f.getTime()+-864e5),d=\"; expires=\"+f.toGMTString(),c=\"\"):0!==q.expiry&&(f.setTime(f.getTime()+24*q.expiry*60*60*1e3),d=\"; expires=\"+f.toGMTString()),b){var k=\"; path=\"+q.path;q.domain&&(i=\"; domain=\"+q.domain),l.cookie=t(b)+\"=\"+encodeURIComponent(c)+d+k+i}}catch(m){return a.$broadcast(\"LocalStorageModule.notification.error\",m.message),!1}return!0},C=function(b){if(!A)return a.$broadcast(\"LocalStorageModule.notification.error\",\"COOKIES_NOT_SUPPORTED\"),!1;for(var c=l.cookie&&l.cookie.split(\";\")||[],d=0;d<c.length;d++){for(var e=c[d];\" \"===e.charAt(0);)e=e.substring(1,e.length);if(0===e.indexOf(t(b)+\"=\")){var f=decodeURIComponent(e.substring(p.length+b.length+1,e.length));try{var g=JSON.parse(f);return k(g)}catch(h){return f}}}return null},D=function(a){B(a,null)},E=function(){for(var a=null,b=p.length,c=l.cookie.split(\";\"),d=0;d<c.length;d++){for(a=c[d];\" \"===a.charAt(0);)a=a.substring(1,a.length);var e=a.substring(b,a.indexOf(\"=\"));D(e)}},F=function(){return s},G=function(a,b,c,e){e=e||b;var f=w(e);return null===f&&d(c)?f=c:g(f)&&g(c)&&(f=i(c,f)),m(b).assign(a,f),a.$watch(b,function(a){v(e,a)},g(a[b]))},H=function(){for(var a=0,c=b[s],d=0;d<c.length;d++)0===c.key(d).indexOf(p)&&a++;return a};return{isSupported:u,getStorageType:F,set:v,add:v,get:w,keys:y,remove:x,clearAll:z,bind:G,deriveKey:t,length:H,cookie:{isSupported:A,set:B,add:B,get:C,remove:D,clearAll:E}}}]})}(window,window.angular);",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-messages/angular-messages.js",
            "line": 1,
            "license": "AngularJS v1.3.15\n(c) 2010-2014 Google, Inc. http://angularjs.org\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-messages/angular-messages.js",
            "line": 8,
            "ngdoc": "module",
            "name": "ngMessages",
            "description": "The `ngMessages` module provides enhanced support for displaying messages within templates\n(typically within forms or when rendering message objects that return key/value data).\nInstead of relying on JavaScript code and/or complex ng-if statements within your form template to\nshow and hide error messages specific to the state of an input field, the `ngMessages` and\n`ngMessage` directives are designed to handle the complexity, inheritance and priority\nsequencing based on the order of how the messages are defined in the template.\n\nCurrently, the ngMessages module only contains the code for the `ngMessages`\nand `ngMessage` directives.\n\n# Usage\nThe `ngMessages` directive listens on a key/value collection which is set on the ngMessages attribute.\nSince the {@link ngModel ngModel} directive exposes an `$error` object, this error object can be\nused with `ngMessages` to display control error messages in an easier way than with just regular angular\ntemplate directives.\n\n```html\n<form name=\"myForm\">\n  <input type=\"text\" ng-model=\"field\" name=\"myField\" required minlength=\"5\" />\n  <div ng-messages=\"myForm.myField.$error\">\n    <div ng-message=\"required\">You did not enter a field</div>\n    <div ng-message=\"minlength\">The value entered is too short</div>\n  </div>\n</form>\n```\n\nNow whatever key/value entries are present within the provided object (in this case `$error`) then\nthe ngMessages directive will render the inner first ngMessage directive (depending if the key values\nmatch the attribute value present on each ngMessage directive). In other words, if your errors\nobject contains the following data:\n\n```javascript\n<!-- keep in mind that ngModel automatically sets these error flags -->\nmyField.$error = { minlength : true, required : false };\n```\n\nThen the `required` message will be displayed first. When required is false then the `minlength` message\nwill be displayed right after (since these messages are ordered this way in the template HTML code).\nThe prioritization of each message is determined by what order they're present in the DOM.\nTherefore, instead of having custom JavaScript code determine the priority of what errors are\npresent before others, the presentation of the errors are handled within the template.\n\nBy default, ngMessages will only display one error at a time. However, if you wish to display all\nmessages then the `ng-messages-multiple` attribute flag can be used on the element containing the\nngMessages directive to make this happen.\n\n```html\n<div ng-messages=\"myForm.myField.$error\" ng-messages-multiple>...</div>\n```\n\n## Reusing and Overriding Messages\nIn addition to prioritization, ngMessages also allows for including messages from a remote or an inline\ntemplate. This allows for generic collection of messages to be reused across multiple parts of an\napplication.\n\n```html\n<script type=\"text/ng-template\" id=\"error-messages\">\n  <div ng-message=\"required\">This field is required</div>\n  <div ng-message=\"minlength\">This field is too short</div>\n</script>\n<div ng-messages=\"myForm.myField.$error\" ng-messages-include=\"error-messages\"></div>\n```\n\nHowever, including generic messages may not be useful enough to match all input fields, therefore,\n`ngMessages` provides the ability to override messages defined in the remote template by redefining\nthen within the directive container.\n\n```html\n<!-- a generic template of error messages known as \"my-custom-messages\" -->\n<script type=\"text/ng-template\" id=\"my-custom-messages\">\n  <div ng-message=\"required\">This field is required</div>\n  <div ng-message=\"minlength\">This field is too short</div>\n</script>\n\n<form name=\"myForm\">\n  <input type=\"email\"\n         id=\"email\"\n         name=\"myEmail\"\n         ng-model=\"email\"\n         minlength=\"5\"\n         required />\n\n  <div ng-messages=\"myForm.myEmail.$error\" ng-messages-include=\"my-custom-messages\">\n    <!-- this required message has overridden the template message -->\n    <div ng-message=\"required\">You did not enter your email address</div>\n\n    <!-- this is a brand new message and will appear last in the prioritization -->\n    <div ng-message=\"email\">Your email address is invalid</div>\n  </div>\n</form>\n```\n\nIn the example HTML code above the message that is set on required will override the corresponding\nrequired message defined within the remote template. Therefore, with particular input fields (such\nemail addresses, date fields, autocomplete inputs, etc...), specialized error messages can be applied\nwhile more generic messages can be used to handle other, more general input errors.\n\n## Animations\nIf the `ngAnimate` module is active within the application then both the `ngMessages` and\n`ngMessage` directives will trigger animations whenever any messages are added and removed\nfrom the DOM by the `ngMessages` directive.\n\nWhenever the `ngMessages` directive contains one or more visible messages then the `.ng-active` CSS\nclass will be added to the element. The `.ng-inactive` CSS class will be applied when there are no\nanimations present. Therefore, CSS transitions and keyframes as well as JavaScript animations can\nhook into the animations whenever these classes are added/removed.\n\nLet's say that our HTML code for our messages container looks like so:\n\n```html\n<div ng-messages=\"myMessages\" class=\"my-messages\">\n  <div ng-message=\"alert\" class=\"some-message\">...</div>\n  <div ng-message=\"fail\" class=\"some-message\">...</div>\n</div>\n```\n\nThen the CSS animation code for the message container looks like so:\n\n```css\n.my-messages {\n  transition:1s linear all;\n}\n.my-messages.ng-active {\n  // messages are visible\n}\n.my-messages.ng-inactive {\n  // messages are hidden\n}\n```\n\nWhenever an inner message is attached (becomes visible) or removed (becomes hidden) then the enter\nand leave animation is triggered for each particular element bound to the `ngMessage` directive.\n\nTherefore, the CSS code for the inner messages looks like so:\n\n```css\n.some-message {\n  transition:1s linear all;\n}\n\n.some-message.ng-enter {}\n.some-message.ng-enter.ng-enter-active {}\n\n.some-message.ng-leave {}\n.some-message.ng-leave.ng-leave-active {}\n```\n\n{@link ngAnimate Click here} to learn how to use JavaScript animations or to learn more about ngAnimate.",
            "class": "Gruntfile",
            "module": "ng"
        },
        {
            "file": "bower_components/angular-messages/angular-messages.js",
            "line": 322,
            "ngdoc": "directive",
            "name": "ngMessage",
            "restrict": "AE",
            "scope": "",
            "description": "`ngMessage` is a directive with the purpose to show and hide a particular message.\nFor `ngMessage` to operate, a parent `ngMessages` directive on a parent DOM element\nmust be situated since it determines which messages are visible based on the state\nof the provided key/value map that `ngMessages` listens on.\n\nMore information about using `ngMessage` can be found in the\n{@link module:ngMessages `ngMessages` module documentation}.",
            "usage": "```html\n<!-- using attribute directives -->\n<ANY ng-messages=\"expression\">\n  <ANY ng-message=\"keyValue1\">...</ANY>\n  <ANY ng-message=\"keyValue2\">...</ANY>\n  <ANY ng-message=\"keyValue3\">...</ANY>\n</ANY>\n\n<!-- or by using element directives -->\n<ng-messages for=\"expression\">\n  <ng-message when=\"keyValue1\">...</ng-message>\n  <ng-message when=\"keyValue2\">...</ng-message>\n  <ng-message when=\"keyValue3\">...</ng-message>\n</ng-messages>\n```",
            "params": [
                {
                    "name": "ngMessage",
                    "description": "a string value corresponding to the message key.",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1,
            "license": "AngularJS v1.3.15\n(c) 2010-2014 Google, Inc. http://angularjs.org\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 10,
            "ngdoc": "object",
            "name": "angular.mock",
            "description": "Namespace from 'angular-mocks.js' which contains testing related code.",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 19,
            "description": "This service is a mock implementation of {@link ng.$browser}. It provides fake\nimplementation for commonly used browser apis that are hard to test, e.g. setTimeout, xhr,\ncookies, etc...\n\nThe api of this service is the same as that of the real {@link ng.$browser $browser}, except\nthat there are several helper methods available which can be used in tests.",
            "name": "$browser",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 82,
            "name": "$browser#defer.now",
            "description": "Current milliseconds mock time.",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 107,
            "name": "$browser#defer.flush",
            "description": "Flushes all pending requests and executes the defer callbacks.",
            "params": [
                {
                    "name": "number",
                    "description": "of milliseconds to flush. See {@link #defer.now}",
                    "type": "Number="
                }
            ],
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 138,
            "name": "$browser#poll",
            "description": "run all fns in pollFns",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 198,
            "ngdoc": "provider",
            "name": "$exceptionHandlerProvider",
            "description": "Configures the mock implementation of {@link ng.$exceptionHandler} to rethrow or to log errors\npassed to the `$exceptionHandler`.",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 207,
            "ngdoc": "service",
            "name": "$exceptionHandler",
            "description": "Mock implementation of {@link ng.$exceptionHandler} that rethrows or logs errors passed\nto it. See {@link ngMock.$exceptionHandlerProvider $exceptionHandlerProvider} for configuration\ninformation.\n\n\n```js\n  describe('$exceptionHandlerProvider', function() {\n\n    it('should capture log messages and exceptions', function() {\n\n      module(function($exceptionHandlerProvider) {\n        $exceptionHandlerProvider.mode('log');\n      });\n\n      inject(function($log, $exceptionHandler, $timeout) {\n        $timeout(function() { $log.log(1); });\n        $timeout(function() { $log.log(2); throw 'banana peel'; });\n        $timeout(function() { $log.log(3); });\n        expect($exceptionHandler.errors).toEqual([]);\n        expect($log.assertEmpty());\n        $timeout.flush();\n        expect($exceptionHandler.errors).toEqual(['banana peel']);\n        expect($log.log.logs).toEqual([[1], [2], [3]]);\n      });\n    });\n  });\n```",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 244,
            "ngdoc": "method",
            "name": "$exceptionHandlerProvider#mode",
            "description": "Sets the logging mode.",
            "params": [
                {
                    "name": "mode",
                    "description": "Mode of operation, defaults to `rethrow`.\n\n  - `log`: Sometimes it is desirable to test that an error is thrown, for this case the `log`\n           mode stores an array of errors in `$exceptionHandler.errors`, to allow later\n           assertion of them. See {@link ngMock.$log#assertEmpty assertEmpty()} and\n           {@link ngMock.$log#reset reset()}\n  - `rethrow`: If any errors are passed to the handler in tests, it typically means that there\n               is a bug in the application or test, so this mock will make these tests fail.\n               For any implementations that expect exceptions to be thrown, the `rethrow` mode\n               will also maintain a log of thrown errors.",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 293,
            "ngdoc": "service",
            "name": "$log",
            "description": "Mock implementation of {@link ng.$log} that gathers all logged messages in arrays\n(one array per logging level). These arrays are exposed as `logs` property of each of the\nlevel-specific log function, e.g. for level `error` the array is exposed as `$log.error.logs`.",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 332,
            "ngdoc": "method",
            "name": "$log#reset",
            "description": "Reset all of the logging arrays to empty.",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 340,
            "ngdoc": "property",
            "name": "$log#log.logs",
            "description": "Array of messages logged using {@link ng.$log#log `log()`}.",
            "example": [
                "\n```js\n$log.log('Some Log');\nvar first = $log.log.logs.unshift();\n```"
            ],
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 354,
            "ngdoc": "property",
            "name": "$log#info.logs",
            "description": "Array of messages logged using {@link ng.$log#info `info()`}.",
            "example": [
                "\n```js\n$log.info('Some Info');\nvar first = $log.info.logs.unshift();\n```"
            ],
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 368,
            "ngdoc": "property",
            "name": "$log#warn.logs",
            "description": "Array of messages logged using {@link ng.$log#warn `warn()`}.",
            "example": [
                "\n```js\n$log.warn('Some Warning');\nvar first = $log.warn.logs.unshift();\n```"
            ],
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 382,
            "ngdoc": "property",
            "name": "$log#error.logs",
            "description": "Array of messages logged using {@link ng.$log#error `error()`}.",
            "example": [
                "\n```js\n$log.error('Some Error');\nvar first = $log.error.logs.unshift();\n```"
            ],
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 396,
            "ngdoc": "property",
            "name": "$log#debug.logs",
            "description": "Array of messages logged using {@link ng.$log#debug `debug()`}.",
            "example": [
                "\n```js\n$log.debug('Some Error');\nvar first = $log.debug.logs.unshift();\n```"
            ],
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 412,
            "ngdoc": "method",
            "name": "$log#assertEmpty",
            "description": "Assert that all of the logging methods have no logged messages. If any messages are present,\nan exception is thrown.",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 444,
            "ngdoc": "service",
            "name": "$interval",
            "description": "Mock implementation of the $interval service.\n\nUse {@link ngMock.$interval#flush `$interval.flush(millis)`} to\nmove forward by `millis` milliseconds and trigger any functions scheduled to run in that\ntime.",
            "params": [
                {
                    "name": "fn",
                    "description": "A function that should be called repeatedly.",
                    "type": "Function()"
                },
                {
                    "name": "delay",
                    "description": "Number of milliseconds between each function call.",
                    "type": "Number"
                },
                {
                    "name": "count",
                    "description": "Number of times to repeat. If not set, or 0, will repeat\n  indefinitely.",
                    "type": "Number=",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "invokeApply",
                    "description": "If set to `false` skips model dirty checking, otherwise\n  will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.",
                    "type": "Boolean=",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "A promise which will be notified on each iteration.",
                "type": "Promise"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 516,
            "ngdoc": "method",
            "name": "$interval#cancel",
            "description": "Cancels a task associated with the `promise`.",
            "params": [
                {
                    "name": "promise",
                    "description": "A promise from calling the `$interval` function.",
                    "type": "Promise"
                }
            ],
            "return": {
                "description": "Returns `true` if the task was successfully cancelled.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 543,
            "ngdoc": "method",
            "name": "$interval#flush",
            "description": "Runs interval tasks scheduled to be run in the next `millis` milliseconds.",
            "params": [
                {
                    "name": "millis",
                    "description": "maximum timeout amount to flush up until.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "The amount of time moved forward.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 615,
            "ngdoc": "type",
            "name": "angular.mock.TzDate",
            "description": "*NOTE*: this is not an injectable instance, just a globally available mock class of `Date`.\n\nMock of the Date type which has its timezone specified via constructor arg.\n\nThe main purpose is to create Date-like instances with timezone fixed to the specified timezone\noffset, so that we can test code that depends on local timezone settings without dependency on\nthe time zone settings of the machine where the code is running.",
            "params": [
                {
                    "name": "offset",
                    "description": "Offset of the *desired* timezone in hours (fractions will be honored)",
                    "type": "Number"
                },
                {
                    "name": "timestamp",
                    "description": "Timestamp representing the desired time in *UTC*",
                    "type": "(number|string)"
                }
            ],
            "example": [
                "\n!!!! WARNING !!!!!\nThis is not a complete Date object so only methods that were implemented can be called safely.\nTo make matters worse, TzDate instances inherit stuff from Date via a prototype.\n\nWe do our best to intercept calls to \"unimplemented\" methods, but since the list of methods is\nincomplete we might be missing some non-standard methods. This can result in errors like:\n\"Date.prototype.foo called on incompatible Object\".\n\n```js\nvar newYearInBratislava = new TzDate(-1, '2009-12-31T23:00:00Z');\nnewYearInBratislava.getTimezoneOffset() => -60;\nnewYearInBratislava.getFullYear() => 2010;\nnewYearInBratislava.getMonth() => 0;\nnewYearInBratislava.getDate() => 1;\nnewYearInBratislava.getHours() => 0;\nnewYearInBratislava.getMinutes() => 0;\nnewYearInBratislava.getSeconds() => 0;\n```\n"
            ],
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 835,
            "ngdoc": "function",
            "name": "angular.mock.dump",
            "description": "*NOTE*: this is not an injectable instance, just a globally available function.\n\nMethod for serializing common angular objects (scope, elements, etc..) into strings, useful for\ndebugging.\n\nThis method is also available on window, where it can be used to display objects on debug\nconsole.",
            "params": [
                {
                    "name": "object",
                    "description": "- any object to turn into string.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "a serialized string of the argument",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 905,
            "ngdoc": "service",
            "name": "$httpBackend",
            "description": "Fake HTTP backend implementation suitable for unit testing applications that use the\n{@link ng.$http $http service}.\n\n*Note*: For fake HTTP backend implementation suitable for end-to-end testing or backend-less\ndevelopment please see {@link ngMockE2E.$httpBackend e2e $httpBackend mock}.\n\nDuring unit testing, we want our unit tests to run quickly and have no external dependencies so\nwe don’t want to send [XHR](https://developer.mozilla.org/en/xmlhttprequest) or\n[JSONP](http://en.wikipedia.org/wiki/JSONP) requests to a real server. All we really need is\nto verify whether a certain request has been sent or not, or alternatively just let the\napplication make requests, respond with pre-trained responses and assert that the end result is\nwhat we expect it to be.\n\nThis mock implementation can be used to respond with static or dynamic responses via the\n`expect` and `when` apis and their shortcuts (`expectGET`, `whenPOST`, etc).\n\nWhen an Angular application needs some data from a server, it calls the $http service, which\nsends the request to a real server using $httpBackend service. With dependency injection, it is\neasy to inject $httpBackend mock (which has the same API as $httpBackend) and use it to verify\nthe requests and respond with some testing data without sending a request to a real server.\n\nThere are two ways to specify what test data should be returned as http responses by the mock\nbackend when the code under test makes http requests:\n\n- `$httpBackend.expect` - specifies a request expectation\n- `$httpBackend.when` - specifies a backend definition\n\n\n# Request Expectations vs Backend Definitions\n\nRequest expectations provide a way to make assertions about requests made by the application and\nto define responses for those requests. The test will fail if the expected requests are not made\nor they are made in the wrong order.\n\nBackend definitions allow you to define a fake backend for your application which doesn't assert\nif a particular request was made or not, it just returns a trained response if a request is made.\nThe test will pass whether or not the request gets made during testing.\n\n\n<table class=\"table\">\n  <tr><th width=\"220px\"></th><th>Request expectations</th><th>Backend definitions</th></tr>\n  <tr>\n    <th>Syntax</th>\n    <td>.expect(...).respond(...)</td>\n    <td>.when(...).respond(...)</td>\n  </tr>\n  <tr>\n    <th>Typical usage</th>\n    <td>strict unit tests</td>\n    <td>loose (black-box) unit testing</td>\n  </tr>\n  <tr>\n    <th>Fulfills multiple requests</th>\n    <td>NO</td>\n    <td>YES</td>\n  </tr>\n  <tr>\n    <th>Order of requests matters</th>\n    <td>YES</td>\n    <td>NO</td>\n  </tr>\n  <tr>\n    <th>Request required</th>\n    <td>YES</td>\n    <td>NO</td>\n  </tr>\n  <tr>\n    <th>Response required</th>\n    <td>optional (see below)</td>\n    <td>YES</td>\n  </tr>\n</table>\n\nIn cases where both backend definitions and request expectations are specified during unit\ntesting, the request expectations are evaluated first.\n\nIf a request expectation has no response specified, the algorithm will search your backend\ndefinitions for an appropriate response.\n\nIf a request didn't match any expectation or if the expectation doesn't have the response\ndefined, the backend definitions are evaluated in sequential order to see if any of them match\nthe request. The response from the first matched definition is returned.\n\n\n# Flushing HTTP requests\n\nThe $httpBackend used in production always responds to requests asynchronously. If we preserved\nthis behavior in unit testing, we'd have to create async unit tests, which are hard to write,\nto follow and to maintain. But neither can the testing mock respond synchronously; that would\nchange the execution of the code under test. For this reason, the mock $httpBackend has a\n`flush()` method, which allows the test to explicitly flush pending requests. This preserves\nthe async api of the backend, while allowing the test to execute synchronously.\n\n\n# Unit testing with mock $httpBackend\nThe following code shows how to setup and use the mock backend when unit testing a controller.\nFirst we create the controller under test:\n\n ```js\n // The module code\n angular\n   .module('MyApp', [])\n   .controller('MyController', MyController);\n\n // The controller code\n function MyController($scope, $http) {\n   var authToken;\n\n   $http.get('/auth.py').success(function(data, status, headers) {\n     authToken = headers('A-Token');\n     $scope.user = data;\n   });\n\n   $scope.saveMessage = function(message) {\n     var headers = { 'Authorization': authToken };\n     $scope.status = 'Saving...';\n\n     $http.post('/add-msg.py', message, { headers: headers } ).success(function(response) {\n       $scope.status = '';\n     }).error(function() {\n       $scope.status = 'ERROR!';\n     });\n   };\n }\n ```\n\nNow we setup the mock backend and create the test specs:\n\n ```js\n   // testing controller\n   describe('MyController', function() {\n      var $httpBackend, $rootScope, createController, authRequestHandler;\n\n      // Set up the module\n      beforeEach(module('MyApp'));\n\n      beforeEach(inject(function($injector) {\n        // Set up the mock http service responses\n        $httpBackend = $injector.get('$httpBackend');\n        // backend definition common for all tests\n        authRequestHandler = $httpBackend.when('GET', '/auth.py')\n                               .respond({userId: 'userX'}, {'A-Token': 'xxx'});\n\n        // Get hold of a scope (i.e. the root scope)\n        $rootScope = $injector.get('$rootScope');\n        // The $controller service is used to create instances of controllers\n        var $controller = $injector.get('$controller');\n\n        createController = function() {\n          return $controller('MyController', {'$scope' : $rootScope });\n        };\n      }));\n\n\n      afterEach(function() {\n        $httpBackend.verifyNoOutstandingExpectation();\n        $httpBackend.verifyNoOutstandingRequest();\n      });\n\n\n      it('should fetch authentication token', function() {\n        $httpBackend.expectGET('/auth.py');\n        var controller = createController();\n        $httpBackend.flush();\n      });\n\n\n      it('should fail authentication', function() {\n\n        // Notice how you can change the response even after it was set\n        authRequestHandler.respond(401, '');\n\n        $httpBackend.expectGET('/auth.py');\n        var controller = createController();\n        $httpBackend.flush();\n        expect($rootScope.status).toBe('Failed...');\n      });\n\n\n      it('should send msg to server', function() {\n        var controller = createController();\n        $httpBackend.flush();\n\n        // now you don’t care about the authentication, but\n        // the controller will still send the request and\n        // $httpBackend will respond without you having to\n        // specify the expectation and response for this request\n\n        $httpBackend.expectPOST('/add-msg.py', 'message content').respond(201, '');\n        $rootScope.saveMessage('message content');\n        expect($rootScope.status).toBe('Saving...');\n        $httpBackend.flush();\n        expect($rootScope.status).toBe('');\n      });\n\n\n      it('should send auth header', function() {\n        var controller = createController();\n        $httpBackend.flush();\n\n        $httpBackend.expectPOST('/add-msg.py', undefined, function(headers) {\n          // check if the header was send, if it wasn't the expectation won't\n          // match the request and the test will fail\n          return headers['Authorization'] == 'xxx';\n        }).respond(201, '');\n\n        $rootScope.saveMessage('whatever');\n        $httpBackend.flush();\n      });\n   });\n  ```",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1125,
            "description": "General factory function for $httpBackend mock.\nReturns instance for unit testing (when no arguments specified):\n  - passing through is disabled\n  - auto flushing is disabled\n\nReturns instance for e2e testing (when `$delegate` and `$browser` specified):\n  - passing through (delegating request to real backend) is enabled\n  - auto flushing is enabled",
            "params": [
                {
                    "name": "$delegate",
                    "description": "Real $httpBackend instance (allow passing through if specified)",
                    "type": "Object="
                },
                {
                    "name": "$browser",
                    "description": "Auto-flushing enabled if specified",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Instance of $httpBackend mock",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1230,
            "ngdoc": "method",
            "name": "$httpBackend#when",
            "description": "Creates a new backend definition.",
            "params": [
                {
                    "name": "method",
                    "description": "HTTP method.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "HTTP url or function that receives the url\n  and returns true if the url match the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "data",
                    "description": "HTTP request body or function that receives\n  data string and returns true if the data is as expected.",
                    "type": "(string|RegExp|function(string))="
                },
                {
                    "name": "headers",
                    "description": "HTTP headers or function that receives http header\n  object and returns true if the headers match the current definition.",
                    "type": "(Object|function(Object))="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\n  request is handled. You can save this object for later use and invoke `respond` again in\n  order to change how a matched request is handled.\n\n - respond –\n     `{function([status,] data[, headers, statusText])\n     | function(function(method, url, data, headers)}`\n   – The respond method takes a set of static data to be returned or a function that can\n   return an array containing response status (number), response data (string), response\n   headers (Object), and the text for the status (string). The respond method returns the\n   `requestHandler` object for possible overrides.",
                "type": "RequestHandler"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1277,
            "ngdoc": "method",
            "name": "$httpBackend#whenGET",
            "description": "Creates a new backend definition for GET requests. For more info see `when()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives the url\n  and returns true if the url match the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "(Object|function(Object))="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\nrequest is handled. You can save this object for later use and invoke `respond` again in\norder to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1291,
            "ngdoc": "method",
            "name": "$httpBackend#whenHEAD",
            "description": "Creates a new backend definition for HEAD requests. For more info see `when()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives the url\n  and returns true if the url match the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "(Object|function(Object))="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\nrequest is handled. You can save this object for later use and invoke `respond` again in\norder to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1305,
            "ngdoc": "method",
            "name": "$httpBackend#whenDELETE",
            "description": "Creates a new backend definition for DELETE requests. For more info see `when()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives the url\n  and returns true if the url match the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "(Object|function(Object))="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\nrequest is handled. You can save this object for later use and invoke `respond` again in\norder to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1319,
            "ngdoc": "method",
            "name": "$httpBackend#whenPOST",
            "description": "Creates a new backend definition for POST requests. For more info see `when()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives the url\n  and returns true if the url match the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "data",
                    "description": "HTTP request body or function that receives\n  data string and returns true if the data is as expected.",
                    "type": "(string|RegExp|function(string))="
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "(Object|function(Object))="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\nrequest is handled. You can save this object for later use and invoke `respond` again in\norder to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1335,
            "ngdoc": "method",
            "name": "$httpBackend#whenPUT",
            "description": "Creates a new backend definition for PUT requests.  For more info see `when()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives the url\n  and returns true if the url match the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "data",
                    "description": "HTTP request body or function that receives\n  data string and returns true if the data is as expected.",
                    "type": "(string|RegExp|function(string))="
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "(Object|function(Object))="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\nrequest is handled. You can save this object for later use and invoke `respond` again in\norder to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1351,
            "ngdoc": "method",
            "name": "$httpBackend#whenJSONP",
            "description": "Creates a new backend definition for JSONP requests. For more info see `when()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives the url\n  and returns true if the url match the current definition.",
                    "type": "String|RegExp|function(string)"
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\nrequest is handled. You can save this object for later use and invoke `respond` again in\norder to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1366,
            "ngdoc": "method",
            "name": "$httpBackend#expect",
            "description": "Creates a new request expectation.",
            "params": [
                {
                    "name": "method",
                    "description": "HTTP method.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "HTTP url or function that receives the url\n  and returns true if the url match the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "data",
                    "description": "HTTP request body or function that\n receives data string and returns true if the data is as expected, or Object if request body\n is in JSON format.",
                    "type": "(string|RegExp|function(string)|Object)="
                },
                {
                    "name": "headers",
                    "description": "HTTP headers or function that receives http header\n  object and returns true if the headers match the current expectation.",
                    "type": "(Object|function(Object))="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\n request is handled. You can save this object for later use and invoke `respond` again in\n order to change how a matched request is handled.\n\n - respond –\n   `{function([status,] data[, headers, statusText])\n   | function(function(method, url, data, headers)}`\n   – The respond method takes a set of static data to be returned or a function that can\n   return an array containing response status (number), response data (string), response\n   headers (Object), and the text for the status (string). The respond method returns the\n   `requestHandler` object for possible overrides.",
                "type": "RequestHandler"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1406,
            "ngdoc": "method",
            "name": "$httpBackend#expectGET",
            "description": "Creates a new request expectation for GET requests. For more info see `expect()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives the url\n  and returns true if the url match the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\nrequest is handled. You can save this object for later use and invoke `respond` again in\norder to change how a matched request is handled. See #expect for more info.",
                "type": "RequestHandler"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1420,
            "ngdoc": "method",
            "name": "$httpBackend#expectHEAD",
            "description": "Creates a new request expectation for HEAD requests. For more info see `expect()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives the url\n  and returns true if the url match the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\n  request is handled. You can save this object for later use and invoke `respond` again in\n  order to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1434,
            "ngdoc": "method",
            "name": "$httpBackend#expectDELETE",
            "description": "Creates a new request expectation for DELETE requests. For more info see `expect()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives the url\n  and returns true if the url match the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\n  request is handled. You can save this object for later use and invoke `respond` again in\n  order to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1448,
            "ngdoc": "method",
            "name": "$httpBackend#expectPOST",
            "description": "Creates a new request expectation for POST requests. For more info see `expect()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives the url\n  and returns true if the url match the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "data",
                    "description": "HTTP request body or function that\n receives data string and returns true if the data is as expected, or Object if request body\n is in JSON format.",
                    "type": "(string|RegExp|function(string)|Object)="
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\n  request is handled. You can save this object for later use and invoke `respond` again in\n  order to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1465,
            "ngdoc": "method",
            "name": "$httpBackend#expectPUT",
            "description": "Creates a new request expectation for PUT requests. For more info see `expect()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives the url\n  and returns true if the url match the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "data",
                    "description": "HTTP request body or function that\n receives data string and returns true if the data is as expected, or Object if request body\n is in JSON format.",
                    "type": "(string|RegExp|function(string)|Object)="
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\n  request is handled. You can save this object for later use and invoke `respond` again in\n  order to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1482,
            "ngdoc": "method",
            "name": "$httpBackend#expectPATCH",
            "description": "Creates a new request expectation for PATCH requests. For more info see `expect()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives the url\n  and returns true if the url match the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "data",
                    "description": "HTTP request body or function that\n receives data string and returns true if the data is as expected, or Object if request body\n is in JSON format.",
                    "type": "(string|RegExp|function(string)|Object)="
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\n  request is handled. You can save this object for later use and invoke `respond` again in\n  order to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1499,
            "ngdoc": "method",
            "name": "$httpBackend#expectJSONP",
            "description": "Creates a new request expectation for JSONP requests. For more info see `expect()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives the url\n  and returns true if the url match the current definition.",
                    "type": "String|RegExp|function(string)"
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\n  request is handled. You can save this object for later use and invoke `respond` again in\n  order to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1514,
            "ngdoc": "method",
            "name": "$httpBackend#flush",
            "description": "Flushes all pending requests using the trained responses.",
            "params": [
                {
                    "name": "count",
                    "description": "Number of responses to flush (in the order they arrived). If undefined,\n  all pending requests will be flushed. If there are no pending requests when the flush method\n  is called an exception is thrown (as this typically a sign of programming error).",
                    "type": "Number="
                }
            ],
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1542,
            "ngdoc": "method",
            "name": "$httpBackend#verifyNoOutstandingExpectation",
            "description": "Verifies that all of the requests defined via the `expect` api were made. If any of the\nrequests were not made, verifyNoOutstandingExpectation throws an exception.\n\nTypically, you would call this method following each test case that asserts requests using an\n\"afterEach\" clause.\n\n```js\n  afterEach($httpBackend.verifyNoOutstandingExpectation);\n```",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1564,
            "ngdoc": "method",
            "name": "$httpBackend#verifyNoOutstandingRequest",
            "description": "Verifies that there are no outstanding requests that need to be flushed.\n\nTypically, you would call this method following each test case that asserts requests using an\n\"afterEach\" clause.\n\n```js\n  afterEach($httpBackend.verifyNoOutstandingRequest);\n```",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1584,
            "ngdoc": "method",
            "name": "$httpBackend#resetExpectations",
            "description": "Resets all request expectations, but preserves all backend definitions. Typically, you would\ncall resetExpectations during a multiple-phase test when you want to reuse the same instance of\n$httpBackend mock.",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1711,
            "ngdoc": "service",
            "name": "$timeout",
            "description": "This service is just a simple decorator for {@link ng.$timeout $timeout} service\nthat adds a \"flush\" and \"verifyNoPendingTasks\" methods.",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1722,
            "ngdoc": "method",
            "name": "$timeout#flush",
            "description": "Flushes the queue of pending tasks.",
            "params": [
                {
                    "name": "delay",
                    "description": "maximum timeout amount to flush up until",
                    "type": "Number="
                }
            ],
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1735,
            "ngdoc": "method",
            "name": "$timeout#verifyNoPendingTasks",
            "description": "Verifies that there are no pending tasks that need to be flushed.",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1803,
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1812,
            "ngdoc": "service",
            "name": "$controller",
            "description": "A decorator for {@link ng.$controller} with additional `bindings` parameter, useful when testing\ncontrollers of directives that use {@link $compile#-bindtocontroller- `bindToController`}.\n\n\n## Example\n\n```js\n\n// Directive definition ...\n\nmyMod.directive('myDirective', {\n  controller: 'MyDirectiveController',\n  bindToController: {\n    name: '@'\n  }\n});\n\n\n// Controller definition ...\n\nmyMod.controller('MyDirectiveController', ['log', function($log) {\n  $log.info(this.name);\n})];\n\n\n// In a test ...\n\ndescribe('myDirectiveController', function() {\n  it('should write the bound name to the log', inject(function($controller, $log) {\n    var ctrl = $controller('MyDirective', { /* no locals &#42;/ }, { name: 'Clark Kent' });\n    expect(ctrl.name).toEqual('Clark Kent');\n    expect($log.info.logs).toEqual(['Clark Kent']);\n  });\n});\n\n```",
            "params": [
                {
                    "name": "constructor",
                    "description": "If called with a function then it's considered to be the\n   controller constructor function. Otherwise it's considered to be a string which is used\n   to retrieve the controller constructor using the following steps:\n\n   * check if a controller with given name is registered via `$controllerProvider`\n   * check if evaluating the string on the current scope returns a constructor\n   * if $controllerProvider#allowGlobals, check `window[constructor]` on the global\n     `window` object (not recommended)\n\n   The string can use the `controller as property` syntax, where the controller instance is published\n   as the specified property on the `scope`; the `scope` must be injected into `locals` param for this\n   to work correctly.",
                    "type": "Function|string"
                },
                {
                    "name": "locals",
                    "description": "Injection locals for Controller.",
                    "type": "Object"
                },
                {
                    "name": "bindings",
                    "description": "Properties to add to the controller before invoking the constructor. This is used\n                          to simulate the `bindToController` feature and simplify certain kinds of tests.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Instance of given controller.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 1883,
            "ngdoc": "module",
            "name": "ngMock",
            "packagename": "angular-mocks",
            "description": "# ngMock\n\nThe `ngMock` module provides support to inject and mock Angular services into unit tests.\nIn addition, ngMock also extends various core ng services such that they can be\ninspected and controlled in a synchronous manner within test code.\n\n\n<div doc-module-components=\"ngMock\"></div>",
            "class": "Gruntfile",
            "module": "ngMessages"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 2263,
            "ngdoc": "function",
            "name": "angular.mock.module",
            "description": "*NOTE*: This function is also published on window for easy access.<br>\n*NOTE*: This function is declared ONLY WHEN running tests with jasmine or mocha\n\nThis function registers a module configuration code. It collects the configuration information\nwhich will be used when the injector is created by {@link angular.mock.inject inject}.\n\nSee {@link angular.mock.inject inject} for usage example",
            "params": [
                {
                    "name": "fns",
                    "description": "any number of modules which are represented as string\n       aliases or as anonymous module initialization functions. The modules are used to\n       configure the injector. The 'ng' and 'ngMock' modules are automatically loaded. If an\n       object literal is passed they will be registered as values in the module, the key being\n       the module name and the value being what is returned.",
                    "type": "...(string|Function|Object)"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-mocks/angular-mocks.js",
            "line": 2306,
            "ngdoc": "function",
            "name": "angular.mock.inject",
            "description": "*NOTE*: This function is also published on window for easy access.<br>\n*NOTE*: This function is declared ONLY WHEN running tests with jasmine or mocha\n\nThe inject function wraps a function into an injectable function. The inject() creates new\ninstance of {@link auto.$injector $injector} per test, which is then used for\nresolving references.\n\n\n## Resolving References (Underscore Wrapping)\nOften, we would like to inject a reference once, in a `beforeEach()` block and reuse this\nin multiple `it()` clauses. To be able to do this we must assign the reference to a variable\nthat is declared in the scope of the `describe()` block. Since we would, most likely, want\nthe variable to have the same name of the reference we have a problem, since the parameter\nto the `inject()` function would hide the outer variable.\n\nTo help with this, the injected parameters can, optionally, be enclosed with underscores.\nThese are ignored by the injector when the reference name is resolved.\n\nFor example, the parameter `_myService_` would be resolved as the reference `myService`.\nSince it is available in the function body as _myService_, we can then assign it to a variable\ndefined in an outer scope.\n\n```\n// Defined out reference variable outside\nvar myService;\n\n// Wrap the parameter in underscores\nbeforeEach( inject( function(_myService_){\n  myService = _myService_;\n}));\n\n// Use myService in a series of tests.\nit('makes use of myService', function() {\n  myService.doStuff();\n});\n\n```\n\nSee also {@link angular.mock.module angular.mock.module}\n\n## Example\nExample of what a typical jasmine tests looks like with the inject method.\n```js\n\n  angular.module('myApplicationModule', [])\n      .value('mode', 'app')\n      .value('version', 'v1.0.1');\n\n\n  describe('MyApp', function() {\n\n    // You need to load modules that you want to test,\n    // it loads only the \"ng\" module by default.\n    beforeEach(module('myApplicationModule'));\n\n\n    // inject() is used to inject arguments of all given functions\n    it('should provide a version', inject(function(mode, version) {\n      expect(version).toEqual('v1.0.1');\n      expect(mode).toEqual('app');\n    }));\n\n\n    // The inject and module method can also be used inside of the it or beforeEach\n    it('should override a version and test the new version is injected', function() {\n      // module() takes functions or strings (module aliases)\n      module(function($provide) {\n        $provide.value('version', 'overridden'); // override version here\n      });\n\n      inject(function(version) {\n        expect(version).toEqual('overridden');\n      });\n    });\n  });\n\n```",
            "params": [
                {
                    "name": "fns",
                    "description": "any number of functions which will be injected using the injector.",
                    "type": "...Function"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-resource/angular-resource.js",
            "line": 1,
            "license": "AngularJS v1.3.15\n(c) 2010-2014 Google, Inc. http://angularjs.org\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-resource/angular-resource.js",
            "line": 32,
            "description": "Create a shallow copy of an object and clear other fields from the destination",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-resource/angular-resource.js",
            "line": 51,
            "ngdoc": "module",
            "name": "ngResource",
            "description": "# ngResource\n\nThe `ngResource` module provides interaction support with RESTful services\nvia the $resource service.\n\n\n<div doc-module-components=\"ngResource\"></div>\n\nSee {@link ngResource.$resource `$resource`} for usage.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-resource/angular-resource.js",
            "line": 67,
            "ngdoc": "service",
            "name": "$resource",
            "requires": [
                "$http"
            ],
            "description": "A factory which creates a resource object that lets you interact with\n[RESTful](http://en.wikipedia.org/wiki/Representational_State_Transfer) server-side data sources.\n\nThe returned resource object has action methods which provide high-level behaviors without\nthe need to interact with the low level {@link ng.$http $http} service.\n\nRequires the {@link ngResource `ngResource`} module to be installed.\n\nBy default, trailing slashes will be stripped from the calculated URLs,\nwhich can pose problems with server backends that do not expect that\nbehavior.  This can be disabled by configuring the `$resourceProvider` like\nthis:\n\n```js\n    app.config(['$resourceProvider', function($resourceProvider) {\n      // Don't strip trailing slashes from calculated URLs\n      $resourceProvider.defaults.stripTrailingSlashes = false;\n    }]);\n```",
            "params": [
                {
                    "name": "url",
                    "description": "A parametrized URL template with parameters prefixed by `:` as in\n  `/user/:username`. If you are using a URL with a port number (e.g.\n  `http://example.com:8080/api`), it will be respected.\n\n  If you are using a url with a suffix, just add the suffix, like this:\n  `$resource('http://example.com/resource.json')` or `$resource('http://example.com/:id.json')`\n  or even `$resource('http://example.com/resource/:resource_id.:format')`\n  If the parameter before the suffix is empty, :resource_id in this case, then the `/.` will be\n  collapsed down to a single `.`.  If you need this sequence to appear and not collapse then you\n  can escape it with `/\\.`.",
                    "type": "String"
                },
                {
                    "name": "paramDefaults",
                    "description": "Default values for `url` parameters. These can be overridden in\n  `actions` methods. If any of the parameter value is a function, it will be executed every time\n  when a param value needs to be obtained for a request (unless the param was overridden).\n\n  Each key value in the parameter object is first bound to url template if present and then any\n  excess keys are appended to the url search query after the `?`.\n\n  Given a template `/path/:verb` and parameter `{verb:'greet', salutation:'Hello'}` results in\n  URL `/path/greet?salutation=Hello`.\n\n  If the parameter value is prefixed with `@` then the value for that parameter will be extracted\n  from the corresponding property on the `data` object (provided when calling an action method).  For\n  example, if the `defaultParam` object is `{someParam: '@someProp'}` then the value of `someParam`\n  will be `data.someProp`.",
                    "type": "Object="
                },
                {
                    "name": "actions",
                    "description": "Hash with declaration of custom actions that should extend\n  the default set of resource actions. The declaration should be created in the format of {@link\n  ng.$http#usage $http.config}:\n\n      {action1: {method:?, params:?, isArray:?, headers:?, ...},\n       action2: {method:?, params:?, isArray:?, headers:?, ...},\n       ...}\n\n  Where:\n\n  - **`action`** – {string} – The name of action. This name becomes the name of the method on\n    your resource object.\n  - **`method`** – {string} – Case insensitive HTTP method (e.g. `GET`, `POST`, `PUT`,\n    `DELETE`, `JSONP`, etc).\n  - **`params`** – {Object=} – Optional set of pre-bound parameters for this action. If any of\n    the parameter value is a function, it will be executed every time when a param value needs to\n    be obtained for a request (unless the param was overridden).\n  - **`url`** – {string} – action specific `url` override. The url templating is supported just\n    like for the resource-level urls.\n  - **`isArray`** – {boolean=} – If true then the returned object for this action is an array,\n    see `returns` section.\n  - **`transformRequest`** –\n    `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n    transform function or an array of such functions. The transform function takes the http\n    request body and headers and returns its transformed (typically serialized) version.\n    By default, transformRequest will contain one function that checks if the request data is\n    an object and serializes to using `angular.toJson`. To prevent this behavior, set\n    `transformRequest` to an empty array: `transformRequest: []`\n  - **`transformResponse`** –\n    `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n    transform function or an array of such functions. The transform function takes the http\n    response body and headers and returns its transformed (typically deserialized) version.\n    By default, transformResponse will contain one function that checks if the response looks like\n    a JSON string and deserializes it using `angular.fromJson`. To prevent this behavior, set\n    `transformResponse` to an empty array: `transformResponse: []`\n  - **`cache`** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the\n    GET request, otherwise if a cache instance built with\n    {@link ng.$cacheFactory $cacheFactory}, this cache will be used for\n    caching.\n  - **`timeout`** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise} that\n    should abort the request when resolved.\n  - **`withCredentials`** - `{boolean}` - whether to set the `withCredentials` flag on the\n    XHR object. See\n    [requests with credentials](https://developer.mozilla.org/en/http_access_control#section_5)\n    for more information.\n  - **`responseType`** - `{string}` - see\n    [requestType](https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType).\n  - **`interceptor`** - `{Object=}` - The interceptor object has two optional methods -\n    `response` and `responseError`. Both `response` and `responseError` interceptors get called\n    with `http response` object. See {@link ng.$http $http interceptors}.",
                    "type": "Object.<Object>="
                },
                {
                    "name": "options",
                    "description": "Hash with custom settings that should extend the\n  default `$resourceProvider` behavior.  The only supported option is\n\n  Where:\n\n  - **`stripTrailingSlashes`** – {boolean} – If true then the trailing\n  slashes from any calculated URL will be stripped. (Defaults to true.)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A resource \"class\" object with methods for the default set of resource actions\n  optionally extended with custom `actions`. The default set contains these actions:\n  ```js\n  { 'get':    {method:'GET'},\n    'save':   {method:'POST'},\n    'query':  {method:'GET', isArray:true},\n    'remove': {method:'DELETE'},\n    'delete': {method:'DELETE'} };\n  ```\n\n  Calling these methods invoke an {@link ng.$http} with the specified http method,\n  destination and parameters. When the data is returned from the server then the object is an\n  instance of the resource class. The actions `save`, `remove` and `delete` are available on it\n  as  methods with the `$` prefix. This allows you to easily perform CRUD operations (create,\n  read, update, delete) on server-side data like this:\n  ```js\n  var User = $resource('/user/:userId', {userId:'@id'});\n  var user = User.get({userId:123}, function() {\n    user.abc = true;\n    user.$save();\n  });\n  ```\n\n  It is important to realize that invoking a $resource object method immediately returns an\n  empty reference (object or array depending on `isArray`). Once the data is returned from the\n  server the existing reference is populated with the actual data. This is a useful trick since\n  usually the resource is assigned to a model which is then rendered by the view. Having an empty\n  object results in no rendering, once the data arrives from the server then the object is\n  populated with the data and the view automatically re-renders itself showing the new data. This\n  means that in most cases one never has to write a callback function for the action methods.\n\n  The action methods on the class object or instance object can be invoked with the following\n  parameters:\n\n  - HTTP GET \"class\" actions: `Resource.action([parameters], [success], [error])`\n  - non-GET \"class\" actions: `Resource.action([parameters], postData, [success], [error])`\n  - non-GET instance actions:  `instance.$action([parameters], [success], [error])`\n\n\n  Success callback is called with (value, responseHeaders) arguments. Error callback is called\n  with (httpResponse) argument.\n\n  Class actions return empty instance (with additional properties below).\n  Instance actions return promise of the action.\n\n  The Resource instances and collection have these additional properties:\n\n  - `$promise`: the {@link ng.$q promise} of the original server interaction that created this\n    instance or collection.\n\n    On success, the promise is resolved with the same resource instance or collection object,\n    updated with data from server. This makes it easy to use in\n    {@link ngRoute.$routeProvider resolve section of $routeProvider.when()} to defer view\n    rendering until the resource(s) are loaded.\n\n    On failure, the promise is resolved with the {@link ng.$http http response} object, without\n    the `resource` property.\n\n    If an interceptor object was provided, the promise will instead be resolved with the value\n    returned by the interceptor.\n\n  - `$resolved`: `true` after first server interaction is completed (either with success or\n     rejection), `false` before that. Knowing if the Resource has been resolved is useful in\n     data-binding.",
                "type": "Object"
            },
            "example": [
                "\n\n# Credit card resource\n\n```js\n    // Define CreditCard class\n    var CreditCard = $resource('/user/:userId/card/:cardId',\n     {userId:123, cardId:'@id'}, {\n      charge: {method:'POST', params:{charge:true}}\n     });\n\n    // We can retrieve a collection from the server\n    var cards = CreditCard.query(function() {\n      // GET: /user/123/card\n      // server returns: [ {id:456, number:'1234', name:'Smith'} ];\n\n      var card = cards[0];\n      // each item is an instance of CreditCard\n      expect(card instanceof CreditCard).toEqual(true);\n      card.name = \"J. Smith\";\n      // non GET methods are mapped onto the instances\n      card.$save();\n      // POST: /user/123/card/456 {id:456, number:'1234', name:'J. Smith'}\n      // server returns: {id:456, number:'1234', name: 'J. Smith'};\n\n      // our custom method is mapped as well.\n      card.$charge({amount:9.99});\n      // POST: /user/123/card/456?amount=9.99&charge=true {id:456, number:'1234', name:'J. Smith'}\n    });\n\n    // we can create an instance as well\n    var newCard = new CreditCard({number:'0123'});\n    newCard.name = \"Mike Smith\";\n    newCard.$save();\n    // POST: /user/123/card {number:'0123', name:'Mike Smith'}\n    // server returns: {id:789, number:'0123', name: 'Mike Smith'};\n    expect(newCard.id).toEqual(789);\n```\n\nThe object returned from this function execution is a resource \"class\" which has \"static\" method\nfor each action in the definition.\n\nCalling these methods invoke `$http` on the `url` template with the given `method`, `params` and\n`headers`.\nWhen the data is returned from the server then the object is an instance of the resource type and\nall of the non-GET methods are available with `$` prefix. This allows you to easily support CRUD\noperations (create, read, update, delete) on server-side data.\n\n  ```js\n    var User = $resource('/user/:userId', {userId:'@id'});\n    User.get({userId:123}, function(user) {\n      user.abc = true;\n      user.$save();\n    });\n  ```\n\nIt's worth noting that the success callback for `get`, `query` and other methods gets passed\nin the response that came from the server as well as $http header getter function, so one\ncould rewrite the above example and get access to http headers as:\n\n  ```js\n    var User = $resource('/user/:userId', {userId:'@id'});\n    User.get({userId:123}, function(u, getResponseHeaders){\n      u.abc = true;\n      u.$save(function(u, putResponseHeaders) {\n        //u => saved user object\n        //putResponseHeaders => $http header getter\n      });\n    });\n  ```\n\nYou can also access the raw `$http` promise via the `$promise` property on the object returned\n\n  ```\n    var User = $resource('/user/:userId', {userId:'@id'});\n    User.get({userId:123})\n        .$promise.then(function(user) {\n          $scope.user = user;\n        });\n  ```\n\n# Creating a custom 'PUT' request\nIn this example we create a custom method on our resource to make a PUT request\n```js\n   var app = angular.module('app', ['ngResource', 'ngRoute']);\n\n   // Some APIs expect a PUT request in the format URL/object/ID\n   // Here we are creating an 'update' method\n   app.factory('Notes', ['$resource', function($resource) {\n   return $resource('/notes/:id', null,\n       {\n           'update': { method:'PUT' }\n       });\n   }]);\n\n   // In our controller we get the ID from the URL using ngRoute and $routeParams\n   // We pass in $routeParams and our Notes factory along with $scope\n   app.controller('NotesCtrl', ['$scope', '$routeParams', 'Notes',\n                                     function($scope, $routeParams, Notes) {\n   // First get a note object from the factory\n   var note = Notes.get({ id:$routeParams.id });\n   $id = note.id;\n\n   // Now call update passing in the ID first then the object you are updating\n   Notes.update({ id:$id }, note);\n\n   // This will PUT /notes/ID with the note object in the request payload\n   }]);\n```"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-resource/angular-resource.js",
            "line": 379,
            "description": "We need our custom method because encodeURIComponent is too aggressive and doesn't follow\nhttp://www.ietf.org/rfc/rfc3986.txt with regards to the character set\n(pchar) allowed in path segments:\n   segment       = *pchar\n   pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n   pct-encoded   = \"%\" HEXDIG HEXDIG\n   unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                    / \"*\" / \"+\" / \",\" / \";\" / \"=\"",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-resource/angular-resource.js",
            "line": 398,
            "description": "This method is intended for encoding *key* or *value* parts of query component. We need a\ncustom method because encodeURIComponent is too aggressive and encodes stuff that doesn't\nhave to be encoded per http://tools.ietf.org/html/rfc3986:\n   query       = *( pchar / \"/\" / \"?\" )\n   pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n   unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   pct-encoded   = \"%\" HEXDIG HEXDIG\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                    / \"*\" / \"+\" / \",\" / \";\" / \"=\"",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 1,
            "license": "AngularJS v1.3.15\n(c) 2010-2014 Google, Inc. http://angularjs.org\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 8,
            "ngdoc": "module",
            "name": "ngRoute",
            "description": "# ngRoute\n\nThe `ngRoute` module provides routing and deeplinking services and directives for angular apps.\n\n## Example\nSee {@link ngRoute.$route#example $route} for an example of configuring and using `ngRoute`.\n\n\n<div doc-module-components=\"ngRoute\"></div>",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 28,
            "ngdoc": "provider",
            "name": "$routeProvider",
            "description": "Used for configuring routes.\n\n## Example\nSee {@link ngRoute.$route#example $route} for an example of configuring and using `ngRoute`.\n\n## Dependencies\nRequires the {@link ngRoute `ngRoute`} module to be installed.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 49,
            "ngdoc": "method",
            "name": "$routeProvider#when",
            "params": [
                {
                    "name": "path",
                    "description": "Route path (matched against `$location.path`). If `$location.path`\n   contains redundant trailing slash or is missing one, the route will still match and the\n   `$location.path` will be updated to add or drop the trailing slash to exactly match the\n   route definition.\n\n   * `path` can contain named groups starting with a colon: e.g. `:name`. All characters up\n       to the next slash are matched and stored in `$routeParams` under the given `name`\n       when the route matches.\n   * `path` can contain named groups starting with a colon and ending with a star:\n       e.g.`:name*`. All characters are eagerly stored in `$routeParams` under the given `name`\n       when the route matches.\n   * `path` can contain optional named groups with a question mark: e.g.`:name?`.\n\n   For example, routes like `/color/:color/largecode/:largecode*\\/edit` will match\n   `/color/brown/largecode/code/with/slashes/edit` and extract:\n\n   * `color: brown`\n   * `largecode: code/with/slashes`.",
                    "type": "String"
                },
                {
                    "name": "route",
                    "description": "Mapping information to be assigned to `$route.current` on route\n   match.\n\n   Object properties:\n\n   - `controller` – `{(string|function()=}` – Controller fn that should be associated with\n     newly created scope or the name of a {@link angular.Module#controller registered\n     controller} if passed as a string.\n   - `controllerAs` – `{string=}` – A controller alias name. If present the controller will be\n     published to scope under the `controllerAs` name.\n   - `template` – `{string=|function()=}` – html template as a string or a function that\n     returns an html template as a string which should be used by {@link\n     ngRoute.directive:ngView ngView} or {@link ng.directive:ngInclude ngInclude} directives.\n     This property takes precedence over `templateUrl`.\n\n     If `template` is a function, it will be called with the following parameters:\n\n     - `{Array.<Object>}` - route parameters extracted from the current\n       `$location.path()` by applying the current route\n\n   - `templateUrl` – `{string=|function()=}` – path or function that returns a path to an html\n     template that should be used by {@link ngRoute.directive:ngView ngView}.\n\n     If `templateUrl` is a function, it will be called with the following parameters:\n\n     - `{Array.<Object>}` - route parameters extracted from the current\n       `$location.path()` by applying the current route\n\n   - `resolve` - `{Object.<string, function>=}` - An optional map of dependencies which should\n     be injected into the controller. If any of these dependencies are promises, the router\n     will wait for them all to be resolved or one to be rejected before the controller is\n     instantiated.\n     If all the promises are resolved successfully, the values of the resolved promises are\n     injected and {@link ngRoute.$route#$routeChangeSuccess $routeChangeSuccess} event is\n     fired. If any of the promises are rejected the\n     {@link ngRoute.$route#$routeChangeError $routeChangeError} event is fired. The map object\n     is:\n\n     - `key` – `{string}`: a name of a dependency to be injected into the controller.\n     - `factory` - `{string|function}`: If `string` then it is an alias for a service.\n       Otherwise if function, then it is {@link auto.$injector#invoke injected}\n       and the return value is treated as the dependency. If the result is a promise, it is\n       resolved before its value is injected into the controller. Be aware that\n       `ngRoute.$routeParams` will still refer to the previous route within these resolve\n       functions.  Use `$route.current.params` to access the new route parameters, instead.\n\n   - `redirectTo` – {(string|function())=} – value to update\n     {@link ng.$location $location} path with and trigger route redirection.\n\n     If `redirectTo` is a function, it will be called with the following parameters:\n\n     - `{Object.<string>}` - route parameters extracted from the current\n       `$location.path()` by applying the current route templateUrl.\n     - `{string}` - current `$location.path()`\n     - `{Object}` - current `$location.search()`\n\n     The custom `redirectTo` function is expected to return a string which will be used\n     to update `$location.path()` and `$location.search()`.\n\n   - `[reloadOnSearch=true]` - {boolean=} - reload route when only `$location.search()`\n     or `$location.hash()` changes.\n\n     If the option is set to `false` and url in the browser changes, then\n     `$routeUpdate` event is broadcasted on the root scope.\n\n   - `[caseInsensitiveMatch=false]` - {boolean=} - match routes without being case sensitive\n\n     If the option is set to `true`, then the particular route can be matched without being\n     case sensitive",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "self",
                "type": "Object"
            },
            "description": "Adds a new route definition to the `$route` service.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 177,
            "ngdoc": "property",
            "name": "$routeProvider#caseInsensitiveMatch",
            "description": "A boolean property indicating if routes defined\nusing this provider should be matched using a case insensitive\nalgorithm. Defaults to `false`.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 188,
            "params": [
                {
                    "name": "path",
                    "description": "path",
                    "type": "String"
                },
                {
                    "name": "opts",
                    "description": "options",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "?Object"
            },
            "description": "Normalizes the given path, returning a regular expression\nand the original path.\n\nInspired by pathRexp in visionmedia/express/lib/utils.js.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 229,
            "ngdoc": "method",
            "name": "$routeProvider#otherwise",
            "description": "Sets route definition that will be used on route change when no other route definition\nis matched.",
            "params": [
                {
                    "name": "params",
                    "description": "Mapping information to be assigned to `$route.current`.\nIf called with a string, the value maps to `redirectTo`.",
                    "type": "Object|string"
                }
            ],
            "return": {
                "description": "self",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 259,
            "ngdoc": "service",
            "name": "current Reference to the current route definition.!~YUIDOC_LINE~!The route definition contains:!~YUIDOC_LINE~!!~YUIDOC_LINE~!  - `controller`: The controller constructor as define in route definition.!~YUIDOC_LINE~!  - `locals`: A map of locals which is used by {@link ng.$controller $controller} service for!~YUIDOC_LINE~!    controller instantiation. The `locals` contain!~YUIDOC_LINE~!    the resolved values of the `resolve` map. Additionally the `locals` also contain:!~YUIDOC_LINE~!!~YUIDOC_LINE~!    - `$scope` - The current route scope.!~YUIDOC_LINE~!    - `$template` - The current route template HTML.",
            "requires": [
                "$location",
                "$routeParams"
            ],
            "itemtype": "property",
            "type": "Object",
            "description": "`$route` is used for deep-linking URLs to controllers and views (HTML partials).\nIt watches `$location.url()` and tries to map the path to an existing route definition.\n\nRequires the {@link ngRoute `ngRoute`} module to be installed.\n\nYou can define routes through {@link ngRoute.$routeProvider $routeProvider}'s API.\n\nThe `$route` service is typically used in conjunction with the\n{@link ngRoute.directive:ngView `ngView`} directive and the\n{@link ngRoute.$routeParams `$routeParams`} service.",
            "example": [
                "\nThis example shows how changing the URL hash causes the `$route` to match a route against the\nURL, and the `ngView` pulls in the partial.\n\n<example name=\"$route-service\" module=\"ngRouteExample\"\n         deps=\"angular-route.js\" fixBase=\"true\">\n  <file name=\"index.html\">\n    <div ng-controller=\"MainController\">\n      Choose:\n      <a href=\"Book/Moby\">Moby</a> |\n      <a href=\"Book/Moby/ch/1\">Moby: Ch1</a> |\n      <a href=\"Book/Gatsby\">Gatsby</a> |\n      <a href=\"Book/Gatsby/ch/4?key=value\">Gatsby: Ch4</a> |\n      <a href=\"Book/Scarlet\">Scarlet Letter</a><br/>\n\n      <div ng-view></div>\n\n      <hr />\n\n      <pre>$location.path() = {{$location.path()}}</pre>\n      <pre>$route.current.templateUrl = {{$route.current.templateUrl}}</pre>\n      <pre>$route.current.params = {{$route.current.params}}</pre>\n      <pre>$route.current.scope.name = {{$route.current.scope.name}}</pre>\n      <pre>$routeParams = {{$routeParams}}</pre>\n    </div>\n  </file>\n\n  <file name=\"book.html\">\n    controller: {{name}}<br />\n    Book Id: {{params.bookId}}<br />\n  </file>\n\n  <file name=\"chapter.html\">\n    controller: {{name}}<br />\n    Book Id: {{params.bookId}}<br />\n    Chapter Id: {{params.chapterId}}\n  </file>\n\n  <file name=\"script.js\">\n    angular.module('ngRouteExample', ['ngRoute'])\n\n     .controller('MainController', function($scope, $route, $routeParams, $location) {\n         $scope.$route = $route;\n         $scope.$location = $location;\n         $scope.$routeParams = $routeParams;\n     })\n\n     .controller('BookController', function($scope, $routeParams) {\n         $scope.name = \"BookController\";\n         $scope.params = $routeParams;\n     })\n\n     .controller('ChapterController', function($scope, $routeParams) {\n         $scope.name = \"ChapterController\";\n         $scope.params = $routeParams;\n     })\n\n    .config(function($routeProvider, $locationProvider) {\n      $routeProvider\n       .when('/Book/:bookId', {\n        templateUrl: 'book.html',\n        controller: 'BookController',\n        resolve: {\n          // I will cause a 1 second delay\n          delay: function($q, $timeout) {\n            var delay = $q.defer();\n            $timeout(delay.resolve, 1000);\n            return delay.promise;\n          }\n        }\n      })\n      .when('/Book/:bookId/ch/:chapterId', {\n        templateUrl: 'chapter.html',\n        controller: 'ChapterController'\n      });\n\n      // configure html5 to get links working on jsfiddle\n      $locationProvider.html5Mode(true);\n    });\n\n  </file>\n\n  <file name=\"protractor.js\" type=\"protractor\">\n    it('should load and compile correct template', function() {\n      element(by.linkText('Moby: Ch1')).click();\n      var content = element(by.css('[ng-view]')).getText();\n      expect(content).toMatch(/controller\\: ChapterController/);\n      expect(content).toMatch(/Book Id\\: Moby/);\n      expect(content).toMatch(/Chapter Id\\: 1/);\n\n      element(by.partialLinkText('Scarlet')).click();\n\n      content = element(by.css('[ng-view]')).getText();\n      expect(content).toMatch(/controller\\: BookController/);\n      expect(content).toMatch(/Book Id\\: Scarlet/);\n    });\n  </file>\n</example>"
            ],
            "class": "Gruntfile",
            "module": "ngMock",
            "subprops": [
                {
                    "name": "routes",
                    "description": "Object with all route configuration Objects as its properties.",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 390,
            "ngdoc": "event",
            "name": "$route#$routeChangeStart",
            "eventtype": "broadcast on root scope",
            "description": "Broadcasted before a route change. At this  point the route services starts\nresolving all of the dependencies needed for the route change to occur.\nTypically this involves fetching the view template as well as any dependencies\ndefined in `resolve` route property. Once  all of the dependencies are resolved\n`$routeChangeSuccess` is fired.\n\nThe route change (and the `$location` change that triggered it) can be prevented\nby calling `preventDefault` method of the event. See {@link ng.$rootScope.Scope#$on}\nfor more details about event object.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "Future route information.",
                    "type": "Route"
                },
                {
                    "name": "current",
                    "description": "Current route information.",
                    "type": "Route"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 410,
            "ngdoc": "event",
            "name": "$route#$routeChangeSuccess",
            "eventtype": "broadcast on root scope",
            "description": "Broadcasted after a route dependencies are resolved.\n{@link ngRoute.directive:ngView ngView} listens for the directive\nto instantiate the controller and render the view.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "current",
                    "description": "Current route information.",
                    "type": "Route"
                },
                {
                    "name": "previous",
                    "description": "Previous route information, or undefined if current is\nfirst route entered.",
                    "type": "Route|Undefined"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 425,
            "ngdoc": "event",
            "name": "$route#$routeChangeError",
            "eventtype": "broadcast on root scope",
            "description": "Broadcasted if any of the resolve promises are rejected.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object",
                    "type": "Object"
                },
                {
                    "name": "current",
                    "description": "Current route information.",
                    "type": "Route"
                },
                {
                    "name": "previous",
                    "description": "Previous route information.",
                    "type": "Route"
                },
                {
                    "name": "rejection",
                    "description": "Rejection of the promise. Usually the error of the failed promise.",
                    "type": "Route"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 438,
            "ngdoc": "event",
            "name": "$route#$routeUpdate",
            "eventtype": "broadcast on root scope",
            "description": "The `reloadOnSearch` property has been set to false, and we are reusing the same\ninstance of the Controller.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 454,
            "ngdoc": "method",
            "name": "$route#reload",
            "description": "Causes `$route` service to reload the current route even if\n{@link ng.$location $location} hasn't changed.\n\nAs a result of that, {@link ngRoute.directive:ngView ngView}\ncreates new scope and reinstantiates the controller.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 474,
            "ngdoc": "method",
            "name": "$route#updateParams",
            "description": "Causes `$route` service to update the current URL, replacing\ncurrent route parameters with those specified in `newParams`.\nProvided property names that match the route's path segment\ndefinitions will be interpolated into the location's path, while\nremaining properties will be treated as query params.",
            "params": [
                {
                    "name": "newParams",
                    "description": "mapping of URL parameter names to values",
                    "type": "!Object<string, string>"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 506,
            "params": [
                {
                    "name": "on",
                    "description": "current url",
                    "type": "String"
                },
                {
                    "name": "route",
                    "description": "route regexp to match the url against",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "?Object"
            },
            "description": "Check if the route matches the current url.\n\nInspired by match in\nvisionmedia/express/lib/router/router.js.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 627,
            "return": {
                "description": "the current active route, by matching it against the URL",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 645,
            "return": {
                "description": "interpolation of the redirect path with the parameters",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 669,
            "ngdoc": "service",
            "name": "$routeParams",
            "requires": [
                "$route"
            ],
            "description": "The `$routeParams` service allows you to retrieve the current set of route parameters.\n\nRequires the {@link ngRoute `ngRoute`} module to be installed.\n\nThe route parameters are a combination of {@link ng.$location `$location`}'s\n{@link ng.$location#search `search()`} and {@link ng.$location#path `path()`}.\nThe `path` parameters are extracted when the {@link ngRoute.$route `$route`} path is matched.\n\nIn case of parameter name collision, `path` params take precedence over `search` params.\n\nThe service guarantees that the identity of the `$routeParams` object will remain unchanged\n(but its properties will likely change) even when a route change occurs.\n\nNote that the `$routeParams` are only updated *after* a route change completes successfully.\nThis means that you cannot rely on `$routeParams` being correct in route resolve functions.\nInstead you can use `$route.current.params` to access the new route's parameters.",
            "example": [
                "\n```js\n // Given:\n // URL: http://server.com/index.html#/Chapter/1/Section/2?search=moby\n // Route: /Chapter/:chapterId/Section/:sectionId\n //\n // Then\n $routeParams ==> {chapterId:'1', sectionId:'2', search:'moby'}\n```"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 710,
            "ngdoc": "directive",
            "name": "ngView",
            "restrict": "ECA",
            "description": "# Overview\n`ngView` is a directive that complements the {@link ngRoute.$route $route} service by\nincluding the rendered template of the current route into the main layout (`index.html`) file.\nEvery time the current route changes, the included view changes with it according to the\nconfiguration of the `$route` service.\n\nRequires the {@link ngRoute `ngRoute`} module to be installed.",
            "animations": "enter - animation is used to bring new content into the browser.\nleave - animation is used to animate existing content away.\n\nThe enter and leave animation occur concurrently.",
            "scope": "",
            "priority": "400",
            "params": [
                {
                    "name": "onload",
                    "description": "Expression to evaluate whenever the view updates.",
                    "type": "String="
                },
                {
                    "name": "autoscroll",
                    "description": "Whether `ngView` should call {@link ng.$anchorScroll\n                 $anchorScroll} to scroll the viewport after the view is updated.\n\n                 - If the attribute is not set, disable scrolling.\n                 - If the attribute is set without value, enable scrolling.\n                 - Otherwise enable scrolling only if the `autoscroll` attribute value evaluated\n                   as an expression yields a truthy value.",
                    "type": "String="
                }
            ],
            "example": [
                "\n   <example name=\"ngView-directive\" module=\"ngViewExample\"\n            deps=\"angular-route.js;angular-animate.js\"\n            animations=\"true\" fixBase=\"true\">\n     <file name=\"index.html\">\n       <div ng-controller=\"MainCtrl as main\">\n         Choose:\n         <a href=\"Book/Moby\">Moby</a> |\n         <a href=\"Book/Moby/ch/1\">Moby: Ch1</a> |\n         <a href=\"Book/Gatsby\">Gatsby</a> |\n         <a href=\"Book/Gatsby/ch/4?key=value\">Gatsby: Ch4</a> |\n         <a href=\"Book/Scarlet\">Scarlet Letter</a><br/>\n\n         <div class=\"view-animate-container\">\n           <div ng-view class=\"view-animate\"></div>\n         </div>\n         <hr />\n\n         <pre>$location.path() = {{main.$location.path()}}</pre>\n         <pre>$route.current.templateUrl = {{main.$route.current.templateUrl}}</pre>\n         <pre>$route.current.params = {{main.$route.current.params}}</pre>\n         <pre>$routeParams = {{main.$routeParams}}</pre>\n       </div>\n     </file>\n\n     <file name=\"book.html\">\n       <div>\n         controller: {{book.name}}<br />\n         Book Id: {{book.params.bookId}}<br />\n       </div>\n     </file>\n\n     <file name=\"chapter.html\">\n       <div>\n         controller: {{chapter.name}}<br />\n         Book Id: {{chapter.params.bookId}}<br />\n         Chapter Id: {{chapter.params.chapterId}}\n       </div>\n     </file>\n\n     <file name=\"animations.css\">\n       .view-animate-container {\n         position:relative;\n         height:100px!important;\n         background:white;\n         border:1px solid black;\n         height:40px;\n         overflow:hidden;\n       }\n\n       .view-animate {\n         padding:10px;\n       }\n\n       .view-animate.ng-enter, .view-animate.ng-leave {\n         -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 1.5s;\n         transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 1.5s;\n\n         display:block;\n         width:100%;\n         border-left:1px solid black;\n\n         position:absolute;\n         top:0;\n         left:0;\n         right:0;\n         bottom:0;\n         padding:10px;\n       }\n\n       .view-animate.ng-enter {\n         left:100%;\n       }\n       .view-animate.ng-enter.ng-enter-active {\n         left:0;\n       }\n       .view-animate.ng-leave.ng-leave-active {\n         left:-100%;\n       }\n     </file>\n\n     <file name=\"script.js\">\n       angular.module('ngViewExample', ['ngRoute', 'ngAnimate'])\n         .config(['$routeProvider', '$locationProvider',\n           function($routeProvider, $locationProvider) {\n             $routeProvider\n               .when('/Book/:bookId', {\n                 templateUrl: 'book.html',\n                 controller: 'BookCtrl',\n                 controllerAs: 'book'\n               })\n               .when('/Book/:bookId/ch/:chapterId', {\n                 templateUrl: 'chapter.html',\n                 controller: 'ChapterCtrl',\n                 controllerAs: 'chapter'\n               });\n\n             $locationProvider.html5Mode(true);\n         }])\n         .controller('MainCtrl', ['$route', '$routeParams', '$location',\n           function($route, $routeParams, $location) {\n             this.$route = $route;\n             this.$location = $location;\n             this.$routeParams = $routeParams;\n         }])\n         .controller('BookCtrl', ['$routeParams', function($routeParams) {\n           this.name = \"BookCtrl\";\n           this.params = $routeParams;\n         }])\n         .controller('ChapterCtrl', ['$routeParams', function($routeParams) {\n           this.name = \"ChapterCtrl\";\n           this.params = $routeParams;\n         }]);\n\n     </file>\n\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should load and compile correct template', function() {\n         element(by.linkText('Moby: Ch1')).click();\n         var content = element(by.css('[ng-view]')).getText();\n         expect(content).toMatch(/controller\\: ChapterCtrl/);\n         expect(content).toMatch(/Book Id\\: Moby/);\n         expect(content).toMatch(/Chapter Id\\: 1/);\n\n         element(by.partialLinkText('Scarlet')).click();\n\n         content = element(by.css('[ng-view]')).getText();\n         expect(content).toMatch(/controller\\: BookCtrl/);\n         expect(content).toMatch(/Book Id\\: Scarlet/);\n       });\n     </file>\n   </example>"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-route/angular-route.js",
            "line": 876,
            "ngdoc": "event",
            "name": "ngView#$viewContentLoaded",
            "eventtype": "emit on the current ngView scope",
            "description": "Emitted every time the ngView content is reloaded.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils-ieshiv.js",
            "line": 1,
            "description": "angular-ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)",
            "version": "v0.2.3 - 2015-03-30",
            "link": "http://angular-ui.github.com",
            "license": "MIT License, http://www.opensource.org/licenses/MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils-ieshiv.min.js",
            "line": 1,
            "description": "angular-ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)",
            "version": "v0.2.3 - 2015-03-30",
            "link": "http://angular-ui.github.com",
            "license": "MIT License, http://www.opensource.org/licenses/MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.js",
            "line": 1,
            "description": "angular-ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)",
            "version": "v0.2.3 - 2015-03-30",
            "link": "http://angular-ui.github.com",
            "license": "MIT License, http://www.opensource.org/licenses/MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.js",
            "line": 24,
            "description": "General-purpose Event binding. Bind any event not natively supported by Angular\nPass an object with keynames for events to ui-event\nAllows $event object and $params object to be passed",
            "example": [
                " <input ui-event=\"{ focus : 'counter++', blur : 'someCallback()' }\">",
                " <input ui-event=\"{ myCustomEvent : 'myEventHandler($event, $params)'}\">"
            ],
            "params": [
                {
                    "name": "ui-event",
                    "description": "The event to bind to as a string or a hash of events with their callbacks",
                    "type": "String|object literal"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.js",
            "line": 55,
            "description": "A replacement utility for internationalization very similar to sprintf.",
            "params": [
                {
                    "name": "replace",
                    "description": "The tokens to replace depends on type\n string: all instances of $0 will be replaced\n array: each instance of $0, $1, $2 etc. will be placed with each array item in corresponding order\n object: all attributes will be iterated through, with :key being replaced with its corresponding value",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "string"
            },
            "example": [
                ": 'Hello :name, how are you :day'.format({ name:'John', day:'Today' })",
                ": 'Records $0 to $1 out of $2 total'.format(['10', '20', '3000'])",
                ": '$0 agrees to all mentions $0 makes in the event that $0 hits a tree while $0 is driving drunk'.format('Bob')"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.js",
            "line": 95,
            "description": "Wraps the",
            "params": [
                {
                    "name": "text",
                    "description": "haystack to search through",
                    "type": "String"
                },
                {
                    "name": "search",
                    "description": "needle to search for",
                    "type": "String"
                },
                {
                    "name": "caseSensitive",
                    "description": "optional boolean to use case-sensitive searching",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.js",
            "line": 188,
            "description": "Provides an easy way to toggle a checkboxes indeterminate property",
            "example": [
                " <input type=\"checkbox\" ui-indeterminate=\"isUnkown\">"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.js",
            "line": 212,
            "description": "Converts variable-esque naming conventions to something presentational, capitalized words separated by space.",
            "params": [
                {
                    "name": "value",
                    "description": "The value to be parsed and prettified.",
                    "type": "String"
                },
                {
                    "name": "inflector",
                    "description": "The inflector to use. Default: humanize.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "example": [
                " {{ 'Here Is my_phoneNumber' | inflector:'humanize' }} => Here Is My Phone Number\n         {{ 'Here Is my_phoneNumber' | inflector:'underscore' }} => here_is_my_phone_number\n         {{ 'Here Is my_phoneNumber' | inflector:'variable' }} => hereIsMyPhoneNumber"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.js",
            "line": 261,
            "description": "General-purpose jQuery wrapper. Simply pass the plugin name as the expression.\n\nIt is possible to specify a default set of parameters for each jQuery plugin.\nUnder the jq key, namespace each plugin by that which will be passed to ui-jq.\nUnfortunately, at this time you can only pre-define the first parameter.",
            "example": [
                " { jq : { datepicker : { showOn:'click' } } }",
                " <input ui-jq=\"datepicker\" ui-options=\"{showOn:'click'},secondParameter,thirdParameter\" ui-refresh=\"iChange\">"
            ],
            "params": [
                {
                    "name": "ui-jq",
                    "description": "The $elm.[pluginName]() to call.",
                    "type": "String"
                },
                {
                    "name": "ui-options",
                    "description": "Expression to be evaluated and passed as options to the function\n    Multiple parameters can be separated by commas",
                    "type": "Mixed",
                    "optional": true
                },
                {
                    "name": "ui-refresh",
                    "description": "Watch expression and refire plugin on changes",
                    "type": "Expression",
                    "optional": true
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.js",
            "line": 422,
            "description": "Bind one or more handlers to particular keys or their combination",
            "params": [
                {
                    "name": "hash",
                    "description": "keyBindings Can be an object or string where keybinding expression of keys or keys combinations and AngularJS Exspressions are set. Object syntax: \"{ keys1: expression1 [, keys2: expression2 [ , ... ]]}\". String syntax: \"\"expression1 on keys1 [ and expression2 on keys2 [ and ... ]]\"\". Expression is an AngularJS Expression, and key(s) are dash-separated combinations of keys and modifiers (one or many, if any. Order does not matter). Supported modifiers are 'ctrl', 'shift', 'alt' and key can be used either via its keyCode (13 for Return) or name. Named keys are 'backspace', 'tab', 'enter', 'esc', 'space', 'pageup', 'pagedown', 'end', 'home', 'left', 'up', 'right', 'down', 'insert', 'delete'.",
                    "type": "Mixed"
                }
            ],
            "example": [
                " <input ui-keypress=\"{enter:'x = 1', 'ctrl-shift-space':'foo()', 'shift-13':'bar()'}\" /> <input ui-keypress=\"foo = 2 on ctrl-13 and bar('hello') on shift-esc\" />"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.js",
            "line": 974,
            "description": "Add a clear button to form inputs to reset their value",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.js",
            "line": 1005,
            "description": "Set a $uiRoute boolean to see if the current route matches",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.js",
            "line": 1984,
            "description": "Adds a 'ui-scrollfix' class to the element when the page scrolls past it's position.",
            "params": [
                {
                    "name": "offset",
                    "description": "optional Y-offset to override the detected offset.\n  Takes 300 (absolute) or -300 or +300 (relative to detected)",
                    "type": "Int",
                    "optional": true
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.js",
            "line": 2054,
            "description": "uiShow Directive\n\nAdds a 'ui-show' class to the element instead of display:block\nCreated to allow tighter control  of CSS without bulkier directives",
            "params": [
                {
                    "name": "expression",
                    "description": "evaluated expression to determine if the class should be added",
                    "type": "Boolean"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.js",
            "line": 2077,
            "description": "uiHide Directive\n\nAdds a 'ui-hide' class to the element instead of display:block\nCreated to allow tighter control  of CSS without bulkier directives",
            "params": [
                {
                    "name": "expression",
                    "description": "evaluated expression to determine if the class should be added",
                    "type": "Boolean"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.js",
            "line": 2099,
            "description": "uiToggle Directive\n\nAdds a class 'ui-show' if true, and a 'ui-hide' if false to the element instead of display:block/display:none\nCreated to allow tighter control  of CSS without bulkier directives. This also allows you to override the\ndefault visibility of the element using either class.",
            "params": [
                {
                    "name": "expression",
                    "description": "evaluated expression to determine if the class should be added",
                    "type": "Boolean"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.js",
            "line": 2122,
            "description": "Filters out all duplicate items from an array by checking the specified key",
            "params": [
                {
                    "name": "key",
                    "description": "the name of the attribute of each object to compare for uniqueness\nif the key is empty, the entire object will be compared\nif the key === false then no filtering will be performed",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.js",
            "line": 2288,
            "description": "General-purpose validator for ngModel.\nangular.js comes with several built-in validation mechanism for input fields (ngRequired, ngPattern etc.) but using\nan arbitrary validation function requires creation of a custom formatters and / or parsers.\nThe ui-validate directive makes it easy to use any function(s) defined in scope as a validator function(s).\nA validator function will trigger validation on both model and input changes.",
            "example": [
                " <input ui-validate=\" 'myValidatorFunction($value)' \">",
                " <input ui-validate=\"{ foo : '$value > anotherModel', bar : 'validateFoo($value)' }\">",
                " <input ui-validate=\"{ foo : '$value > anotherModel' }\" ui-validate-watch=\" 'anotherModel' \">",
                " <input ui-validate=\"{ foo : '$value > anotherModel', bar : 'validateFoo($value)' }\" ui-validate-watch=\" { foo : 'anotherModel' } \">"
            ],
            "params": [
                {
                    "name": "ui-validate",
                    "description": "If strings is passed it should be a scope's function to be used as a validator.\nIf an object literal is passed a key denotes a validation error key while a value should be a validator function.\nIn both cases validator function should take a value to validate as its argument and should return true/false indicating a validation result.",
                    "type": "String|object literal"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angular-ui-utils/ui-utils.min.js",
            "line": 1,
            "description": "angular-ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)",
            "version": "v0.2.3 - 2015-03-30",
            "link": "http://angular-ui.github.com",
            "license": "MIT License, http://www.opensource.org/licenses/MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-adobe.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2014 Luis Farzati http://luisfarzati.github.io/angulartics\nAdobe analytics(Omniture) update contributed by http://github.com/ajayk\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-baidu.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nContributed by http://github.com/miller\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-chartbeat.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nContributed by http://github.com/chechoacosta\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-debug.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2014 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-flurry.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nContributed by http://github.com/samanbarghi\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-ga-cordova-google-analytics-plugin.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-ga-cordova.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-ga.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nUniversal Analytics update contributed by http://github.com/willmcclellan\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-gtm.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nGoogle Tag Manager Plugin Contributed by http://github.com/danrowe49\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-intercom.min.js",
            "line": 1,
            "license": "Angulartics v0.15.20\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nUniversal Analytics update contributed by http://github.com/willmcclellan\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-kissmetrics.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-localytics.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2014 Luis Farzati http://luisfarzati.github.io/angulartics\nLocalytics plugin contributed by http://github.com/joehalliwell\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-loggly.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nContributed by http://github.com/zoellner\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-marketo.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2014 Carl Thorner http://luisfarzati.github.io/angulartics\nContributed by http://github.com/L42y\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-mixpanel.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nContributed by http://github.com/L42y\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-piwik.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nPiwik 2.1.x update contributed by http://github.com/highskillz\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-scroll.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-segmentio.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-splunk.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics-woopra.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/dist/angulartics.min.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/samples/loggly.tracker.js",
            "line": 101,
            "description": "These cookie functions are not a global utilities.  It is for purpose of this tracker only",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-adobe.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2014 Luis Farzati http://luisfarzati.github.io/angulartics\nAdobe analytics(Omniture) update contributed by http://github.com/ajayk\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-adobe.js",
            "line": 10,
            "ngdoc": "overview",
            "name": "angulartics.adobe.analytics\nEnables analytics support for Adobe Analytics (http://adobe.com/analytics)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-adobe.js",
            "line": 24,
            "description": "Track Event in Adobe Analytics",
            "name": "eventTrack",
            "params": [
                {
                    "name": "action",
                    "description": "Required 'action' (string) associated with the event",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-baidu.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nContributed by http://github.com/miller\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-baidu.js",
            "line": 11,
            "ngdoc": "overview",
            "name": "angulartics.baidu\nEnables analytics support for baidu (http://tongji.baidu.com)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-chartbeat.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nContributed by http://github.com/chechoacosta\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-chartbeat.js",
            "line": 10,
            "ngdoc": "overview",
            "name": "angulartics.chartbeat\nEnables analytics support for Chartbeat (http://chartbeat.com)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-cnzz.js",
            "line": 4,
            "ngdoc": "overview",
            "name": "angulartics.cnzz\nEnables analytics support for CNZZ (http://www.cnzz.com)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-debug.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2014 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-debug.js",
            "line": 9,
            "ngdoc": "overview",
            "name": "angulartics.debug\nEnables analytics debugging to console",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-debug.js",
            "line": 21,
            "description": "Track Event",
            "name": "eventTrack",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-flurry.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nContributed by http://github.com/samanbarghi\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-flurry.js",
            "line": 11,
            "ngdoc": "overview",
            "name": "angulartics.flurry\nEnables analytics support for flurry (http://flurry.com)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-ga-cordova-google-analytics-plugin.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-ga-cordova-google-analytics-plugin.js",
            "line": 9,
            "ngdoc": "overview",
            "name": "angulartics.google.analytics\nEnables analytics support for Google Analytics (http://google.com/analytics)\nfor Cordova with google-analytics-plugin (https://github.com/danwilson/google-analytics-plugin)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-ga-cordova.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-ga-cordova.js",
            "line": 9,
            "ngdoc": "overview",
            "name": "angulartics.google.analytics\nEnables analytics support for Google Analytics (http://google.com/analytics)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-ga.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nUniversal Analytics update contributed by http://github.com/willmcclellan\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-ga.js",
            "line": 10,
            "ngdoc": "overview",
            "name": "angulartics.google.analytics\nEnables analytics support for Google Analytics (http://google.com/analytics)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-ga.js",
            "line": 39,
            "description": "Track Event in GA",
            "name": "eventTrack",
            "params": [
                {
                    "name": "action",
                    "description": "Required 'action' (string) associated with the event",
                    "type": "String"
                },
                {
                    "name": "properties",
                    "description": "Comprised of the mandatory field 'category' (string) and optional  fields 'label' (string), 'value' (integer) and 'noninteraction' (boolean)",
                    "type": "Object"
                }
            ],
            "link": "https://developers.google.com/analytics/devguides/collection/analyticsjs/events",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-gtm-cordova.js",
            "line": 1,
            "description": "(c) 2015 Jared Dickson https://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-gtm-cordova.js",
            "line": 8,
            "ngdoc": "overview",
            "name": "angulartics.google.tagmanager.cordova\nEnables analytics support for Google Tag Manager (http://google.com/tagmanager)\nfor Cordova plugin Tag Manager (http://plugins.cordova.io/#/package/com.jareddickson.cordova.tag-manager)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-gtm.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nGoogle Tag Manager Plugin Contributed by http://github.com/danrowe49\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-gtm.js",
            "line": 12,
            "ngdoc": "overview",
            "name": "angulartics.google.analytics\nEnables analytics support for Google Tag Manager (http://google.com/tagmanager)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-gtm.js",
            "line": 21,
            "description": "Send content views to the dataLayer",
            "params": [
                {
                    "name": "path",
                    "description": "Required 'content name' (string) describes the content loaded",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-gtm.js",
            "line": 35,
            "description": "Send interactions to the dataLayer, i.e. for event tracking in Google Analytics",
            "name": "eventTrack",
            "params": [
                {
                    "name": "action",
                    "description": "Required 'action' (string) associated with the event",
                    "type": "String"
                },
                {
                    "name": "properties",
                    "description": "Comprised of the mandatory field 'category' (string) and optional  fields 'label' (string), 'value' (integer) and 'noninteraction' (boolean)",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-hubspot.js",
            "line": 4,
            "ngdoc": "overview",
            "name": "angulartics.hubspot\nEnables analytics support for Hubspot (http://www.hubspot.com)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-hubspot.js",
            "line": 14,
            "description": "Track a page view",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-intercom.js",
            "line": 1,
            "license": "Angulartics v0.15.20\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nUniversal Analytics update contributed by http://github.com/willmcclellan\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-intercom.js",
            "line": 10,
            "ngdoc": "overview",
            "name": "angulartics.intercom\nEnables analytics support for Intercom (https://www.intercom.io/)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-intercom.js",
            "line": 24,
            "description": "Track Event in Intercom",
            "name": "eventTrack",
            "params": [
                {
                    "name": "action",
                    "description": "Required 'action' (string) associated with the event",
                    "type": "String"
                },
                {
                    "name": "properties",
                    "description": "= metadata",
                    "type": "Object"
                }
            ],
            "link": "http://doc.intercom.io/api/?javascript#submitting-events",
            "example": [
                "\n  Intercom('trackEvent', 'invited-friend');"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-kissmetrics.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-kissmetrics.js",
            "line": 9,
            "ngdoc": "overview",
            "name": "angulartics.kissmetrics\nEnables analytics support for KISSmetrics (http://kissmetrics.com)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-localytics.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2014 Luis Farzati http://luisfarzati.github.io/angulartics\nLocalytics plugin contributed by http://github.com/joehalliwell\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-localytics.js",
            "line": 10,
            "ngdoc": "overview",
            "name": "angulartics.localytics\nEnables analytics support for Localytics (http://localytics.com/)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-localytics.js",
            "line": 20,
            "description": "Register the page tracking function.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-localytics.js",
            "line": 28,
            "description": "Reigster the Localytics event tracking function with the following parameters:",
            "params": [
                {
                    "name": "action",
                    "description": "Required 'action' (string) associated with the event\nthis becomes the event name",
                    "type": "String"
                },
                {
                    "name": "properties",
                    "description": "Additional attributes to be associated with the\nevent. See http://support.localytics.com/Integration_Overview#Event_Attributes",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-loggly.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nContributed by http://github.com/zoellner\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-loggly.js",
            "line": 10,
            "ngdoc": "overview",
            "name": "angulartics.loggly\nEnables analytics support for Loggly",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-marketo.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2014 Carl Thorner http://luisfarzati.github.io/angulartics\nContributed by http://github.com/L42y\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-marketo.js",
            "line": 10,
            "ngdoc": "overview",
            "name": "angulartics.marketo\nEnables analytics support for Marketo (http://www.marketo.com)\n\nWill not be considered loaded until the sKey attribute is set on the Munckin object, like so:\n\nMunckin.skey = 'my-secret-key';\n\nfor event tracking email is a required attribute",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-mixpanel.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nContributed by http://github.com/L42y\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-mixpanel.js",
            "line": 10,
            "ngdoc": "overview",
            "name": "angulartics.mixpanel\nEnables analytics support for Mixpanel (http://mixpanel.com)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-piwik.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nPiwik 2.1.x update contributed by http://github.com/highskillz\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-piwik.js",
            "line": 10,
            "ngdoc": "overview",
            "name": "angulartics.piwik\nEnables analytics support for Piwik (http://piwik.org/docs/tracking-api/)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-scroll.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-scroll.js",
            "line": 9,
            "ngdoc": "overview",
            "name": "angulartics.scroll\nProvides an implementation of jQuery Waypoints (http://imakewebthings.com/jquery-waypoints/)\nfor use as a valid DOM event in analytics-on.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-segmentio.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-segmentio.js",
            "line": 9,
            "ngdoc": "overview",
            "name": "angulartics.segment.io\nEnables analytics support for Segment.io (http://segment.io)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-splunk.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-splunk.js",
            "line": 9,
            "ngdoc": "overview",
            "name": "angulartics.splunk\nEnables analytics support for with custom collection backend API\nusing (sp.js as described in http://blogs.splunk.com/2013/10/17/still-using-3rd-party-web-analytics-providers-build-your-own-using-splunk/)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-woopra.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics-woopra.js",
            "line": 9,
            "ngdoc": "overview",
            "name": "angulartics.woopra\nEnables analytics support for Woopra (http://www.woopra.com)",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics.js",
            "line": 1,
            "license": "Angulartics v0.17.2\n(c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\nLicense: MIT",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/angulartics/src/angulartics.js",
            "line": 23,
            "ngdoc": "overview",
            "name": "angulartics",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/es5-shim/es5-shim.js",
            "line": 31,
            "description": "Brings an environment as close to ECMAScript 5 compliance\nas is possible with the facilities of erstwhile engines.\n\nAnnotated ES5: http://es5.github.com/ (specific links below)\nES5 Spec: http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\nRequired reading: http://javascriptweblog.wordpress.com/2011/12/05/extending-javascript-natives/",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 853,
            "description": "Create key-value caches of limited size",
            "return": {
                "description": "Returns the Object data after storing it on itself with\n\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n\tdeleting the oldest entry",
                "type": "Function(string, Object)"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 873,
            "description": "Mark a function for special use by Sizzle",
            "params": [
                {
                    "name": "fn",
                    "description": "The function to mark",
                    "type": "Function"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 882,
            "description": "Support testing using an element",
            "params": [
                {
                    "name": "fn",
                    "description": "Passed the created div and expects a boolean result",
                    "type": "Function"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 903,
            "description": "Adds the same handler for all of the specified attrs",
            "params": [
                {
                    "name": "attrs",
                    "description": "Pipe-separated list of attributes",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "The method that will be applied",
                    "type": "Function"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 917,
            "description": "Checks document order of two siblings",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "Returns less than 0 if a precedes b, greater than 0 if a follows b",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 946,
            "description": "Returns a function to use in pseudos for input types",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 957,
            "description": "Returns a function to use in pseudos for buttons",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 968,
            "description": "Returns a function to use in pseudos for positionals",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 990,
            "description": "Checks a node for validity as a Sizzle context",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Element|Object="
                }
            ],
            "return": {
                "description": "The input node if acceptable, otherwise a falsy value",
                "type": "Element|Object|Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 1002,
            "description": "Detects XML nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "An element or a document",
                    "type": "Element|Object"
                }
            ],
            "return": {
                "description": "True iff elem is a non-HTML XML node",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 1014,
            "description": "Sets document-related variables once based on the current document",
            "params": [
                {
                    "name": "doc",
                    "description": "An element or document object to use to set the document",
                    "type": "Element|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the current document",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 1456,
            "description": "Document sorting and removing duplicates",
            "params": [
                {
                    "name": "results",
                    "description": "",
                    "type": "ArrayLike"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 1489,
            "description": "Utility function for retrieving the text value of an array of DOM nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Array|Element"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 2462,
            "description": "A low-level selection function that works with Sizzle's compiled\n selector functions",
            "params": [
                {
                    "name": "selector",
                    "description": "A selector or a pre-compiled\n selector function built with Sizzle.compile",
                    "type": "String|Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "results",
                    "description": "",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "seed",
                    "description": "A set of elements to match against",
                    "type": "Array",
                    "optional": true
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 3422,
            "description": "The ready event handler and self cleanup method",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 3515,
            "description": "Determines whether an object can have data",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 5473,
            "description": "Retrieve the actual display of a element",
            "params": [
                {
                    "name": "name",
                    "description": "nodeName of the element",
                    "type": "String"
                },
                {
                    "name": "doc",
                    "description": "Document object",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 5497,
            "description": "Try to determine the default display value of an element",
            "params": [
                {
                    "name": "nodeName",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 8825,
            "description": "Load a url into a page",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/dist/jquery.js",
            "line": 8909,
            "description": "Gets a window from an element",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/ajax/load.js",
            "line": 15,
            "description": "Load a url into a page",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/core/ready.js",
            "line": 61,
            "description": "The ready event handler and self cleanup method",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/css/defaultDisplay.js",
            "line": 9,
            "description": "Retrieve the actual display of a element",
            "params": [
                {
                    "name": "name",
                    "description": "nodeName of the element",
                    "type": "String"
                },
                {
                    "name": "doc",
                    "description": "Document object",
                    "type": "Object"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/css/defaultDisplay.js",
            "line": 33,
            "description": "Try to determine the default display value of an element",
            "params": [
                {
                    "name": "nodeName",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/data/accepts.js",
            "line": 5,
            "description": "Determines whether an object can have data",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/sizzle/dist/sizzle.js",
            "line": 305,
            "description": "Create key-value caches of limited size",
            "return": {
                "description": "Returns the Object data after storing it on itself with\n\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n\tdeleting the oldest entry",
                "type": "Function(string, Object)"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/sizzle/dist/sizzle.js",
            "line": 325,
            "description": "Mark a function for special use by Sizzle",
            "params": [
                {
                    "name": "fn",
                    "description": "The function to mark",
                    "type": "Function"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/sizzle/dist/sizzle.js",
            "line": 334,
            "description": "Support testing using an element",
            "params": [
                {
                    "name": "fn",
                    "description": "Passed the created div and expects a boolean result",
                    "type": "Function"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/sizzle/dist/sizzle.js",
            "line": 355,
            "description": "Adds the same handler for all of the specified attrs",
            "params": [
                {
                    "name": "attrs",
                    "description": "Pipe-separated list of attributes",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "The method that will be applied",
                    "type": "Function"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/sizzle/dist/sizzle.js",
            "line": 369,
            "description": "Checks document order of two siblings",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "Returns less than 0 if a precedes b, greater than 0 if a follows b",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/sizzle/dist/sizzle.js",
            "line": 398,
            "description": "Returns a function to use in pseudos for input types",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/sizzle/dist/sizzle.js",
            "line": 409,
            "description": "Returns a function to use in pseudos for buttons",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/sizzle/dist/sizzle.js",
            "line": 420,
            "description": "Returns a function to use in pseudos for positionals",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/sizzle/dist/sizzle.js",
            "line": 442,
            "description": "Checks a node for validity as a Sizzle context",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Element|Object="
                }
            ],
            "return": {
                "description": "The input node if acceptable, otherwise a falsy value",
                "type": "Element|Object|Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/sizzle/dist/sizzle.js",
            "line": 454,
            "description": "Detects XML nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "An element or a document",
                    "type": "Element|Object"
                }
            ],
            "return": {
                "description": "True iff elem is a non-HTML XML node",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/sizzle/dist/sizzle.js",
            "line": 466,
            "description": "Sets document-related variables once based on the current document",
            "params": [
                {
                    "name": "doc",
                    "description": "An element or document object to use to set the document",
                    "type": "Element|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the current document",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/sizzle/dist/sizzle.js",
            "line": 908,
            "description": "Document sorting and removing duplicates",
            "params": [
                {
                    "name": "results",
                    "description": "",
                    "type": "ArrayLike"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/sizzle/dist/sizzle.js",
            "line": 941,
            "description": "Utility function for retrieving the text value of an array of DOM nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Array|Element"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/sizzle/dist/sizzle.js",
            "line": 1914,
            "description": "A low-level selection function that works with Sizzle's compiled\n selector functions",
            "params": [
                {
                    "name": "selector",
                    "description": "A selector or a pre-compiled\n selector function built with Sizzle.compile",
                    "type": "String|Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "results",
                    "description": "",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "seed",
                    "description": "A set of elements to match against",
                    "type": "Array",
                    "optional": true
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/jquery/src/offset.js",
            "line": 17,
            "description": "Gets a window from an element",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1,
            "license": "lodash 3.7.0 (Custom Build) <https://lodash.com/>\nBuild: `lodash modern -o ./lodash.js`\nCopyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\nBased on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\nCopyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\nAvailable under MIT license <https://lodash.com/license>",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 12,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 15,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 18,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 29,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 33,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 37,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 42,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 45,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 48,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 74,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 79,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 85,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 90,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 95,
            "description": "Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\nIn addition to special characters the forward slash is escaped to allow for\neasier `eval` use and `Function` compilation.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 103,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 106,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 109,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 112,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 115,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 118,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 121,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 124,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 127,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 130,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 138,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 150,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 160,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 163,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 178,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 193,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 200,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 221,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 231,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 241,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 247,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 257,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 260,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 263,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 266,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 269,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 272,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 275,
            "description": "Used as a reference to the global object.\n\nThe `this` value is used if it is the global object to avoid Greasemonkey's\nrestricted `window` object, otherwise the `window` object is used.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 285,
            "description": "The base implementation of `compareAscending` which compares values and\nsorts them in ascending order without guaranteeing a stable sort.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to compare to `other`.",
                    "type": "*"
                },
                {
                    "name": "other",
                    "description": "The value to compare to `value`.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the sort order indicator for `value`.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 309,
            "description": "The base implementation of `_.findIndex` and `_.findLastIndex` without\nsupport for callback shorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to search.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "fromRight",
                    "description": "Specify iterating from right to left.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the index of the matched value, else `-1`.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 331,
            "description": "The base implementation of `_.indexOf` without support for binary searches.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to search.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "The value to search for.",
                    "type": "*"
                },
                {
                    "name": "fromIndex",
                    "description": "The index to search from.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the index of the matched value, else `-1`.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 355,
            "description": "The base implementation of `_.isFunction` without support for environments\nwith incorrect `typeof` results.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 369,
            "description": "Converts `value` to a string if it is not one. An empty string is returned\nfor `null` or `undefined` values.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to process.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the string.",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 384,
            "description": "Used by `_.max` and `_.min` as the default callback for string values.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "string",
                    "description": "The string to inspect.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the code unit of the first character of the string.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 395,
            "description": "Used by `_.trim` and `_.trimLeft` to get the index of the first character\nof `string` that is not found in `chars`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "string",
                    "description": "The string to inspect.",
                    "type": "String"
                },
                {
                    "name": "chars",
                    "description": "The characters to find.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the index of the first character not found in `chars`.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 412,
            "description": "Used by `_.trim` and `_.trimRight` to get the index of the last character\nof `string` that is not found in `chars`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "string",
                    "description": "The string to inspect.",
                    "type": "String"
                },
                {
                    "name": "chars",
                    "description": "The characters to find.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the index of the last character not found in `chars`.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 428,
            "description": "Used by `_.sortBy` to compare transformed elements of a collection and stable\nsort them in ascending order.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to compare to `other`.",
                    "type": "Object"
                },
                {
                    "name": "other",
                    "description": "The object to compare to `object`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the sort order indicator for `object`.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 441,
            "description": "Used by `_.sortByOrder` to compare multiple properties of each element\nin a collection and stable sort them in the following order:\n\nIf `orders` is unspecified, sort in ascending order for all properties.\nOtherwise, for each property, sort in ascending order if its corresponding value in\norders is true, and descending order if false.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to compare to `other`.",
                    "type": "Object"
                },
                {
                    "name": "other",
                    "description": "The object to compare to `object`.",
                    "type": "Object"
                },
                {
                    "name": "orders",
                    "description": "The order to sort by for each property.",
                    "type": "Boolean[]"
                }
            ],
            "return": {
                "description": "Returns the sort order indicator for `object`.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 481,
            "description": "Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "letter",
                    "description": "The matched letter to deburr.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the deburred letter.",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 492,
            "description": "Used by `_.escape` to convert characters to HTML entities.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "chr",
                    "description": "The matched character to escape.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the escaped character.",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 503,
            "description": "Used by `_.template` to escape characters for inclusion in compiled\nstring literals.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "chr",
                    "description": "The matched character to escape.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the escaped character.",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 515,
            "description": "Gets the index at which the first occurrence of `NaN` is found in `array`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to search.",
                    "type": "Array"
                },
                {
                    "name": "fromIndex",
                    "description": "The index to search from.",
                    "type": "Number"
                },
                {
                    "name": "fromRight",
                    "description": "Specify iterating from right to left.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the index of the matched `NaN`, else `-1`.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 537,
            "description": "Checks if `value` is object-like.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is object-like, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 548,
            "description": "Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\ncharacter code is whitespace.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "charCode",
                    "description": "The character code to inspect.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns `true` if `charCode` is whitespace, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 561,
            "description": "Replaces all `placeholder` elements in `array` with an internal placeholder\nand returns an array of their indexes.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to modify.",
                    "type": "Array"
                },
                {
                    "name": "placeholder",
                    "description": "The placeholder to replace.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the new array of placeholder indexes.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 585,
            "description": "An implementation of `_.uniq` optimized for sorted arrays without support\nfor callback shorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new duplicate-value-free array.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 613,
            "description": "Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\ncharacter of `string`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "string",
                    "description": "The string to inspect.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the index of the first non-whitespace character.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 629,
            "description": "Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\ncharacter of `string`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "string",
                    "description": "The string to inspect.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the index of the last non-whitespace character.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 644,
            "description": "Used by `_.unescape` to convert HTML entities to characters.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "chr",
                    "description": "The matched character to unescape.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the unescaped character.",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 657,
            "description": "Create a new pristine `lodash` function using the given `context` object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "context",
                    "description": "The context object.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "root"
                }
            ],
            "return": {
                "description": "Returns a new `lodash` function.",
                "type": "Function"
            },
            "example": [
                "\n\n_.mixin({ 'foo': _.constant('foo') });\n\nvar lodash = _.runInContext();\nlodash.mixin({ 'bar': lodash.constant('bar') });\n\n_.isFunction(_.foo);\n// => true\n_.isFunction(_.bar);\n// => false\n\nlodash.isFunction(lodash.foo);\n// => false\nlodash.isFunction(lodash.bar);\n// => true\n\n// using `context` to mock `Date#getTime` use in `_.now`\nvar mock = _.runInContext({\n  'Date': function() {\n    return { 'getTime': getTimeMock };\n  }\n});\n\n// or creating a suped-up `defer` in Node.js\nvar defer = _.runInContext({ 'setTimeout': setImmediate }).defer;"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 699,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 711,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 716,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 719,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 722,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 725,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 728,
            "description": "Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\nof values.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 734,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 737,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 743,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 760,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 772,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 800,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 804,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 809,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 812,
            "description": "Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\nof an array-like value.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 818,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 821,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 826,
            "description": "Creates a `lodash` object which wraps `value` to enable implicit chaining.\nMethods that operate on and return arrays, collections, and functions can\nbe chained together. Methods that return a boolean or single value will\nautomatically end the chain returning the unwrapped value. Explicit chaining\nmay be enabled using `_.chain`. The execution of chained methods is lazy,\nthat is, execution is deferred until `_#value` is implicitly or explicitly\ncalled.\n\nLazy evaluation allows several methods to support shortcut fusion. Shortcut\nfusion is an optimization that merges iteratees to avoid creating intermediate\narrays and reduce the number of iteratee executions.\n\nChaining is supported in custom builds as long as the `_#value` method is\ndirectly or indirectly included in the build.\n\nIn addition to lodash methods, wrappers have `Array` and `String` methods.\n\nThe wrapper `Array` methods are:\n`concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n`splice`, and `unshift`\n\nThe wrapper `String` methods are:\n`replace` and `split`\n\nThe wrapper methods that support shortcut fusion are:\n`compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n`first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n`slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\nand `where`\n\nThe chainable wrapper methods are:\n`after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n`callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n`countBy`, `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`,\n`difference`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `fill`,\n`filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`, `forEach`,\n`forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `functions`,\n`groupBy`, `indexBy`, `initial`, `intersection`, `invert`, `invoke`, `keys`,\n`keysIn`, `map`, `mapValues`, `matches`, `matchesProperty`, `memoize`,\n`merge`, `mixin`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n`partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n`pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `reverse`,\n`shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`, `sortByOrder`, `splice`,\n`spread`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`,\n`throttle`, `thru`, `times`, `toArray`, `toPlainObject`, `transform`,\n`union`, `uniq`, `unshift`, `unzip`, `values`, `valuesIn`, `where`,\n`without`, `wrap`, `xor`, `zip`, and `zipObject`\n\nThe wrapper methods that are **not** chainable by default are:\n`add`, `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n`endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n`findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `has`,\n`identity`, `includes`, `indexOf`, `inRange`, `isArguments`, `isArray`,\n`isBoolean`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`, `isFinite`\n`isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`,\n`isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `isTypedArray`,\n`join`, `kebabCase`, `last`, `lastIndexOf`, `max`, `min`, `noConflict`,\n`noop`, `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`,\n`reduce`, `reduceRight`, `repeat`, `result`, `runInContext`, `shift`, `size`,\n`snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`, `startsWith`,\n`sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`, `unescape`,\n`uniqueId`, `value`, and `words`\n\nThe wrapper method `sample` will return a wrapped value when `n` is provided,\notherwise an unwrapped value is returned.",
            "name": "_",
            "is_constructor": 1,
            "category": [
                "Chain"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to wrap in a `lodash` instance.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the new `lodash` wrapper instance.",
                "type": "Object"
            },
            "example": [
                "\n\nvar wrapped = _([1, 2, 3]);\n\n// returns an unwrapped value\nwrapped.reduce(function(total, n) {\n  return total + n;\n});\n// => 6\n\n// returns a wrapped value\nvar squares = wrapped.map(function(n) {\n  return n * n;\n});\n\n_.isArray(squares);\n// => false\n\n_.isArray(squares.value());\n// => true"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 931,
            "description": "The function whose prototype all chaining wrappers inherit from.",
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 940,
            "description": "The base constructor for creating `lodash` wrapper objects.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to wrap.",
                    "type": "*"
                },
                {
                    "name": "chainAll",
                    "description": "Enable chaining for all wrapper methods.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "actions",
                    "description": "Actions to peform to resolve the unwrapped value.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 954,
            "description": "An object environment feature flags.",
            "static": 1,
            "memberof": "_",
            "type": "Object",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 971,
            "description": "Detect if functions can be decompiled by `Function#toString`\n(all but Firefox OS certified apps, older Opera mobile browsers, and\nthe PlayStation 3; forced `false` for Windows 8 apps).",
            "memberof": "_.support",
            "type": "boolean",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 981,
            "description": "Detect if `Function#name` is supported (all but IE).",
            "memberof": "_.support",
            "type": "boolean",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 989,
            "description": "Detect if the DOM is supported.",
            "memberof": "_.support",
            "type": "boolean",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1001,
            "description": "Detect if `arguments` object indexes are non-enumerable.\n\nIn Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\nindexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n`arguments` object indexes as non-enumerable and fail `hasOwnProperty`\nchecks for indexes that exceed the number of function parameters and\nwhose associated argument values are `0`.",
            "memberof": "_.support",
            "type": "boolean",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1020,
            "description": "By default, the template delimiters used by lodash are like those in\nembedded Ruby (ERB). Change the following template settings to use\nalternative delimiters.",
            "static": 1,
            "memberof": "_",
            "type": "Object",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1031,
            "description": "Used to detect `data` property values to be HTML-escaped.",
            "memberof": "_.templateSettings",
            "type": "RegExp",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1039,
            "description": "Used to detect code to be evaluated.",
            "memberof": "_.templateSettings",
            "type": "RegExp",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1047,
            "description": "Used to detect `data` property values to inject.",
            "memberof": "_.templateSettings",
            "type": "RegExp",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1055,
            "description": "Used to reference the data object in the template text.",
            "memberof": "_.templateSettings",
            "type": "string",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1063,
            "description": "Used to import variables into the compiled template.",
            "memberof": "_.templateSettings",
            "type": "Object",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1071,
            "description": "A reference to the `lodash` function.",
            "memberof": "_.templateSettings.imports",
            "type": "Function",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1083,
            "description": "Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to wrap.",
                    "type": "*"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1100,
            "description": "Creates a clone of the lazy wrapper object.",
            "access": "private",
            "tagname": "",
            "name": "clone",
            "memberof": "LazyWrapper",
            "return": {
                "description": "Returns the cloned `LazyWrapper` object.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1123,
            "description": "Reverses the direction of lazy iteration.",
            "access": "private",
            "tagname": "",
            "name": "reverse",
            "memberof": "LazyWrapper",
            "return": {
                "description": "Returns the new reversed `LazyWrapper` object.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1143,
            "description": "Extracts the unwrapped value from its lazy wrapper.",
            "access": "private",
            "tagname": "",
            "name": "value",
            "memberof": "LazyWrapper",
            "return": {
                "description": "Returns the unwrapped value.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1213,
            "description": "Creates a cache object to store key/value pairs.",
            "access": "private",
            "tagname": "",
            "static": 1,
            "name": "Cache",
            "memberof": "_.memoize",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1225,
            "description": "Removes `key` and its value from the cache.",
            "access": "private",
            "tagname": "",
            "name": "delete",
            "memberof": "_.memoize.Cache",
            "params": [
                {
                    "name": "key",
                    "description": "The key of the value to remove.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if the entry was removed successfully, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1238,
            "description": "Gets the cached value for `key`.",
            "access": "private",
            "tagname": "",
            "name": "get",
            "memberof": "_.memoize.Cache",
            "params": [
                {
                    "name": "key",
                    "description": "The key of the value to get.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the cached value.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1251,
            "description": "Checks if a cached value for `key` exists.",
            "access": "private",
            "tagname": "",
            "name": "has",
            "memberof": "_.memoize.Cache",
            "params": [
                {
                    "name": "key",
                    "description": "The key of the entry to check.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if an entry for `key` exists, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1264,
            "description": "Sets `value` to `key` of the cache.",
            "access": "private",
            "tagname": "",
            "name": "set",
            "memberof": "_.memoize.Cache",
            "params": [
                {
                    "name": "key",
                    "description": "The key of the value to cache.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value to cache.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the cache object.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1283,
            "description": "Creates a cache object to store unique values.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "values",
                    "description": "The values to cache.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1299,
            "description": "Checks if `value` is in `cache` mimicking the return signature of\n`_.indexOf` by returning `0` if the value is found, else `-1`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cache",
                    "description": "The cache to search.",
                    "type": "Object"
                },
                {
                    "name": "value",
                    "description": "The value to search for.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `0` if `value` is found, else `-1`.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1315,
            "description": "Adds `value` to the cache.",
            "access": "private",
            "tagname": "",
            "name": "push",
            "memberof": "SetCache",
            "params": [
                {
                    "name": "value",
                    "description": "The value to cache.",
                    "type": "*"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1334,
            "description": "Copies the values of `source` to `array`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "source",
                    "description": "The array to copy values from.",
                    "type": "Array"
                },
                {
                    "name": "array",
                    "description": "The array to copy values to.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "return": {
                "description": "Returns `array`.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1353,
            "description": "A specialized version of `_.forEach` for arrays without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `array`.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1374,
            "description": "A specialized version of `_.forEachRight` for arrays without support for\ncallback shorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `array`.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1394,
            "description": "A specialized version of `_.every` for arrays without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `true` if all elements pass the predicate check,\n else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1416,
            "description": "A specialized version of `_.filter` for arrays without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new filtered array.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1440,
            "description": "A specialized version of `_.map` for arrays without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new mapped array.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1460,
            "description": "A specialized version of `_.max` for arrays without support for iteratees.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the maximum value.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1481,
            "description": "A specialized version of `_.min` for arrays without support for iteratees.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the minimum value.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1502,
            "description": "A specialized version of `_.reduce` for arrays without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "accumulator",
                    "description": "The initial value.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "initFromArray",
                    "description": "Specify using the first element of `array`\n as the initial value.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the accumulated value.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1527,
            "description": "A specialized version of `_.reduceRight` for arrays without support for\ncallback shorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "accumulator",
                    "description": "The initial value.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "initFromArray",
                    "description": "Specify using the last element of `array`\n as the initial value.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the accumulated value.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1550,
            "description": "A specialized version of `_.some` for arrays without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `true` if any element passes the predicate check,\n else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1572,
            "description": "A specialized version of `_.sum` for arrays without support for iteratees.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to iterate over.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the sum.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1589,
            "description": "Used by `_.defaults` to customize its `_.assign` use.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "objectValue",
                    "description": "The destination object property value.",
                    "type": "*"
                },
                {
                    "name": "sourceValue",
                    "description": "The source object property value.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the value to assign to the destination object.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1601,
            "description": "Used by `_.template` to customize its `_.assign` use.\n\n**Note:** This function is like `assignDefaults` except that it ignores\ninherited property values when checking if a property is `undefined`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "objectValue",
                    "description": "The destination object property value.",
                    "type": "*"
                },
                {
                    "name": "sourceValue",
                    "description": "The source object property value.",
                    "type": "*"
                },
                {
                    "name": "key",
                    "description": "The key associated with the object and source values.",
                    "type": "String"
                },
                {
                    "name": "object",
                    "description": "The destination object.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the value to assign to the destination object.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1620,
            "description": "A specialized version of `_.assign` for customizing assigned values without\nsupport for argument juggling, multiple sources, and `this` binding `customizer`\nfunctions.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The destination object.",
                    "type": "Object"
                },
                {
                    "name": "source",
                    "description": "The source object.",
                    "type": "Object"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize assigned values.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1651,
            "description": "The base implementation of `_.assign` without support for argument juggling,\nmultiple sources, and `customizer` functions.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The destination object.",
                    "type": "Object"
                },
                {
                    "name": "source",
                    "description": "The source object.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1666,
            "description": "The base implementation of `_.at` without support for string collections\nand individual key arguments.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object"
                },
                {
                    "name": "props",
                    "description": "The property names or indexes of elements to pick.",
                    "type": "Number[]|string[]"
                }
            ],
            "return": {
                "description": "Returns the new array of picked elements.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1693,
            "description": "Copies properties of `source` to `object`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "source",
                    "description": "The object to copy properties from.",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "The property names to copy.",
                    "type": "Array"
                },
                {
                    "name": "object",
                    "description": "The object to copy properties to.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1715,
            "description": "The base implementation of `_.callback` which supports specifying the\nnumber of arguments to provide to `func`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The value to convert to a callback.",
                    "type": "*",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `func`.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "argCount",
                    "description": "The number of arguments to provide to `func`.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the callback.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1743,
            "description": "The base implementation of `_.clone` without support for argument juggling\nand `this` binding `customizer` functions.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to clone.",
                    "type": "*"
                },
                {
                    "name": "isDeep",
                    "description": "Specify a deep clone.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "customizer",
                    "description": "The function to customize cloning values.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "key",
                    "description": "The key of `value`.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "object",
                    "description": "The object `value` belongs to.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "stackA",
                    "description": "Tracks traversed source objects.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                },
                {
                    "name": "stackB",
                    "description": "Associates clones with source counterparts.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "return": {
                "description": "Returns the cloned value.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1810,
            "description": "The base implementation of `_.create` without support for assigning\nproperties to the created object.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "prototype",
                    "description": "The object to inherit from.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new object.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1830,
            "description": "The base implementation of `_.delay` and `_.defer` which accepts an index\nof where to slice the arguments to provide to `func`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to delay.",
                    "type": "Function"
                },
                {
                    "name": "wait",
                    "description": "The number of milliseconds to delay invocation.",
                    "type": "Number"
                },
                {
                    "name": "args",
                    "description": "The arguments provide to `func`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the timer id.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1847,
            "description": "The base implementation of `_.difference` which accepts a single array\nof values to exclude.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "values",
                    "description": "The values to exclude.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the new array of filtered values.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1894,
            "description": "The base implementation of `_.forEach` without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `collection`.",
                "type": "Array|Object|string"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1905,
            "description": "The base implementation of `_.forEachRight` without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `collection`.",
                "type": "Array|Object|string"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1916,
            "description": "The base implementation of `_.every` without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `true` if all elements pass the predicate check,\n else `false`",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1935,
            "description": "The base implementation of `_.fill` without an iteratee call guard.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to fill.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "The value to fill `array` with.",
                    "type": "*"
                },
                {
                    "name": "start",
                    "description": "The start position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "end",
                    "description": "The end position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "array.length"
                }
            ],
            "return": {
                "description": "Returns `array`.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1965,
            "description": "The base implementation of `_.filter` without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new filtered array.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 1984,
            "description": "The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\nwithout support for callback shorthands and `this` binding, which iterates\nover `collection` using the provided `eachFunc`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to search.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "eachFunc",
                    "description": "The function to iterate over `collection`.",
                    "type": "Function"
                },
                {
                    "name": "retKey",
                    "description": "Specify returning the key of the found element\n instead of the element itself.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the found element or its key, else `undefined`.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2008,
            "description": "The base implementation of `_.flatten` with added support for restricting\nflattening and specifying the start index.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to flatten.",
                    "type": "Array"
                },
                {
                    "name": "isDeep",
                    "description": "Specify a deep flatten.",
                    "type": "Boolean"
                },
                {
                    "name": "isStrict",
                    "description": "Restrict flattening to arrays and `arguments` objects.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Returns the new flattened array.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2046,
            "description": "The base implementation of `baseForIn` and `baseForOwn` which iterates\nover `object` properties returned by `keysFunc` invoking `iteratee` for\neach property. Iteratee functions may exit iteration early by explicitly\nreturning `false`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "keysFunc",
                    "description": "The function to get the keys of `object`.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2060,
            "description": "This function is like `baseFor` except that it iterates over properties\nin the opposite order.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "keysFunc",
                    "description": "The function to get the keys of `object`.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2072,
            "description": "The base implementation of `_.forIn` without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2085,
            "description": "The base implementation of `_.forOwn` without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2098,
            "description": "The base implementation of `_.forOwnRight` without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2111,
            "description": "The base implementation of `_.functions` which creates an array of\n`object` function property names filtered from those provided.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to inspect.",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "The property names to filter.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the new array of filtered property names.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2135,
            "description": "The base implementation of `get` without support for string paths\nand default values.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                },
                {
                    "name": "path",
                    "description": "The path of the property to get.",
                    "type": "Array"
                },
                {
                    "name": "pathKey",
                    "description": "The key representation of path.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the resolved value.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2161,
            "description": "The base implementation of `_.isEqual` without support for `this` binding\n`customizer` functions.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to compare.",
                    "type": "*"
                },
                {
                    "name": "other",
                    "description": "The other value to compare.",
                    "type": "*"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize comparing values.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "isLoose",
                    "description": "Specify performing partial comparisons.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "stackA",
                    "description": "Tracks traversed `value` objects.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "stackB",
                    "description": "Tracks traversed `other` objects.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if the values are equivalent, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2192,
            "description": "A specialized version of `baseIsEqual` for arrays and objects which performs\ndeep comparisons and tracks traversed objects enabling objects with circular\nreferences to be compared.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to compare.",
                    "type": "Object"
                },
                {
                    "name": "other",
                    "description": "The other object to compare.",
                    "type": "Object"
                },
                {
                    "name": "equalFunc",
                    "description": "The function to determine equivalents of values.",
                    "type": "Function"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize comparing objects.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "isLoose",
                    "description": "Specify performing partial comparisons.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "stackA",
                    "description": "Tracks traversed `value` objects.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                },
                {
                    "name": "stackB",
                    "description": "Tracks traversed `other` objects.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "return": {
                "description": "Returns `true` if the objects are equivalent, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2270,
            "description": "The base implementation of `_.isMatch` without support for callback\nshorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to inspect.",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "The source property names to match.",
                    "type": "Array"
                },
                {
                    "name": "values",
                    "description": "The source values to match.",
                    "type": "Array"
                },
                {
                    "name": "strictCompareFlags",
                    "description": "Strict comparison flags for source values.",
                    "type": "Array"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize comparing objects.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if `object` is a match, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2316,
            "description": "The base implementation of `_.map` without support for callback shorthands\nand `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new mapped array.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2336,
            "description": "The base implementation of `_.matches` which does not clone `source`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "source",
                    "description": "The object of property values to match.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2376,
            "description": "The base implementation of `_.matchesProperty` which does not which does\nnot clone `value`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "path",
                    "description": "The path of the property to get.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value to compare.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2411,
            "description": "The base implementation of `_.merge` without support for argument juggling,\nmultiple sources, and `this` binding `customizer` functions.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The destination object.",
                    "type": "Object"
                },
                {
                    "name": "source",
                    "description": "The source object.",
                    "type": "Object"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize merging properties.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "stackA",
                    "description": "Tracks traversed source objects.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                },
                {
                    "name": "stackB",
                    "description": "Associates values with source counterparts.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2459,
            "description": "A specialized version of `baseMerge` for arrays and objects which performs\ndeep merges and tracks traversed objects enabling objects with circular\nreferences to be merged.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The destination object.",
                    "type": "Object"
                },
                {
                    "name": "source",
                    "description": "The source object.",
                    "type": "Object"
                },
                {
                    "name": "key",
                    "description": "The key of the value to merge.",
                    "type": "String"
                },
                {
                    "name": "mergeFunc",
                    "description": "The function to merge values.",
                    "type": "Function"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize merging properties.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "stackA",
                    "description": "Tracks traversed source objects.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                },
                {
                    "name": "stackB",
                    "description": "Associates values with source counterparts.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "return": {
                "description": "Returns `true` if the objects are equivalent, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2517,
            "description": "The base implementation of `_.property` without support for deep paths.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "key",
                    "description": "The key of the property to get.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2530,
            "description": "A specialized version of `baseProperty` which supports deep paths.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "path",
                    "description": "The path of the property to get.",
                    "type": "Array|string"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2545,
            "description": "The base implementation of `_.pullAt` without support for individual\nindex arguments and capturing the removed elements.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to modify.",
                    "type": "Array"
                },
                {
                    "name": "indexes",
                    "description": "The indexes of elements to remove.",
                    "type": "Number[]"
                }
            ],
            "return": {
                "description": "Returns `array`.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2566,
            "description": "The base implementation of `_.random` without support for argument juggling\nand returning floating-point numbers.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "min",
                    "description": "The minimum possible value.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The maximum possible value.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the random number.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2579,
            "description": "The base implementation of `_.reduce` and `_.reduceRight` without support\nfor callback shorthands and `this` binding, which iterates over `collection`\nusing the provided `eachFunc`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "accumulator",
                    "description": "The initial value.",
                    "type": "*"
                },
                {
                    "name": "initFromCollection",
                    "description": "Specify using the first or last element\n of `collection` as the initial value.",
                    "type": "Boolean"
                },
                {
                    "name": "eachFunc",
                    "description": "The function to iterate over `collection`.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the accumulated value.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2602,
            "description": "The base implementation of `setData` without support for hot loop detection.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to associate metadata with.",
                    "type": "Function"
                },
                {
                    "name": "data",
                    "description": "The metadata.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `func`.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2615,
            "description": "The base implementation of `_.slice` without an iteratee call guard.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to slice.",
                    "type": "Array"
                },
                {
                    "name": "start",
                    "description": "The start position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "end",
                    "description": "The end position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "array.length"
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2646,
            "description": "The base implementation of `_.some` without support for callback shorthands\nand `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `true` if any element passes the predicate check,\n else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2666,
            "description": "The base implementation of `_.sortBy` which uses `comparer` to define\nthe sort order of `array` and replaces criteria objects with their\ncorresponding values.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to sort.",
                    "type": "Array"
                },
                {
                    "name": "comparer",
                    "description": "The function to define sort order.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `array`.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2686,
            "description": "The base implementation of `_.sortByOrder` without param guards.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratees",
                    "description": "The iteratees to sort by.",
                    "type": "Function[]|Object[]|string[]"
                },
                {
                    "name": "orders",
                    "description": "The sort orders of `iteratees`.",
                    "type": "Boolean[]"
                }
            ],
            "return": {
                "description": "Returns the new sorted array.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2711,
            "description": "The base implementation of `_.sum` without support for callback shorthands\nand `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the sum.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2728,
            "description": "The base implementation of `_.uniq` without support for callback shorthands\nand `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new duplicate-value-free array.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2780,
            "description": "The base implementation of `_.values` and `_.valuesIn` which creates an\narray of `object` property values corresponding to the property names\nof `props`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "The property names to get values for.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the array of property values.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2801,
            "description": "The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\nand `_.takeWhile` without support for callback shorthands and `this` binding.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "isDrop",
                    "description": "Specify dropping elements instead of taking them.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "fromRight",
                    "description": "Specify iterating from right to left.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2822,
            "description": "The base implementation of `wrapperValue` which returns the result of\nperforming a sequence of actions on the unwrapped `value`, where each\nsuccessive action is supplied the return value of the previous.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The unwrapped value.",
                    "type": "*"
                },
                {
                    "name": "actions",
                    "description": "Actions to peform to resolve the unwrapped value.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the resolved value.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2850,
            "description": "Performs a binary search of `array` to determine the index at which `value`\nshould be inserted into `array` in order to maintain its sort order.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The sorted array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "The value to evaluate.",
                    "type": "*"
                },
                {
                    "name": "retHighest",
                    "description": "Specify returning the highest qualified index.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the index at which `value` should be inserted\n into `array`.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2881,
            "description": "This function is like `binaryIndex` except that it invokes `iteratee` for\n`value` and each element of `array` to compute their sort ranking. The\niteratee is invoked with one argument; (value).",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The sorted array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "The value to evaluate.",
                    "type": "*"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "retHighest",
                    "description": "Specify returning the highest qualified index.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the index at which `value` should be inserted\n into `array`.",
                "type": "Number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2923,
            "description": "A specialized version of `baseCallback` which only supports `this` binding\nand specifying the number of arguments to provide to `func`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to bind.",
                    "type": "Function"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `func`.",
                    "type": "*"
                },
                {
                    "name": "argCount",
                    "description": "The number of arguments to provide to `func`.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the callback.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2959,
            "description": "Creates a clone of the given array buffer.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "buffer",
                    "description": "The array buffer to clone.",
                    "type": "ArrayBuffer"
                }
            ],
            "return": {
                "description": "Returns the cloned array buffer.",
                "type": "ArrayBuffer"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 2989,
            "description": "Creates an array that is the composition of partially applied arguments,\nplaceholders, and provided arguments into a single array of arguments.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "args",
                    "description": "The provided arguments.",
                    "type": "Array|Object"
                },
                {
                    "name": "partials",
                    "description": "The arguments to prepend to those provided.",
                    "type": "Array"
                },
                {
                    "name": "holders",
                    "description": "The `partials` placeholder indexes.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the new array of composed arguments.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3019,
            "description": "This function is like `composeArgs` except that the arguments composition\nis tailored for `_.partialRight`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "args",
                    "description": "The provided arguments.",
                    "type": "Array|Object"
                },
                {
                    "name": "partials",
                    "description": "The arguments to append to those provided.",
                    "type": "Array"
                },
                {
                    "name": "holders",
                    "description": "The `partials` placeholder indexes.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the new array of composed arguments.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3051,
            "description": "Creates a function that aggregates a collection, creating an accumulator\nobject composed from the results of running each element in the collection\nthrough an iteratee.\n\n**Note:** This function is used to create `_.countBy`, `_.groupBy`, `_.indexBy`,\nand `_.partition`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "setter",
                    "description": "The function to set keys and values of the accumulator object.",
                    "type": "Function"
                },
                {
                    "name": "initializer",
                    "description": "The function to initialize the accumulator object.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new aggregator function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3086,
            "description": "Creates a function that assigns properties of source object(s) to a given\ndestination object.\n\n**Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "assigner",
                    "description": "The function to assign values.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new assigner function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3125,
            "description": "Creates a `baseEach` or `baseEachRight` function.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "eachFunc",
                    "description": "The function to iterate over a collection.",
                    "type": "Function"
                },
                {
                    "name": "fromRight",
                    "description": "Specify iterating from right to left.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new base function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3151,
            "description": "Creates a base function for `_.forIn` or `_.forInRight`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "fromRight",
                    "description": "Specify iterating from right to left.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new base function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3175,
            "description": "Creates a function that wraps `func` and invokes it with the `this`\nbinding of `thisArg`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to bind.",
                    "type": "Function"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `func`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new bound function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3194,
            "description": "Creates a `Set` cache object to optimize linear searches of large arrays.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "values",
                    "description": "The values to cache.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new cache object if `Set` is supported, else `null`.",
                "type": "Null|Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3205,
            "description": "Creates a function that produces compound words out of the words in a\ngiven string.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "callback",
                    "description": "The function to combine each word.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new compounder function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3227,
            "description": "Creates a function that produces an instance of `Ctor` regardless of\nwhether it was invoked as part of a `new` expression or by `call` or `apply`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "Ctor",
                    "description": "The constructor to wrap.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new wrapped function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3246,
            "description": "Creates a `_.curry` or `_.curryRight` function.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "flag",
                    "description": "The curry bit flag.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Returns the new curry function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3265,
            "description": "Creates a `_.max` or `_.min` function.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "arrayFunc",
                    "description": "The function to get the extremum value from an array.",
                    "type": "Function"
                },
                {
                    "name": "isMin",
                    "description": "Specify returning the minimum, instead of the maximum,\n extremum value.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new extremum function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3298,
            "description": "Creates a `_.find` or `_.findLast` function.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "eachFunc",
                    "description": "The function to iterate over a collection.",
                    "type": "Function"
                },
                {
                    "name": "fromRight",
                    "description": "Specify iterating from right to left.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new find function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3317,
            "description": "Creates a `_.findIndex` or `_.findLastIndex` function.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "fromRight",
                    "description": "Specify iterating from right to left.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new find function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3334,
            "description": "Creates a `_.findKey` or `_.findLastKey` function.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "objectFunc",
                    "description": "The function to iterate over an object.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new find function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3348,
            "description": "Creates a `_.flow` or `_.flowRight` function.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "fromRight",
                    "description": "Specify iterating from right to left.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new flow function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3402,
            "description": "Creates a function for `_.forEach` or `_.forEachRight`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "arrayFunc",
                    "description": "The function to iterate over an array.",
                    "type": "Function"
                },
                {
                    "name": "eachFunc",
                    "description": "The function to iterate over a collection.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new each function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3418,
            "description": "Creates a function for `_.forIn` or `_.forInRight`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "objectFunc",
                    "description": "The function to iterate over an object.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new each function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3434,
            "description": "Creates a function for `_.forOwn` or `_.forOwnRight`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "objectFunc",
                    "description": "The function to iterate over an object.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new each function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3450,
            "description": "Creates a function for `_.padLeft` or `_.padRight`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "fromRight",
                    "description": "Specify padding from the right.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new pad function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3464,
            "description": "Creates a `_.partial` or `_.partialRight` function.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "flag",
                    "description": "The partial bit flag.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Returns the new partial function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3479,
            "description": "Creates a function for `_.reduce` or `_.reduceRight`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "arrayFunc",
                    "description": "The function to iterate over an array.",
                    "type": "Function"
                },
                {
                    "name": "eachFunc",
                    "description": "The function to iterate over a collection.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new each function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3496,
            "description": "Creates a function that wraps `func` and invokes it with optional `this`\nbinding of, partial application, and currying.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function or method name to reference.",
                    "type": "Function|string"
                },
                {
                    "name": "bitmask",
                    "description": "The bitmask of flags. See `createWrapper` for more details.",
                    "type": "Number"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `func`.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "partials",
                    "description": "The arguments to prepend to those provided to the new function.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "holders",
                    "description": "The `partials` placeholder indexes.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "partialsRight",
                    "description": "The arguments to append to those provided to the new function.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "holdersRight",
                    "description": "The `partialsRight` placeholder indexes.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "argPos",
                    "description": "The argument positions of the new function.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "ary",
                    "description": "The arity cap of `func`.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "arity",
                    "description": "The arity of `func`.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new wrapped function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3585,
            "description": "Creates the padding required for `string` based on the given `length`.\nThe `chars` string is truncated if the number of characters exceeds `length`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "string",
                    "description": "The string to create padding for.",
                    "type": "String"
                },
                {
                    "name": "length",
                    "description": "The padding length.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "chars",
                    "description": "The string used as padding.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "' '"
                }
            ],
            "return": {
                "description": "Returns the pad for `string`.",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3607,
            "description": "Creates a function that wraps `func` and invokes it with the optional `this`\nbinding of `thisArg` and the `partials` prepended to those provided to\nthe wrapper.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to partially apply arguments to.",
                    "type": "Function"
                },
                {
                    "name": "bitmask",
                    "description": "The bitmask of flags. See `createWrapper` for more details.",
                    "type": "Number"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `func`.",
                    "type": "*"
                },
                {
                    "name": "partials",
                    "description": "The arguments to prepend to those provided to the new function.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the new bound function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3644,
            "description": "Creates a `_.sortedIndex` or `_.sortedLastIndex` function.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "retHighest",
                    "description": "Specify returning the highest qualified index.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new index function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3660,
            "description": "Creates a function that either curries or invokes `func` with optional\n`this` binding and partially applied arguments.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function or method name to reference.",
                    "type": "Function|string"
                },
                {
                    "name": "bitmask",
                    "description": "The bitmask of flags.\n The bitmask may be composed of the following flags:\n    1 - `_.bind`\n    2 - `_.bindKey`\n    4 - `_.curry` or `_.curryRight` of a bound function\n    8 - `_.curry`\n   16 - `_.curryRight`\n   32 - `_.partial`\n   64 - `_.partialRight`\n  128 - `_.rearg`\n  256 - `_.ary`",
                    "type": "Number"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `func`.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "partials",
                    "description": "The arguments to be partially applied.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "holders",
                    "description": "The `partials` placeholder indexes.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "argPos",
                    "description": "The argument positions of the new function.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "ary",
                    "description": "The arity cap of `func`.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "arity",
                    "description": "The arity of `func`.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new wrapped function.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3725,
            "description": "A specialized version of `baseIsEqualDeep` for arrays with support for\npartial deep comparisons.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to compare.",
                    "type": "Array"
                },
                {
                    "name": "other",
                    "description": "The other array to compare.",
                    "type": "Array"
                },
                {
                    "name": "equalFunc",
                    "description": "The function to determine equivalents of values.",
                    "type": "Function"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize comparing arrays.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "isLoose",
                    "description": "Specify performing partial comparisons.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "stackA",
                    "description": "Tracks traversed `value` objects.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "stackB",
                    "description": "Tracks traversed `other` objects.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if the arrays are equivalent, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3778,
            "description": "A specialized version of `baseIsEqualDeep` for comparing objects of\nthe same `toStringTag`.\n\n**Note:** This function only supports comparing values with tags of\n`Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The object to compare.",
                    "type": "Object"
                },
                {
                    "name": "other",
                    "description": "The other object to compare.",
                    "type": "Object"
                },
                {
                    "name": "tag",
                    "description": "The `toStringTag` of the objects to compare.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if the objects are equivalent, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3818,
            "description": "A specialized version of `baseIsEqualDeep` for objects with support for\npartial deep comparisons.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to compare.",
                    "type": "Object"
                },
                {
                    "name": "other",
                    "description": "The other object to compare.",
                    "type": "Object"
                },
                {
                    "name": "equalFunc",
                    "description": "The function to determine equivalents of values.",
                    "type": "Function"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize comparing values.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "isLoose",
                    "description": "Specify performing partial comparisons.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "stackA",
                    "description": "Tracks traversed `value` objects.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "stackB",
                    "description": "Tracks traversed `other` objects.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if the objects are equivalent, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3883,
            "description": "Gets the extremum value of `collection` invoking `iteratee` for each value\nin `collection` to generate the criterion by which the value is ranked.\nThe `iteratee` is invoked with three arguments: (value, index, collection).",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                },
                {
                    "name": "isMin",
                    "description": "Specify returning the minimum, instead of the\n maximum, extremum value.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the extremum value.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3911,
            "description": "Gets the appropriate \"callback\" function. If the `_.callback` method is\ncustomized this function returns the custom method, otherwise it returns\nthe `baseCallback` function. If arguments are provided the chosen function\nis invoked with them and its result is returned.",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Returns the chosen function or its result.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3926,
            "description": "Gets metadata for `func`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to query.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the metadata for `func`.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3937,
            "description": "Gets the name of `func`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to query.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the function name.",
                "type": "String"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3968,
            "description": "Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\ncustomized this function returns the custom method, otherwise it returns\nthe `baseIndexOf` function. If arguments are provided the chosen function\nis invoked with them and its result is returned.",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Returns the chosen function or its result.",
                "type": "Function|number"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3983,
            "description": "Gets the \"length\" property value of `object`.\n\n**Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\nin Safari on iOS 8.1 ARM64.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the \"length\" value.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 3995,
            "description": "Creates an array of the own symbols of `object`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the array of symbols.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4006,
            "description": "Gets the view, applying any `transforms` to the `start` and `end` positions.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "start",
                    "description": "The start of the view.",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "The end of the view.",
                    "type": "Number"
                },
                {
                    "name": "transforms",
                    "description": "The transformations to apply to the view.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns an object containing the `start` and `end`\n positions of the view.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4034,
            "description": "Initializes an array clone.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to clone.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the initialized clone.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4053,
            "description": "Initializes an object clone.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to clone.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the initialized clone.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4068,
            "description": "Initializes an object clone based on its `toStringTag`.\n\n**Note:** This function only supports cloning values with tags of\n`Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to clone.",
                    "type": "Object"
                },
                {
                    "name": "tag",
                    "description": "The `toStringTag` of the object to clone.",
                    "type": "String"
                },
                {
                    "name": "isDeep",
                    "description": "Specify a deep clone.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the initialized clone.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4107,
            "description": "Invokes the method at `path` on `object`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                },
                {
                    "name": "path",
                    "description": "The path of the method to invoke.",
                    "type": "Array|string"
                },
                {
                    "name": "args",
                    "description": "The arguments to invoke the method with.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the result of the invoked method.",
                "type": "*"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4126,
            "description": "Checks if `value` is a valid array-like index.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                },
                {
                    "name": "length",
                    "description": "The upper bounds of a valid index.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "MAX_SAFE_INTEGER"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is a valid index, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4140,
            "description": "Checks if the provided arguments are from an iteratee call.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The potential iteratee value argument.",
                    "type": "*"
                },
                {
                    "name": "index",
                    "description": "The potential iteratee index or key argument.",
                    "type": "*"
                },
                {
                    "name": "object",
                    "description": "The potential iteratee object argument.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if the arguments are from an iteratee call, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4167,
            "description": "Checks if `value` is a property name and not a property path.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                },
                {
                    "name": "object",
                    "description": "The object to query keys on.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is a property name, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4187,
            "description": "Checks if `func` has a lazy counterpart.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to check.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `true` if `func` has a lazy counterpart, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4199,
            "description": "Checks if `value` is a valid array-like length.\n\n**Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is a valid length, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4212,
            "description": "Checks if `value` is suitable for strict equality comparisons, i.e. `===`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` if suitable for strict\n equality comparisons, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4224,
            "description": "Merges the function metadata of `source` into `data`.\n\nMerging metadata reduces the number of wrappers required to invoke a function.\nThis is possible because methods like `_.bind`, `_.curry`, and `_.partial`\nmay be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\naugment function arguments, making the order in which they are executed important,\npreventing the merging of metadata. However, we make an exception for a safe\ncommon case where curried functions have `_.ary` and or `_.rearg` applied.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "data",
                    "description": "The destination metadata.",
                    "type": "Array"
                },
                {
                    "name": "source",
                    "description": "The source metadata.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns `data`.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4294,
            "description": "A specialized version of `_.pick` that picks `object` properties specified\nby `props`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The source object.",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "The property names to pick.",
                    "type": "String[]"
                }
            ],
            "return": {
                "description": "Returns the new object.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4319,
            "description": "A specialized version of `_.pick` that picks `object` properties `predicate`\nreturns truthy for.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The source object.",
                    "type": "Object"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per iteration.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new object.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4338,
            "description": "Reorder `array` according to the specified indexes where the element at\nthe first index is assigned as the first element, the element at\nthe second index is assigned as the second element, and so on.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "array",
                    "description": "The array to reorder.",
                    "type": "Array"
                },
                {
                    "name": "indexes",
                    "description": "The arranged array indexes.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns `array`.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4360,
            "description": "Sets metadata for `func`.\n\n**Note:** If this function becomes hot, i.e. is invoked a lot in a short\nperiod of time, it will trip its breaker and transition to an identity function\nto avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\nfor more details.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "The function to associate metadata with.",
                    "type": "Function"
                },
                {
                    "name": "data",
                    "description": "The metadata.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `func`.",
                "type": "Function"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4393,
            "description": "A fallback implementation of `_.isPlainObject` which checks if `value`\nis an object created by the `Object` constructor or has a `[[Prototype]]`\nof `null`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is a plain object, else `false`.",
                "type": "Boolean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4425,
            "description": "A fallback implementation of `Object.keys` which creates an array of the\nown enumerable property names of `object`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the array of property names.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4454,
            "description": "Converts `value` to an array-like object if it is not one.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to process.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the array-like object.",
                "type": "Array|Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4471,
            "description": "Converts `value` to an object if it is not one.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to process.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the object.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4482,
            "description": "Converts `value` to property path array if it is not one.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "The value to process.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the property path array.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4500,
            "description": "Creates a clone of `wrapper`.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "wrapper",
                    "description": "The wrapper to clone.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the cloned wrapper.",
                "type": "Object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4515,
            "description": "Creates an array of elements split into groups the length of `size`.\nIf `collection` can't be split evenly, the final chunk will be the remaining\nelements.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to process.",
                    "type": "Array"
                },
                {
                    "name": "size",
                    "description": "The length of each chunk.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new array containing chunks.",
                "type": "Array"
            },
            "example": [
                "\n\n_.chunk(['a', 'b', 'c', 'd'], 2);\n// => [['a', 'b'], ['c', 'd']]\n\n_.chunk(['a', 'b', 'c', 'd'], 3);\n// => [['a', 'b', 'c'], ['d']]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4552,
            "description": "Creates an array with all falsey values removed. The values `false`, `null`,\n`0`, `\"\"`, `undefined`, and `NaN` are falsey.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to compact.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the new array of filtered values.",
                "type": "Array"
            },
            "example": [
                "\n\n_.compact([0, 1, false, 2, '', 3]);\n// => [1, 2, 3]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4581,
            "description": "Creates an array excluding all values of the provided arrays using\n`SameValueZero` for equality comparisons.\n\n**Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\ncomparisons are like strict equality comparisons, e.g. `===`, except that\n`NaN` matches `NaN`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "values",
                    "description": "The arrays of values to exclude.",
                    "type": "...Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of filtered values.",
                "type": "Array"
            },
            "example": [
                "\n\n_.difference([1, 2, 3], [4, 2]);\n// => [1, 3]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4606,
            "description": "Creates a slice of `array` with `n` elements dropped from the beginning.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "n",
                    "description": "The number of elements to drop.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.drop([1, 2, 3]);\n// => [2, 3]\n\n_.drop([1, 2, 3], 2);\n// => [3]\n\n_.drop([1, 2, 3], 5);\n// => []\n\n_.drop([1, 2, 3], 0);\n// => [1, 2, 3]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4641,
            "description": "Creates a slice of `array` with `n` elements dropped from the end.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "n",
                    "description": "The number of elements to drop.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.dropRight([1, 2, 3]);\n// => [1, 2]\n\n_.dropRight([1, 2, 3], 2);\n// => [1]\n\n_.dropRight([1, 2, 3], 5);\n// => []\n\n_.dropRight([1, 2, 3], 0);\n// => [1, 2, 3]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4677,
            "description": "Creates a slice of `array` excluding elements dropped from the end.\nElements are dropped until `predicate` returns falsey. The predicate is\nbound to `thisArg` and invoked with three arguments: (value, index, array).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that match the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.dropRightWhile([1, 2, 3], function(n) {\n  return n > 1;\n});\n// => [1]\n\nvar users = [\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n];\n\n// using the `_.matches` callback shorthand\n_.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n// => ['barney', 'fred']\n\n// using the `_.matchesProperty` callback shorthand\n_.pluck(_.dropRightWhile(users, 'active', false), 'user');\n// => ['barney']\n\n// using the `_.property` callback shorthand\n_.pluck(_.dropRightWhile(users, 'active'), 'user');\n// => ['barney', 'fred', 'pebbles']"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4732,
            "description": "Creates a slice of `array` excluding elements dropped from the beginning.\nElements are dropped until `predicate` returns falsey. The predicate is\nbound to `thisArg` and invoked with three arguments: (value, index, array).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.dropWhile([1, 2, 3], function(n) {\n  return n < 3;\n});\n// => [3]\n\nvar users = [\n  { 'user': 'barney',  'active': false },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': true }\n];\n\n// using the `_.matches` callback shorthand\n_.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n// => ['fred', 'pebbles']\n\n// using the `_.matchesProperty` callback shorthand\n_.pluck(_.dropWhile(users, 'active', false), 'user');\n// => ['pebbles']\n\n// using the `_.property` callback shorthand\n_.pluck(_.dropWhile(users, 'active'), 'user');\n// => ['barney', 'fred', 'pebbles']"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4787,
            "description": "Fills elements of `array` with `value` from `start` up to, but not\nincluding, `end`.\n\n**Note:** This method mutates `array`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to fill.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "The value to fill `array` with.",
                    "type": "*"
                },
                {
                    "name": "start",
                    "description": "The start position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "end",
                    "description": "The end position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "array.length"
                }
            ],
            "return": {
                "description": "Returns `array`.",
                "type": "Array"
            },
            "example": [
                "\n\nvar array = [1, 2, 3];\n\n_.fill(array, 'a');\nconsole.log(array);\n// => ['a', 'a', 'a']\n\n_.fill(Array(3), 2);\n// => [2, 2, 2]\n\n_.fill([4, 6, 8], '*', 1, 2);\n// => [4, '*', 8]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4827,
            "description": "This method is like `_.find` except that it returns the index of the first\nelement `predicate` returns truthy for instead of the element itself.\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to search.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the index of the found element, else `-1`.",
                "type": "Number"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney',  'active': false },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': true }\n];\n\n_.findIndex(users, function(chr) {\n  return chr.user == 'barney';\n});\n// => 0\n\n// using the `_.matches` callback shorthand\n_.findIndex(users, { 'user': 'fred', 'active': false });\n// => 1\n\n// using the `_.matchesProperty` callback shorthand\n_.findIndex(users, 'active', false);\n// => 0\n\n// using the `_.property` callback shorthand\n_.findIndex(users, 'active');\n// => 2"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4877,
            "description": "This method is like `_.findIndex` except that it iterates over elements\nof `collection` from right to left.\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to search.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the index of the found element, else `-1`.",
                "type": "Number"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n];\n\n_.findLastIndex(users, function(chr) {\n  return chr.user == 'pebbles';\n});\n// => 2\n\n// using the `_.matches` callback shorthand\n_.findLastIndex(users, { 'user': 'barney', 'active': true });\n// => 0\n\n// using the `_.matchesProperty` callback shorthand\n_.findLastIndex(users, 'active', false);\n// => 2\n\n// using the `_.property` callback shorthand\n_.findLastIndex(users, 'active');\n// => 0"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4927,
            "description": "Gets the first element of `array`.",
            "static": 1,
            "memberof": "_",
            "alias": "head",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the first element of `array`.",
                "type": "*"
            },
            "example": [
                "\n\n_.first([1, 2, 3]);\n// => 1\n\n_.first([]);\n// => undefined"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4948,
            "description": "Flattens a nested array. If `isDeep` is `true` the array is recursively\nflattened, otherwise it is only flattened a single level.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to flatten.",
                    "type": "Array"
                },
                {
                    "name": "isDeep",
                    "description": "Specify a deep flatten.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new flattened array.",
                "type": "Array"
            },
            "example": [
                "\n\n_.flatten([1, [2, 3, [4]]]);\n// => [1, 2, 3, [4]]\n\n// using `isDeep`\n_.flatten([1, [2, 3, [4]]], true);\n// => [1, 2, 3, 4]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4976,
            "description": "Recursively flattens a nested array.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to recursively flatten.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the new flattened array.",
                "type": "Array"
            },
            "example": [
                "\n\n_.flattenDeep([1, [2, 3, [4]]]);\n// => [1, 2, 3, 4]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 4994,
            "description": "Gets the index at which the first occurrence of `value` is found in `array`\nusing `SameValueZero` for equality comparisons. If `fromIndex` is negative,\nit is used as the offset from the end of `array`. If `array` is sorted\nproviding `true` for `fromIndex` performs a faster binary search.\n\n**Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\ncomparisons are like strict equality comparisons, e.g. `===`, except that\n`NaN` matches `NaN`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to search.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "The value to search for.",
                    "type": "*"
                },
                {
                    "name": "fromIndex",
                    "description": "The index to search from or `true`\n to perform a binary search on a sorted array.",
                    "type": "Boolean|number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Returns the index of the matched value, else `-1`.",
                "type": "Number"
            },
            "example": [
                "\n\n_.indexOf([1, 2, 1, 2], 2);\n// => 1\n\n// using `fromIndex`\n_.indexOf([1, 2, 1, 2], 2, 2);\n// => 3\n\n// performing a binary search\n_.indexOf([1, 1, 2, 2], 2, true);\n// => 2"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5044,
            "description": "Gets all but the last element of `array`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.initial([1, 2, 3]);\n// => [1, 2]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5061,
            "description": "Creates an array of unique values in all provided arrays using `SameValueZero`\nfor equality comparisons.\n\n**Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\ncomparisons are like strict equality comparisons, e.g. `===`, except that\n`NaN` matches `NaN`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "arrays",
                    "description": "The arrays to inspect.",
                    "type": "...Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of shared values.",
                "type": "Array"
            },
            "example": [
                "\n_.intersection([1, 2], [4, 2], [2, 1]);\n// => [2]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5123,
            "description": "Gets the last element of `array`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the last element of `array`.",
                "type": "*"
            },
            "example": [
                "\n\n_.last([1, 2, 3]);\n// => 3"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5141,
            "description": "This method is like `_.indexOf` except that it iterates over elements of\n`array` from right to left.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to search.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "The value to search for.",
                    "type": "*"
                },
                {
                    "name": "fromIndex",
                    "description": "The index to search from\n or `true` to perform a binary search on a sorted array.",
                    "type": "Boolean|number",
                    "optional": true,
                    "optdefault": "array.length-1"
                }
            ],
            "return": {
                "description": "Returns the index of the matched value, else `-1`.",
                "type": "Number"
            },
            "example": [
                "\n\n_.lastIndexOf([1, 2, 1, 2], 2);\n// => 3\n\n// using `fromIndex`\n_.lastIndexOf([1, 2, 1, 2], 2, 2);\n// => 1\n\n// performing a binary search\n_.lastIndexOf([1, 1, 2, 2], 2, true);\n// => 3"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5193,
            "description": "Removes all provided values from `array` using `SameValueZero` for equality\ncomparisons.\n\n**Notes:**\n - Unlike `_.without`, this method mutates `array`\n - [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n   comparisons are like strict equality comparisons, e.g. `===`, except\n   that `NaN` matches `NaN`",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to modify.",
                    "type": "Array"
                },
                {
                    "name": "values",
                    "description": "The values to remove.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `array`.",
                "type": "Array"
            },
            "example": [
                "\n\nvar array = [1, 2, 3, 1, 2, 3];\n\n_.pull(array, 2, 3);\nconsole.log(array);\n// => [1, 1]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5239,
            "description": "Removes elements from `array` corresponding to the given indexes and returns\nan array of the removed elements. Indexes may be specified as an array of\nindexes or as individual arguments.\n\n**Note:** Unlike `_.at`, this method mutates `array`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to modify.",
                    "type": "Array"
                },
                {
                    "name": "indexes",
                    "description": "The indexes of elements to remove,\n specified as individual indexes or arrays of indexes.",
                    "type": "...(number|number[])",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of removed elements.",
                "type": "Array"
            },
            "example": [
                "\n\nvar array = [5, 10, 15, 20];\nvar evens = _.pullAt(array, 1, 3);\n\nconsole.log(array);\n// => [5, 15]\n\nconsole.log(evens);\n// => [10, 20]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5273,
            "description": "Removes all elements from `array` that `predicate` returns truthy for\nand returns an array of the removed elements. The predicate is bound to\n`thisArg` and invoked with three arguments: (value, index, array).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.\n\n**Note:** Unlike `_.filter`, this method mutates `array`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to modify.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of removed elements.",
                "type": "Array"
            },
            "example": [
                "\n\nvar array = [1, 2, 3, 4];\nvar evens = _.remove(array, function(n) {\n  return n % 2 == 0;\n});\n\nconsole.log(array);\n// => [1, 3]\n\nconsole.log(evens);\n// => [2, 4]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5333,
            "description": "Gets all but the first element of `array`.",
            "static": 1,
            "memberof": "_",
            "alias": "tail",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.rest([1, 2, 3]);\n// => [2, 3]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5351,
            "description": "Creates a slice of `array` from `start` up to, but not including, `end`.\n\n**Note:** This method is used instead of `Array#slice` to support node\nlists in IE < 9 and to ensure dense arrays are returned.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to slice.",
                    "type": "Array"
                },
                {
                    "name": "start",
                    "description": "The start position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "end",
                    "description": "The end position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "array.length"
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5377,
            "description": "Uses a binary search to determine the lowest index at which `value` should\nbe inserted into `array` in order to maintain its sort order. If an iteratee\nfunction is provided it is invoked for `value` and each element of `array`\nto compute their sort ranking. The iteratee is bound to `thisArg` and\ninvoked with one argument; (value).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The sorted array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "The value to evaluate.",
                    "type": "*"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the index at which `value` should be inserted\n into `array`.",
                "type": "Number"
            },
            "example": [
                "\n\n_.sortedIndex([30, 50], 40);\n// => 1\n\n_.sortedIndex([4, 4, 5, 5], 5);\n// => 2\n\nvar dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n\n// using an iteratee function\n_.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n  return this.data[word];\n}, dict);\n// => 1\n\n// using the `_.property` callback shorthand\n_.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n// => 1"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5427,
            "description": "This method is like `_.sortedIndex` except that it returns the highest\nindex at which `value` should be inserted into `array` in order to\nmaintain its sort order.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The sorted array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "The value to evaluate.",
                    "type": "*"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the index at which `value` should be inserted\n into `array`.",
                "type": "Number"
            },
            "example": [
                "\n\n_.sortedLastIndex([4, 4, 5, 5], 5);\n// => 4"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5449,
            "description": "Creates a slice of `array` with `n` elements taken from the beginning.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "n",
                    "description": "The number of elements to take.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.take([1, 2, 3]);\n// => [1]\n\n_.take([1, 2, 3], 2);\n// => [1, 2]\n\n_.take([1, 2, 3], 5);\n// => [1, 2, 3]\n\n_.take([1, 2, 3], 0);\n// => []"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5484,
            "description": "Creates a slice of `array` with `n` elements taken from the end.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "n",
                    "description": "The number of elements to take.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.takeRight([1, 2, 3]);\n// => [3]\n\n_.takeRight([1, 2, 3], 2);\n// => [2, 3]\n\n_.takeRight([1, 2, 3], 5);\n// => [1, 2, 3]\n\n_.takeRight([1, 2, 3], 0);\n// => []"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5520,
            "description": "Creates a slice of `array` with elements taken from the end. Elements are\ntaken until `predicate` returns falsey. The predicate is bound to `thisArg`\nand invoked with three arguments: (value, index, array).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.takeRightWhile([1, 2, 3], function(n) {\n  return n > 1;\n});\n// => [2, 3]\n\nvar users = [\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n];\n\n// using the `_.matches` callback shorthand\n_.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n// => ['pebbles']\n\n// using the `_.matchesProperty` callback shorthand\n_.pluck(_.takeRightWhile(users, 'active', false), 'user');\n// => ['fred', 'pebbles']\n\n// using the `_.property` callback shorthand\n_.pluck(_.takeRightWhile(users, 'active'), 'user');\n// => []"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5575,
            "description": "Creates a slice of `array` with elements taken from the beginning. Elements\nare taken until `predicate` returns falsey. The predicate is bound to\n`thisArg` and invoked with three arguments: (value, index, array).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to query.",
                    "type": "Array"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the slice of `array`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.takeWhile([1, 2, 3], function(n) {\n  return n < 3;\n});\n// => [1, 2]\n\nvar users = [\n  { 'user': 'barney',  'active': false },\n  { 'user': 'fred',    'active': false},\n  { 'user': 'pebbles', 'active': true }\n];\n\n// using the `_.matches` callback shorthand\n_.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n// => ['barney']\n\n// using the `_.matchesProperty` callback shorthand\n_.pluck(_.takeWhile(users, 'active', false), 'user');\n// => ['barney', 'fred']\n\n// using the `_.property` callback shorthand\n_.pluck(_.takeWhile(users, 'active'), 'user');\n// => []"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5630,
            "description": "Creates an array of unique values, in order, of the provided arrays using\n`SameValueZero` for equality comparisons.\n\n**Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\ncomparisons are like strict equality comparisons, e.g. `===`, except that\n`NaN` matches `NaN`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "arrays",
                    "description": "The arrays to inspect.",
                    "type": "...Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of combined values.",
                "type": "Array"
            },
            "example": [
                "\n\n_.union([1, 2], [4, 2], [2, 1]);\n// => [1, 2, 4]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5652,
            "description": "Creates a duplicate-free version of an array, using `SameValueZero` for\nequality comparisons, in which only the first occurence of each element\nis kept. Providing `true` for `isSorted` performs a faster search algorithm\nfor sorted arrays. If an iteratee function is provided it is invoked for\neach element in the array to generate the criterion by which uniqueness\nis computed. The `iteratee` is bound to `thisArg` and invoked with three\narguments: (value, index, array).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.\n\n**Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\ncomparisons are like strict equality comparisons, e.g. `===`, except that\n`NaN` matches `NaN`.",
            "static": 1,
            "memberof": "_",
            "alias": "unique",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to inspect.",
                    "type": "Array"
                },
                {
                    "name": "isSorted",
                    "description": "Specify the array is sorted.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function|Object|string",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new duplicate-value-free array.",
                "type": "Array"
            },
            "example": [
                "\n\n_.uniq([2, 1, 2]);\n// => [2, 1]\n\n// using `isSorted`\n_.uniq([1, 1, 2], true);\n// => [1, 2]\n\n// using an iteratee function\n_.uniq([1, 2.5, 1.5, 2], function(n) {\n  return this.floor(n);\n}, Math);\n// => [1, 2.5]\n\n// using the `_.property` callback shorthand\n_.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 1 }, { 'x': 2 }]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5723,
            "description": "This method is like `_.zip` except that it accepts an array of grouped\nelements and creates an array regrouping the elements to their pre-`_.zip`\nconfiguration.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array of grouped elements to process.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the new array of regrouped elements.",
                "type": "Array"
            },
            "example": [
                "\n\nvar zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n// => [['fred', 30, true], ['barney', 40, false]]\n\n_.unzip(zipped);\n// => [['fred', 'barney'], [30, 40], [true, false]]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5752,
            "description": "Creates an array excluding all provided values using `SameValueZero` for\nequality comparisons.\n\n**Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\ncomparisons are like strict equality comparisons, e.g. `===`, except that\n`NaN` matches `NaN`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "array",
                    "description": "The array to filter.",
                    "type": "Array"
                },
                {
                    "name": "values",
                    "description": "The values to exclude.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of filtered values.",
                "type": "Array"
            },
            "example": [
                "\n\n_.without([1, 2, 1, 3], 1, 2);\n// => [3]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5777,
            "description": "Creates an array that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\nof the provided arrays.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "arrays",
                    "description": "The arrays to inspect.",
                    "type": "...Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of values.",
                "type": "Array"
            },
            "example": [
                "\n\n_.xor([1, 2], [4, 2]);\n// => [1, 4]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5806,
            "description": "Creates an array of grouped elements, the first of which contains the first\nelements of the given arrays, the second of which contains the second elements\nof the given arrays, and so on.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "arrays",
                    "description": "The arrays to process.",
                    "type": "...Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of grouped elements.",
                "type": "Array"
            },
            "example": [
                "\n\n_.zip(['fred', 'barney'], [30, 40], [true, false]);\n// => [['fred', 30, true], ['barney', 40, false]]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5823,
            "description": "The inverse of `_.pairs`; this method returns an object composed from arrays\nof property names and values. Provide either a single two dimensional array,\ne.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\nand one of corresponding values.",
            "static": 1,
            "memberof": "_",
            "alias": "object",
            "category": [
                "Array"
            ],
            "params": [
                {
                    "name": "props",
                    "description": "The property names.",
                    "type": "Array"
                },
                {
                    "name": "values",
                    "description": "The property values.",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "return": {
                "description": "Returns the new object.",
                "type": "Object"
            },
            "example": [
                "\n\n_.zipObject([['fred', 30], ['barney', 40]]);\n// => { 'fred': 30, 'barney': 40 }\n\n_.zipObject(['fred', 'barney'], [30, 40]);\n// => { 'fred': 30, 'barney': 40 }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5865,
            "description": "Creates a `lodash` object that wraps `value` with explicit method\nchaining enabled.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Chain"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to wrap.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the new `lodash` wrapper instance.",
                "type": "Object"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney',  'age': 36 },\n  { 'user': 'fred',    'age': 40 },\n  { 'user': 'pebbles', 'age': 1 }\n];\n\nvar youngest = _.chain(users)\n  .sortBy('age')\n  .map(function(chr) {\n    return chr.user + ' is ' + chr.age;\n  })\n  .first()\n  .value();\n// => 'pebbles is 1'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5897,
            "description": "This method invokes `interceptor` and returns `value`. The interceptor is\nbound to `thisArg` and invoked with one argument; (value). The purpose of\nthis method is to \"tap into\" a method chain in order to perform operations\non intermediate results within the chain.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Chain"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to provide to `interceptor`.",
                    "type": "*"
                },
                {
                    "name": "interceptor",
                    "description": "The function to invoke.",
                    "type": "Function"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `interceptor`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `value`.",
                "type": "*"
            },
            "example": [
                "\n\n_([1, 2, 3])\n .tap(function(array) {\n   array.pop();\n })\n .reverse()\n .value();\n// => [2, 1]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5925,
            "description": "This method is like `_.tap` except that it returns the result of `interceptor`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Chain"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to provide to `interceptor`.",
                    "type": "*"
                },
                {
                    "name": "interceptor",
                    "description": "The function to invoke.",
                    "type": "Function"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `interceptor`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the result of `interceptor`.",
                "type": "*"
            },
            "example": [
                "\n\n_('  abc  ')\n .chain()\n .trim()\n .thru(function(value) {\n   return [value];\n })\n .value();\n// => ['abc']"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5950,
            "description": "Enables explicit method chaining on the wrapper object.",
            "name": "chain",
            "memberof": "_",
            "category": [
                "Chain"
            ],
            "return": {
                "description": "Returns the new `lodash` wrapper instance.",
                "type": "Object"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 }\n];\n\n// without explicit chaining\n_(users).first();\n// => { 'user': 'barney', 'age': 36 }\n\n// with explicit chaining\n_(users).chain()\n  .first()\n  .pick('user')\n  .value();\n// => { 'user': 'barney' }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 5979,
            "description": "Executes the chained sequence and returns the wrapped result.",
            "name": "commit",
            "memberof": "_",
            "category": [
                "Chain"
            ],
            "return": {
                "description": "Returns the new `lodash` wrapper instance.",
                "type": "Object"
            },
            "example": [
                "\n\nvar array = [1, 2];\nvar wrapper = _(array).push(3);\n\nconsole.log(array);\n// => [1, 2]\n\nwrapper = wrapper.commit();\nconsole.log(array);\n// => [1, 2, 3]\n\nwrapper.last();\n// => 3\n\nconsole.log(array);\n// => [1, 2, 3]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6008,
            "description": "Creates a clone of the chained sequence planting `value` as the wrapped value.",
            "name": "plant",
            "memberof": "_",
            "category": [
                "Chain"
            ],
            "return": {
                "description": "Returns the new `lodash` wrapper instance.",
                "type": "Object"
            },
            "example": [
                "\n\nvar array = [1, 2];\nvar wrapper = _(array).map(function(value) {\n  return Math.pow(value, 2);\n});\n\nvar other = [3, 4];\nvar otherWrapper = wrapper.plant(other);\n\notherWrapper.value();\n// => [9, 16]\n\nwrapper.value();\n// => [1, 4]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6049,
            "description": "Reverses the wrapped array so the first element becomes the last, the\nsecond element becomes the second to last, and so on.\n\n**Note:** This method mutates the wrapped array.",
            "name": "reverse",
            "memberof": "_",
            "category": [
                "Chain"
            ],
            "return": {
                "description": "Returns the new reversed `lodash` wrapper instance.",
                "type": "Object"
            },
            "example": [
                "\n\nvar array = [1, 2, 3];\n\n_(array).reverse().value()\n// => [3, 2, 1]\n\nconsole.log(array);\n// => [3, 2, 1]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6082,
            "description": "Produces the result of coercing the unwrapped value to a string.",
            "name": "toString",
            "memberof": "_",
            "category": [
                "Chain"
            ],
            "return": {
                "description": "Returns the coerced string value.",
                "type": "String"
            },
            "example": [
                "\n\n_([1, 2, 3]).toString();\n// => '1,2,3'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6098,
            "description": "Executes the chained sequence to extract the unwrapped value.",
            "name": "value",
            "memberof": "_",
            "alias": "run, toJSON, valueOf",
            "category": [
                "Chain"
            ],
            "return": {
                "description": "Returns the resolved unwrapped value.",
                "type": "*"
            },
            "example": [
                "\n\n_([1, 2, 3]).value();\n// => [1, 2, 3]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6117,
            "description": "Creates an array of elements corresponding to the given keys, or indexes,\nof `collection`. Keys may be specified as individual arguments or as arrays\nof keys.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "props",
                    "description": "The property names\n or indexes of elements to pick, specified individually or in arrays.",
                    "type": "...(number|number[]|string|string[])",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new array of picked elements.",
                "type": "Array"
            },
            "example": [
                "\n\n_.at(['a', 'b', 'c'], [0, 2]);\n// => ['a', 'c']\n\n_.at(['barney', 'fred', 'pebbles'], 0, 2);\n// => ['barney', 'pebbles']"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6145,
            "description": "Creates an object composed of keys generated from the results of running\neach element of `collection` through `iteratee`. The corresponding value\nof each key is the number of times the key was returned by `iteratee`.\nThe `iteratee` is bound to `thisArg` and invoked with three arguments:\n(value, index|key, collection).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the composed aggregate object.",
                "type": "Object"
            },
            "example": [
                "\n\n_.countBy([4.3, 6.1, 6.4], function(n) {\n  return Math.floor(n);\n});\n// => { '4': 1, '6': 2 }\n\n_.countBy([4.3, 6.1, 6.4], function(n) {\n  return this.floor(n);\n}, Math);\n// => { '4': 1, '6': 2 }\n\n_.countBy(['one', 'two', 'three'], 'length');\n// => { '3': 2, '5': 1 }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6190,
            "description": "Checks if `predicate` returns truthy for **all** elements of `collection`.\nThe predicate is bound to `thisArg` and invoked with three arguments:\n(value, index|key, collection).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "alias": "all",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if all elements pass the predicate check,\n else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.every([true, 1, null, 'yes'], Boolean);\n// => false\n\nvar users = [\n  { 'user': 'barney', 'active': false },\n  { 'user': 'fred',   'active': false }\n];\n\n// using the `_.matches` callback shorthand\n_.every(users, { 'user': 'barney', 'active': false });\n// => false\n\n// using the `_.matchesProperty` callback shorthand\n_.every(users, 'active', false);\n// => true\n\n// using the `_.property` callback shorthand\n_.every(users, 'active');\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6249,
            "description": "Iterates over elements of `collection`, returning an array of all elements\n`predicate` returns truthy for. The predicate is bound to `thisArg` and\ninvoked with three arguments: (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "alias": "select",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new filtered array.",
                "type": "Array"
            },
            "example": [
                "\n\n_.filter([4, 5, 6], function(n) {\n  return n % 2 == 0;\n});\n// => [4, 6]\n\nvar users = [\n  { 'user': 'barney', 'age': 36, 'active': true },\n  { 'user': 'fred',   'age': 40, 'active': false }\n];\n\n// using the `_.matches` callback shorthand\n_.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n// => ['barney']\n\n// using the `_.matchesProperty` callback shorthand\n_.pluck(_.filter(users, 'active', false), 'user');\n// => ['fred']\n\n// using the `_.property` callback shorthand\n_.pluck(_.filter(users, 'active'), 'user');\n// => ['barney']"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6304,
            "description": "Iterates over elements of `collection`, returning the first element\n`predicate` returns truthy for. The predicate is bound to `thisArg` and\ninvoked with three arguments: (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "alias": "detect",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to search.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the matched element, else `undefined`.",
                "type": "*"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney',  'age': 36, 'active': true },\n  { 'user': 'fred',    'age': 40, 'active': false },\n  { 'user': 'pebbles', 'age': 1,  'active': true }\n];\n\n_.result(_.find(users, function(chr) {\n  return chr.age < 40;\n}), 'user');\n// => 'barney'\n\n// using the `_.matches` callback shorthand\n_.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n// => 'pebbles'\n\n// using the `_.matchesProperty` callback shorthand\n_.result(_.find(users, 'active', false), 'user');\n// => 'fred'\n\n// using the `_.property` callback shorthand\n_.result(_.find(users, 'active'), 'user');\n// => 'barney'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6356,
            "description": "This method is like `_.find` except that it iterates over elements of\n`collection` from right to left.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to search.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the matched element, else `undefined`.",
                "type": "*"
            },
            "example": [
                "\n\n_.findLast([1, 2, 3, 4], function(n) {\n  return n % 2 == 1;\n});\n// => 3"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6377,
            "description": "Performs a deep comparison between each element in `collection` and the\nsource object, returning the first element that has equivalent property\nvalues.\n\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\nnumbers, `Object` objects, regexes, and strings. Objects are compared by\ntheir own, not inherited, enumerable properties. For comparing a single\nown or inherited property value see `_.matchesProperty`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to search.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "source",
                    "description": "The object of property values to match.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the matched element, else `undefined`.",
                "type": "*"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney', 'age': 36, 'active': true },\n  { 'user': 'fred',   'age': 40, 'active': false }\n];\n\n_.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n// => 'barney'\n\n_.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n// => 'fred'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6410,
            "description": "Iterates over elements of `collection` invoking `iteratee` for each element.\nThe `iteratee` is bound to `thisArg` and invoked with three arguments:\n(value, index|key, collection). Iteratee functions may exit iteration early\nby explicitly returning `false`.\n\n**Note:** As with other \"Collections\" methods, objects with a \"length\" property\nare iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\nmay be used for object iteration.",
            "static": 1,
            "memberof": "_",
            "alias": "each",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `collection`.",
                "type": "Array|Object|string"
            },
            "example": [
                "\n\n_([1, 2]).forEach(function(n) {\n  console.log(n);\n}).value();\n// => logs each value from left to right and returns the array\n\n_.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n  console.log(n, key);\n});\n// => logs each value-key pair and returns the object (iteration order is not guaranteed)"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6442,
            "description": "This method is like `_.forEach` except that it iterates over elements of\n`collection` from right to left.",
            "static": 1,
            "memberof": "_",
            "alias": "eachRight",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `collection`.",
                "type": "Array|Object|string"
            },
            "example": [
                "\n\n_([1, 2]).forEachRight(function(n) {\n  console.log(n);\n}).value();\n// => logs each value from right to left and returns the array"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6463,
            "description": "Creates an object composed of keys generated from the results of running\neach element of `collection` through `iteratee`. The corresponding value\nof each key is an array of the elements responsible for generating the key.\nThe `iteratee` is bound to `thisArg` and invoked with three arguments:\n(value, index|key, collection).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the composed aggregate object.",
                "type": "Object"
            },
            "example": [
                "\n\n_.groupBy([4.2, 6.1, 6.4], function(n) {\n  return Math.floor(n);\n});\n// => { '4': [4.2], '6': [6.1, 6.4] }\n\n_.groupBy([4.2, 6.1, 6.4], function(n) {\n  return this.floor(n);\n}, Math);\n// => { '4': [4.2], '6': [6.1, 6.4] }\n\n// using the `_.property` callback shorthand\n_.groupBy(['one', 'two', 'three'], 'length');\n// => { '3': ['one', 'two'], '5': ['three'] }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6513,
            "description": "Checks if `value` is in `collection` using `SameValueZero` for equality\ncomparisons. If `fromIndex` is negative, it is used as the offset from\nthe end of `collection`.\n\n**Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\ncomparisons are like strict equality comparisons, e.g. `===`, except that\n`NaN` matches `NaN`.",
            "static": 1,
            "memberof": "_",
            "alias": "contains, include",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to search.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "target",
                    "description": "The value to search for.",
                    "type": "*"
                },
                {
                    "name": "fromIndex",
                    "description": "The index to search from.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.reduce`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns `true` if a matching element is found, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.includes([1, 2, 3], 1);\n// => true\n\n_.includes([1, 2, 3], 1, 2);\n// => false\n\n_.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n// => true\n\n_.includes('pebbles', 'eb');\n// => true"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6564,
            "description": "Creates an object composed of keys generated from the results of running\neach element of `collection` through `iteratee`. The corresponding value\nof each key is the last element responsible for generating the key. The\niteratee function is bound to `thisArg` and invoked with three arguments:\n(value, index|key, collection).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the composed aggregate object.",
                "type": "Object"
            },
            "example": [
                "\n\nvar keyData = [\n  { 'dir': 'left', 'code': 97 },\n  { 'dir': 'right', 'code': 100 }\n];\n\n_.indexBy(keyData, 'dir');\n// => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\n_.indexBy(keyData, function(object) {\n  return String.fromCharCode(object.code);\n});\n// => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\n_.indexBy(keyData, function(object) {\n  return this.fromCharCode(object.code);\n}, String);\n// => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6614,
            "description": "Invokes the method at `path` on each element in `collection`, returning\nan array of the results of each invoked method. Any additional arguments\nare provided to each invoked method. If `methodName` is a function it is\ninvoked for, and `this` bound to, each element in `collection`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "path",
                    "description": "The path of the method to invoke or\n the function invoked per iteration.",
                    "type": "Array|Function|string"
                },
                {
                    "name": "args",
                    "description": "The arguments to invoke the method with.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the array of results.",
                "type": "Array"
            },
            "example": [
                "\n\n_.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n// => [[1, 5, 7], [1, 2, 3]]\n\n_.invoke([123, 456], String.prototype.split, '');\n// => [['1', '2', '3'], ['4', '5', '6']]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6650,
            "description": "Creates an array of values by running each element in `collection` through\n`iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\narguments: (value, index|key, collection).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.\n\nMany lodash methods are guarded to work as interatees for methods like\n`_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\nThe guarded methods are:\n`ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`, `drop`,\n`dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`, `parseInt`,\n`slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimLeft`,\n`trimRight`, `trunc`, `random`, `range`, `sample`, `some`, `uniq`, and `words`",
            "static": 1,
            "memberof": "_",
            "alias": "collect",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new mapped array.",
                "type": "Array"
            },
            "example": [
                "\n\nfunction timesThree(n) {\n  return n * 3;\n}\n\n_.map([1, 2], timesThree);\n// => [3, 6]\n\n_.map({ 'a': 1, 'b': 2 }, timesThree);\n// => [3, 6] (iteration order is not guaranteed)\n\nvar users = [\n  { 'user': 'barney' },\n  { 'user': 'fred' }\n];\n\n// using the `_.property` callback shorthand\n_.map(users, 'user');\n// => ['barney', 'fred']"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6711,
            "description": "Creates an array of elements split into two groups, the first of which\ncontains elements `predicate` returns truthy for, while the second of which\ncontains elements `predicate` returns falsey for. The predicate is bound\nto `thisArg` and invoked with three arguments: (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the array of grouped elements.",
                "type": "Array"
            },
            "example": [
                "\n\n_.partition([1, 2, 3], function(n) {\n  return n % 2;\n});\n// => [[1, 3], [2]]\n\n_.partition([1.2, 2.3, 3.4], function(n) {\n  return this.floor(n) % 2;\n}, Math);\n// => [[1.2, 3.4], [2.3]]\n\nvar users = [\n  { 'user': 'barney',  'age': 36, 'active': false },\n  { 'user': 'fred',    'age': 40, 'active': true },\n  { 'user': 'pebbles', 'age': 1,  'active': false }\n];\n\nvar mapper = function(array) {\n  return _.pluck(array, 'user');\n};\n\n// using the `_.matches` callback shorthand\n_.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n// => [['pebbles'], ['barney', 'fred']]\n\n// using the `_.matchesProperty` callback shorthand\n_.map(_.partition(users, 'active', false), mapper);\n// => [['barney', 'pebbles'], ['fred']]\n\n// using the `_.property` callback shorthand\n_.map(_.partition(users, 'active'), mapper);\n// => [['fred'], ['barney', 'pebbles']]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6774,
            "description": "Gets the property value of `path` from all elements in `collection`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "path",
                    "description": "The path of the property to pluck.",
                    "type": "Array|string"
                }
            ],
            "return": {
                "description": "Returns the property values.",
                "type": "Array"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 }\n];\n\n_.pluck(users, 'user');\n// => ['barney', 'fred']\n\nvar userIndex = _.indexBy(users, 'user');\n_.pluck(userIndex, 'age');\n// => [36, 40] (iteration order is not guaranteed)"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6801,
            "description": "Reduces `collection` to a value which is the accumulated result of running\neach element in `collection` through `iteratee`, where each successive\ninvocation is supplied the return value of the previous. If `accumulator`\nis not provided the first element of `collection` is used as the initial\nvalue. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n(accumulator, value, index|key, collection).\n\nMany lodash methods are guarded to work as interatees for methods like\n`_.reduce`, `_.reduceRight`, and `_.transform`.\n\nThe guarded methods are:\n`assign`, `defaults`, `includes`, `merge`, `sortByAll`, and `sortByOrder`",
            "static": 1,
            "memberof": "_",
            "alias": "foldl, inject",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "accumulator",
                    "description": "The initial value.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the accumulated value.",
                "type": "*"
            },
            "example": [
                "\n\n_.reduce([1, 2], function(total, n) {\n  return total + n;\n});\n// => 3\n\n_.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n  result[key] = n * 3;\n  return result;\n}, {});\n// => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6839,
            "description": "This method is like `_.reduce` except that it iterates over elements of\n`collection` from right to left.",
            "static": 1,
            "memberof": "_",
            "alias": "foldr",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "accumulator",
                    "description": "The initial value.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the accumulated value.",
                "type": "*"
            },
            "example": [
                "\n\nvar array = [[0, 1], [2, 3], [4, 5]];\n\n_.reduceRight(array, function(flattened, other) {\n  return flattened.concat(other);\n}, []);\n// => [4, 5, 2, 3, 0, 1]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6863,
            "description": "The opposite of `_.filter`; this method returns the elements of `collection`\nthat `predicate` does **not** return truthy for.\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new filtered array.",
                "type": "Array"
            },
            "example": [
                "\n\n_.reject([1, 2, 3, 4], function(n) {\n  return n % 2 == 0;\n});\n// => [1, 3]\n\nvar users = [\n  { 'user': 'barney', 'age': 36, 'active': false },\n  { 'user': 'fred',   'age': 40, 'active': true }\n];\n\n// using the `_.matches` callback shorthand\n_.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n// => ['barney']\n\n// using the `_.matchesProperty` callback shorthand\n_.pluck(_.reject(users, 'active', false), 'user');\n// => ['fred']\n\n// using the `_.property` callback shorthand\n_.pluck(_.reject(users, 'active'), 'user');\n// => ['barney']"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6918,
            "description": "Gets a random element or `n` random elements from a collection.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to sample.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "n",
                    "description": "The number of elements to sample.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the random sample(s).",
                "type": "*"
            },
            "example": [
                "\n\n_.sample([1, 2, 3, 4]);\n// => 2\n\n_.sample([1, 2, 3, 4], 2);\n// => [3, 1]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6947,
            "description": "Creates an array of shuffled values, using a version of the\n[Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to shuffle.",
                    "type": "Array|Object|string"
                }
            ],
            "return": {
                "description": "Returns the new shuffled array.",
                "type": "Array"
            },
            "example": [
                "\n\n_.shuffle([1, 2, 3, 4]);\n// => [4, 1, 3, 2]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 6978,
            "description": "Gets the size of `collection` by returning its length for array-like\nvalues or the number of own enumerable properties for objects.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to inspect.",
                    "type": "Array|Object|string"
                }
            ],
            "return": {
                "description": "Returns the size of `collection`.",
                "type": "Number"
            },
            "example": [
                "\n\n_.size([1, 2, 3]);\n// => 3\n\n_.size({ 'a': 1, 'b': 2 });\n// => 2\n\n_.size('pebbles');\n// => 7"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7003,
            "description": "Checks if `predicate` returns truthy for **any** element of `collection`.\nThe function returns as soon as it finds a passing value and does not iterate\nover the entire collection. The predicate is bound to `thisArg` and invoked\nwith three arguments: (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "alias": "any",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if any element passes the predicate check,\n else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.some([null, 0, 'yes', false], Boolean);\n// => true\n\nvar users = [\n  { 'user': 'barney', 'active': true },\n  { 'user': 'fred',   'active': false }\n];\n\n// using the `_.matches` callback shorthand\n_.some(users, { 'user': 'barney', 'active': false });\n// => false\n\n// using the `_.matchesProperty` callback shorthand\n_.some(users, 'active', false);\n// => true\n\n// using the `_.property` callback shorthand\n_.some(users, 'active');\n// => true"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7063,
            "description": "Creates an array of elements, sorted in ascending order by the results of\nrunning each element in a collection through `iteratee`. This method performs\na stable sort, that is, it preserves the original sort order of equal elements.\nThe `iteratee` is bound to `thisArg` and invoked with three arguments:\n(value, index|key, collection).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new sorted array.",
                "type": "Array"
            },
            "example": [
                "\n\n_.sortBy([1, 2, 3], function(n) {\n  return Math.sin(n);\n});\n// => [3, 1, 2]\n\n_.sortBy([1, 2, 3], function(n) {\n  return this.sin(n);\n}, Math);\n// => [3, 1, 2]\n\nvar users = [\n  { 'user': 'fred' },\n  { 'user': 'pebbles' },\n  { 'user': 'barney' }\n];\n\n// using the `_.property` callback shorthand\n_.pluck(_.sortBy(users, 'user'), 'user');\n// => ['barney', 'fred', 'pebbles']"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7127,
            "description": "This method is like `_.sortBy` except that it can sort by multiple iteratees\nor property names.\n\nIf a property name is provided for an iteratee the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf an object is provided for an iteratee the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratees",
                    "description": "The iteratees to sort by, specified as individual values or arrays of values.",
                    "type": "...(Function|Function[]|Object|Object[]|string|string[])"
                }
            ],
            "return": {
                "description": "Returns the new sorted array.",
                "type": "Array"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'fred',   'age': 48 },\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 42 },\n  { 'user': 'barney', 'age': 34 }\n];\n\n_.map(_.sortByAll(users, ['user', 'age']), _.values);\n// => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\n_.map(_.sortByAll(users, 'user', function(chr) {\n  return Math.floor(chr.age / 10);\n}), _.values);\n// => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7173,
            "description": "This method is like `_.sortByAll` except that it allows specifying the\nsort orders of the iteratees to sort by. A truthy value in `orders` will\nsort the corresponding property name in ascending order while a falsey\nvalue will sort it in descending order.\n\nIf a property name is provided for an iteratee the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf an object is provided for an iteratee the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratees",
                    "description": "The iteratees to sort by.",
                    "type": "Function[]|Object[]|string[]"
                },
                {
                    "name": "orders",
                    "description": "The sort orders of `iteratees`.",
                    "type": "Boolean[]"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.reduce`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new sorted array.",
                "type": "Array"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'fred',   'age': 48 },\n  { 'user': 'barney', 'age': 34 },\n  { 'user': 'fred',   'age': 42 },\n  { 'user': 'barney', 'age': 36 }\n];\n\n// sort by `user` in ascending order and by `age` in descending order\n_.map(_.sortByOrder(users, ['user', 'age'], [true, false]), _.values);\n// => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7223,
            "description": "Performs a deep comparison between each element in `collection` and the\nsource object, returning an array of all elements that have equivalent\nproperty values.\n\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\nnumbers, `Object` objects, regexes, and strings. Objects are compared by\ntheir own, not inherited, enumerable properties. For comparing a single\nown or inherited property value see `_.matchesProperty`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Collection"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to search.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "source",
                    "description": "The object of property values to match.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new filtered array.",
                "type": "Array"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n  { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n];\n\n_.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n// => ['barney']\n\n_.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n// => ['fred']"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7258,
            "description": "Gets the number of milliseconds that have elapsed since the Unix epoch\n(1 January 1970 00:00:00 UTC).",
            "static": 1,
            "memberof": "_",
            "category": [
                "Date"
            ],
            "example": [
                "\n\n_.defer(function(stamp) {\n  console.log(_.now() - stamp);\n}, _.now());\n// => logs the number of milliseconds it took for the deferred function to be invoked"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7278,
            "description": "The opposite of `_.before`; this method creates a function that invokes\n`func` once it is called `n` or more times.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "n",
                    "description": "The number of calls before `func` is invoked.",
                    "type": "Number"
                },
                {
                    "name": "func",
                    "description": "The function to restrict.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new restricted function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar saves = ['profile', 'settings'];\n\nvar done = _.after(saves.length, function() {\n  console.log('done saving!');\n});\n\n_.forEach(saves, function(type) {\n  asyncSave({ 'type': type, 'complete': done });\n});\n// => logs 'done saving!' after the two async saves have completed"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7319,
            "description": "Creates a function that accepts up to `n` arguments ignoring any\nadditional arguments.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to cap arguments for.",
                    "type": "Function"
                },
                {
                    "name": "n",
                    "description": "The arity cap.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "func.length"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\n_.map(['6', '8', '10'], _.ary(parseInt, 1));\n// => [6, 8, 10]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7343,
            "description": "Creates a function that invokes `func`, with the `this` binding and arguments\nof the created function, while it is called less than `n` times. Subsequent\ncalls to the created function return the result of the last `func` invocation.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "n",
                    "description": "The number of calls at which `func` is no longer invoked.",
                    "type": "Number"
                },
                {
                    "name": "func",
                    "description": "The function to restrict.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new restricted function.",
                "type": "Function"
            },
            "example": [
                "\n\njQuery('#add').on('click', _.before(5, addContactToList));\n// => allows adding up to 4 contacts to the list"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7381,
            "description": "Creates a function that invokes `func` with the `this` binding of `thisArg`\nand prepends any additional `_.bind` arguments to those provided to the\nbound function.\n\nThe `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\nmay be used as a placeholder for partially applied arguments.\n\n**Note:** Unlike native `Function#bind` this method does not set the \"length\"\nproperty of bound functions.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to bind.",
                    "type": "Function"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `func`.",
                    "type": "*"
                },
                {
                    "name": "partials",
                    "description": "The arguments to be partially applied.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new bound function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar greet = function(greeting, punctuation) {\n  return greeting + ' ' + this.user + punctuation;\n};\n\nvar object = { 'user': 'fred' };\n\nvar bound = _.bind(greet, object, 'hi');\nbound('!');\n// => 'hi fred!'\n\n// using placeholders\nvar bound = _.bind(greet, object, _, '!');\nbound('hi');\n// => 'hi fred!'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7425,
            "description": "Binds methods of an object to the object itself, overwriting the existing\nmethod. Method names may be specified as individual arguments or as arrays\nof method names. If no method names are provided all enumerable function\nproperties, own and inherited, of `object` are bound.\n\n**Note:** This method does not set the \"length\" property of bound functions.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to bind and assign the bound methods to.",
                    "type": "Object"
                },
                {
                    "name": "methodNames",
                    "description": "The object method names to bind,\n specified as individual method names or arrays of method names.",
                    "type": "...(string|string[])",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\nvar view = {\n  'label': 'docs',\n  'onClick': function() {\n    console.log('clicked ' + this.label);\n  }\n};\n\n_.bindAll(view);\njQuery('#docs').on('click', view.onClick);\n// => logs 'clicked docs' when the element is clicked"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7466,
            "description": "Creates a function that invokes the method at `object[key]` and prepends\nany additional `_.bindKey` arguments to those provided to the bound function.\n\nThis method differs from `_.bind` by allowing bound functions to reference\nmethods that may be redefined or don't yet exist.\nSee [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\nfor more details.\n\nThe `_.bindKey.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object the method belongs to.",
                    "type": "Object"
                },
                {
                    "name": "key",
                    "description": "The key of the method.",
                    "type": "String"
                },
                {
                    "name": "partials",
                    "description": "The arguments to be partially applied.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new bound function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar object = {\n  'user': 'fred',\n  'greet': function(greeting, punctuation) {\n    return greeting + ' ' + this.user + punctuation;\n  }\n};\n\nvar bound = _.bindKey(object, 'greet', 'hi');\nbound('!');\n// => 'hi fred!'\n\nobject.greet = function(greeting, punctuation) {\n  return greeting + 'ya ' + this.user + punctuation;\n};\n\nbound('!');\n// => 'hiya fred!'\n\n// using placeholders\nvar bound = _.bindKey(object, 'greet', _, '!');\nbound('hi');\n// => 'hiya fred!'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7519,
            "description": "Creates a function that accepts one or more arguments of `func` that when\ncalled either invokes `func` returning its result, if all `func` arguments\nhave been provided, or returns a function that accepts one or more of the\nremaining `func` arguments, and so on. The arity of `func` may be specified\nif `func.length` is not sufficient.\n\nThe `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\nmay be used as a placeholder for provided arguments.\n\n**Note:** This method does not set the \"length\" property of curried functions.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to curry.",
                    "type": "Function"
                },
                {
                    "name": "arity",
                    "description": "The arity of `func`.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "func.length"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new curried function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar abc = function(a, b, c) {\n  return [a, b, c];\n};\n\nvar curried = _.curry(abc);\n\ncurried(1)(2)(3);\n// => [1, 2, 3]\n\ncurried(1, 2)(3);\n// => [1, 2, 3]\n\ncurried(1, 2, 3);\n// => [1, 2, 3]\n\n// using placeholders\ncurried(1)(_, 3)(2);\n// => [1, 2, 3]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7561,
            "description": "This method is like `_.curry` except that arguments are applied to `func`\nin the manner of `_.partialRight` instead of `_.partial`.\n\nThe `_.curryRight.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for provided arguments.\n\n**Note:** This method does not set the \"length\" property of curried functions.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to curry.",
                    "type": "Function"
                },
                {
                    "name": "arity",
                    "description": "The arity of `func`.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "func.length"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new curried function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar abc = function(a, b, c) {\n  return [a, b, c];\n};\n\nvar curried = _.curryRight(abc);\n\ncurried(3)(2)(1);\n// => [1, 2, 3]\n\ncurried(2, 3)(1);\n// => [1, 2, 3]\n\ncurried(1, 2, 3);\n// => [1, 2, 3]\n\n// using placeholders\ncurried(3)(1, _)(2);\n// => [1, 2, 3]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7600,
            "description": "Creates a function that delays invoking `func` until after `wait` milliseconds\nhave elapsed since the last time it was invoked. The created function comes\nwith a `cancel` method to cancel delayed invocations. Provide an options\nobject to indicate that `func` should be invoked on the leading and/or\ntrailing edge of the `wait` timeout. Subsequent calls to the debounced\nfunction return the result of the last `func` invocation.\n\n**Note:** If `leading` and `trailing` options are `true`, `func` is invoked\non the trailing edge of the timeout only if the the debounced function is\ninvoked more than once during the `wait` timeout.\n\nSee [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\nfor details over the differences between `_.debounce` and `_.throttle`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to debounce.",
                    "type": "Function"
                },
                {
                    "name": "wait",
                    "description": "The number of milliseconds to delay.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "options",
                    "description": "The options object.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "leading",
                            "description": "Specify invoking on the leading\n edge of the timeout.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "maxWait",
                            "description": "The maximum time `func` is allowed to be\n delayed before it is invoked.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "trailing",
                            "description": "Specify invoking on the trailing\n edge of the timeout.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Returns the new debounced function.",
                "type": "Function"
            },
            "example": [
                "\n\n// avoid costly calculations while the window size is in flux\njQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\n// invoke `sendMail` when the click event is fired, debouncing subsequent calls\njQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n  'leading': true,\n  'trailing': false\n}));\n\n// ensure `batchLog` is invoked once after 1 second of debounced calls\nvar source = new EventSource('/stream');\njQuery(source).on('message', _.debounce(batchLog, 250, {\n  'maxWait': 1000\n}));\n\n// cancel a debounced call\nvar todoChanges = _.debounce(batchLog, 1000);\nObject.observe(models.todo, todoChanges);\n\nObject.observe(models, function(changes) {\n  if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n    todoChanges.cancel();\n  }\n}, ['delete']);\n\n// ...at some point `models.todo` is changed\nmodels.todo.completed = true;\n\n// ...before 1 second has passed `models.todo` is deleted\n// which cancels the debounced `todoChanges` call\ndelete models.todo;"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7776,
            "description": "Defers invoking the `func` until the current call stack has cleared. Any\nadditional arguments are provided to `func` when it is invoked.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to defer.",
                    "type": "Function"
                },
                {
                    "name": "args",
                    "description": "The arguments to invoke the function with.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the timer id.",
                "type": "Number"
            },
            "example": [
                "\n\n_.defer(function(text) {\n  console.log(text);\n}, 'deferred');\n// logs 'deferred' after one or more milliseconds"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7797,
            "description": "Invokes `func` after `wait` milliseconds. Any additional arguments are\nprovided to `func` when it is invoked.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to delay.",
                    "type": "Function"
                },
                {
                    "name": "wait",
                    "description": "The number of milliseconds to delay invocation.",
                    "type": "Number"
                },
                {
                    "name": "args",
                    "description": "The arguments to invoke the function with.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the timer id.",
                "type": "Number"
            },
            "example": [
                "\n\n_.delay(function(text) {\n  console.log(text);\n}, 1000, 'later');\n// => logs 'later' after one second"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7819,
            "description": "Creates a function that returns the result of invoking the provided\nfunctions with the `this` binding of the created function, where each\nsuccessive invocation is supplied the return value of the previous.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "funcs",
                    "description": "Functions to invoke.",
                    "type": "...Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nfunction square(n) {\n  return n * n;\n}\n\nvar addSquare = _.flow(_.add, square);\naddSquare(1, 2);\n// => 9"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7841,
            "description": "This method is like `_.flow` except that it creates a function that\ninvokes the provided functions from right to left.",
            "static": 1,
            "memberof": "_",
            "alias": "backflow, compose",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "funcs",
                    "description": "Functions to invoke.",
                    "type": "...Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nfunction square(n) {\n  return n * n;\n}\n\nvar addSquare = _.flowRight(square, _.add);\naddSquare(1, 2);\n// => 9"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7863,
            "description": "Creates a function that memoizes the result of `func`. If `resolver` is\nprovided it determines the cache key for storing the result based on the\narguments provided to the memoized function. By default, the first argument\nprovided to the memoized function is coerced to a string and used as the\ncache key. The `func` is invoked with the `this` binding of the memoized\nfunction.\n\n**Note:** The cache is exposed as the `cache` property on the memoized\nfunction. Its creation may be customized by replacing the `_.memoize.Cache`\nconstructor with one whose instances implement the [`Map`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\nmethod interface of `get`, `has`, and `set`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to have its output memoized.",
                    "type": "Function"
                },
                {
                    "name": "resolver",
                    "description": "The function to resolve the cache key.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new memoizing function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar upperCase = _.memoize(function(string) {\n  return string.toUpperCase();\n});\n\nupperCase('fred');\n// => 'FRED'\n\n// modifying the result cache\nupperCase.cache.set('fred', 'BARNEY');\nupperCase('fred');\n// => 'BARNEY'\n\n// replacing `_.memoize.Cache`\nvar object = { 'user': 'fred' };\nvar other = { 'user': 'barney' };\nvar identity = _.memoize(_.identity);\n\nidentity(object);\n// => { 'user': 'fred' }\nidentity(other);\n// => { 'user': 'fred' }\n\n_.memoize.Cache = WeakMap;\nvar identity = _.memoize(_.identity);\n\nidentity(object);\n// => { 'user': 'fred' }\nidentity(other);\n// => { 'user': 'barney' }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7934,
            "description": "Creates a function that negates the result of the predicate `func`. The\n`func` predicate is invoked with the `this` binding and arguments of the\ncreated function.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "predicate",
                    "description": "The predicate to negate.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nfunction isEven(n) {\n  return n % 2 == 0;\n}\n\n_.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n// => [1, 3, 5]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7962,
            "description": "Creates a function that is restricted to invoking `func` once. Repeat calls\nto the function return the value of the first call. The `func` is invoked\nwith the `this` binding and arguments of the created function.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to restrict.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new restricted function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar initialize = _.once(createApplication);\ninitialize();\ninitialize();\n// `initialize` invokes `createApplication` once"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 7983,
            "description": "Creates a function that invokes `func` with `partial` arguments prepended\nto those provided to the new function. This method is like `_.bind` except\nit does **not** alter the `this` binding.\n\nThe `_.partial.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.\n\n**Note:** This method does not set the \"length\" property of partially\napplied functions.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to partially apply arguments to.",
                    "type": "Function"
                },
                {
                    "name": "partials",
                    "description": "The arguments to be partially applied.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new partially applied function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar greet = function(greeting, name) {\n  return greeting + ' ' + name;\n};\n\nvar sayHelloTo = _.partial(greet, 'hello');\nsayHelloTo('fred');\n// => 'hello fred'\n\n// using placeholders\nvar greetFred = _.partial(greet, _, 'fred');\ngreetFred('hi');\n// => 'hi fred'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8017,
            "description": "This method is like `_.partial` except that partially applied arguments\nare appended to those provided to the new function.\n\nThe `_.partialRight.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.\n\n**Note:** This method does not set the \"length\" property of partially\napplied functions.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to partially apply arguments to.",
                    "type": "Function"
                },
                {
                    "name": "partials",
                    "description": "The arguments to be partially applied.",
                    "type": "...*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new partially applied function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar greet = function(greeting, name) {\n  return greeting + ' ' + name;\n};\n\nvar greetFred = _.partialRight(greet, 'fred');\ngreetFred('hi');\n// => 'hi fred'\n\n// using placeholders\nvar sayHelloTo = _.partialRight(greet, 'hello', _);\nsayHelloTo('fred');\n// => 'hello fred'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8050,
            "description": "Creates a function that invokes `func` with arguments arranged according\nto the specified indexes where the argument value at the first index is\nprovided as the first argument, the argument value at the second index is\nprovided as the second argument, and so on.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to rearrange arguments for.",
                    "type": "Function"
                },
                {
                    "name": "indexes",
                    "description": "The arranged argument indexes,\n specified as individual indexes or arrays of indexes.",
                    "type": "...(number|number[])"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar rearged = _.rearg(function(a, b, c) {\n  return [a, b, c];\n}, 2, 0, 1);\n\nrearged('b', 'c', 'a')\n// => ['a', 'b', 'c']\n\nvar map = _.rearg(_.map, [1, 0]);\nmap(function(n) {\n  return n * 3;\n}, [1, 2, 3]);\n// => [3, 6, 9]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8082,
            "description": "Creates a function that invokes `func` with the `this` binding of the\ncreated function and arguments from `start` and beyond provided as an array.\n\n**Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to apply a rest parameter to.",
                    "type": "Function"
                },
                {
                    "name": "start",
                    "description": "The start position of the rest parameter.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "func.length-1"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar say = _.restParam(function(what, names) {\n  return what + ' ' + _.initial(names).join(', ') +\n    (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n});\n\nsay('hello', 'fred', 'barney', 'pebbles');\n// => 'hello fred, barney, & pebbles'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8133,
            "description": "Creates a function that invokes `func` with the `this` binding of the created\nfunction and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\n**Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to spread arguments over.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar say = _.spread(function(who, what) {\n  return who + ' says ' + what;\n});\n\nsay(['fred', 'hello']);\n// => 'fred says hello'\n\n// with a Promise\nvar numbers = Promise.all([\n  Promise.resolve(40),\n  Promise.resolve(36)\n]);\n\nnumbers.then(_.spread(function(x, y) {\n  return x + y;\n}));\n// => a Promise of 76"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8173,
            "description": "Creates a function that only invokes `func` at most once per every `wait`\nmilliseconds. The created function comes with a `cancel` method to cancel\ndelayed invocations. Provide an options object to indicate that `func`\nshould be invoked on the leading and/or trailing edge of the `wait` timeout.\nSubsequent calls to the throttled function return the result of the last\n`func` call.\n\n**Note:** If `leading` and `trailing` options are `true`, `func` is invoked\non the trailing edge of the timeout only if the the throttled function is\ninvoked more than once during the `wait` timeout.\n\nSee [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\nfor details over the differences between `_.throttle` and `_.debounce`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to throttle.",
                    "type": "Function"
                },
                {
                    "name": "wait",
                    "description": "The number of milliseconds to throttle invocations to.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "options",
                    "description": "The options object.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "leading",
                            "description": "Specify invoking on the leading\n edge of the timeout.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "trailing",
                            "description": "Specify invoking on the trailing\n edge of the timeout.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Returns the new throttled function.",
                "type": "Function"
            },
            "example": [
                "\n\n// avoid excessively updating the position while scrolling\njQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\n// invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\njQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n  'trailing': false\n}));\n\n// cancel a trailing throttled call\njQuery(window).on('popstate', throttled.cancel);"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8231,
            "description": "Creates a function that provides `value` to the wrapper function as its\nfirst argument. Any additional arguments provided to the function are\nappended to those provided to the wrapper function. The wrapper is invoked\nwith the `this` binding of the created function.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Function"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to wrap.",
                    "type": "*"
                },
                {
                    "name": "wrapper",
                    "description": "The wrapper function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar p = _.wrap(_.escape, function(func, text) {\n  return '<p>' + func(text) + '</p>';\n});\n\np('fred, barney, & pebbles');\n// => '<p>fred, barney, &amp; pebbles</p>'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8259,
            "description": "Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\notherwise they are assigned by reference. If `customizer` is provided it is\ninvoked to produce the cloned values. If `customizer` returns `undefined`\ncloning is handled by the method instead. The `customizer` is bound to\n`thisArg` and invoked with two argument; (value [, index|key, object]).\n\n**Note:** This method is loosely based on the\n[structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\nThe enumerable properties of `arguments` objects and objects created by\nconstructors other than `Object` are cloned to plain `Object` objects. An\nempty object is returned for uncloneable values such as functions, DOM nodes,\nMaps, Sets, and WeakMaps.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to clone.",
                    "type": "*"
                },
                {
                    "name": "isDeep",
                    "description": "Specify a deep clone.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "customizer",
                    "description": "The function to customize cloning values.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `customizer`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the cloned value.",
                "type": "*"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney' },\n  { 'user': 'fred' }\n];\n\nvar shallow = _.clone(users);\nshallow[0] === users[0];\n// => true\n\nvar deep = _.clone(users, true);\ndeep[0] === users[0];\n// => false\n\n// using a customizer callback\nvar el = _.clone(document.body, function(value) {\n  if (_.isElement(value)) {\n    return value.cloneNode(false);\n  }\n});\n\nel === document.body\n// => false\nel.nodeName\n// => BODY\nel.childNodes.length;\n// => 0"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8323,
            "description": "Creates a deep clone of `value`. If `customizer` is provided it is invoked\nto produce the cloned values. If `customizer` returns `undefined` cloning\nis handled by the method instead. The `customizer` is bound to `thisArg`\nand invoked with two argument; (value [, index|key, object]).\n\n**Note:** This method is loosely based on the\n[structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\nThe enumerable properties of `arguments` objects and objects created by\nconstructors other than `Object` are cloned to plain `Object` objects. An\nempty object is returned for uncloneable values such as functions, DOM nodes,\nMaps, Sets, and WeakMaps.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to deep clone.",
                    "type": "*"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize cloning values.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `customizer`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the deep cloned value.",
                "type": "*"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney' },\n  { 'user': 'fred' }\n];\n\nvar deep = _.cloneDeep(users);\ndeep[0] === users[0];\n// => false\n\n// using a customizer callback\nvar el = _.cloneDeep(document.body, function(value) {\n  if (_.isElement(value)) {\n    return value.cloneNode(true);\n  }\n});\n\nel === document.body\n// => false\nel.nodeName\n// => BODY\nel.childNodes.length;\n// => 20"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8373,
            "description": "Checks if `value` is classified as an `arguments` object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isArguments(function() { return arguments; }());\n// => true\n\n_.isArguments([1, 2, 3]);\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8394,
            "description": "Checks if `value` is classified as an `Array` object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isArray([1, 2, 3]);\n// => true\n\n_.isArray(function() { return arguments; }());\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8414,
            "description": "Checks if `value` is classified as a boolean primitive or object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isBoolean(false);\n// => true\n\n_.isBoolean(null);\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8434,
            "description": "Checks if `value` is classified as a `Date` object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isDate(new Date);\n// => true\n\n_.isDate('Mon April 23 2012');\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8454,
            "description": "Checks if `value` is a DOM element.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is a DOM element, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isElement(document.body);\n// => true\n\n_.isElement('<body>');\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8481,
            "description": "Checks if `value` is empty. A value is considered empty unless it is an\n`arguments` object, array, string, or jQuery-like collection with a length\ngreater than `0` or an object with own enumerable properties.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to inspect.",
                    "type": "Array|Object|string"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is empty, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isEmpty(null);\n// => true\n\n_.isEmpty(true);\n// => true\n\n_.isEmpty(1);\n// => true\n\n_.isEmpty([1, 2, 3]);\n// => false\n\n_.isEmpty({ 'a': 1 });\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8520,
            "description": "Performs a deep comparison between two values to determine if they are\nequivalent. If `customizer` is provided it is invoked to compare values.\nIf `customizer` returns `undefined` comparisons are handled by the method\ninstead. The `customizer` is bound to `thisArg` and invoked with three\narguments: (value, other [, index|key]).\n\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\nnumbers, `Object` objects, regexes, and strings. Objects are compared by\ntheir own, not inherited, enumerable properties. Functions and DOM nodes\nare **not** supported. Provide a customizer function to extend support\nfor comparing other values.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to compare.",
                    "type": "*"
                },
                {
                    "name": "other",
                    "description": "The other value to compare.",
                    "type": "*"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize value comparisons.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `customizer`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if the values are equivalent, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\nvar object = { 'user': 'fred' };\nvar other = { 'user': 'fred' };\n\nobject == other;\n// => false\n\n_.isEqual(object, other);\n// => true\n\n// using a customizer callback\nvar array = ['hello', 'goodbye'];\nvar other = ['hi', 'goodbye'];\n\n_.isEqual(array, other, function(value, other) {\n  if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n    return true;\n  }\n});\n// => true"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8572,
            "description": "Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n`SyntaxError`, `TypeError`, or `URIError` object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is an error object, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isError(new Error);\n// => true\n\n_.isError(Error);\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8593,
            "description": "Checks if `value` is a finite primitive number.\n\n**Note:** This method is based on [`Number.isFinite`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is a finite number, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isFinite(10);\n// => true\n\n_.isFinite('10');\n// => false\n\n_.isFinite(true);\n// => false\n\n_.isFinite(Object(10));\n// => false\n\n_.isFinite(Infinity);\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8624,
            "description": "Checks if `value` is classified as a `Function` object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isFunction(_);\n// => true\n\n_.isFunction(/abc/);\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8647,
            "description": "Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n(e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is an object, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isObject({});\n// => true\n\n_.isObject([1, 2, 3]);\n// => true\n\n_.isObject(1);\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8674,
            "description": "Performs a deep comparison between `object` and `source` to determine if\n`object` contains equivalent property values. If `customizer` is provided\nit is invoked to compare values. If `customizer` returns `undefined`\ncomparisons are handled by the method instead. The `customizer` is bound\nto `thisArg` and invoked with three arguments: (value, other, index|key).\n\n**Note:** This method supports comparing properties of arrays, booleans,\n`Date` objects, numbers, `Object` objects, regexes, and strings. Functions\nand DOM nodes are **not** supported. Provide a customizer function to extend\nsupport for comparing other values.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to inspect.",
                    "type": "Object"
                },
                {
                    "name": "source",
                    "description": "The object of property values to match.",
                    "type": "Object"
                },
                {
                    "name": "customizer",
                    "description": "The function to customize value comparisons.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `customizer`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if `object` is a match, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\nvar object = { 'user': 'fred', 'age': 40 };\n\n_.isMatch(object, { 'age': 40 });\n// => true\n\n_.isMatch(object, { 'age': 36 });\n// => false\n\n// using a customizer callback\nvar object = { 'greeting': 'hello' };\nvar source = { 'greeting': 'hi' };\n\n_.isMatch(object, source, function(value, other) {\n  return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n});\n// => true"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8743,
            "description": "Checks if `value` is `NaN`.\n\n**Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\nwhich returns `true` for `undefined` and other non-numeric values.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is `NaN`, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isNaN(NaN);\n// => true\n\n_.isNaN(new Number(NaN));\n// => true\n\nisNaN(undefined);\n// => true\n\n_.isNaN(undefined);\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8774,
            "description": "Checks if `value` is a native function.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is a native function, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isNative(Array.prototype.push);\n// => true\n\n_.isNative(_);\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8800,
            "description": "Checks if `value` is `null`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is `null`, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isNull(null);\n// => true\n\n_.isNull(void 0);\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8820,
            "description": "Checks if `value` is classified as a `Number` primitive or object.\n\n**Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\nas numbers, use the `_.isFinite` method.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isNumber(8.4);\n// => true\n\n_.isNumber(NaN);\n// => true\n\n_.isNumber('8.4');\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8846,
            "description": "Checks if `value` is a plain object, that is, an object created by the\n`Object` constructor or one with a `[[Prototype]]` of `null`.\n\n**Note:** This method assumes objects created by the `Object` constructor\nhave no inherited enumerable properties.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is a plain object, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.a = 1;\n}\n\n_.isPlainObject(new Foo);\n// => false\n\n_.isPlainObject([1, 2, 3]);\n// => false\n\n_.isPlainObject({ 'x': 0, 'y': 0 });\n// => true\n\n_.isPlainObject(Object.create(null));\n// => true"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8888,
            "description": "Checks if `value` is classified as a `RegExp` object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isRegExp(/abc/);\n// => true\n\n_.isRegExp('/abc/');\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8908,
            "description": "Checks if `value` is classified as a `String` primitive or object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isString('abc');\n// => true\n\n_.isString(1);\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8928,
            "description": "Checks if `value` is classified as a typed array.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is correctly classified, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isTypedArray(new Uint8Array);\n// => true\n\n_.isTypedArray([]);\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8948,
            "description": "Checks if `value` is `undefined`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if `value` is `undefined`, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.isUndefined(void 0);\n// => true\n\n_.isUndefined(null);\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8968,
            "description": "Converts `value` to an array.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to convert.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the converted array.",
                "type": "Array"
            },
            "example": [
                "\n\n(function() {\n  return _.toArray(arguments).slice(1);\n}(1, 2, 3));\n// => [2, 3]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 8994,
            "description": "Converts `value` to a plain object flattening inherited enumerable\nproperties of `value` to own properties of the plain object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Lang"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to convert.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the converted plain object.",
                "type": "Object"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.assign({ 'a': 1 }, new Foo);\n// => { 'a': 1, 'b': 2 }\n\n_.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n// => { 'a': 1, 'b': 2, 'c': 3 }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9023,
            "description": "Assigns own enumerable properties of source object(s) to the destination\nobject. Subsequent sources overwrite property assignments of previous sources.\nIf `customizer` is provided it is invoked to produce the assigned values.\nThe `customizer` is bound to `thisArg` and invoked with five arguments:\n(objectValue, sourceValue, key, object, source).\n\n**Note:** This method mutates `object` and is based on\n[`Object.assign`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).",
            "static": 1,
            "memberof": "_",
            "alias": "extend",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The destination object.",
                    "type": "Object"
                },
                {
                    "name": "sources",
                    "description": "The source objects.",
                    "type": "...Object",
                    "optional": true
                },
                {
                    "name": "customizer",
                    "description": "The function to customize assigned values.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `customizer`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\n_.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n// => { 'user': 'fred', 'age': 40 }\n\n// using a customizer callback\nvar defaults = _.partialRight(_.assign, function(value, other) {\n  return _.isUndefined(value) ? other : value;\n});\n\ndefaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n// => { 'user': 'barney', 'age': 36 }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9062,
            "description": "Creates an object that inherits from the given `prototype` object. If a\n`properties` object is provided its own enumerable properties are assigned\nto the created object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "prototype",
                    "description": "The object to inherit from.",
                    "type": "Object"
                },
                {
                    "name": "properties",
                    "description": "The properties to assign to the object.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new object.",
                "type": "Object"
            },
            "example": [
                "\n\nfunction Shape() {\n  this.x = 0;\n  this.y = 0;\n}\n\nfunction Circle() {\n  Shape.call(this);\n}\n\nCircle.prototype = _.create(Shape.prototype, {\n  'constructor': Circle\n});\n\nvar circle = new Circle;\ncircle instanceof Circle;\n// => true\n\ncircle instanceof Shape;\n// => true"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9104,
            "description": "Assigns own enumerable properties of source object(s) to the destination\nobject for all destination properties that resolve to `undefined`. Once a\nproperty is set, additional values of the same property are ignored.\n\n**Note:** This method mutates `object`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The destination object.",
                    "type": "Object"
                },
                {
                    "name": "sources",
                    "description": "The source objects.",
                    "type": "...Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\n_.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n// => { 'user': 'barney', 'age': 36 }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9131,
            "description": "This method is like `_.find` except that it returns the key of the first\nelement `predicate` returns truthy for instead of the element itself.\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to search.",
                    "type": "Object"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the key of the matched element, else `undefined`.",
                "type": "String|undefined"
            },
            "example": [
                "\n\nvar users = {\n  'barney':  { 'age': 36, 'active': true },\n  'fred':    { 'age': 40, 'active': false },\n  'pebbles': { 'age': 1,  'active': true }\n};\n\n_.findKey(users, function(chr) {\n  return chr.age < 40;\n});\n// => 'barney' (iteration order is not guaranteed)\n\n// using the `_.matches` callback shorthand\n_.findKey(users, { 'age': 1, 'active': true });\n// => 'pebbles'\n\n// using the `_.matchesProperty` callback shorthand\n_.findKey(users, 'active', false);\n// => 'fred'\n\n// using the `_.property` callback shorthand\n_.findKey(users, 'active');\n// => 'barney'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9181,
            "description": "This method is like `_.findKey` except that it iterates over elements of\na collection in the opposite order.\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to search.",
                    "type": "Object"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the key of the matched element, else `undefined`.",
                "type": "String|undefined"
            },
            "example": [
                "\n\nvar users = {\n  'barney':  { 'age': 36, 'active': true },\n  'fred':    { 'age': 40, 'active': false },\n  'pebbles': { 'age': 1,  'active': true }\n};\n\n_.findLastKey(users, function(chr) {\n  return chr.age < 40;\n});\n// => returns `pebbles` assuming `_.findKey` returns `barney`\n\n// using the `_.matches` callback shorthand\n_.findLastKey(users, { 'age': 36, 'active': true });\n// => 'barney'\n\n// using the `_.matchesProperty` callback shorthand\n_.findLastKey(users, 'active', false);\n// => 'fred'\n\n// using the `_.property` callback shorthand\n_.findLastKey(users, 'active');\n// => 'pebbles'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9231,
            "description": "Iterates over own and inherited enumerable properties of an object invoking\n`iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\nwith three arguments: (value, key, object). Iteratee functions may exit\niteration early by explicitly returning `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forIn(new Foo, function(value, key) {\n  console.log(key);\n});\n// => logs 'a', 'b', and 'c' (iteration order is not guaranteed)"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9260,
            "description": "This method is like `_.forIn` except that it iterates over properties of\n`object` in the opposite order.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forInRight(new Foo, function(value, key) {\n  console.log(key);\n});\n// => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9287,
            "description": "Iterates over own enumerable properties of an object invoking `iteratee`\nfor each property. The `iteratee` is bound to `thisArg` and invoked with\nthree arguments: (value, key, object). Iteratee functions may exit iteration\nearly by explicitly returning `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forOwn(new Foo, function(value, key) {\n  console.log(key);\n});\n// => logs 'a' and 'b' (iteration order is not guaranteed)"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9316,
            "description": "This method is like `_.forOwn` except that it iterates over properties of\n`object` in the opposite order.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forOwnRight(new Foo, function(value, key) {\n  console.log(key);\n});\n// => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9343,
            "description": "Creates an array of function property names from all enumerable properties,\nown and inherited, of `object`.",
            "static": 1,
            "memberof": "_",
            "alias": "methods",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to inspect.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new array of property names.",
                "type": "Array"
            },
            "example": [
                "\n\n_.functions(_);\n// => ['after', 'ary', 'assign', ...]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9362,
            "description": "Gets the property value of `path` on `object`. If the resolved value is\n`undefined` the `defaultValue` is used in its place.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                },
                {
                    "name": "path",
                    "description": "The path of the property to get.",
                    "type": "Array|string"
                },
                {
                    "name": "defaultValue",
                    "description": "The value returned if the resolved value is `undefined`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the resolved value.",
                "type": "*"
            },
            "example": [
                "\n\nvar object = { 'a': [{ 'b': { 'c': 3 } }] };\n\n_.get(object, 'a[0].b.c');\n// => 3\n\n_.get(object, ['a', '0', 'b', 'c']);\n// => 3\n\n_.get(object, 'a.b.c', 'default');\n// => 'default'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9391,
            "description": "Checks if `path` is a direct property.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                },
                {
                    "name": "path",
                    "description": "The path to check.",
                    "type": "Array|string"
                }
            ],
            "return": {
                "description": "Returns `true` if `path` is a direct property, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\nvar object = { 'a': { 'b': { 'c': 3 } } };\n\n_.has(object, 'a');\n// => true\n\n_.has(object, 'a.b.c');\n// => true\n\n_.has(object, ['a', 'b', 'c']);\n// => true"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9427,
            "description": "Creates an object composed of the inverted keys and values of `object`.\nIf `object` contains duplicate values, subsequent values overwrite property\nassignments of previous values unless `multiValue` is `true`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to invert.",
                    "type": "Object"
                },
                {
                    "name": "multiValue",
                    "description": "Allow multiple values per key.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new inverted object.",
                "type": "Object"
            },
            "example": [
                "\n\nvar object = { 'a': 1, 'b': 2, 'c': 1 };\n\n_.invert(object);\n// => { '1': 'c', '2': 'b' }\n\n// with `multiValue`\n_.invert(object, true);\n// => { '1': ['a', 'c'], '2': ['b'] }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9477,
            "description": "Creates an array of the own enumerable property names of `object`.\n\n**Note:** Non-object values are coerced to objects. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\nfor more details.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the array of property names.",
                "type": "Array"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.keys(new Foo);\n// => ['a', 'b'] (iteration order is not guaranteed)\n\n_.keys('hi');\n// => ['0', '1']"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9516,
            "description": "Creates an array of the own and inherited enumerable property names of `object`.\n\n**Note:** Non-object values are coerced to objects.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the array of property names.",
                "type": "Array"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.keysIn(new Foo);\n// => ['a', 'b', 'c'] (iteration order is not guaranteed)"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9567,
            "description": "Creates an object with the same keys as `object` and values generated by\nrunning each own enumerable property of `object` through `iteratee`. The\niteratee function is bound to `thisArg` and invoked with three arguments:\n(value, key, object).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked\n per iteration.",
                    "type": "Function|Object|string",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new mapped object.",
                "type": "Object"
            },
            "example": [
                "\n\n_.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n  return n * 3;\n});\n// => { 'a': 3, 'b': 6 }\n\nvar users = {\n  'fred':    { 'user': 'fred',    'age': 40 },\n  'pebbles': { 'user': 'pebbles', 'age': 1 }\n};\n\n// using the `_.property` callback shorthand\n_.mapValues(users, 'age');\n// => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9618,
            "description": "Recursively merges own enumerable properties of the source object(s), that\ndon't resolve to `undefined` into the destination object. Subsequent sources\noverwrite property assignments of previous sources. If `customizer` is\nprovided it is invoked to produce the merged values of the destination and\nsource properties. If `customizer` returns `undefined` merging is handled\nby the method instead. The `customizer` is bound to `thisArg` and invoked\nwith five arguments: (objectValue, sourceValue, key, object, source).",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The destination object.",
                    "type": "Object"
                },
                {
                    "name": "sources",
                    "description": "The source objects.",
                    "type": "...Object",
                    "optional": true
                },
                {
                    "name": "customizer",
                    "description": "The function to customize assigned values.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `customizer`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\nvar users = {\n  'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n};\n\nvar ages = {\n  'data': [{ 'age': 36 }, { 'age': 40 }]\n};\n\n_.merge(users, ages);\n// => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\n// using a customizer callback\nvar object = {\n  'fruits': ['apple'],\n  'vegetables': ['beet']\n};\n\nvar other = {\n  'fruits': ['banana'],\n  'vegetables': ['carrot']\n};\n\n_.merge(object, other, function(a, b) {\n  if (_.isArray(a)) {\n    return a.concat(b);\n  }\n});\n// => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9668,
            "description": "The opposite of `_.pick`; this method creates an object composed of the\nown and inherited enumerable properties of `object` that are not omitted.\nProperty names may be specified as individual arguments or as arrays of\nproperty names. If `predicate` is provided it is invoked for each property\nof `object` omitting the properties `predicate` returns truthy for. The\npredicate is bound to `thisArg` and invoked with three arguments:\n(value, key, object).",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The source object.",
                    "type": "Object"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per\n iteration or property names to omit, specified as individual property\n names or arrays of property names.",
                    "type": "Function|...(string|string[])",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new object.",
                "type": "Object"
            },
            "example": [
                "\n\nvar object = { 'user': 'fred', 'age': 40 };\n\n_.omit(object, 'age');\n// => { 'user': 'fred' }\n\n_.omit(object, _.isNumber);\n// => { 'user': 'fred' }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9710,
            "description": "Creates a two dimensional array of the key-value pairs for `object`,\ne.g. `[[key1, value1], [key2, value2]]`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new array of key-value pairs.",
                "type": "Array"
            },
            "example": [
                "\n\n_.pairs({ 'barney': 36, 'fred': 40 });\n// => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9737,
            "description": "Creates an object composed of the picked `object` properties. Property\nnames may be specified as individual arguments or as arrays of property\nnames. If `predicate` is provided it is invoked for each property of `object`\npicking the properties `predicate` returns truthy for. The predicate is\nbound to `thisArg` and invoked with three arguments: (value, key, object).",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The source object.",
                    "type": "Object"
                },
                {
                    "name": "predicate",
                    "description": "The function invoked per\n iteration or property names to pick, specified as individual property\n names or arrays of property names.",
                    "type": "Function|...(string|string[])",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `predicate`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the new object.",
                "type": "Object"
            },
            "example": [
                "\n\nvar object = { 'user': 'fred', 'age': 40 };\n\n_.pick(object, 'user');\n// => { 'user': 'fred' }\n\n_.pick(object, _.isString);\n// => { 'user': 'fred' }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9772,
            "description": "This method is like `_.get` except that if the resolved value is a function\nit is invoked with the `this` binding of its parent object and its result\nis returned.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                },
                {
                    "name": "path",
                    "description": "The path of the property to resolve.",
                    "type": "Array|string"
                },
                {
                    "name": "defaultValue",
                    "description": "The value returned if the resolved value is `undefined`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the resolved value.",
                "type": "*"
            },
            "example": [
                "\n\nvar object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\n_.result(object, 'a[0].b.c1');\n// => 3\n\n_.result(object, 'a[0].b.c2');\n// => 4\n\n_.result(object, 'a.b.c', 'default');\n// => 'default'\n\n_.result(object, 'a.b.c', _.constant('default'));\n// => 'default'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9813,
            "description": "Sets the property value of `path` on `object`. If a portion of `path`\ndoes not exist it is created.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to augment.",
                    "type": "Object"
                },
                {
                    "name": "path",
                    "description": "The path of the property to set.",
                    "type": "Array|string"
                },
                {
                    "name": "value",
                    "description": "The value to set.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Object"
            },
            "example": [
                "\n\nvar object = { 'a': [{ 'b': { 'c': 3 } }] };\n\n_.set(object, 'a[0].b.c', 4);\nconsole.log(object.a[0].b.c);\n// => 4\n\n_.set(object, 'x[0].y.z', 5);\nconsole.log(object.x[0].y.z);\n// => 5"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9862,
            "description": "An alternative to `_.reduce`; this method transforms `object` to a new\n`accumulator` object which is the result of running each of its own enumerable\nproperties through `iteratee`, with each invocation potentially mutating\nthe `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\nwith four arguments: (accumulator, value, key, object). Iteratee functions\nmay exit iteration early by explicitly returning `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to iterate over.",
                    "type": "Array|Object"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "accumulator",
                    "description": "The custom accumulator value.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the accumulated value.",
                "type": "*"
            },
            "example": [
                "\n\n_.transform([2, 3, 4], function(result, n) {\n  result.push(n *= n);\n  return n % 2 == 0;\n});\n// => [4, 9]\n\n_.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n  result[key] = n * 3;\n});\n// => { 'a': 3, 'b': 6 }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9913,
            "description": "Creates an array of the own enumerable property values of `object`.\n\n**Note:** Non-object values are coerced to objects.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the array of property values.",
                "type": "Array"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.values(new Foo);\n// => [1, 2] (iteration order is not guaranteed)\n\n_.values('hi');\n// => ['h', 'i']"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9942,
            "description": "Creates an array of the own and inherited enumerable property values\nof `object`.\n\n**Note:** Non-object values are coerced to objects.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Object"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the array of property values.",
                "type": "Array"
            },
            "example": [
                "\n\nfunction Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.valuesIn(new Foo);\n// => [1, 2, 3] (iteration order is not guaranteed)"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 9971,
            "description": "Checks if `n` is between `start` and up to but not including, `end`. If\n`end` is not specified it is set to `start` with `start` then set to `0`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Number"
            ],
            "params": [
                {
                    "name": "n",
                    "description": "The number to check.",
                    "type": "Number"
                },
                {
                    "name": "start",
                    "description": "The start of the range.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "end",
                    "description": "The end of the range.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns `true` if `n` is in the range, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.inRange(3, 2, 4);\n// => true\n\n_.inRange(4, 8);\n// => true\n\n_.inRange(4, 2);\n// => false\n\n_.inRange(2, 2);\n// => false\n\n_.inRange(1.2, 2);\n// => true\n\n_.inRange(5.2, 4);\n// => false"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10013,
            "description": "Produces a random number between `min` and `max` (inclusive). If only one\nargument is provided a number between `0` and the given number is returned.\nIf `floating` is `true`, or either `min` or `max` are floats, a floating-point\nnumber is returned instead of an integer.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Number"
            ],
            "params": [
                {
                    "name": "min",
                    "description": "The minimum possible value.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "max",
                    "description": "The maximum possible value.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "floating",
                    "description": "Specify returning a floating-point number.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the random number.",
                "type": "Number"
            },
            "example": [
                "\n\n_.random(0, 5);\n// => an integer between 0 and 5\n\n_.random(5);\n// => also an integer between 0 and 5\n\n_.random(5, true);\n// => a floating-point number between 0 and 5\n\n_.random(1.2, 5.2);\n// => a floating-point number between 1.2 and 5.2"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10077,
            "description": "Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to convert.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the camel cased string.",
                "type": "String"
            },
            "example": [
                "\n\n_.camelCase('Foo Bar');\n// => 'fooBar'\n\n_.camelCase('--foo-bar');\n// => 'fooBar'\n\n_.camelCase('__foo_bar__');\n// => 'fooBar'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10101,
            "description": "Capitalizes the first character of `string`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to capitalize.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the capitalized string.",
                "type": "String"
            },
            "example": [
                "\n\n_.capitalize('fred');\n// => 'Fred'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10119,
            "description": "Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\nto basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to deburr.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the deburred string.",
                "type": "String"
            },
            "example": [
                "\n\n_.deburr('déjà vu');\n// => 'deja vu'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10138,
            "description": "Checks if `string` ends with the given target string.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to search.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "target",
                    "description": "The string to search for.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "position",
                    "description": "The position to search from.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "string.length"
                }
            ],
            "return": {
                "description": "Returns `true` if `string` ends with `target`, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.endsWith('abc', 'c');\n// => true\n\n_.endsWith('abc', 'b');\n// => false\n\n_.endsWith('abc', 'b', 2);\n// => true"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10172,
            "description": "Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\ntheir corresponding HTML entities.\n\n**Note:** No other characters are escaped. To escape additional characters\nuse a third-party library like [_he_](https://mths.be/he).\n\nThough the \">\" character is escaped for symmetry, characters like\n\">\" and \"/\" don't require escaping in HTML and have no special meaning\nunless they're part of a tag or unquoted attribute value.\nSee [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n(under \"semi-related fun fact\") for more details.\n\nBackticks are escaped because in Internet Explorer < 9, they can break out\nof attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n[#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n[#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\nfor more details.\n\nWhen working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\nto reduce XSS vectors.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to escape.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the escaped string.",
                "type": "String"
            },
            "example": [
                "\n\n_.escape('fred, barney, & pebbles');\n// => 'fred, barney, &amp; pebbles'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10212,
            "description": "Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n\"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to escape.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the escaped string.",
                "type": "String"
            },
            "example": [
                "\n\n_.escapeRegExp('[lodash](https://lodash.com/)');\n// => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10233,
            "description": "Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to convert.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the kebab cased string.",
                "type": "String"
            },
            "example": [
                "\n\n_.kebabCase('Foo Bar');\n// => 'foo-bar'\n\n_.kebabCase('fooBar');\n// => 'foo-bar'\n\n_.kebabCase('__foo_bar__');\n// => 'foo-bar'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10256,
            "description": "Pads `string` on the left and right sides if it is shorter than `length`.\nPadding characters are truncated if they can't be evenly divided by `length`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to pad.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "length",
                    "description": "The padding length.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "chars",
                    "description": "The string used as padding.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "' '"
                }
            ],
            "return": {
                "description": "Returns the padded string.",
                "type": "String"
            },
            "example": [
                "\n\n_.pad('abc', 8);\n// => '  abc   '\n\n_.pad('abc', 8, '_-');\n// => '_-abc_-_'\n\n_.pad('abc', 3);\n// => 'abc'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10294,
            "description": "Pads `string` on the left side if it is shorter than `length`. Padding\ncharacters are truncated if they exceed `length`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to pad.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "length",
                    "description": "The padding length.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "chars",
                    "description": "The string used as padding.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "' '"
                }
            ],
            "return": {
                "description": "Returns the padded string.",
                "type": "String"
            },
            "example": [
                "\n\n_.padLeft('abc', 6);\n// => '   abc'\n\n_.padLeft('abc', 6, '_-');\n// => '_-_abc'\n\n_.padLeft('abc', 3);\n// => 'abc'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10318,
            "description": "Pads `string` on the right side if it is shorter than `length`. Padding\ncharacters are truncated if they exceed `length`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to pad.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "length",
                    "description": "The padding length.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "chars",
                    "description": "The string used as padding.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "' '"
                }
            ],
            "return": {
                "description": "Returns the padded string.",
                "type": "String"
            },
            "example": [
                "\n\n_.padRight('abc', 6);\n// => 'abc   '\n\n_.padRight('abc', 6, '_-');\n// => 'abc_-_'\n\n_.padRight('abc', 3);\n// => 'abc'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10342,
            "description": "Converts `string` to an integer of the specified radix. If `radix` is\n`undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\nin which case a `radix` of `16` is used.\n\n**Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\nof `parseInt`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to convert.",
                    "type": "String"
                },
                {
                    "name": "radix",
                    "description": "The radix to interpret `value` by.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the converted integer.",
                "type": "Number"
            },
            "example": [
                "\n\n_.parseInt('08');\n// => 8\n\n_.map(['6', '08', '10'], _.parseInt);\n// => [6, 8, 10]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10387,
            "description": "Repeats the given string `n` times.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to repeat.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "n",
                    "description": "The number of times to repeat the string.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Returns the repeated string.",
                "type": "String"
            },
            "example": [
                "\n\n_.repeat('*', 3);\n// => '***'\n\n_.repeat('abc', 2);\n// => 'abcabc'\n\n_.repeat('abc', 0);\n// => ''"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10427,
            "description": "Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to convert.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the snake cased string.",
                "type": "String"
            },
            "example": [
                "\n\n_.snakeCase('Foo Bar');\n// => 'foo_bar'\n\n_.snakeCase('fooBar');\n// => 'foo_bar'\n\n_.snakeCase('--foo-bar');\n// => 'foo_bar'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10450,
            "description": "Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to convert.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the start cased string.",
                "type": "String"
            },
            "example": [
                "\n\n_.startCase('--foo-bar');\n// => 'Foo Bar'\n\n_.startCase('fooBar');\n// => 'Foo Bar'\n\n_.startCase('__foo_bar__');\n// => 'Foo Bar'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10473,
            "description": "Checks if `string` starts with the given target string.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to search.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "target",
                    "description": "The string to search for.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "position",
                    "description": "The position to search from.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Returns `true` if `string` starts with `target`, else `false`.",
                "type": "Boolean"
            },
            "example": [
                "\n\n_.startsWith('abc', 'a');\n// => true\n\n_.startsWith('abc', 'b');\n// => false\n\n_.startsWith('abc', 'b', 1);\n// => true"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10503,
            "description": "Creates a compiled template function that can interpolate data properties\nin \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\nproperties may be accessed as free variables in the template. If a setting\nobject is provided it takes precedence over `_.templateSettings` values.\n\n**Note:** In the development build `_.template` utilizes\n[sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\nfor easier debugging.\n\nFor more information on precompiling templates see\n[lodash's custom builds documentation](https://lodash.com/custom-builds).\n\nFor more information on Chrome extension sandboxes see\n[Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The template string.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "options",
                    "description": "The options object.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "escape",
                            "description": "The HTML \"escape\" delimiter.",
                            "type": "RegExp",
                            "optional": true
                        },
                        {
                            "name": "evaluate",
                            "description": "The \"evaluate\" delimiter.",
                            "type": "RegExp",
                            "optional": true
                        },
                        {
                            "name": "imports",
                            "description": "An object to import into the template as free variables.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "interpolate",
                            "description": "The \"interpolate\" delimiter.",
                            "type": "RegExp",
                            "optional": true
                        },
                        {
                            "name": "sourceURL",
                            "description": "The sourceURL of the template's compiled source.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "variable",
                            "description": "The data object variable name.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "-",
                    "description": "[otherOptions] Enables the legacy `options` param signature.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the compiled template function.",
                "type": "Function"
            },
            "example": [
                "\n\n// using the \"interpolate\" delimiter to create a compiled template\nvar compiled = _.template('hello <%= user %>!');\ncompiled({ 'user': 'fred' });\n// => 'hello fred!'\n\n// using the HTML \"escape\" delimiter to escape data property values\nvar compiled = _.template('<b><%- value %></b>');\ncompiled({ 'value': '<script>' });\n// => '<b>&lt;script&gt;</b>'\n\n// using the \"evaluate\" delimiter to execute JavaScript and generate HTML\nvar compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\ncompiled({ 'users': ['fred', 'barney'] });\n// => '<li>fred</li><li>barney</li>'\n\n// using the internal `print` function in \"evaluate\" delimiters\nvar compiled = _.template('<% print(\"hello \" + user); %>!');\ncompiled({ 'user': 'barney' });\n// => 'hello barney!'\n\n// using the ES delimiter as an alternative to the default \"interpolate\" delimiter\nvar compiled = _.template('hello ${ user }!');\ncompiled({ 'user': 'pebbles' });\n// => 'hello pebbles!'\n\n// using custom template delimiters\n_.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\nvar compiled = _.template('hello {{ user }}!');\ncompiled({ 'user': 'mustache' });\n// => 'hello mustache!'\n\n// using backslashes to treat delimiters as plain text\nvar compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\ncompiled({ 'value': 'ignored' });\n// => '<%- value %>'\n\n// using the `imports` option to import `jQuery` as `jq`\nvar text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\nvar compiled = _.template(text, { 'imports': { 'jq': jQuery } });\ncompiled({ 'users': ['fred', 'barney'] });\n// => '<li>fred</li><li>barney</li>'\n\n// using the `sourceURL` option to specify a custom sourceURL for the template\nvar compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\ncompiled(data);\n// => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\n// using the `variable` option to ensure a with-statement isn't used in the compiled template\nvar compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\ncompiled.source;\n// => function(data) {\n//   var __t, __p = '';\n//   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n//   return __p;\n// }\n\n// using the `source` property to inline compiled templates for meaningful\n// line numbers in error messages and a stack trace\nfs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n  var JST = {\\\n    \"main\": ' + _.template(mainText).source + '\\\n  };\\\n');"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10705,
            "description": "Removes leading and trailing whitespace or specified characters from `string`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to trim.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "chars",
                    "description": "The characters to trim.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "whitespace"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the trimmed string.",
                "type": "String"
            },
            "example": [
                "\n\n_.trim('  abc  ');\n// => 'abc'\n\n_.trim('-_-abc-_-', '_-');\n// => 'abc'\n\n_.map(['  foo  ', '  bar  '], _.trim);\n// => ['foo', 'bar']"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10739,
            "description": "Removes leading whitespace or specified characters from `string`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to trim.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "chars",
                    "description": "The characters to trim.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "whitespace"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the trimmed string.",
                "type": "String"
            },
            "example": [
                "\n\n_.trimLeft('  abc  ');\n// => 'abc  '\n\n_.trimLeft('-_-abc-_-', '_-');\n// => 'abc-_-'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10769,
            "description": "Removes trailing whitespace or specified characters from `string`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to trim.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "chars",
                    "description": "The characters to trim.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "whitespace"
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the trimmed string.",
                "type": "String"
            },
            "example": [
                "\n\n_.trimRight('  abc  ');\n// => '  abc'\n\n_.trimRight('-_-abc-_-', '_-');\n// => '-_-abc'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10799,
            "description": "Truncates `string` if it is longer than the given maximum string length.\nThe last characters of the truncated string are replaced with the omission\nstring which defaults to \"...\".",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to truncate.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "options",
                    "description": "The options object or maximum string length.",
                    "type": "Object|number",
                    "optional": true,
                    "props": [
                        {
                            "name": "length",
                            "description": "The maximum string length.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "30"
                        },
                        {
                            "name": "omission",
                            "description": "The string to indicate text is omitted.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'...'"
                        },
                        {
                            "name": "separator",
                            "description": "The separator pattern to truncate to.",
                            "type": "RegExp|string",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the truncated string.",
                "type": "String"
            },
            "example": [
                "\n\n_.trunc('hi-diddly-ho there, neighborino');\n// => 'hi-diddly-ho there, neighbo...'\n\n_.trunc('hi-diddly-ho there, neighborino', 24);\n// => 'hi-diddly-ho there, n...'\n\n_.trunc('hi-diddly-ho there, neighborino', {\n  'length': 24,\n  'separator': ' '\n});\n// => 'hi-diddly-ho there,...'\n\n_.trunc('hi-diddly-ho there, neighborino', {\n  'length': 24,\n  'separator': /,? +/\n});\n// => 'hi-diddly-ho there...'\n\n_.trunc('hi-diddly-ho there, neighborino', {\n  'omission': ' [...]'\n});\n// => 'hi-diddly-ho there, neig [...]'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10891,
            "description": "The inverse of `_.escape`; this method converts the HTML entities\n`&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\ncorresponding characters.\n\n**Note:** No other HTML entities are unescaped. To unescape additional HTML\nentities use a third-party library like [_he_](https://mths.be/he).",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to unescape.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                }
            ],
            "return": {
                "description": "Returns the unescaped string.",
                "type": "String"
            },
            "example": [
                "\n\n_.unescape('fred, barney, &amp; pebbles');\n// => 'fred, barney, & pebbles'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10916,
            "description": "Splits `string` into an array of its words.",
            "static": 1,
            "memberof": "_",
            "category": [
                "String"
            ],
            "params": [
                {
                    "name": "string",
                    "description": "The string to inspect.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "pattern",
                    "description": "The pattern to match words.",
                    "type": "RegExp|string",
                    "optional": true
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the words of `string`.",
                "type": "Array"
            },
            "example": [
                "\n\n_.words('fred, barney, & pebbles');\n// => ['fred', 'barney', 'pebbles']\n\n_.words('fred, barney, & pebbles', /[^, ]+/g);\n// => ['fred', 'barney', '&', 'pebbles']"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10944,
            "description": "Attempts to invoke `func`, returning either the result or the caught error\nobject. Any additional arguments are provided to `func` when it is invoked.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The function to attempt.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the `func` result or error object.",
                "type": "*"
            },
            "example": [
                "\n\n// avoid throwing errors for invalid selectors\nvar elements = _.attempt(function(selector) {\n  return document.querySelectorAll(selector);\n}, '>_>');\n\nif (_.isError(elements)) {\n  elements = [];\n}"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 10972,
            "description": "Creates a function that invokes `func` with the `this` binding of `thisArg`\nand arguments of the created function. If `func` is a property name the\ncreated callback returns the property value for a given element. If `func`\nis an object the created callback returns `true` for elements that contain\nthe equivalent object properties, otherwise it returns `false`.",
            "static": 1,
            "memberof": "_",
            "alias": "iteratee",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "func",
                    "description": "The value to convert to a callback.",
                    "type": "*",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `func`.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "-",
                    "description": "[guard] Enables use as a callback for functions like `_.map`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the callback.",
                "type": "Function"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 }\n];\n\n// wrap to create custom callback shorthands\n_.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n  var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n  if (!match) {\n    return callback(func, thisArg);\n  }\n  return function(object) {\n    return match[2] == 'gt'\n      ? object[match[1]] > match[3]\n      : object[match[1]] < match[3];\n  };\n});\n\n_.filter(users, 'age__gt36');\n// => [{ 'user': 'fred', 'age': 40 }]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11017,
            "description": "Creates a function that returns `value`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "The value to return from the new function.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar object = { 'user': 'fred' };\nvar getter = _.constant(object);\n\ngetter() === object;\n// => true"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11039,
            "description": "This method returns the first argument provided to it.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "Any value.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `value`.",
                "type": "*"
            },
            "example": [
                "\n\nvar object = { 'user': 'fred' };\n\n_.identity(object) === object;\n// => true"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11058,
            "description": "Creates a function which performs a deep comparison between a given object\nand `source`, returning `true` if the given object has equivalent property\nvalues, else `false`.\n\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\nnumbers, `Object` objects, regexes, and strings. Objects are compared by\ntheir own, not inherited, enumerable properties. For comparing a single\nown or inherited property value see `_.matchesProperty`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "source",
                    "description": "The object of property values to match.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney', 'age': 36, 'active': true },\n  { 'user': 'fred',   'age': 40, 'active': false }\n];\n\n_.filter(users, _.matches({ 'age': 40, 'active': false }));\n// => [{ 'user': 'fred', 'age': 40, 'active': false }]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11087,
            "description": "Creates a function which compares the property value of `path` on a given\nobject to `value`.\n\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\nnumbers, `Object` objects, regexes, and strings. Objects are compared by\ntheir own, not inherited, enumerable properties.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "path",
                    "description": "The path of the property to get.",
                    "type": "Array|string"
                },
                {
                    "name": "value",
                    "description": "The value to compare.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar users = [\n  { 'user': 'barney' },\n  { 'user': 'fred' }\n];\n\n_.find(users, _.matchesProperty('user', 'fred'));\n// => { 'user': 'fred' }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11115,
            "description": "Creates a function which invokes the method at `path` on a given object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "path",
                    "description": "The path of the method to invoke.",
                    "type": "Array|string"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar objects = [\n  { 'a': { 'b': { 'c': _.constant(2) } } },\n  { 'a': { 'b': { 'c': _.constant(1) } } }\n];\n\n_.map(objects, _.method('a.b.c'));\n// => [2, 1]\n\n_.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n// => [1, 2]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11142,
            "description": "The opposite of `_.method`; this method creates a function which invokes\nthe method at a given path on `object`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar array = _.times(3, _.constant),\n    object = { 'a': array, 'b': array, 'c': array };\n\n_.map(['a[2]', 'c[0]'], _.methodOf(object));\n// => [2, 0]\n\n_.map([['a', '2'], ['c', '0']], _.methodOf(object));\n// => [2, 0]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11168,
            "description": "Adds all own enumerable function properties of a source object to the\ndestination object. If `object` is a function then methods are added to\nits prototype as well.\n\n**Note:** Use `_.runInContext` to create a pristine `lodash` function to\navoid conflicts caused by modifying the original.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The destination object.",
                    "type": "Function|Object",
                    "optional": true,
                    "optdefault": "lodash"
                },
                {
                    "name": "source",
                    "description": "The object of functions to add.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "The options object.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "chain",
                            "description": "Specify whether the functions added\n are chainable.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Returns `object`.",
                "type": "Function|Object"
            },
            "example": [
                "\n\nfunction vowels(string) {\n  return _.filter(string, function(v) {\n    return /[aeiou]/i.test(v);\n  });\n}\n\n// use `_.runInContext` to avoid conflicts (esp. in Node.js)\nvar _ = require('lodash').runInContext();\n\n_.mixin({ 'vowels': vowels });\n_.vowels('fred');\n// => ['e']\n\n_('fred').vowels().value();\n// => ['e']\n\n_.mixin({ 'vowels': vowels }, { 'chain': false });\n_('fred').vowels();\n// => ['e']"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11260,
            "description": "Reverts the `_` variable to its previous value and returns a reference to\nthe `lodash` function.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "return": {
                "description": "Returns the `lodash` function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar lodash = _.noConflict();"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11277,
            "description": "A no-operation function which returns `undefined` regardless of the\narguments it receives.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "example": [
                "\n\nvar object = { 'user': 'fred' };\n\n_.noop(object) === undefined;\n// => true"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11295,
            "description": "Creates a function which returns the property value at `path` on a\ngiven object.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "path",
                    "description": "The path of the property to get.",
                    "type": "Array|string"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar objects = [\n  { 'a': { 'b': { 'c': 2 } } },\n  { 'a': { 'b': { 'c': 1 } } }\n];\n\n_.map(objects, _.property('a.b.c'));\n// => [2, 1]\n\n_.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n// => [1, 2]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11321,
            "description": "The opposite of `_.property`; this method creates a function which returns\nthe property value at a given path on `object`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The object to query.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the new function.",
                "type": "Function"
            },
            "example": [
                "\n\nvar array = [0, 1, 2],\n    object = { 'a': array, 'b': array, 'c': array };\n\n_.map(['a[2]', 'c[0]'], _.propertyOf(object));\n// => [2, 0]\n\n_.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n// => [2, 0]"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11347,
            "description": "Creates an array of numbers (positive and/or negative) progressing from\n`start` up to, but not including, `end`. If `end` is not specified it is\nset to `start` with `start` then set to `0`. If `end` is less than `start`\na zero-length range is created unless a negative `step` is specified.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "start",
                    "description": "The start of the range.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "end",
                    "description": "The end of the range.",
                    "type": "Number"
                },
                {
                    "name": "step",
                    "description": "The value to increment or decrement by.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "return": {
                "description": "Returns the new array of numbers.",
                "type": "Array"
            },
            "example": [
                "\n\n_.range(4);\n// => [0, 1, 2, 3]\n\n_.range(1, 5);\n// => [1, 2, 3, 4]\n\n_.range(0, 20, 5);\n// => [0, 5, 10, 15]\n\n_.range(0, -4, -1);\n// => [0, -1, -2, -3]\n\n_.range(1, 4, 0);\n// => [1, 1, 1]\n\n_.range(0);\n// => []"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11406,
            "description": "Invokes the iteratee function `n` times, returning an array of the results\nof each invocation. The `iteratee` is bound to `thisArg` and invoked with\none argument; (index).",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "n",
                    "description": "The number of times to invoke `iteratee`.",
                    "type": "Number"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "_.identity"
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the array of results.",
                "type": "Array"
            },
            "example": [
                "\n\nvar diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n// => [3, 6, 4]\n\n_.times(3, function(n) {\n  mage.castSpell(n);\n});\n// => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n\n_.times(3, function(n) {\n  this.cast(n);\n}, mage);\n// => also invokes `mage.castSpell(n)` three times"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11455,
            "description": "Generates a unique ID. If `prefix` is provided the ID is appended to it.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Utility"
            ],
            "params": [
                {
                    "name": "prefix",
                    "description": "The value to prefix the ID with.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the unique ID.",
                "type": "String"
            },
            "example": [
                "\n\n_.uniqueId('contact_');\n// => 'contact_104'\n\n_.uniqueId();\n// => '105'"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11478,
            "description": "Adds two numbers.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Math"
            ],
            "params": [
                {
                    "name": "augend",
                    "description": "The first number to add.",
                    "type": "Number"
                },
                {
                    "name": "addend",
                    "description": "The second number to add.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the sum.",
                "type": "Number"
            },
            "example": [
                "\n\n_.add(6, 4);\n// => 10"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11496,
            "description": "Gets the maximum value of `collection`. If `collection` is empty or falsey\n`-Infinity` is returned. If an iteratee function is provided it is invoked\nfor each value in `collection` to generate the criterion by which the value\nis ranked. The `iteratee` is bound to `thisArg` and invoked with three\narguments: (value, index, collection).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Math"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function|Object|string",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the maximum value.",
                "type": "*"
            },
            "example": [
                "\n\n_.max([4, 2, 8, 6]);\n// => 8\n\n_.max([]);\n// => -Infinity\n\nvar users = [\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 }\n];\n\n_.max(users, function(chr) {\n  return chr.age;\n});\n// => { 'user': 'fred', 'age': 40 }\n\n// using the `_.property` callback shorthand\n_.max(users, 'age');\n// => { 'user': 'fred', 'age': 40 }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11545,
            "description": "Gets the minimum value of `collection`. If `collection` is empty or falsey\n`Infinity` is returned. If an iteratee function is provided it is invoked\nfor each value in `collection` to generate the criterion by which the value\nis ranked. The `iteratee` is bound to `thisArg` and invoked with three\narguments: (value, index, collection).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Math"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function|Object|string",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the minimum value.",
                "type": "*"
            },
            "example": [
                "\n\n_.min([4, 2, 8, 6]);\n// => 2\n\n_.min([]);\n// => Infinity\n\nvar users = [\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 }\n];\n\n_.min(users, function(chr) {\n  return chr.age;\n});\n// => { 'user': 'barney', 'age': 36 }\n\n// using the `_.property` callback shorthand\n_.min(users, 'age');\n// => { 'user': 'barney', 'age': 36 }"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11594,
            "description": "Gets the sum of the values in `collection`.",
            "static": 1,
            "memberof": "_",
            "category": [
                "Math"
            ],
            "params": [
                {
                    "name": "collection",
                    "description": "The collection to iterate over.",
                    "type": "Array|Object|string"
                },
                {
                    "name": "iteratee",
                    "description": "The function invoked per iteration.",
                    "type": "Function|Object|string",
                    "optional": true
                },
                {
                    "name": "thisArg",
                    "description": "The `this` binding of `iteratee`.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the sum.",
                "type": "Number"
            },
            "example": [
                "\n\n_.sum([4, 6]);\n// => 10\n\n_.sum({ 'a': 4, 'b': 6 });\n// => 10\n\nvar objects = [\n  { 'n': 4 },\n  { 'n': 6 }\n];\n\n_.sum(objects, function(object) {\n  return object.n;\n});\n// => 10\n\n// using the `_.property` callback shorthand\n_.sum(objects, 'n');\n// => 10"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.js",
            "line": 11909,
            "description": "The semantic version number.",
            "static": 1,
            "memberof": "_",
            "type": "string",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/lodash/lodash.min.js",
            "line": 1,
            "license": "lodash 3.7.0 (Custom Build) lodash.com/license | Underscore.js 1.8.3 underscorejs.org/LICENSE\nBuild: `lodash modern -o ./lodash.js`",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/lib/underscore.string.js",
            "line": 387,
            "description": "_s.prune: a more elegant version of truncate\nprune extra chars, never leaving a half-chopped word.",
            "author": "github.com/rwz",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jquery.js",
            "line": 4270,
            "description": "Utility function for retreiving the text value of an array of DOM nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Array|Element"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 48,
            "description": "A smattering of methods that are needed to implement the JSLitmus testbed.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 52,
            "description": "Enhanced version of escape()",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 63,
            "description": "Get an element by ID.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 70,
            "description": "Null function",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 75,
            "description": "Set the status shown in the UI",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 83,
            "description": "Convert a number to an abbreviated string like, \"15K\" or \"10M\"",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 102,
            "description": "Copy properties from src to dst",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 109,
            "description": "Like Array.join(), but for the key-value pairs in an object",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 119,
            "description": "Array#indexOf isn't supported in IE, so we use this as a cross-browser solution",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 129,
            "description": "Test manages a single test (created with\nJSLitmus.test())",
            "access": "private",
            "tagname": "",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 146,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 152,
            "description": "Run calibration tests.  Returns true if calibrations are not yet\ncomplete (in which case calling code should run the tests yet again).\nonCalibrated - Callback to invoke when calibrations have finished",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 174,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 176,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 178,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 181,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 184,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 187,
            "description": "Reset test state",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 197,
            "description": "Run the test (in a timeout). We use a timeout to make sure the browser\nhas a chance to finish rendering any UI changes we've made, like\nupdating the status message.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 210,
            "description": "The nuts and bolts code that actually runs a test",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 273,
            "description": "Get the number of operations per second for this test.",
            "params": [
                {
                    "name": "normalize",
                    "description": "if true, iteration loop overhead taken into account"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 293,
            "description": "Get a friendly string describing the test",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 411,
            "description": "The public API for creating and running tests",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 415,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 417,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 420,
            "description": "The parsed query parameters the current page URL.  This is provided as a\nconvenience for test functions - it's not used by JSLitmus proper",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 426,
            "description": "Initialize",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 460,
            "description": "Set up the UI",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 474,
            "description": "(Re)render all the test results",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 483,
            "description": "(Re)render the chart graphics",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 496,
            "description": "(Re)render the results for a specific test",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 542,
            "description": "Create a new test",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 564,
            "description": "Add all tests to the run queue",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 575,
            "description": "Remove all tests from the run queue.  The current test has to finish on\nit's own though",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 586,
            "description": "Run the next test in the run queue",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 605,
            "description": "Add a test to the run queue",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js",
            "line": 615,
            "description": "Generate a Google Chart URL that shows the data for all tests",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/qunit.js",
            "line": 1,
            "description": "QUnit v1.10.0 - A JavaScript Unit Testing Framework\n\nhttp://qunitjs.com\n\nCopyright 2012 jQuery Foundation and other contributors\nReleased under the MIT license.\nhttp://jquery.org/license",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/qunit.js",
            "line": 411,
            "description": "Asserts rough true-ish result.",
            "name": "",
            "itemtype": "method",
            "example": [
                " ok( \"asdfasdf\".length > 5, \"There must be at least 5 chars\" );"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/qunit.js",
            "line": 448,
            "description": "Assert that the first two arguments are equal, with an optional message.\nPrints out both actual and expected values.",
            "name": "",
            "itemtype": "method",
            "example": [
                " equal( format( \"Received {0} bytes.\", 2), \"Received 2 bytes.\", \"format() replaces {0} with next argument\" );"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/qunit.js",
            "line": 459,
            "name": "",
            "itemtype": "method",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/qunit.js",
            "line": 467,
            "name": "",
            "itemtype": "method",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/qunit.js",
            "line": 475,
            "name": "",
            "itemtype": "method",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/qunit.js",
            "line": 483,
            "name": "",
            "itemtype": "method",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/qunit.js",
            "line": 491,
            "name": "",
            "itemtype": "method",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/qunit.js",
            "line": 539,
            "deprecate": "since 1.8.0\nKept assertion helpers in root for backwards compatibility",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/qunit.js",
            "line": 545,
            "deprecated": true,
            "deprecationMessage": "since 1.9.0\nKept global \"raises()\" for backwards compatibility",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/qunit.js",
            "line": 551,
            "deprecated": true,
            "deprecationMessage": "since 1.0.0, replaced with error pushes since 1.3.0\nKept to avoid TypeErrors for undefined methods.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/qunit.js",
            "line": 571,
            "description": "Config object: Maintain internal state\nLater exposed as QUnit.config\n`config` initialized at top of scope",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/qunit.js",
            "line": 888,
            "deprecated": true,
            "deprecationMessage": ": Created for backwards compatibility with test runner that set the hook function\ninto QUnit.{hook}, instead of invoking it and passing the hook function.\nQUnit.constructor is set to the empty F() above so that we can add to it's prototype here.\nDoing this allows us to tell if the following methods have been overwritten on the actual\nQUnit object.",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/qunit.js",
            "line": 1157,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "bower_components/underscore.string/test/test_underscore/vendor/qunit.js",
            "line": 1572,
            "description": "jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\nhttp://flesler.blogspot.com Licensed under BSD\n(http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008",
            "projectdescription": "Advanced and extensible data dumping for Javascript.",
            "version": "1.0.0",
            "author": "Ariel Flesler",
            "link": "{http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config/common.js",
            "line": 1,
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config/common.js",
            "line": 5,
            "description": "Setting up the current general constant",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config/common.js",
            "line": 17,
            "description": "Setting up general constant to use in app",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config/common.js",
            "line": 44,
            "description": "Export the current data into main app module",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/env/all.js",
            "line": 1,
            "description": "Dependencies",
            "documentation": ": https://www.npmjs.org/package/path",
            "author": ":  Mathieu ROBERT <mathieu@yocto.re>",
            "copyright": ": Yocto SAS, All right reserved",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/env/all.js",
            "line": 9,
            "description": "Setting up the current general constant",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/env/all.js",
            "line": 21,
            "description": "Setting up general constant to use in app",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/env/all.js",
            "line": 48,
            "description": "Export the current data into main app module",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/env/development.js",
            "line": 1,
            "description": "Dependencies",
            "author": ":  Mathieu ROBERT <mathieu@yocto.re>",
            "copyright": ": Yocto SAS, All right reserved",
            "see": [
                ": https://github.com/andris9/nodemailer-smtp-transport",
                ": https://github.com/andris9/nodemailer"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/env/development.js",
            "line": 19,
            "description": "export config",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/env/production.js",
            "line": 1,
            "description": "Dependencies",
            "author": ":  Mathieu ROBERT <mathieu@yocto.re>",
            "copyright": ": Yocto SAS, All right reserved",
            "see": [
                ": https://github.com/andris9/nodemailer-smtp-transport",
                ": https://github.com/andris9/nodemailer"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/env/production.js",
            "line": 19,
            "description": "export config",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/env/staging-iso-production.js",
            "line": 1,
            "description": "Dependencies",
            "author": ":  Mathieu ROBERT <mathieu@yocto.re>",
            "copyright": ": Yocto SAS, All right reserved",
            "see": [
                ": https://github.com/andris9/nodemailer-smtp-transport",
                ": https://github.com/andris9/nodemailer"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/env/staging-iso-production.js",
            "line": 19,
            "description": "export config",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/env/staging-new-tag.js",
            "line": 1,
            "description": "Dependencies",
            "author": ":  Mathieu ROBERT <mathieu@yocto.re>",
            "copyright": ": Yocto SAS, All right reserved",
            "see": [
                ": https://github.com/andris9/nodemailer-smtp-transport",
                ": https://github.com/andris9/nodemailer"
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/env/staging-new-tag.js",
            "line": 19,
            "description": "export config",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/config.js",
            "line": 1,
            "description": "Dependencies",
            "documentation": ": https://lodash.com/",
            "see": [
                ": https://www.npmjs.org/package/lodash"
            ],
            "author": ":  Mathieu ROBERT <mathieu@yocto.re>",
            "copyright": ": Yocto SAS, All right reserved",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/database.js",
            "line": 1,
            "description": "Dependencies",
            "documentation": ": http://sequelizejs.com/",
            "see": [
                ": https://www.npmjs.org/package/path",
                ": https://www.npmjs.org/package/lodash"
            ],
            "copyright": ": Yocto SAS, All right reserved",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/database.js",
            "line": 25,
            "description": "Create Db Object",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/database.js",
            "line": 65,
            "description": "Export the current data into main app module",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 1,
            "description": "Dependencies",
            "documentation": ": https://github.com/strongloop/express",
            "see": [
                ": http://expressjs.com/api.html",
                ": http://nodejs.org/api/fs.html",
                ": https://github.com/senchalabs/connect",
                ": https://github.com/expressjs/compression",
                ": https://github.com/expressjs/cookie-parser",
                ": https://github.com/expressjs/body-parser",
                ": https://github.com/expressjs/method-override",
                ": https://github.com/expressjs/session",
                ": https://www.npmjs.org/package/uuid",
                ": https://www.npmjs.org/package/connect-flash",
                ": https://github.com/epeli/underscore.string",
                ": https://www.npmjs.org/package/dateformat",
                ": https://www.npmjs.org/package/express-less",
                ": https://www.npmjs.com/package/connect-multiparty",
                ": https://www.npmjs.com/package/vhost",
                ": https://github.com/senchalabs/connect",
                ": https://www.npmjs.com/package/serve-static"
            ],
            "author": ":  Mathieu ROBERT <mathieu@yocto.re>",
            "copyright": ": Yocto SAS, All right reserved",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 74,
            "description": "Setting up the current port on var into the current app",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 92,
            "description": "Setting up the current env for app",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 98,
            "description": "Processing config. Setting up the stack error display",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 111,
            "description": "Setting up the current app name to express app",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 121,
            "description": "Setting up pretty HTML for express",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 133,
            "description": "Setting up filter for express compression",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 257,
            "description": "Processing favicon",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 273,
            "description": "Setting up the static public directory",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 279,
            "description": "Setting up model conf",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 285,
            "description": "Setting up view engine",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 300,
            "description": "Setting up dependencies modules and routes",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 371,
            "description": "Setting up Social rules",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 408,
            "description": "Setting up SEO rules",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 414,
            "description": "Setting up multipart for upload",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 420,
            "description": "Setting up flash middleware",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 426,
            "description": "Setting up dynamic helpders",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/express.js",
            "line": 432,
            "description": "Setting up router",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/routes.js",
            "line": 1,
            "description": "Dependencies",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/routes.js",
            "line": 19,
            "description": "Helper function to iterate directory and get resources",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/routes.js",
            "line": 44,
            "description": "Normalize some path and get all routes path",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "config_old/routes.js",
            "line": 94,
            "description": "Setting up HTTP 404 and 500 rules",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 1,
            "description": "Dependencies",
            "see": [
                ": http://underscorejs.org/",
                ": http://epeli.github.io/underscore.string/"
            ],
            "author": ":  Mathieu ROBERT <mathieu@yocto.re>",
            "copyright": ": Yocto SAS, All right reserved",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 18,
            "description": "Default Db factory class",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 23,
            "description": "Default factory database object",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 30,
            "description": "Default DbFactory type constants",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 41,
            "description": "Default use Db function. Save Db Object into the current object",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 53,
            "description": "Get How nb item factory use",
            "return": {
                "description": "(Integer), database item nb item"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 61,
            "description": "Get default Models from rules",
            "params": [
                {
                    "name": "(String),",
                    "description": "cType, default model type to use"
                },
                {
                    "name": "(String),",
                    "description": "type, needed type to use"
                }
            ],
            "return": {
                "description": "(Sequelize Object), default table object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 98,
            "description": "Get Ad Models from rules (Cf. BDD Schema)",
            "params": [
                {
                    "name": "(String),",
                    "description": "type, needed type to use"
                }
            ],
            "return": {
                "description": "(Sequelize Object), default table object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 113,
            "description": "Get Logs from rules (Cf. BDD Schema)",
            "params": [
                {
                    "name": "(String),",
                    "description": "type, needed type to use"
                }
            ],
            "return": {
                "description": "(Sequelize Object), default table object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 122,
            "description": "Get Constants from rules (Cf. BDD Schema)",
            "params": [
                {
                    "name": "(String),",
                    "description": "type, needed type to use"
                }
            ],
            "return": {
                "description": "(Sequelize Object), default table object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 137,
            "description": "Get a status type from rules",
            "params": [
                {
                    "name": "(Boolean),",
                    "description": "true for success type of false for error type"
                }
            ],
            "return": {
                "description": "(String), needed type"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 146,
            "description": "Get default extra params for db",
            "return": {
                "description": "(Object), extra params"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 154,
            "description": "Build default extra params from two object",
            "params": [
                {
                    "name": "(Object),",
                    "description": "extra, default params"
                },
                {
                    "name": "(Object),",
                    "description": "newExtra, default extra params"
                }
            ],
            "return": {
                "description": "(Object) return object processed"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 173,
            "description": "Default function to process requirement for database",
            "params": [
                {
                    "name": "(Function),",
                    "description": "callback to use"
                },
                {
                    "name": "(String),",
                    "description": "rules to select the correct method"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 265,
            "description": "Default method to process sub requirement of required database init",
            "params": [
                {
                    "name": "(String),",
                    "description": "method name"
                },
                {
                    "name": "(Object),",
                    "description": "database object name"
                },
                {
                    "name": "(Function),",
                    "description": "function to call"
                },
                {
                    "name": "(String),",
                    "description": "model name"
                },
                {
                    "name": "(Function),",
                    "description": "callback to use"
                },
                {
                    "name": "(Object),",
                    "description": "Status object to use for app update"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 285,
            "description": "Get Enum list of database model",
            "params": [
                {
                    "name": "(String),",
                    "description": "rules to use"
                }
            ],
            "return": {
                "description": "(Array), results"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 323,
            "description": "Get List of filter from specific rules",
            "params": [
                {
                    "name": "(Mixed),",
                    "description": "for enum rules"
                },
                {
                    "name": "(String),",
                    "description": "default filter rules to load"
                }
            ],
            "return": {
                "description": "(Object), filters"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 391,
            "description": "Get list of item for a part of form from specific rules",
            "params": [
                {
                    "name": "(Mixed),",
                    "description": "for enum rules"
                },
                {
                    "name": "(String),",
                    "description": "default filter rules to load"
                }
            ],
            "return": {
                "description": "(Object), filters"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 473,
            "description": "Get Default filter object to send",
            "params": [
                {
                    "name": "(String),",
                    "description": "the default label to use"
                },
                {
                    "name": "(String),",
                    "description": "the default type to use"
                },
                {
                    "name": "(String),",
                    "description": "the default name to use"
                },
                {
                    "name": "(Array),",
                    "description": "the default values to use"
                },
                {
                    "name": "(String),",
                    "description": "the default placeholder to use"
                },
                {
                    "name": "(String),",
                    "description": "the default sql type  to use"
                },
                {
                    "name": "(String),",
                    "description": "the default sql conditions to use"
                }
            ],
            "return": {
                "description": "(Object), the default filter object"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 511,
            "description": "Default function to build a custom message for validate call on model",
            "params": [
                {
                    "name": "(Object),",
                    "description": "e, current error from validate call"
                },
                {
                    "name": "(String),",
                    "description": "correct message to string format"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 542,
            "description": "Build correct where list for search",
            "params": [
                {
                    "name": "(Object),",
                    "description": "filter object to process"
                }
            ],
            "return": {
                "description": "(Array), array of item to process"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 556,
            "description": "Default function to clean words (html entities, space)",
            "params": [
                {
                    "name": "(Array),",
                    "description": "list of item"
                }
            ],
            "return": {
                "description": "(Array), item clean"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 597,
            "description": "Clean Number format to correct format (10 000 <=> 10000, 3 Guests => 3, ect)\nRemove all space and string on item. Check filtered list for more details",
            "params": [
                {
                    "name": "(Array),",
                    "description": "keys, lists of keys"
                },
                {
                    "name": "(Array),",
                    "description": "values, lists of values"
                }
            ],
            "return": {
                "description": "(Array), array of values processed"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/dbfactory/dbfactory.js",
            "line": 708,
            "description": "Expose Db Factory",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/mailer/mailer.js",
            "line": 1,
            "description": "Dependencies",
            "documentation": ": https://github.com/flatiron/winston",
            "see": [
                ": http://tostring.it/2014/06/23/advanced-logging-with-nodejs/",
                ": https://www.npmjs.org/package/winston"
            ],
            "author": ":  Mathieu ROBERT <mathieu@yocto.re>",
            "copyright": ": Yocto SAS, All right reserved",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/mailer/mailer.js",
            "line": 53,
            "description": "Assign data to the exports scope",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 1,
            "description": "Dependencies",
            "see": [
                ": http://underscorejs.org/",
                ": https://github.com/epeli/underscore.string",
                ": https://www.npmjs.org/package/uuid"
            ],
            "author": ":  Mathieu ROBERT <mathieu@yocto.re>",
            "copyright": ": Yocto SAS, All right reserved",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 27,
            "description": "Set the default app name",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 39,
            "description": "Get Default charset",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 46,
            "description": "Get Default title",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 53,
            "description": "Get default language",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 65,
            "description": "Get Meta rules",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 76,
            "description": "Get HTTP Equiv rules",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 87,
            "description": "Get assets to include into main header",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 94,
            "description": "Get default pictures directory",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 101,
            "description": "Get css to include into main header",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 117,
            "description": "Get js to include into main header",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 149,
            "description": "Get assets to include into main footer",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 156,
            "description": "Get css to include into main footer",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 171,
            "description": "Get js to include into main footer",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 193,
            "description": "exports controller",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 198,
            "description": "export Renderer function",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/render/render.js",
            "line": 213,
            "description": "export a renderer no cache function",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/router/router.js",
            "line": 1,
            "description": "Dependencies",
            "see": [
                ": http://underscorejs.org/",
                ": https://www.npmjs.org/package/path",
                ": http://nodejs.org/api/fs.html",
                ": http://nodejs.org/api/path.html",
                ": https://github.com/epeli/underscore.string"
            ],
            "author": ":  Mathieu ROBERT <mathieu@yocto.re>",
            "copyright": ": Yocto SAS, All right reserved",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/router/router.js",
            "line": 26,
            "description": "Check route rules",
            "params": [
                {
                    "name": "(Object),",
                    "description": "default app"
                },
                {
                    "name": "(Object),",
                    "description": "route rules"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/router/router.js",
            "line": 37,
            "description": "Checking Property validity",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/router/router.js",
            "line": 112,
            "description": "Add a route",
            "params": [
                {
                    "name": "(Object),",
                    "description": "the default app instance"
                },
                {
                    "name": "(Object),",
                    "description": "route rules"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/router/router.js",
            "line": 126,
            "description": "expose router",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/social/social.js",
            "line": 1,
            "description": "Dependencies",
            "see": [
                ": http://underscorejs.org/",
                ": https://github.com/epeli/underscore.string",
                ": http://nodejs.org/api/path.html",
                ": https://www.npmjs.com/package/glob"
            ],
            "author": ":  Mathieu ROBERT <mathieu@yocto.re>",
            "copyright": ": Yocto SAS, All right reserved",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/social/social.js",
            "line": 22,
            "description": "Main Object",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/social/social.js",
            "line": 27,
            "description": "Default social function to generate content dynamicly for facebook share",
            "params": [
                {
                    "name": "(String),",
                    "description": "url to share and to use for build content"
                },
                {
                    "name": "(Function),",
                    "description": "callback to for default response"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/social/social.js",
            "line": 95,
            "description": "Default social function to generate content dynamicly for facebook share normal share",
            "params": [
                {
                    "name": "(String),",
                    "description": "url to share and to use for build content"
                },
                {
                    "name": "(Function),",
                    "description": "callback to for default response"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/social/social.js",
            "line": 135,
            "description": "Expose Utils",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 1,
            "description": "Dependencies",
            "see": [
                ": http://underscorejs.org/",
                ": https://github.com/epeli/underscore.string",
                ": http://nodejs.org/api/fs.html",
                ": http://nodejs.org/api/path.html",
                ":  http://nodejs.org/api/crypto.html",
                ": http://aheckmann.github.io/gm/docs.html"
            ],
            "author": ":  Mathieu ROBERT <mathieu@yocto.re>",
            "copyright": ": Yocto SAS, All right reserved",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 25,
            "description": "Main Object",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 30,
            "description": "Force a require file to be reload from root path of the app",
            "params": [
                {
                    "name": "(String),",
                    "description": "path, the current path to use"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 39,
            "description": "Load a json file for db configuration",
            "params": [
                {
                    "name": "(String),",
                    "description": "file, filename to use"
                },
                {
                    "name": "(Boolean),",
                    "description": "filter, true if we need to use filter data, false otherwise"
                }
            ],
            "return": {
                "description": "(Object), json reprensentation of file"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 66,
            "description": "Load a json file for filter type",
            "params": [
                {
                    "name": "(String),",
                    "description": "file, filename to use"
                }
            ],
            "return": {
                "description": "(Object), json reprensentation of file"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 75,
            "description": "Load a json file for filter type",
            "params": [
                {
                    "name": "(String),",
                    "description": "file, filename to use"
                }
            ],
            "return": {
                "description": "(Object), json reprensentation of file"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 84,
            "description": "Utility function. remove no needed property on a current object",
            "params": [
                {
                    "name": "(Array),",
                    "description": "items list of items"
                },
                {
                    "name": "(Array),",
                    "description": "item to exclude"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 93,
            "description": "Return true if has no difference between source and compare list",
            "params": [
                {
                    "name": "(Array|Object),",
                    "description": "source list of item"
                },
                {
                    "name": "(Array|Object),",
                    "description": "compate list of item"
                }
            ],
            "return": {
                "description": "(Boolean), true is no difference, false otherwise"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 117,
            "description": "Get the default mail template to build the correct template",
            "params": [
                {
                    "name": "(String),",
                    "description": "type, template type to use to retrive the current file"
                },
                {
                    "name": "(Object),",
                    "description": "params, data to map with the template"
                },
                {
                    "name": "(Boolean),",
                    "description": "encode, if true encode html chars"
                }
            ],
            "return": {
                "description": "(String), current data to send"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 143,
            "description": "Get the default mail config to process next step (building)",
            "params": [
                {
                    "name": "(String),",
                    "description": "type, template type to use to retrive the current file"
                },
                {
                    "name": "(Object),",
                    "description": "params, data to map with the template"
                }
            ],
            "return": {
                "description": "(Object), current config data"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 178,
            "description": "Build notify object to send to DAO model",
            "params": [
                {
                    "name": "(Object),",
                    "description": "factory to use"
                },
                {
                    "name": "(String),",
                    "description": "type to use"
                },
                {
                    "name": "(String),",
                    "description": "subject to replace on original subject"
                },
                {
                    "name": "(Object),",
                    "description": "params to assign on template"
                }
            ],
            "return": {
                "description": "(Object), data to insert"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 256,
            "description": "Return a password from two rules",
            "params": [
                {
                    "name": "(Integer),",
                    "description": "n, password length"
                },
                {
                    "name": "(String),",
                    "description": "a, chars to use"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 271,
            "description": "Utility function to encrypt data",
            "params": [
                {
                    "name": "(String),",
                    "description": "key, key to use for encryption"
                },
                {
                    "name": "(Mixed),",
                    "description": "data, data to encrypt"
                }
            ],
            "return": {
                "description": "(String), crypted data"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 287,
            "description": "Utility function to decrypt data",
            "params": [
                {
                    "name": "(String),",
                    "description": "key, key to use for encryption"
                },
                {
                    "name": "(Mixed),",
                    "description": "data, data to encrypt"
                }
            ],
            "return": {
                "description": "(String), decrypted data"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 301,
            "description": "Utility function to build date list for search view",
            "params": [
                {
                    "name": "(Integer),",
                    "description": "min, start value"
                },
                {
                    "name": "(Integer),",
                    "description": "max, end value"
                },
                {
                    "name": "(String),",
                    "description": "prefixMin, prefix to use on min value"
                },
                {
                    "name": "(String),",
                    "description": "prefixMax, prefix to use on max value"
                },
                {
                    "name": "(Boolean),",
                    "description": "reverse, true if we need to reverse array"
                }
            ],
            "return": {
                "description": "(Array), list of date"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 341,
            "description": "Return the correct host from a request header.\nImplement x-forwarded data",
            "params": [
                {
                    "name": "(Object),",
                    "description": "HTTP request object"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 354,
            "description": "Check if is an allowed image type format",
            "params": [
                {
                    "name": "(String),",
                    "description": "type to check"
                }
            ],
            "return": {
                "description": "(Boolean), true if is correct false otherwise"
            },
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 364,
            "description": "Process image and fit it from rules",
            "params": [
                {
                    "name": "(String),",
                    "description": "path, current path to use"
                },
                {
                    "name": "(Integer),",
                    "description": "maxWidth, current maxWidth to use"
                },
                {
                    "name": "(Integer),",
                    "description": "maxHeight, current maxHeight to use"
                },
                {
                    "name": "(Integer),",
                    "description": "quality, current quality to use"
                }
            ],
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "yocto_modules/utils/utils.js",
            "line": 415,
            "description": "Expose Utils",
            "class": "Gruntfile",
            "module": "ngMock"
        },
        {
            "file": "index.js",
            "line": 1,
            "description": "Dependencies",
            "see": [
                ": https://www.npmjs.org/package/portscanner"
            ],
            "author": ":  Mathieu ROBERT <mathieu@yocto.re>",
            "copyright": ": Yocto SAS, All right reserved",
            "class": "",
            "module": "Grunt file"
        },
        {
            "file": "index.js",
            "line": 18,
            "description": "Default function to start when all app is ready",
            "class": "",
            "module": "Grunt file"
        },
        {
            "file": "index.js",
            "line": 60,
            "description": "Start the main process of your own server",
            "class": "",
            "module": "Grunt file"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: license",
            "line": " bower_components/angular/angular.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:8"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:160"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:160"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:181"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:181"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:181"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:181"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:194"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:194"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:194"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:194"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:273"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:273"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:273"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:273"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:352"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:361"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:389"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:389"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:389"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:389"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:432"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:432"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:432"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:452"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:452"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:452"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:452"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:476"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:476"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:476"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:476"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:491"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:491"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:491"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:491"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:506"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:506"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:506"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:506"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:525"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:525"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:525"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:525"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:540"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:540"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:540"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:540"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:561"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:561"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:561"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:561"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:578"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:578"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:578"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:578"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:592"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:592"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:592"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:592"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:607"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:619"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:674"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:674"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:674"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:674"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:692"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:719"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:719"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:719"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:719"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:876"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:876"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:876"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:876"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:978"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:978"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:978"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:978"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1034"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1034"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:1034"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:1034"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1058"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1058"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:1058"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:1058"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:1077"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:1102"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:1119"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1215"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1215"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:1215"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1371"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1371"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:1371"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1489"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1489"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1504"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:1613"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:1640"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:1662"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1683"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1683"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1710"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1710"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:1710"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1797"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1797"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1808"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1808"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1819"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1819"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1831"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1831"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1842"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1842"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1853"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1853"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1864"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1864"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1876"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1876"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1910"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1910"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1921"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1921"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1933"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1933"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1946"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1946"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:1959"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:1959"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:1981"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:2116"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:2116"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:2294"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:2294"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:2294"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:2294"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:3308"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:3362"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:3381"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:3381"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:3381"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:3381"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:3435"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:3435"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:3499"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:3499"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:3552"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:3552"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:3564"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:3564"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:3564"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:3579"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:3579"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:3579"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:3590"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:3590"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:3590"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:3604"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:3604"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:3604"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:3691"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:3691"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:3731"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:3731"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:3731"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:3827"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:3827"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:3827"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:3861"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:3861"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:3861"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:3902"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:3902"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:3902"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:3935"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:3935"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:3935"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:3963"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:3963"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:4230"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:4230"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:4242"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:4242"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:4259"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:4259"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:4259"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:4498"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:4498"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:4517"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:4517"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:4556"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:4556"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:4648"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:4648"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:4671"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:4671"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:4671"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:4694"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:4694"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:4694"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:4711"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:4711"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:4711"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:4735"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:4735"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:4735"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:4764"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:4764"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:4764"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:4793"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:4793"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:4793"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:4879"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:4969"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:4969"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5013"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5089"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:5089"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5145"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5196"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:5196"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5225"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:5225"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5293"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:5293"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5319"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:5319"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:5348"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5348"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:5348"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:5447"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5447"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:5488"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5488"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:5488"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:5488"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:5524"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5524"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:5524"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:5524"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:5548"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5548"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:5548"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:5576"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5576"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:5576"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:5592"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5592"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:5592"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:5609"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5609"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:5609"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:5609"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:5662"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5662"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:5662"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:5680"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5680"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:5680"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:5699"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5699"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:5777"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:5777"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:5777"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:5777"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:6452"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:6452"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:6498"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:6498"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:6498"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:6498"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:6554"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:6554"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:6554"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:6554"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:6584"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:6584"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:6584"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:6584"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:6613"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:6613"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:6613"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:6613"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:6667"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:6667"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:6667"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:6685"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:6685"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:6685"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:6702"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:6702"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:6702"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:6719"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:6719"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:6719"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:6845"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:6845"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:6845"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:6845"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:7011"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:7248"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:7280"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:7295"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:7807"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:7845"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:8275"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:8275"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:8289"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:8289"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:8299"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:8299"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:8299"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:8370"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:8370"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:8386"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:8386"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:8403"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:8403"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:8415"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:8415"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:8522"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:8522"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:8553"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:8553"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:8631"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:8656"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:8687"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:8715"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:8715"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:8722"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:8722"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:8773"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:8773"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:8773"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:8800"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:8800"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:8832"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:8832"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:8832"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:8832"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:9480"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:9480"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:9480"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:9492"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:9492"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:9492"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:9504"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:9504"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:9504"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:9516"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:9516"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:9516"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:9530"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:9530"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:9530"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:9543"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:9543"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:9543"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:9556"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:9556"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:9556"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:9570"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:9570"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:9761"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:9761"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:9932"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:9932"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:9971"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:9971"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:9971"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:9989"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:9989"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:9989"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:10018"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:10018"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:10018"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:10018"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:10242"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:10242"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:10242"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:10258"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:10258"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:10258"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:10283"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:10283"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:10283"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:10438"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:10438"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:10438"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:10462"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:10462"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:10547"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:10591"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:10872"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:10872"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:10893"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:10893"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:10926"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:10926"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:10946"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:10946"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:10966"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:10966"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:10986"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:10986"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11015"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11015"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11093"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11093"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11118"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11118"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11135"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11135"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11192"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11192"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11218"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11218"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11232"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11232"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:11232"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11248"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11248"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:11248"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11291"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11291"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " bower_components/angular/angular.js:11291"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11313"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11313"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " bower_components/angular/angular.js:11313"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11505"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11505"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11543"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11543"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11553"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11553"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:11553"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11571"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11571"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11580"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11580"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11589"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11589"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11598"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11598"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:11607"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:11607"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:12638"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:12638"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:12638"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:12638"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:12679"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:12679"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:12936"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:12936"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:12936"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:13165"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:13188"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:13188"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:13188"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:13188"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:13340"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:13340"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:13340"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:13340"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:13410"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:13410"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:13410"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:13410"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:13431"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:13431"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:13431"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:13431"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:13560"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:13560"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:13568"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:13568"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:13590"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:13590"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:13635"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:13635"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:13635"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:13690"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:13690"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:13698"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:13698"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:13706"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:13706"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:13716"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:13716"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:13716"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:13716"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:13780"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:13780"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:13780"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:13780"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:13931"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:13931"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:13931"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:13931"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:14015"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:14015"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:14015"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:14015"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:14202"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:14202"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:14202"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:14366"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:14366"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " bower_components/angular/angular.js:14366"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:14378"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:14378"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:14378"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:14437"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:14437"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:14437"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:14437"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:14469"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:14469"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:14469"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:14517"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:14517"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:14517"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:14517"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:14579"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:14579"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:14579"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:14606"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:14606"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:14606"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:14606"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:14659"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:14659"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:14659"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:14732"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:14732"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:14732"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:14876"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:14901"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15002"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15002"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:15002"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15029"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15029"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15076"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15076"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:15076"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15105"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15105"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:15105"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15208"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15208"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15208"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15245"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15245"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15245"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15271"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15271"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15271"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15318"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15318"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15332"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15332"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:15332"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15602"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15602"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:15602"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15680"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15680"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:15680"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15703"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15703"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15703"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15733"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15733"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15733"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15752"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15752"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15752"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15767"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15767"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15767"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15782"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15782"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15782"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15797"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15797"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15797"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15812"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15812"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15812"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15830"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15830"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15830"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15842"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15842"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15842"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15854"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15854"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15854"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15866"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15866"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15866"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15878"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15878"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15878"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15890"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15890"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15890"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15907"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15907"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15907"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15924"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15924"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15924"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15941"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15941"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15941"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:15958"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15958"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:15958"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:15997"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:16086"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:16086"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:16149"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:16158"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:16193"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:16217"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:16228"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:16244"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:16266"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:16266"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:16266"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:16318"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:16318"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:16318"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:16354"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:16354"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:16433"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:16446"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:16446"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:16502"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:16502"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:16552"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:16552"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:16552"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:16587"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:16587"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:16587"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:16639"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:16639"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:16639"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:16868"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:16868"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:16868"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:16868"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:16940"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:16940"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:16940"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:16940"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:17204"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:17204"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:17204"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:17204"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:17371"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:17371"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:17371"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:17371"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:17412"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:17412"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:17412"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:17423"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:17423"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:17423"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:17433"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:17433"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:17433"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:17433"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:17539"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:17539"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular/angular.js:17539"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:17539"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:17790"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:17790"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:17790"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:17825"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:17825"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:17825"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:17825"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:17825"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:17924"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:17924"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:17924"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:17924"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:17924"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:17950"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:17950"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:17950"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:17950"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:17950"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:17976"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:17976"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:17976"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:17976"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:17976"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18024"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18024"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:18024"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:18024"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:18024"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18059"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18059"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:18059"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:18059"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:18059"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18094"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18094"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:18094"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:18094"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:18094"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18132"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18132"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:18132"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:18132"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:18132"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18269"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18269"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18331"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18331"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18348"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18348"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18365"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18365"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18396"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18396"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18423"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18423"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18460"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18460"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18478"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18478"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18502"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18502"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18521"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18521"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18535"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18535"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:18535"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18554"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18554"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:18554"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18794"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18794"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18883"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18883"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:18978"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:18978"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:19071"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:19071"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:19165"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:19165"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:19256"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:19256"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:19351"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:19351"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:19439"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:19439"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:19530"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:19530"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:19620"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:19620"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:19674"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:19674"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:20147"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:20147"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:20147"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:20177"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:20177"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:20177"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:20317"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:20317"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:20317"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:20394"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:20394"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:20394"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:20394"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:20462"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:20462"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:20462"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:20530"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:20530"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:20530"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:20600"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:20600"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:20600"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:20791"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:20791"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:20791"
        },
        {
            "message": "unknown tag: animations",
            "line": " bower_components/angular/angular.js:20791"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:20791"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:20938"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:20938"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:20938"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:20938"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:20986"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:20986"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:20986"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:20986"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21034"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21034"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:21034"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21034"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21097"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21097"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21097"
        },
        {
            "message": "unknown tag: scope",
            "line": " bower_components/angular/angular.js:21097"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21097"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21332"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21332"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21332"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21505"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21505"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21505"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21505"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21581"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21581"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21581"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21581"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21605"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21605"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21605"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21605"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21629"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21629"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21629"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21629"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21652"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21652"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21652"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21652"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21676"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21676"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21676"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21676"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21700"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21700"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21700"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21700"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21724"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21724"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21724"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21724"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21748"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21748"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21748"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21748"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21770"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21770"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21770"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21770"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21797"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21797"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21797"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21819"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21819"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21819"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21819"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21882"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21882"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21882"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21882"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21902"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21902"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21902"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21902"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21926"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21926"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21926"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21926"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21947"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21947"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21947"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21947"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21968"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21968"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21968"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21968"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:21989"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:21989"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:21989"
        },
        {
            "message": "unknown tag: animations",
            "line": " bower_components/angular/angular.js:21989"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:21989"
        },
        {
            "message": "unknown tag: scope",
            "line": " bower_components/angular/angular.js:21989"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:21989"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:22113"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:22113"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:22113"
        },
        {
            "message": "unknown tag: animations",
            "line": " bower_components/angular/angular.js:22113"
        },
        {
            "message": "unknown tag: scope",
            "line": " bower_components/angular/angular.js:22113"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:22113"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:22257"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:22257"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " bower_components/angular/angular.js:22257"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:22269"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:22269"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " bower_components/angular/angular.js:22269"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:22281"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:22281"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " bower_components/angular/angular.js:22281"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:22407"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:22407"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:22407"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:22407"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:22407"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:22474"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:22474"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:22474"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:22619"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:22619"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:22873"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:22873"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:22895"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:22895"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular/angular.js:22895"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:22920"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:22920"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:22955"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:22955"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:22973"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:22973"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:22992"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:22992"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:23010"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:23010"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:23027"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:23027"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:23092"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:23092"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:23231"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:23231"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:23320"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:23320"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:23434"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:23434"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:23434"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:23434"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:23655"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:23655"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:23933"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:23933"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:23933"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:23933"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:23933"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:23967"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:23967"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:23967"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:24195"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:24195"
        },
        {
            "message": "unknown tag: animations",
            "line": " bower_components/angular/angular.js:24195"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:24195"
        },
        {
            "message": "unknown tag: scope",
            "line": " bower_components/angular/angular.js:24195"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:24195"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:24708"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:24708"
        },
        {
            "message": "unknown tag: animations",
            "line": " bower_components/angular/angular.js:24708"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:24708"
        },
        {
            "message": "unknown tag: import",
            "line": " bower_components/angular/angular.js:24708"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:24883"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:24883"
        },
        {
            "message": "unknown tag: animations",
            "line": " bower_components/angular/angular.js:24883"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:24883"
        },
        {
            "message": "unknown tag: import",
            "line": " bower_components/angular/angular.js:24883"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:25041"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:25041"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:25041"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:25041"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:25096"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:25096"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:25096"
        },
        {
            "message": "unknown tag: animations",
            "line": " bower_components/angular/angular.js:25096"
        },
        {
            "message": "unknown tag: usage",
            "line": " bower_components/angular/angular.js:25096"
        },
        {
            "message": "unknown tag: scope",
            "line": " bower_components/angular/angular.js:25096"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular/angular.js:25096"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:25301"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:25301"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:25301"
        },
        {
            "message": "unknown tag: element",
            "line": " bower_components/angular/angular.js:25301"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:25373"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:25373"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:25373"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular/angular.js:25422"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular/angular.js:25422"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular/angular.js:25422"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:417"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:417"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:590"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:590"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:590"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:644"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:644"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:644"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:2970"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:2970"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:3023"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:3023"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:3023"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:3070"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:3070"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:3070"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:3126"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:3126"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:3126"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:416"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:416"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:589"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:589"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:589"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:643"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:643"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:643"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:2969"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:2969"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:3022"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:3022"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:3022"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:3069"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:3069"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:3069"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:3125"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:3125"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:3125"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angular-cookies/angular-cookies.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-cookies/angular-cookies.js:8"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-cookies/angular-cookies.js:8"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-cookies/angular-cookies.js:26"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-cookies/angular-cookies.js:26"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-cookies/angular-cookies.js:131"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-cookies/angular-cookies.js:131"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-cookies/angular-cookies.js:160"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-cookies/angular-cookies.js:160"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-cookies/angular-cookies.js:160"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-cookies/angular-cookies.js:175"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-cookies/angular-cookies.js:175"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-cookies/angular-cookies.js:189"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-cookies/angular-cookies.js:189"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:57"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:166"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:176"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:185"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:193"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:201"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:210"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:306"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:322"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:343"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:352"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:360"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:375"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:384"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:398"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:422"
        },
        {
            "message": "unknown tag: borrows",
            "line": " bower_components/angular-file-upload/src/module.js:682"
        },
        {
            "message": "unknown tag: borrows",
            "line": " bower_components/angular-file-upload/src/module.js:686"
        },
        {
            "message": "unknown tag: borrows",
            "line": " bower_components/angular-file-upload/src/module.js:690"
        },
        {
            "message": "unknown tag: borrows",
            "line": " bower_components/angular-file-upload/src/module.js:694"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:1070"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/src/module.js:1238"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:73"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:182"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:192"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:201"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:209"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:217"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:226"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:322"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:338"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:359"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:368"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:376"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:391"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:400"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:414"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:438"
        },
        {
            "message": "unknown tag: borrows",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:698"
        },
        {
            "message": "unknown tag: borrows",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:702"
        },
        {
            "message": "unknown tag: borrows",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:706"
        },
        {
            "message": "unknown tag: borrows",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:710"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1086"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1254"
        },
        {
            "message": "unknown tag: version",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:37"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:45"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:61"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:108"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:118"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:147"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:157"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:157"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:157"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:209"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:209"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:209"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:292"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:292"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:292"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:308"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:308"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:308"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:337"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:337"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:337"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:361"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:361"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:361"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:389"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:389"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:389"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:411"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:411"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:411"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:444"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:444"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:444"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:476"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:476"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:476"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:514"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:514"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:514"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:550"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:550"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:550"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:576"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:576"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:576"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:626"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:626"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:626"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:660"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:660"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:660"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:688"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:708"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:708"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:708"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:747"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:747"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:747"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:780"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:810"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:810"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:810"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:835"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:858"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:858"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:858"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:875"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:875"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:875"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:898"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:898"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:898"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:937"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:937"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:937"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:963"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:963"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:963"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:991"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:991"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:991"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1019"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1019"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1019"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1047"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1047"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1047"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1078"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1078"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1078"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1101"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1101"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1101"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1136"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1136"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1136"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1163"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1163"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1163"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1220"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1220"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1220"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1247"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1247"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1247"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1284"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1284"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1284"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1314"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1314"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1314"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1339"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1339"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1339"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1366"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1366"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1377"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1377"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1377"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1398"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1411"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1411"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1411"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1432"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1445"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1445"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1445"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1469"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1469"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1469"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1493"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1493"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1493"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1514"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1514"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1514"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1544"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1544"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1544"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1563"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1563"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1563"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1590"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1590"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1590"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1712"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1712"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1712"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1732"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1732"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1732"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1752"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1752"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1752"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1776"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1789"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1789"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1789"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1809"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1809"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1809"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1829"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1829"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1829"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1853"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1853"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1853"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1873"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1873"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1873"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1890"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1890"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1890"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1910"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1910"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1910"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1930"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1930"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1930"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1954"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1954"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1954"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1976"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1976"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1976"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1993"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1993"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1993"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2010"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2010"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2010"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2027"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2027"
        },
        {
            "message": "unknown tag: kind",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2027"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2062"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2102"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2119"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2131"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2164"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2164"
        },
        {
            "message": "unknown tag: version",
            "line": " bower_components/angular-filter/dist/angular-filter.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angular-filter/dist/angular-filter.min.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " bower_components/angular-local-storage/dist/angular-local-storage.js:1"
        },
        {
            "message": "unknown tag: link",
            "line": " bower_components/angular-local-storage/dist/angular-local-storage.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angular-local-storage/dist/angular-local-storage.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " bower_components/angular-local-storage/dist/angular-local-storage.min.js:1"
        },
        {
            "message": "unknown tag: link",
            "line": " bower_components/angular-local-storage/dist/angular-local-storage.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angular-local-storage/dist/angular-local-storage.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angular-messages/angular-messages.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-messages/angular-messages.js:8"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-messages/angular-messages.js:8"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-messages/angular-messages.js:164"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-messages/angular-messages.js:164"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular-messages/angular-messages.js:164"
        },
        {
            "message": "unknown tag: usage",
            "line": " bower_components/angular-messages/angular-messages.js:164"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-messages/angular-messages.js:322"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-messages/angular-messages.js:322"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular-messages/angular-messages.js:322"
        },
        {
            "message": "unknown tag: scope",
            "line": " bower_components/angular-messages/angular-messages.js:322"
        },
        {
            "message": "unknown tag: usage",
            "line": " bower_components/angular-messages/angular-messages.js:322"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angular-mocks/angular-mocks.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:19"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:82"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:107"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:138"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:198"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:198"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:207"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:207"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:244"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:244"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:293"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:293"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:332"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:332"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:340"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:340"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:354"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:354"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:368"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:368"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:382"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:382"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:396"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:396"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:412"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:412"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:444"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:444"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:444"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:516"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:516"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:516"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:543"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:543"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:615"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:615"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:835"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:835"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:905"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:905"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1230"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1230"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:1230"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1277"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1277"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:1277"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1291"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1291"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:1291"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1305"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1305"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:1305"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1319"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1319"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:1319"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1335"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1335"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:1335"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1351"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1351"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:1351"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1366"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1366"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:1366"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1406"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1406"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:1406"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1420"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1420"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:1420"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1434"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1434"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:1434"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1448"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1448"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:1448"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1465"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1465"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:1465"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1482"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1482"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:1482"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1499"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1499"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:1499"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1514"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1514"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1542"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1542"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1564"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1564"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1584"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1584"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1711"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1711"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1722"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1722"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1735"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1735"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1812"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1812"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1883"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1883"
        },
        {
            "message": "unknown tag: packagename",
            "line": " bower_components/angular-mocks/angular-mocks.js:1883"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1914"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1914"
        },
        {
            "message": "unknown tag: packagename",
            "line": " bower_components/angular-mocks/angular-mocks.js:1914"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1929"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1929"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:1980"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:1980"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:1980"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:2009"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:2009"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:2009"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:2024"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:2024"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:2024"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:2039"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:2039"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:2039"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:2054"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:2054"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:2054"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:2070"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:2070"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:2070"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:2086"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:2086"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:2086"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:2102"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:2102"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:2102"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:2120"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:2120"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:2142"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:2142"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:2142"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:2173"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:2173"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-mocks/angular-mocks.js:2173"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:2263"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:2263"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-mocks/angular-mocks.js:2306"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-mocks/angular-mocks.js:2306"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angular-resource/angular-resource.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-resource/angular-resource.js:51"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-resource/angular-resource.js:51"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-resource/angular-resource.js:67"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-resource/angular-resource.js:67"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-resource/angular-resource.js:67"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angular-route/angular-route.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-route/angular-route.js:8"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-route/angular-route.js:8"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-route/angular-route.js:28"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-route/angular-route.js:28"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-route/angular-route.js:49"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-route/angular-route.js:49"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-route/angular-route.js:49"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-route/angular-route.js:177"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-route/angular-route.js:177"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-route/angular-route.js:229"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-route/angular-route.js:229"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-route/angular-route.js:229"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-route/angular-route.js:259"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-route/angular-route.js:259"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-route/angular-route.js:390"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-route/angular-route.js:390"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " bower_components/angular-route/angular-route.js:390"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-route/angular-route.js:410"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-route/angular-route.js:410"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " bower_components/angular-route/angular-route.js:410"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-route/angular-route.js:425"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-route/angular-route.js:425"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " bower_components/angular-route/angular-route.js:425"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-route/angular-route.js:438"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-route/angular-route.js:438"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " bower_components/angular-route/angular-route.js:438"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-route/angular-route.js:454"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-route/angular-route.js:454"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-route/angular-route.js:474"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-route/angular-route.js:474"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-route/angular-route.js:627"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/angular-route/angular-route.js:645"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-route/angular-route.js:669"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-route/angular-route.js:669"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-route/angular-route.js:710"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-route/angular-route.js:710"
        },
        {
            "message": "unknown tag: restrict",
            "line": " bower_components/angular-route/angular-route.js:710"
        },
        {
            "message": "unknown tag: animations",
            "line": " bower_components/angular-route/angular-route.js:710"
        },
        {
            "message": "unknown tag: scope",
            "line": " bower_components/angular-route/angular-route.js:710"
        },
        {
            "message": "unknown tag: priority",
            "line": " bower_components/angular-route/angular-route.js:710"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angular-route/angular-route.js:876"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angular-route/angular-route.js:876"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " bower_components/angular-route/angular-route.js:876"
        },
        {
            "message": "unknown tag: version",
            "line": " bower_components/angular-ui-utils/ui-utils-ieshiv.js:1"
        },
        {
            "message": "unknown tag: link",
            "line": " bower_components/angular-ui-utils/ui-utils-ieshiv.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angular-ui-utils/ui-utils-ieshiv.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " bower_components/angular-ui-utils/ui-utils-ieshiv.min.js:1"
        },
        {
            "message": "unknown tag: link",
            "line": " bower_components/angular-ui-utils/ui-utils-ieshiv.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angular-ui-utils/ui-utils-ieshiv.min.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " bower_components/angular-ui-utils/ui-utils.js:1"
        },
        {
            "message": "unknown tag: link",
            "line": " bower_components/angular-ui-utils/ui-utils.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angular-ui-utils/ui-utils.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " bower_components/angular-ui-utils/ui-utils.min.js:1"
        },
        {
            "message": "unknown tag: link",
            "line": " bower_components/angular-ui-utils/ui-utils.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angular-ui-utils/ui-utils.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-adobe.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-baidu.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-chartbeat.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-debug.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-flurry.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-ga-cordova-google-analytics-plugin.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-ga-cordova.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-ga.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-gtm.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-intercom.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-kissmetrics.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-localytics.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-loggly.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-marketo.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-mixpanel.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-piwik.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-scroll.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-segmentio.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-splunk.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics-woopra.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/dist/angulartics.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-adobe.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-adobe.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-adobe.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-adobe.js:24"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-baidu.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-baidu.js:11"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-baidu.js:11"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-chartbeat.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-chartbeat.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-chartbeat.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-cnzz.js:4"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-cnzz.js:4"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-debug.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-debug.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-debug.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-debug.js:21"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-flurry.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-flurry.js:11"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-flurry.js:11"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-ga-cordova-google-analytics-plugin.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-ga-cordova-google-analytics-plugin.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-ga-cordova-google-analytics-plugin.js:9"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-ga-cordova.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-ga-cordova.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-ga-cordova.js:9"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-ga.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-ga.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-ga.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-ga.js:39"
        },
        {
            "message": "unknown tag: link",
            "line": " bower_components/angulartics/src/angulartics-ga.js:39"
        },
        {
            "message": "unknown tag: link",
            "line": " bower_components/angulartics/src/angulartics-ga.js:39"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-gtm-cordova.js:8"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-gtm-cordova.js:8"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-gtm.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-gtm.js:12"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-gtm.js:12"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-gtm.js:35"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-hubspot.js:4"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-hubspot.js:4"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-intercom.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-intercom.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-intercom.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-intercom.js:24"
        },
        {
            "message": "unknown tag: link",
            "line": " bower_components/angulartics/src/angulartics-intercom.js:24"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-kissmetrics.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-kissmetrics.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-kissmetrics.js:9"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-localytics.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-localytics.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-localytics.js:10"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-loggly.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-loggly.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-loggly.js:10"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-marketo.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-marketo.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-marketo.js:10"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-mixpanel.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-mixpanel.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-mixpanel.js:10"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-piwik.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-piwik.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-piwik.js:10"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-scroll.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-scroll.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-scroll.js:9"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-segmentio.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-segmentio.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-segmentio.js:9"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-splunk.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-splunk.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-splunk.js:9"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics-woopra.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics-woopra.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics-woopra.js:9"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/angulartics/src/angulartics.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " bower_components/angulartics/src/angulartics.js:23"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/angulartics/src/angulartics.js:23"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/jquery/dist/jquery.js:853"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/jquery/dist/jquery.js:917"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/jquery/dist/jquery.js:990"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/jquery/dist/jquery.js:1002"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/jquery/dist/jquery.js:1014"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:305"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:369"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:442"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:454"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:466"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/lodash/lodash.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:285"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:309"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:331"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:355"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:369"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:384"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:395"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:412"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:428"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:441"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:481"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:492"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:503"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:515"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:537"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:548"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:561"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:585"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:613"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:629"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:644"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:657"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:657"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/lodash/lodash.js:826"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:826"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:954"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:971"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:981"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:989"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1001"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1020"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1031"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1039"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1047"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1055"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1063"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1071"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/lodash/lodash.js:1100"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1100"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1100"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/lodash/lodash.js:1123"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1123"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1123"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/lodash/lodash.js:1143"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1143"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1143"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/lodash/lodash.js:1213"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1213"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/lodash/lodash.js:1225"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1225"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1225"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/lodash/lodash.js:1238"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1238"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1238"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/lodash/lodash.js:1251"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1251"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1251"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/lodash/lodash.js:1264"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1264"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1264"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1299"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/lodash/lodash.js:1315"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:1315"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1334"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1353"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1374"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1394"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1416"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1440"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1460"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1481"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1502"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1527"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1550"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1572"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1589"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1601"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1620"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1651"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1666"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1693"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1715"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1743"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1810"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1830"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1847"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1894"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1905"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1916"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1935"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1965"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:1984"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2008"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2046"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2060"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2072"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2085"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2098"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2111"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2135"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2161"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2192"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2270"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2316"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2336"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2376"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2411"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2459"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2517"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2530"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2545"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2566"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2579"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2602"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2615"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2646"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2666"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2686"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2711"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2728"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2780"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2801"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2822"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2850"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2881"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2923"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2959"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:2989"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3019"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3051"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3086"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3125"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3151"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3175"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3194"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3205"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3227"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3246"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3265"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3298"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3317"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3334"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3348"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3402"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3418"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3434"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3450"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3464"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3479"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3496"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3585"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3607"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3644"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3660"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3725"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3778"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3818"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3883"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3911"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3926"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3937"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3968"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3983"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:3995"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4006"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4034"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4053"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4068"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4107"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4126"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4140"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4167"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4187"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4199"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4212"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4224"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4294"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4319"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4338"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4360"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4393"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4425"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4454"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4471"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4482"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4500"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:4515"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4515"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:4552"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4552"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:4581"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4581"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:4606"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4606"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:4641"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4641"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:4677"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4677"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:4732"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4732"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:4787"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4787"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:4827"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4827"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:4877"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4877"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:4927"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:4927"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4927"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:4948"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4948"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:4976"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4976"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:4994"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:4994"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5044"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5044"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5061"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5061"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5123"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5123"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5141"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5141"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5193"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5193"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5239"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5239"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5273"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5273"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5333"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:5333"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5333"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5351"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5351"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5377"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5377"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5427"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5427"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5449"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5449"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5484"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5484"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5520"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5520"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5575"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5575"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5630"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5630"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5652"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:5652"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5652"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5723"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5723"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5752"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5752"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5777"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5777"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5806"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5806"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5823"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:5823"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5823"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5865"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5865"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5897"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5897"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5925"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5925"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/lodash/lodash.js:5950"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5950"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5950"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/lodash/lodash.js:5979"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:5979"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:5979"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/lodash/lodash.js:6008"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6008"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6008"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/lodash/lodash.js:6049"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6049"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6049"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/lodash/lodash.js:6082"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6082"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6082"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/lodash/lodash.js:6098"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6098"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:6098"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6098"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6117"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6117"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6145"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6145"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6190"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:6190"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6190"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6249"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:6249"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6249"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6304"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:6304"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6304"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6356"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6356"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6377"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6377"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6410"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:6410"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6410"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6442"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:6442"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6442"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6463"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6463"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6513"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:6513"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6513"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6564"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6564"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6614"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6614"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6650"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:6650"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6650"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6711"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6711"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6774"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6774"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6801"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:6801"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6801"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6839"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:6839"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6839"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6863"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6863"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6918"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6918"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6947"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6947"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:6978"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:6978"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7003"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:7003"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7003"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7063"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7063"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7127"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7127"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7173"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7173"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7223"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7223"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7258"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7278"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7278"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7319"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7319"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7343"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7343"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7381"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7381"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7425"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7425"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7466"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7466"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7519"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7519"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7561"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7561"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7600"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7600"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7776"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7776"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7797"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7797"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7819"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7819"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7841"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:7841"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7841"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7863"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7863"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7934"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7934"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7962"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7962"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:7983"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:7983"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8017"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8017"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8050"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8050"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8082"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8082"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8133"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8133"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8173"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8173"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8231"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8231"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8259"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8259"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8323"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8323"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8373"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8373"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8394"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8394"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8414"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8414"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8434"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8434"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8454"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8454"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8481"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8481"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8520"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8520"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8572"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8572"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8593"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8593"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8624"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8624"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8647"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8647"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8674"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8674"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8743"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8743"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8774"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8774"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8800"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8800"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8820"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8820"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8846"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8846"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8888"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8888"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8908"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8908"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8928"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8928"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8948"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8948"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8968"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8968"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:8994"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:8994"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9023"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:9023"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9023"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9062"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9062"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9104"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9104"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9131"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9131"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9181"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9181"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9231"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9231"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9260"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9260"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9287"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9287"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9316"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9316"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9343"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:9343"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9343"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9362"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9362"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9391"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9391"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9427"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9427"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9477"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9477"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9516"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9516"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9567"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9567"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9618"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9618"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9668"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9668"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9710"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9710"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9737"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9737"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9772"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9772"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9813"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9813"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9862"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9862"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9913"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9913"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9942"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9942"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:9971"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:9971"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10013"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10013"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10077"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10077"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10101"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10101"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10119"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10119"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10138"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10138"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10172"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10172"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10212"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10212"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10233"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10233"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10256"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10256"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10294"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10294"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10318"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10318"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10342"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10342"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10387"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10387"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10427"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10427"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10450"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10450"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10473"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10473"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10503"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10503"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10705"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10705"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10739"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10739"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10769"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10769"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10799"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10799"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10891"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10891"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10916"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10916"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10944"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10944"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:10972"
        },
        {
            "message": "unknown tag: alias",
            "line": " bower_components/lodash/lodash.js:10972"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:10972"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11017"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11017"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11039"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11039"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11058"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11058"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11087"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11087"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11115"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11115"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11142"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11142"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11168"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11168"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11260"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11260"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11277"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11295"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11295"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11321"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11321"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11347"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11347"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11406"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11406"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11455"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11455"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11478"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11478"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11496"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11496"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11545"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11545"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11594"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " bower_components/lodash/lodash.js:11594"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bower_components/lodash/lodash.js:11909"
        },
        {
            "message": "unknown tag: license",
            "line": " bower_components/lodash/lodash.min.js:1"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:411"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:411"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:448"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:448"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:459"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:459"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:467"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:467"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:475"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:475"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:483"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:483"
        },
        {
            "message": "unknown tag: name",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:491"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:491"
        },
        {
            "message": "unknown tag: deprecate",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:539"
        },
        {
            "message": "unknown tag: projectdescription",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:1572"
        },
        {
            "message": "unknown tag: version",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:1572"
        },
        {
            "message": "unknown tag: link",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:1572"
        },
        {
            "message": "unknown tag: documentation",
            "line": " config_old/env/all.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " config_old/env/all.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " config_old/env/development.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " config_old/env/production.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " config_old/env/staging-iso-production.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " config_old/env/staging-new-tag.js:1"
        },
        {
            "message": "unknown tag: documentation",
            "line": " config_old/config.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " config_old/config.js:1"
        },
        {
            "message": "unknown tag: documentation",
            "line": " config_old/database.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " config_old/database.js:1"
        },
        {
            "message": "unknown tag: documentation",
            "line": " config_old/express.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " config_old/express.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " yocto_modules/dbfactory/dbfactory.js:1"
        },
        {
            "message": "unknown tag: documentation",
            "line": " yocto_modules/mailer/mailer.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " yocto_modules/mailer/mailer.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " yocto_modules/render/render.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " yocto_modules/router/router.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " yocto_modules/social/social.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " yocto_modules/utils/utils.js:1"
        },
        {
            "message": "unknown tag: date",
            "line": " Gruntfile.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " Gruntfile.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " index.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:1"
        },
        {
            "message": "Missing item type\nThis object provides a utility for producing rich Error messages within\nAngular. It can be called as follows:\n\nvar exampleMinErr = minErr('example');\nthrow exampleMinErr('one', 'This {0} is {1}', foo, bar);\n\nThe above creates an instance of minErr in the example namespace. The\nresulting error will have a namespaced error code of example.one.  The\nresulting error will replace {0} with the value of foo, and {1} with the\nvalue of bar. The object is not restricted in the number of arguments it can\ntake.\n\nIf fewer arguments are specified than necessary for interpolation, the extra\ninterpolation markers will be preserved in the final string.\n\nSince data will be parsed statically during a build step, some restrictions\nare applied with respect to how minErr instances are created and called.\nInstances should have names of the form namespaceMinErr for a minErr created\nusing minErr('namespace') . Error codes, namespaces and template strings\nshould all be static strings, not variables or general expressions.",
            "line": " bower_components/angular/angular.js:8"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:240"
        },
        {
            "message": "Missing item type\ndocumentMode is an IE-only property\nhttp://msdn.microsoft.com/en-us/library/ie/cc196988(v=vs.85).aspx",
            "line": " bower_components/angular/angular.js:245"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:252"
        },
        {
            "message": "Missing item type\nwhen using forEach the params are value, key, but it is often useful to have key, value.",
            "line": " bower_components/angular/angular.js:352"
        },
        {
            "message": "Missing item type\nA consistent way of creating unique IDs in angular.\n\nUsing simple numbers allows us to generate 28.6 million unique ids per second for 10 years before\nwe hit number precision issues in JavaScript.\n\nMath.pow(2,53) / 60 / 60 / 24 / 365 / 10 = 28.6M",
            "line": " bower_components/angular/angular.js:361"
        },
        {
            "message": "Missing item type\nSet or clear the hashkey for an object.",
            "line": " bower_components/angular/angular.js:376"
        },
        {
            "message": "Missing item type\nDetermines if a value is a regular expression object.",
            "line": " bower_components/angular/angular.js:607"
        },
        {
            "message": "Missing item type\nChecks if `obj` is a window object.",
            "line": " bower_components/angular/angular.js:619"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:692"
        },
        {
            "message": "Missing item type\nCreates a shallow copy of an object, an array or a primitive.\n\nAssumes that there are no proto properties for objects.",
            "line": " bower_components/angular/angular.js:850"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:1077"
        },
        {
            "message": "Missing item type\nTries to decode the URI component without throwing an exception.",
            "line": " bower_components/angular/angular.js:1102"
        },
        {
            "message": "Missing item type\nParses an escaped url query string into key-value pairs.",
            "line": " bower_components/angular/angular.js:1119"
        },
        {
            "message": "Missing item type\nWe need our custom method because encodeURIComponent is too aggressive and doesn't follow\nhttp://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\nsegments:\n   segment       = *pchar\n   pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n   pct-encoded   = \"%\" HEXDIG HEXDIG\n   unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                    / \"*\" / \"+\" / \",\" / \";\" / \"=\"",
            "line": " bower_components/angular/angular.js:1161"
        },
        {
            "message": "Missing item type\nThis method is intended for encoding *key* or *value* parts of query component. We need a custom\nmethod because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\nencoded per http://tools.ietf.org/html/rfc3986:\n   query       = *( pchar / \"/\" / \"?\" )\n   pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n   unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   pct-encoded   = \"%\" HEXDIG HEXDIG\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                    / \"*\" / \"+\" / \",\" / \";\" / \"=\"",
            "line": " bower_components/angular/angular.js:1180"
        },
        {
            "message": "Missing item type\nthrow error if the argument is falsy.",
            "line": " bower_components/angular/angular.js:1582"
        },
        {
            "message": "Missing item type\nthrow error if the name given is hasOwnProperty",
            "line": " bower_components/angular/angular.js:1602"
        },
        {
            "message": "Missing item type\nReturn the value accessible from the object by path. Any undefined traversals are ignored",
            "line": " bower_components/angular/angular.js:1613"
        },
        {
            "message": "Missing item type\nReturn the DOM siblings between the first and last node in the given array.",
            "line": " bower_components/angular/angular.js:1640"
        },
        {
            "message": "Missing item type\nCreates a new object without a prototype. This object is useful for lookup without having to\nguard against prototypically inherited properties via hasOwnProperty.\n\nRelated micro-benchmarks:\n- http://jsperf.com/object-create2\n- http://jsperf.com/proto-map-lookup/2\n- http://jsperf.com/for-in-vs-object-keys2",
            "line": " bower_components/angular/angular.js:1662"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:1707"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:1779"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:1782"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:1785"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:1790"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:1981"
        },
        {
            "message": "Missing item type\nConverts snake_case to camelCase.\nAlso there is special case for Moz prefix starting with upper case letter.",
            "line": " bower_components/angular/angular.js:2410"
        },
        {
            "message": "Missing item type\nProperties: writes return selection, reads return first value",
            "line": " bower_components/angular/angular.js:2944"
        },
        {
            "message": "Missing item type\nchaining functions",
            "line": " bower_components/angular/angular.js:3262"
        },
        {
            "message": "Missing item type\nComputes a hash of an 'obj'.\nHash of a:\n string is string\n number is number as string\n object is either result of calling $$hashKey function on the object or uniquely generated id,\n        that is also assigned to the $$hashKey property of the object.",
            "line": " bower_components/angular/angular.js:3308"
        },
        {
            "message": "Missing item type\nHashMap which can use objects as keys",
            "line": " bower_components/angular/angular.js:3340"
        },
        {
            "message": "Missing item type\nStore key value pair",
            "line": " bower_components/angular/angular.js:3353"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:3362"
        },
        {
            "message": "Missing item type\nRemove the key/value pair",
            "line": " bower_components/angular/angular.js:3370"
        },
        {
            "message": "Missing item type\nImplicit module which gets automatically added to each {@link auto.$injector $injector}.",
            "line": " bower_components/angular/angular.js:3435"
        },
        {
            "message": "Missing item type\n`$injector` is used to retrieve object instances as defined by\n{@link auto.$provide provider}, instantiate types, invoke methods,\nand load modules.\n\nThe following always holds true:\n\n```js\n  var $injector = angular.injector();\n  expect($injector.get('$injector')).toBe($injector);\n  expect($injector.invoke(function($injector) {\n    return $injector;\n  })).toBe($injector);\n```\n\n# Injection Function Annotation\n\nJavaScript does not have annotations, and annotations are needed for dependency injection. The\nfollowing are all valid ways of annotating function with injection arguments and are equivalent.\n\n```js\n  // inferred (only works if code not minified/obfuscated)\n  $injector.invoke(function(serviceA){});\n\n  // annotated\n  function explicit(serviceA) {};\n  explicit.$inject = ['serviceA'];\n  $injector.invoke(explicit);\n\n  // inline\n  $injector.invoke(['serviceA', function(serviceA){}]);\n```\n\n## Inference\n\nIn JavaScript calling `toString()` on a function returns the function definition. The definition\ncan then be parsed and the function arguments can be extracted. This method of discovering\nannotations is disallowed when the injector is in strict mode.\n*NOTE:* This does not work with minification, and obfuscation tools since these tools change the\nargument names.\n\n## `$inject` Annotation\nBy adding an `$inject` property onto a function the injection parameters can be specified.\n\n## Inline\nAs an array of injection names, where the last item in the array is the function to call.",
            "line": " bower_components/angular/angular.js:3499"
        },
        {
            "message": "Missing item type\nReturn an instance of the service.",
            "line": " bower_components/angular/angular.js:3552"
        },
        {
            "message": "Missing item type\nInvoke the method and supply the method arguments from the `$injector`.",
            "line": " bower_components/angular/angular.js:3564"
        },
        {
            "message": "Missing item type\nAllows the user to query if the particular service exists.",
            "line": " bower_components/angular/angular.js:3579"
        },
        {
            "message": "Missing item type\nCreate a new instance of JS type. The method takes a constructor function, invokes the new\noperator, and supplies all of the arguments to the constructor function as specified by the\nconstructor annotation.",
            "line": " bower_components/angular/angular.js:3590"
        },
        {
            "message": "Missing item type\nReturns an array of service names which the function is requesting for injection. This API is\nused by the injector to determine which services need to be injected into the function when the\nfunction is invoked. There are three ways in which the function can be annotated with the needed\ndependencies.\n\n# Argument names\n\nThe simplest form is to extract the dependencies from the arguments of the function. This is done\nby converting the function into a string using `toString()` method and extracting the argument\nnames.\n```js\n  // Given\n  function MyController($scope, $route) {\n    // ...\n  }\n\n  // Then\n  expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n```\n\nYou can disallow this method by using strict injection mode.\n\nThis method does not work with code minification / obfuscation. For this reason the following\nannotation strategies are supported.\n\n# The `$inject` property\n\nIf a function has an `$inject` property and its value is an array of strings, then the strings\nrepresent names of services to be injected into the function.\n```js\n  // Given\n  var MyController = function(obfuscatedScope, obfuscatedRoute) {\n    // ...\n  }\n  // Define function dependencies\n  MyController['$inject'] = ['$scope', '$route'];\n\n  // Then\n  expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n```\n\n# The array notation\n\nIt is often desirable to inline Injected functions and that's when setting the `$inject` property\nis very inconvenient. In these situations using the array notation to specify the dependencies in\na way that survives minification is a better choice:\n\n```js\n  // We wish to write this (not minification / obfuscation safe)\n  injector.invoke(function($compile, $rootScope) {\n    // ...\n  });\n\n  // We are forced to write break inlining\n  var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {\n    // ...\n  };\n  tmpFn.$inject = ['$compile', '$rootScope'];\n  injector.invoke(tmpFn);\n\n  // To better support inline function the inline annotation is supported\n  injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {\n    // ...\n  }]);\n\n  // Therefore\n  expect(injector.annotate(\n     ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])\n   ).toEqual(['$compile', '$rootScope']);\n```",
            "line": " bower_components/angular/angular.js:3604"
        },
        {
            "message": "Missing item type\nThe {@link auto.$provide $provide} service has a number of methods for registering components\nwith the {@link auto.$injector $injector}. Many of these functions are also exposed on\n{@link angular.Module}.\n\nAn Angular **service** is a singleton object created by a **service factory**.  These **service\nfactories** are functions which, in turn, are created by a **service provider**.\nThe **service providers** are constructor functions. When instantiated they must contain a\nproperty called `$get`, which holds the **service factory** function.\n\nWhen you request a service, the {@link auto.$injector $injector} is responsible for finding the\ncorrect **service provider**, instantiating it and then calling its `$get` **service factory**\nfunction to get the instance of the **service**.\n\nOften services have no configuration options and there is no need to add methods to the service\nprovider.  The provider will be no more than a constructor function with a `$get` property. For\nthese cases the {@link auto.$provide $provide} service has additional helper methods to register\nservices without specifying a provider.\n\n* {@link auto.$provide#provider provider(provider)} - registers a **service provider** with the\n    {@link auto.$injector $injector}\n* {@link auto.$provide#constant constant(obj)} - registers a value/object that can be accessed by\n    providers and services.\n* {@link auto.$provide#value value(obj)} - registers a value/object that can only be accessed by\n    services, not providers.\n* {@link auto.$provide#factory factory(fn)} - registers a service **factory function**, `fn`,\n    that will be wrapped in a **service provider** object, whose `$get` property will contain the\n    given factory function.\n* {@link auto.$provide#service service(class)} - registers a **constructor function**, `class`\n    that will be wrapped in a **service provider** object, whose `$get` property will instantiate\n     a new object using the given constructor function.\n\nSee the individual methods for more information and examples.",
            "line": " bower_components/angular/angular.js:3691"
        },
        {
            "message": "Missing item type\nRegister a **provider function** with the {@link auto.$injector $injector}. Provider functions\nare constructor functions, whose instances are responsible for \"providing\" a factory for a\nservice.\n\nService provider names start with the name of the service they provide followed by `Provider`.\nFor example, the {@link ng.$log $log} service has a provider called\n{@link ng.$logProvider $logProvider}.\n\nService provider objects can have additional methods which allow configuration of the provider\nand its service. Importantly, you can configure what kind of service is created by the `$get`\nmethod, or how that service will act. For example, the {@link ng.$logProvider $logProvider} has a\nmethod {@link ng.$logProvider#debugEnabled debugEnabled}\nwhich lets you specify whether the {@link ng.$log $log} service will log debug messages to the\nconsole or not.",
            "line": " bower_components/angular/angular.js:3731"
        },
        {
            "message": "Missing item type\nRegister a **service factory**, which will be called to return the service instance.\nThis is short for registering a service where its provider consists of only a `$get` property,\nwhich is the given service factory function.\nYou should use {@link auto.$provide#factory $provide.factory(getFn)} if you do not need to\nconfigure your service in a provider.",
            "line": " bower_components/angular/angular.js:3827"
        },
        {
            "message": "Missing item type\nRegister a **service constructor**, which will be invoked with `new` to create the service\ninstance.\nThis is short for registering a service where its provider's `$get` property is the service\nconstructor function that will be used to instantiate the service instance.\n\nYou should use {@link auto.$provide#service $provide.service(class)} if you define your service\nas a type/class.",
            "line": " bower_components/angular/angular.js:3861"
        },
        {
            "message": "Missing item type\nRegister a **value service** with the {@link auto.$injector $injector}, such as a string, a\nnumber, an array, an object or a function.  This is short for registering a service where its\nprovider's `$get` property is a factory function that takes no arguments and returns the **value\nservice**.\n\nValue services are similar to constant services, except that they cannot be injected into a\nmodule configuration function (see {@link angular.Module#config}) but they can be overridden by\nan Angular\n{@link auto.$provide#decorator decorator}.",
            "line": " bower_components/angular/angular.js:3902"
        },
        {
            "message": "Missing item type\nRegister a **constant service**, such as a string, a number, an array, an object or a function,\nwith the {@link auto.$injector $injector}. Unlike {@link auto.$provide#value value} it can be\ninjected into a module configuration function (see {@link angular.Module#config}) and it cannot\nbe overridden by an Angular {@link auto.$provide#decorator decorator}.",
            "line": " bower_components/angular/angular.js:3935"
        },
        {
            "message": "Missing item type\nRegister a **service decorator** with the {@link auto.$injector $injector}. A service decorator\nintercepts the creation of a service, allowing it to override or modify the behaviour of the\nservice. The object returned by the decorator may be the original service, or a new service\nobject which replaces or wraps and delegates to the original service.",
            "line": " bower_components/angular/angular.js:3963"
        },
        {
            "message": "Missing item type\nUse `$anchorScrollProvider` to disable automatic scrolling whenever\n{@link ng.$location#hash $location.hash()} changes.",
            "line": " bower_components/angular/angular.js:4230"
        },
        {
            "message": "Missing item type\nBy default, {@link ng.$anchorScroll $anchorScroll()} will automatically detect changes to\n{@link ng.$location#hash $location.hash()} and scroll to the element matching the new hash.<br />\nUse this method to disable automatic scrolling.\n\nIf automatic scrolling is disabled, one must explicitly call\n{@link ng.$anchorScroll $anchorScroll()} in order to scroll to the element related to the\ncurrent hash.",
            "line": " bower_components/angular/angular.js:4242"
        },
        {
            "message": "Missing item type\nDefault implementation of $animate that doesn't perform any animations, instead just\nsynchronously performs DOM\nupdates and calls done() callbacks.\n\nIn order to enable animations the ngAnimate module has to be loaded.\n\nTo see the functional implementation check out src/ngAnimate/animate.js",
            "line": " bower_components/angular/angular.js:4498"
        },
        {
            "message": "Missing item type\nRegisters a new injectable animation factory function. The factory function produces the\nanimation object which contains callback functions for each event that is expected to be\nanimated.\n\n  * `eventFn`: `function(Element, doneFunction)` The element to animate, the `doneFunction`\n  must be called once the element animation is complete. If a function is returned then the\n  animation service will use this function to cancel the animation whenever a cancel event is\n  triggered.\n\n\n```js\n  return {\n    eventFn : function(element, done) {\n      //code to run the animation\n      //once complete, then run done()\n      return function cancellationFunction() {\n        //code to cancel the animation\n      }\n    }\n  }\n```",
            "line": " bower_components/angular/angular.js:4517"
        },
        {
            "message": "Missing item type\nSets and/or returns the CSS class regular expression that is checked when performing\nan animation. Upon bootstrap the classNameFilter value is not set at all and will\ntherefore enable $animate to attempt to perform an animation on any element.\nWhen setting the classNameFilter value, animations will only be performed on elements\nthat successfully match the filter expression. This in turn can boost performance\nfor low-powered devices as well as applications containing a lot of structural operations.",
            "line": " bower_components/angular/angular.js:4556"
        },
        {
            "message": "Missing item type\nThe $animate service provides rudimentary DOM manipulation functions to\n insert, remove and move elements within the DOM, as well as adding and removing classes.\n This service is the core service used by the ngAnimate $animator service which provides\n high-level animation hooks for CSS and JavaScript.\n$animate is available in the AngularJS core, however, the ngAnimate module must be included\n to enable full out animation support. Otherwise, $animate will only perform simple DOM\n manipulation operations.\nTo learn more about enabling animation support, click here to visit the {@link ngAnimate\n ngAnimate module page} as well as the {@link ngAnimate.$animate ngAnimate $animate service\n page}.",
            "line": " bower_components/angular/angular.js:4648"
        },
        {
            "message": "Missing item type\nInserts the element into the DOM either after the `after` element or\n as the first child within the `parent` element. When the function is called a promise\n is returned that will be resolved at a later time.",
            "line": " bower_components/angular/angular.js:4671"
        },
        {
            "message": "Missing item type\nRemoves the element from the DOM. When the function is called a promise\n is returned that will be resolved at a later time.",
            "line": " bower_components/angular/angular.js:4694"
        },
        {
            "message": "Missing item type\nMoves the position of the provided element within the DOM to be placed\n either after the `after` element or inside of the `parent` element. When the function\n is called a promise is returned that will be resolved at a later time.",
            "line": " bower_components/angular/angular.js:4711"
        },
        {
            "message": "Missing item type\nAdds the provided className CSS class value to the provided element.\n When the function is called a promise is returned that will be resolved at a later time.",
            "line": " bower_components/angular/angular.js:4735"
        },
        {
            "message": "Missing item type\nRemoves the provided className CSS class value from the provided element.\n When the function is called a promise is returned that will be resolved at a later time.",
            "line": " bower_components/angular/angular.js:4764"
        },
        {
            "message": "Missing item type\nAdds and/or removes the given CSS classes to and from the element.\n When the function is called a promise is returned that will be resolved at a later time.",
            "line": " bower_components/angular/angular.js:4793"
        },
        {
            "message": "Missing item type\nThis object has two goals:\n\n- hide all the global state in the browser caused by the window object\n- abstract away all the browser specific features and inconsistencies\n\nFor tests we provide {@link ngMock.$browser mock implementation} of the `$browser`\nservice, which can be used for convenient testing of the application without the interaction with\nthe real browser apis.",
            "line": " bower_components/angular/angular.js:4879"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:4894"
        },
        {
            "message": "Missing item type\nExecutes the `fn` function(supports currying) and decrements the `outstandingRequestCallbacks`\ncounter. If the counter reaches 0, all the `outstandingRequestCallbacks` are executed.",
            "line": " bower_components/angular/angular.js:4918"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:4944"
        },
        {
            "message": "Missing item type\nAdds a function to the list of functions that poller periodically executes,\nand starts polling if not started yet.",
            "line": " bower_components/angular/angular.js:4969"
        },
        {
            "message": "Missing item type\nConfigures the poller to run in the specified intervals, using the specified\nsetTimeout fn and kicks it off.",
            "line": " bower_components/angular/angular.js:4986"
        },
        {
            "message": "Missing item type\nGETTER:\nWithout any argument, this method just returns current value of location.href.\n\nSETTER:\nWith at least one argument, this method sets url to new value.\nIf html5 history api supported, pushState/replaceState is used, otherwise\nlocation.href/location.replace is used.\nReturns its own instance to allow chaining\n\nNOTE: this api is intended for use only by the $location service. Please use the\n{@link ng.$location $location service} to change url.",
            "line": " bower_components/angular/angular.js:5013"
        },
        {
            "message": "Missing item type\nThis method is a getter.\n\nReturn history.state or null if history.state is undefined.",
            "line": " bower_components/angular/angular.js:5089"
        },
        {
            "message": "Missing item type\nRegister callback function that will be called, when url changes.\n\nIt's only called when the url is changed from outside of angular:\n- user types different url into address bar\n- user clicks on history (forward/back) button\n- user clicks on a link\n\nIt's not called when url is changed by $browser.url() method\n\nThe listener gets called with new url as parameter.\n\nNOTE: this api is intended for use only by the $location service. Please use the\n{@link ng.$location $location service} to monitor url changes in angular apps.",
            "line": " bower_components/angular/angular.js:5145"
        },
        {
            "message": "Missing item type\nChecks whether the url has changed outside of Angular.\nNeeds to be exported to be able to check for changes that have been done in sync,\nas hashchange/popstate events fire in async.",
            "line": " bower_components/angular/angular.js:5185"
        },
        {
            "message": "Missing item type\nReturns current <base href>\n(always relative - without domain)",
            "line": " bower_components/angular/angular.js:5196"
        },
        {
            "message": "Missing item type\nThe cookies method provides a 'private' low level access to browser cookies.\nIt is not meant to be used directly, use the $cookie service instead.\n\nThe return values vary depending on the arguments that the method was called with as follows:\n\n- cookies() -> hash of all cookies, this is NOT a copy of the internal state, so do not modify\n  it\n- cookies(name, value) -> set name to value, if value is undefined delete the cookie\n- cookies(name) -> the same as (name, undefined) == DELETES (no one calls it right now that\n  way)",
            "line": " bower_components/angular/angular.js:5225"
        },
        {
            "message": "Missing item type\nExecutes a fn asynchronously via `setTimeout(fn, delay)`.\n\nUnlike when calling `setTimeout` directly, in test this function is mocked and instead of using\n`setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed\nvia `$browser.defer.flush()`.",
            "line": " bower_components/angular/angular.js:5293"
        },
        {
            "message": "Missing item type\nCancels a deferred task identified with `deferId`.",
            "line": " bower_components/angular/angular.js:5319"
        },
        {
            "message": "Missing item type\nFactory that constructs {@link $cacheFactory.Cache Cache} objects and gives access to\nthem.\n\n```js\n\n var cache = $cacheFactory('cacheId');\n expect($cacheFactory.get('cacheId')).toBe(cache);\n expect($cacheFactory.get('noSuchCacheId')).not.toBeDefined();\n\n cache.put(\"key\", \"value\");\n cache.put(\"another key\", \"another value\");\n\n // We've specified no options on creation\n expect(cache.info()).toEqual({id: 'cacheId', size: 2});\n\n```",
            "line": " bower_components/angular/angular.js:5348"
        },
        {
            "message": "Missing item type\nA cache object used to store and retrieve data, primarily used by\n{@link $http $http} and the {@link ng.directive:script script} directive to cache\ntemplates and other data.\n\n```js\n angular.module('superCache')\n   .factory('superCache', ['$cacheFactory', function($cacheFactory) {\n     return $cacheFactory('super-cache');\n   }]);\n```\n\nExample test:\n\n```js\n it('should behave like a cache', inject(function(superCache) {\n   superCache.put('key', 'value');\n   superCache.put('another key', 'another value');\n\n   expect(superCache.info()).toEqual({\n     id: 'super-cache',\n     size: 2\n   });\n\n   superCache.remove('another key');\n   expect(superCache.get('another key')).toBeUndefined();\n\n   superCache.removeAll();\n   expect(superCache.info()).toEqual({\n     id: 'super-cache',\n     size: 0\n   });\n }));\n```",
            "line": " bower_components/angular/angular.js:5447"
        },
        {
            "message": "Missing item type\nInserts a named entry into the {@link $cacheFactory.Cache Cache} object to be\nretrieved later, and incrementing the size of the cache if the key was not already\npresent in the cache. If behaving like an LRU cache, it will also remove stale\nentries from the set.\n\nIt will not insert undefined values into the cache.",
            "line": " bower_components/angular/angular.js:5488"
        },
        {
            "message": "Missing item type\nRetrieves named data stored in the {@link $cacheFactory.Cache Cache} object.",
            "line": " bower_components/angular/angular.js:5524"
        },
        {
            "message": "Missing item type\nRemoves an entry from the {@link $cacheFactory.Cache Cache} object.",
            "line": " bower_components/angular/angular.js:5548"
        },
        {
            "message": "Missing item type\nClears the cache object of any entries.",
            "line": " bower_components/angular/angular.js:5576"
        },
        {
            "message": "Missing item type\nDestroys the {@link $cacheFactory.Cache Cache} object entirely,\nremoving it from the {@link $cacheFactory $cacheFactory} set.",
            "line": " bower_components/angular/angular.js:5592"
        },
        {
            "message": "Missing item type\nRetrieve information regarding a particular {@link $cacheFactory.Cache Cache}.",
            "line": " bower_components/angular/angular.js:5609"
        },
        {
            "message": "Missing item type\nmakes the `entry` the freshEnd of the LRU linked list",
            "line": " bower_components/angular/angular.js:5631"
        },
        {
            "message": "Missing item type\nbidirectionally links two entries of the LRU linked list",
            "line": " bower_components/angular/angular.js:5650"
        },
        {
            "message": "Missing item type\nGet information about all the caches that have been created",
            "line": " bower_components/angular/angular.js:5662"
        },
        {
            "message": "Missing item type\nGet access to a cache object by the `cacheId` used when it was created.",
            "line": " bower_components/angular/angular.js:5680"
        },
        {
            "message": "Missing item type\nThe first time a template is used, it is loaded in the template cache for quick retrieval. You\ncan load templates directly into the cache in a `script` tag, or by consuming the\n`$templateCache` service directly.\n\nAdding via the `script` tag:\n\n```html\n  <script type=\"text/ng-template\" id=\"templateId.html\">\n    <p>This is the content of the template</p>\n  </script>\n```\n\n**Note:** the `script` tag containing the template does not need to be included in the `head` of\nthe document, but it must be a descendent of the {@link ng.$rootElement $rootElement} (IE,\nelement with ng-app attribute), otherwise the template will be ignored.\n\nAdding via the `$templateCache` service:\n\n```js\nvar myApp = angular.module('myApp', []);\nmyApp.run(function($templateCache) {\n  $templateCache.put('templateId.html', 'This is the content of the template');\n});\n```\n\nTo retrieve the template later, simply use it in your HTML:\n```html\n<div ng-include=\" 'templateId.html' \"></div>\n```\n\nor get it via Javascript:\n```js\n$templateCache.get('templateId.html')\n```\n\nSee {@link ng.$cacheFactory $cacheFactory}.",
            "line": " bower_components/angular/angular.js:5699"
        },
        {
            "message": "Missing item type\nCompiles an HTML string or DOM into a template and produces a template function, which\ncan then be used to link {@link ng.$rootScope.Scope `scope`} and the template together.\n\nThe compilation is a process of walking the DOM tree and matching DOM elements to\n{@link ng.$compileProvider#directive directives}.\n\n<div class=\"alert alert-warning\">\n**Note:** This document is an in-depth reference of all directive options.\nFor a gentle introduction to directives with examples of common use cases,\nsee the {@link guide/directive directive guide}.\n</div>\n\n## Comprehensive Directive API\n\nThere are many different options for a directive.\n\nThe difference resides in the return value of the factory function.\nYou can either return a \"Directive Definition Object\" (see below) that defines the directive properties,\nor just the `postLink` function (all other properties will have the default values).\n\n<div class=\"alert alert-success\">\n**Best Practice:** It's recommended to use the \"directive definition object\" form.\n</div>\n\nHere's an example directive declared with a Directive Definition Object:\n\n```js\n  var myModule = angular.module(...);\n\n  myModule.directive('directiveName', function factory(injectables) {\n    var directiveDefinitionObject = {\n      priority: 0,\n      template: '<div></div>', // or // function(tElement, tAttrs) { ... },\n      // or\n      // templateUrl: 'directive.html', // or // function(tElement, tAttrs) { ... },\n      transclude: false,\n      restrict: 'A',\n      templateNamespace: 'html',\n      scope: false,\n      controller: function($scope, $element, $attrs, $transclude, otherInjectables) { ... },\n      controllerAs: 'stringAlias',\n      require: 'siblingDirectiveName', // or // ['^parentDirectiveName', '?optionalDirectiveName', '?^optionalParent'],\n      compile: function compile(tElement, tAttrs, transclude) {\n        return {\n          pre: function preLink(scope, iElement, iAttrs, controller) { ... },\n          post: function postLink(scope, iElement, iAttrs, controller) { ... }\n        }\n        // or\n        // return function postLink( ... ) { ... }\n      },\n      // or\n      // link: {\n      //  pre: function preLink(scope, iElement, iAttrs, controller) { ... },\n      //  post: function postLink(scope, iElement, iAttrs, controller) { ... }\n      // }\n      // or\n      // link: function postLink( ... ) { ... }\n    };\n    return directiveDefinitionObject;\n  });\n```\n\n<div class=\"alert alert-warning\">\n**Note:** Any unspecified options will use the default value. You can see the default values below.\n</div>\n\nTherefore the above can be simplified as:\n\n```js\n  var myModule = angular.module(...);\n\n  myModule.directive('directiveName', function factory(injectables) {\n    var directiveDefinitionObject = {\n      link: function postLink(scope, iElement, iAttrs) { ... }\n    };\n    return directiveDefinitionObject;\n    // or\n    // return function postLink(scope, iElement, iAttrs) { ... }\n  });\n```\n\n\n\n### Directive Definition Object\n\nThe directive definition object provides instructions to the {@link ng.$compile\ncompiler}. The attributes are:\n\n#### `multiElement`\nWhen this property is set to true, the HTML compiler will collect DOM nodes between\nnodes with the attributes `directive-name-start` and `directive-name-end`, and group them\ntogether as the directive elements. It is recommended that this feature be used on directives\nwhich are not strictly behavioural (such as {@link ngClick}), and which\ndo not manipulate or replace child nodes (such as {@link ngInclude}).\n\n#### `priority`\nWhen there are multiple directives defined on a single DOM element, sometimes it\nis necessary to specify the order in which the directives are applied. The `priority` is used\nto sort the directives before their `compile` functions get called. Priority is defined as a\nnumber. Directives with greater numerical `priority` are compiled first. Pre-link functions\nare also run in priority order, but post-link functions are run in reverse order. The order\nof directives with the same priority is undefined. The default priority is `0`.\n\n#### `terminal`\nIf set to true then the current `priority` will be the last set of directives\nwhich will execute (any directives at the current priority will still execute\nas the order of execution on same `priority` is undefined). Note that expressions\nand other directives used in the directive's template will also be excluded from execution.\n\n#### `scope`\n**If set to `true`,** then a new scope will be created for this directive. If multiple directives on the\nsame element request a new scope, only one new scope is created. The new scope rule does not\napply for the root of the template since the root of the template always gets a new scope.\n\n**If set to `{}` (object hash),** then a new \"isolate\" scope is created. The 'isolate' scope differs from\nnormal scope in that it does not prototypically inherit from the parent scope. This is useful\nwhen creating reusable components, which should not accidentally read or modify data in the\nparent scope.\n\nThe 'isolate' scope takes an object hash which defines a set of local scope properties\nderived from the parent scope. These local properties are useful for aliasing values for\ntemplates. Locals definition is a hash of local scope property to its source:\n\n* `@` or `@attr` - bind a local scope property to the value of DOM attribute. The result is\n  always a string since DOM attributes are strings. If no `attr` name is specified  then the\n  attribute name is assumed to be the same as the local name.\n  Given `<widget my-attr=\"hello {{name}}\">` and widget definition\n  of `scope: { localName:'@myAttr' }`, then widget scope property `localName` will reflect\n  the interpolated value of `hello {{name}}`. As the `name` attribute changes so will the\n  `localName` property on the widget scope. The `name` is read from the parent scope (not\n  component scope).\n\n* `=` or `=attr` - set up bi-directional binding between a local scope property and the\n  parent scope property of name defined via the value of the `attr` attribute. If no `attr`\n  name is specified then the attribute name is assumed to be the same as the local name.\n  Given `<widget my-attr=\"parentModel\">` and widget definition of\n  `scope: { localModel:'=myAttr' }`, then widget scope property `localModel` will reflect the\n  value of `parentModel` on the parent scope. Any changes to `parentModel` will be reflected\n  in `localModel` and any changes in `localModel` will reflect in `parentModel`. If the parent\n  scope property doesn't exist, it will throw a NON_ASSIGNABLE_MODEL_EXPRESSION exception. You\n  can avoid this behavior using `=?` or `=?attr` in order to flag the property as optional. If\n  you want to shallow watch for changes (i.e. $watchCollection instead of $watch) you can use\n  `=*` or `=*attr` (`=*?` or `=*?attr` if the property is optional).\n\n* `&` or `&attr` - provides a way to execute an expression in the context of the parent scope.\n  If no `attr` name is specified then the attribute name is assumed to be the same as the\n  local name. Given `<widget my-attr=\"count = count + value\">` and widget definition of\n  `scope: { localFn:'&myAttr' }`, then isolate scope property `localFn` will point to\n  a function wrapper for the `count = count + value` expression. Often it's desirable to\n  pass data from the isolated scope via an expression to the parent scope, this can be\n  done by passing a map of local variable names and values into the expression wrapper fn.\n  For example, if the expression is `increment(amount)` then we can specify the amount value\n  by calling the `localFn` as `localFn({amount: 22})`.\n\n\n#### `bindToController`\nWhen an isolate scope is used for a component (see above), and `controllerAs` is used, `bindToController: true` will\nallow a component to have its properties bound to the controller, rather than to scope. When the controller\nis instantiated, the initial values of the isolate scope bindings are already available.\n\n#### `controller`\nController constructor function. The controller is instantiated before the\npre-linking phase and it is shared with other directives (see\n`require` attribute). This allows the directives to communicate with each other and augment\neach other's behavior. The controller is injectable (and supports bracket notation) with the following locals:\n\n* `$scope` - Current scope associated with the element\n* `$element` - Current element\n* `$attrs` - Current attributes object for the element\n* `$transclude` - A transclude linking function pre-bound to the correct transclusion scope:\n  `function([scope], cloneLinkingFn, futureParentElement)`.\n   * `scope`: optional argument to override the scope.\n   * `cloneLinkingFn`: optional argument to create clones of the original transcluded content.\n   * `futureParentElement`:\n       * defines the parent to which the `cloneLinkingFn` will add the cloned elements.\n       * default: `$element.parent()` resp. `$element` for `transclude:'element'` resp. `transclude:true`.\n       * only needed for transcludes that are allowed to contain non html elements (e.g. SVG elements)\n         and when the `cloneLinkinFn` is passed,\n         as those elements need to created and cloned in a special way when they are defined outside their\n         usual containers (e.g. like `<svg>`).\n       * See also the `directive.templateNamespace` property.\n\n\n#### `require`\nRequire another directive and inject its controller as the fourth argument to the linking function. The\n`require` takes a string name (or array of strings) of the directive(s) to pass in. If an array is used, the\ninjected argument will be an array in corresponding order. If no such directive can be\nfound, or if the directive does not have a controller, then an error is raised (unless no link function\nis specified, in which case error checking is skipped). The name can be prefixed with:\n\n* (no prefix) - Locate the required controller on the current element. Throw an error if not found.\n* `?` - Attempt to locate the required controller or pass `null` to the `link` fn if not found.\n* `^` - Locate the required controller by searching the element and its parents. Throw an error if not found.\n* `^^` - Locate the required controller by searching the element's parents. Throw an error if not found.\n* `?^` - Attempt to locate the required controller by searching the element and its parents or pass\n  `null` to the `link` fn if not found.\n* `?^^` - Attempt to locate the required controller by searching the element's parents, or pass\n  `null` to the `link` fn if not found.\n\n\n#### `controllerAs`\nController alias at the directive scope. An alias for the controller so it\ncan be referenced at the directive template. The directive needs to define a scope for this\nconfiguration to be used. Useful in the case when directive is used as component.\n\n\n#### `restrict`\nString of subset of `EACM` which restricts the directive to a specific directive\ndeclaration style. If omitted, the defaults (elements and attributes) are used.\n\n* `E` - Element name (default): `<my-directive></my-directive>`\n* `A` - Attribute (default): `<div my-directive=\"exp\"></div>`\n* `C` - Class: `<div class=\"my-directive: exp;\"></div>`\n* `M` - Comment: `<!-- directive: my-directive exp -->`\n\n\n#### `templateNamespace`\nString representing the document type used by the markup in the template.\nAngularJS needs this information as those elements need to be created and cloned\nin a special way when they are defined outside their usual containers like `<svg>` and `<math>`.\n\n* `html` - All root nodes in the template are HTML. Root nodes may also be\n  top-level elements such as `<svg>` or `<math>`.\n* `svg` - The root nodes in the template are SVG elements (excluding `<math>`).\n* `math` - The root nodes in the template are MathML elements (excluding `<svg>`).\n\nIf no `templateNamespace` is specified, then the namespace is considered to be `html`.\n\n#### `template`\nHTML markup that may:\n* Replace the contents of the directive's element (default).\n* Replace the directive's element itself (if `replace` is true - DEPRECATED).\n* Wrap the contents of the directive's element (if `transclude` is true).\n\nValue may be:\n\n* A string. For example `<div red-on-hover>{{delete_str}}</div>`.\n* A function which takes two arguments `tElement` and `tAttrs` (described in the `compile`\n  function api below) and returns a string value.\n\n\n#### `templateUrl`\nThis is similar to `template` but the template is loaded from the specified URL, asynchronously.\n\nBecause template loading is asynchronous the compiler will suspend compilation of directives on that element\nfor later when the template has been resolved.  In the meantime it will continue to compile and link\nsibling and parent elements as though this element had not contained any directives.\n\nThe compiler does not suspend the entire compilation to wait for templates to be loaded because this\nwould result in the whole app \"stalling\" until all templates are loaded asynchronously - even in the\ncase when only one deeply nested directive has `templateUrl`.\n\nTemplate loading is asynchronous even if the template has been preloaded into the {@link $templateCache}\n\nYou can specify `templateUrl` as a string representing the URL or as a function which takes two\narguments `tElement` and `tAttrs` (described in the `compile` function api below) and returns\na string value representing the url.  In either case, the template URL is passed through {@link\n$sce#getTrustedResourceUrl $sce.getTrustedResourceUrl}.\n\n\n#### `replace` ([*DEPRECATED*!], will be removed in next major release - i.e. v2.0)\nspecify what the template should replace. Defaults to `false`.\n\n* `true` - the template will replace the directive's element.\n* `false` - the template will replace the contents of the directive's element.\n\nThe replacement process migrates all of the attributes / classes from the old element to the new\none. See the {@link guide/directive#template-expanding-directive\nDirectives Guide} for an example.\n\nThere are very few scenarios where element replacement is required for the application function,\nthe main one being reusable custom components that are used within SVG contexts\n(because SVG doesn't work with custom elements in the DOM tree).\n\n#### `transclude`\nExtract the contents of the element where the directive appears and make it available to the directive.\nThe contents are compiled and provided to the directive as a **transclusion function**. See the\n{@link $compile#transclusion Transclusion} section below.\n\nThere are two kinds of transclusion depending upon whether you want to transclude just the contents of the\ndirective's element or the entire element:\n\n* `true` - transclude the content (i.e. the child nodes) of the directive's element.\n* `'element'` - transclude the whole of the directive's element including any directives on this\n  element that defined at a lower priority than this directive. When used, the `template`\n  property is ignored.\n\n\n#### `compile`\n\n```js\n  function compile(tElement, tAttrs, transclude) { ... }\n```\n\nThe compile function deals with transforming the template DOM. Since most directives do not do\ntemplate transformation, it is not used often. The compile function takes the following arguments:\n\n  * `tElement` - template element - The element where the directive has been declared. It is\n    safe to do template transformation on the element and child elements only.\n\n  * `tAttrs` - template attributes - Normalized list of attributes declared on this element shared\n    between all directive compile functions.\n\n  * `transclude` -  [*DEPRECATED*!] A transclude linking function: `function(scope, cloneLinkingFn)`\n\n<div class=\"alert alert-warning\">\n**Note:** The template instance and the link instance may be different objects if the template has\nbeen cloned. For this reason it is **not** safe to do anything other than DOM transformations that\napply to all cloned DOM nodes within the compile function. Specifically, DOM listener registration\nshould be done in a linking function rather than in a compile function.\n</div>\n\n<div class=\"alert alert-warning\">\n**Note:** The compile function cannot handle directives that recursively use themselves in their\nown templates or compile functions. Compiling these directives results in an infinite loop and a\nstack overflow errors.\n\nThis can be avoided by manually using $compile in the postLink function to imperatively compile\na directive's template instead of relying on automatic template compilation via `template` or\n`templateUrl` declaration or manual compilation inside the compile function.\n</div>\n\n<div class=\"alert alert-error\">\n**Note:** The `transclude` function that is passed to the compile function is deprecated, as it\n  e.g. does not know about the right outer scope. Please use the transclude function that is passed\n  to the link function instead.\n</div>\n\nA compile function can have a return value which can be either a function or an object.\n\n* returning a (post-link) function - is equivalent to registering the linking function via the\n  `link` property of the config object when the compile function is empty.\n\n* returning an object with function(s) registered via `pre` and `post` properties - allows you to\n  control when a linking function should be called during the linking phase. See info about\n  pre-linking and post-linking functions below.\n\n\n#### `link`\nThis property is used only if the `compile` property is not defined.\n\n```js\n  function link(scope, iElement, iAttrs, controller, transcludeFn) { ... }\n```\n\nThe link function is responsible for registering DOM listeners as well as updating the DOM. It is\nexecuted after the template has been cloned. This is where most of the directive logic will be\nput.\n\n  * `scope` - {@link ng.$rootScope.Scope Scope} - The scope to be used by the\n    directive for registering {@link ng.$rootScope.Scope#$watch watches}.\n\n  * `iElement` - instance element - The element where the directive is to be used. It is safe to\n    manipulate the children of the element only in `postLink` function since the children have\n    already been linked.\n\n  * `iAttrs` - instance attributes - Normalized list of attributes declared on this element shared\n    between all directive linking functions.\n\n  * `controller` - a controller instance - A controller instance if at least one directive on the\n    element defines a controller. The controller is shared among all the directives, which allows\n    the directives to use the controllers as a communication channel.\n\n  * `transcludeFn` - A transclude linking function pre-bound to the correct transclusion scope.\n    This is the same as the `$transclude`\n    parameter of directive controllers, see there for details.\n    `function([scope], cloneLinkingFn, futureParentElement)`.\n\n#### Pre-linking function\n\nExecuted before the child elements are linked. Not safe to do DOM transformation since the\ncompiler linking function will fail to locate the correct elements for linking.\n\n#### Post-linking function\n\nExecuted after the child elements are linked.\n\nNote that child elements that contain `templateUrl` directives will not have been compiled\nand linked since they are waiting for their template to load asynchronously and their own\ncompilation and linking has been suspended until that occurs.\n\nIt is safe to do DOM transformation in the post-linking function on elements that are not waiting\nfor their async templates to be resolved.\n\n\n### Transclusion\n\nTransclusion is the process of extracting a collection of DOM element from one part of the DOM and\ncopying them to another part of the DOM, while maintaining their connection to the original AngularJS\nscope from where they were taken.\n\nTransclusion is used (often with {@link ngTransclude}) to insert the\noriginal contents of a directive's element into a specified place in the template of the directive.\nThe benefit of transclusion, over simply moving the DOM elements manually, is that the transcluded\ncontent has access to the properties on the scope from which it was taken, even if the directive\nhas isolated scope.\nSee the {@link guide/directive#creating-a-directive-that-wraps-other-elements Directives Guide}.\n\nThis makes it possible for the widget to have private state for its template, while the transcluded\ncontent has access to its originating scope.\n\n<div class=\"alert alert-warning\">\n**Note:** When testing an element transclude directive you must not place the directive at the root of the\nDOM fragment that is being compiled. See {@link guide/unit-testing#testing-transclusion-directives\nTesting Transclusion Directives}.\n</div>\n\n#### Transclusion Functions\n\nWhen a directive requests transclusion, the compiler extracts its contents and provides a **transclusion\nfunction** to the directive's `link` function and `controller`. This transclusion function is a special\n**linking function** that will return the compiled contents linked to a new transclusion scope.\n\n<div class=\"alert alert-info\">\nIf you are just using {@link ngTransclude} then you don't need to worry about this function, since\nngTransclude will deal with it for us.\n</div>\n\nIf you want to manually control the insertion and removal of the transcluded content in your directive\nthen you must use this transclude function. When you call a transclude function it returns a a jqLite/JQuery\nobject that contains the compiled DOM, which is linked to the correct transclusion scope.\n\nWhen you call a transclusion function you can pass in a **clone attach function**. This function accepts\ntwo parameters, `function(clone, scope) { ... }`, where the `clone` is a fresh compiled copy of your transcluded\ncontent and the `scope` is the newly created transclusion scope, to which the clone is bound.\n\n<div class=\"alert alert-info\">\n**Best Practice**: Always provide a `cloneFn` (clone attach function) when you call a translude function\nsince you then get a fresh clone of the original DOM and also have access to the new transclusion scope.\n</div>\n\nIt is normal practice to attach your transcluded content (`clone`) to the DOM inside your **clone\nattach function**:\n\n```js\nvar transcludedContent, transclusionScope;\n\n$transclude(function(clone, scope) {\n  element.append(clone);\n  transcludedContent = clone;\n  transclusionScope = scope;\n});\n```\n\nLater, if you want to remove the transcluded content from your DOM then you should also destroy the\nassociated transclusion scope:\n\n```js\ntranscludedContent.remove();\ntransclusionScope.$destroy();\n```\n\n<div class=\"alert alert-info\">\n**Best Practice**: if you intend to add and remove transcluded content manually in your directive\n(by calling the transclude function to get the DOM and and calling `element.remove()` to remove it),\nthen you are also responsible for calling `$destroy` on the transclusion scope.\n</div>\n\nThe built-in DOM manipulation directives, such as {@link ngIf}, {@link ngSwitch} and {@link ngRepeat}\nautomatically destroy their transluded clones as necessary so you do not need to worry about this if\nyou are simply using {@link ngTransclude} to inject the transclusion into your directive.\n\n\n#### Transclusion Scopes\n\nWhen you call a transclude function it returns a DOM fragment that is pre-bound to a **transclusion\nscope**. This scope is special, in that it is a child of the directive's scope (and so gets destroyed\nwhen the directive's scope gets destroyed) but it inherits the properties of the scope from which it\nwas taken.\n\nFor example consider a directive that uses transclusion and isolated scope. The DOM hierarchy might look\nlike this:\n\n```html\n<div ng-app>\n  <div isolate>\n    <div transclusion>\n    </div>\n  </div>\n</div>\n```\n\nThe `$parent` scope hierarchy will look like this:\n\n```\n- $rootScope\n  - isolate\n    - transclusion\n```\n\nbut the scopes will inherit prototypically from different scopes to their `$parent`.\n\n```\n- $rootScope\n  - transclusion\n- isolate\n```\n\n\n### Attributes\n\nThe {@link ng.$compile.directive.Attributes Attributes} object - passed as a parameter in the\n`link()` or `compile()` functions. It has a variety of uses.\n\naccessing *Normalized attribute names:*\nDirectives like 'ngBind' can be expressed in many ways: 'ng:bind', `data-ng-bind`, or 'x-ng-bind'.\nthe attributes object allows for normalized access to\n  the attributes.\n\n* *Directive inter-communication:* All directives share the same instance of the attributes\n  object which allows the directives to use the attributes object as inter directive\n  communication.\n\n* *Supports interpolation:* Interpolation attributes are assigned to the attribute object\n  allowing other directives to read the interpolated value.\n\n* *Observing interpolated attributes:* Use `$observe` to observe the value changes of attributes\n  that contain interpolation (e.g. `src=\"{{bar}}\"`). Not only is this very efficient but it's also\n  the only way to easily get the actual value because during the linking phase the interpolation\n  hasn't been evaluated yet and so the value is at this time set to `undefined`.\n\n```js\nfunction linkingFn(scope, elm, attrs, ctrl) {\n  // get the attribute value\n  console.log(attrs.ngModel);\n\n  // change the attribute\n  attrs.$set('ngModel', 'new value');\n\n  // observe changes to interpolated attribute\n  attrs.$observe('ngModel', function(value) {\n    console.log('ngModel has changed value to ' + value);\n  });\n}\n```\n\n## Example\n\n<div class=\"alert alert-warning\">\n**Note**: Typically directives are registered with `module.directive`. The example below is\nto illustrate how `$compile` works.\n</div>\n\n<example module=\"compileExample\">\n  <file name=\"index.html\">\n   <script>\n     angular.module('compileExample', [], function($compileProvider) {\n       // configure new 'compile' directive by passing a directive\n       // factory function. The factory function injects the '$compile'\n       $compileProvider.directive('compile', function($compile) {\n         // directive factory creates a link function\n         return function(scope, element, attrs) {\n           scope.$watch(\n             function(scope) {\n                // watch the 'compile' expression for changes\n               return scope.$eval(attrs.compile);\n             },\n             function(value) {\n               // when the 'compile' expression changes\n               // assign it into the current DOM\n               element.html(value);\n\n               // compile the new DOM and link it to the current\n               // scope.\n               // NOTE: we only compile .childNodes so that\n               // we don't get into infinite loop compiling ourselves\n               $compile(element.contents())(scope);\n             }\n           );\n         };\n       });\n     })\n     .controller('GreeterController', ['$scope', function($scope) {\n       $scope.name = 'Angular';\n       $scope.html = 'Hello {{name}}';\n     }]);\n   </script>\n   <div ng-controller=\"GreeterController\">\n     <input ng-model=\"name\"> <br>\n     <textarea ng-model=\"html\"></textarea> <br>\n     <div compile=\"html\"></div>\n   </div>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n    it('should auto compile', function() {\n      var textarea = $('textarea');\n      var output = $('div[compile]');\n      // The initial state reads 'Hello Angular'.\n      expect(output.getText()).toBe('Hello Angular');\n      textarea.clear();\n      textarea.sendKeys('{{name}}!');\n      expect(output.getText()).toBe('Angular!');\n    });\n  </file>\n</example>",
            "line": " bower_components/angular/angular.js:5777"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:6452"
        },
        {
            "message": "Missing item type\nRegister a new directive with the compiler.",
            "line": " bower_components/angular/angular.js:6498"
        },
        {
            "message": "Missing item type\nRetrieves or overrides the default regular expression that is used for whitelisting of safe\nurls during a[href] sanitization.\n\nThe sanitization is a security measure aimed at preventing XSS attacks via html links.\n\nAny url about to be assigned to a[href] via data-binding is first normalized and turned into\nan absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\nregular expression. If a match is found, the original url is written into the dom. Otherwise,\nthe absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.",
            "line": " bower_components/angular/angular.js:6554"
        },
        {
            "message": "Missing item type\nRetrieves or overrides the default regular expression that is used for whitelisting of safe\nurls during img[src] sanitization.\n\nThe sanitization is a security measure aimed at prevent XSS attacks via html links.\n\nAny url about to be assigned to img[src] via data-binding is first normalized and turned into\nan absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\nregular expression. If a match is found, the original url is written into the dom. Otherwise,\nthe absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.",
            "line": " bower_components/angular/angular.js:6584"
        },
        {
            "message": "Missing item type\nCall this method to enable/disable various debug runtime information in the compiler such as adding\nbinding information and a reference to the current scope on to DOM elements.\nIf enabled, the compiler will add the following to DOM elements that have been bound to the scope\n* `ng-binding` CSS class\n* `$binding` data property containing an array of the binding expressions\n\nYou may want to disable this in production for a significant performance boost. See\n{@link guide/production#disabling-debug-data Disabling Debug Data} for more.\n\nThe default value is true.",
            "line": " bower_components/angular/angular.js:6613"
        },
        {
            "message": "Missing item type\nConverts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with `x-` or\n`data-`) to its normalized, camelCase form.\n\nAlso there is special case for Moz prefix starting with upper case letter.\n\nFor further information check out the guide on {@link guide/directive#matching-directives Matching Directives}",
            "line": " bower_components/angular/angular.js:6667"
        },
        {
            "message": "Missing item type\nAdds the CSS class value specified by the classVal parameter to the element. If animations\nare enabled then an animation will be triggered for the class addition.",
            "line": " bower_components/angular/angular.js:6685"
        },
        {
            "message": "Missing item type\nRemoves the CSS class value specified by the classVal parameter from the element. If\nanimations are enabled then an animation will be triggered for the class removal.",
            "line": " bower_components/angular/angular.js:6702"
        },
        {
            "message": "Missing item type\nAdds and removes the appropriate CSS class values to the element based on the difference\nbetween the new and old CSS class values (specified as newClasses and oldClasses).",
            "line": " bower_components/angular/angular.js:6719"
        },
        {
            "message": "Missing item type\nSet a normalized attribute on the element in a way such that all directives\ncan share the attribute. This function properly handles boolean attributes.",
            "line": " bower_components/angular/angular.js:6743"
        },
        {
            "message": "Missing item type\nObserves an interpolated attribute.\n\nThe observer function will be invoked once during the next `$digest` following\ncompilation. The observer is then invoked whenever the interpolated value\nchanges.",
            "line": " bower_components/angular/angular.js:6845"
        },
        {
            "message": "Missing item type\nCompile function matches each node in nodeList against the directives. Once all directives\nfor a particular node are collected their compile functions are executed. The compile\nfunctions return values - the linking functions - are combined into a composite linking\nfunction, which is the a linking function for the node.",
            "line": " bower_components/angular/angular.js:7011"
        },
        {
            "message": "Missing item type\nLooks for directives on the given node and adds them to the directive collection which is\nsorted.",
            "line": " bower_components/angular/angular.js:7145"
        },
        {
            "message": "Missing item type\nGiven a node with an directive-start it collects all of the siblings until it finds\ndirective-end.",
            "line": " bower_components/angular/angular.js:7248"
        },
        {
            "message": "Missing item type\nWrapper for linking function which converts normal linking function into a grouped\nlinking function.",
            "line": " bower_components/angular/angular.js:7280"
        },
        {
            "message": "Missing item type\nOnce the directives have been collected, their compile functions are executed. This method\nis responsible for inlining directive templates as well as terminating the application\nof the directives if the terminal directive has been reached.",
            "line": " bower_components/angular/angular.js:7295"
        },
        {
            "message": "Missing item type\nlooks up the directive and decorates it with exception handling and proper parameters. We\ncall this the boundDirective.",
            "line": " bower_components/angular/angular.js:7807"
        },
        {
            "message": "Missing item type\nlooks up the directive and returns true if it is a multi-element directive,\nand therefore requires DOM nodes between -start and -end markers to be grouped\ntogether.",
            "line": " bower_components/angular/angular.js:7845"
        },
        {
            "message": "Missing item type\nWhen the element is replaced with HTML template then the new attributes\non the template need to be merged with the existing attributes in the DOM.\nThe desired effect is to have both of the attributes present.",
            "line": " bower_components/angular/angular.js:7866"
        },
        {
            "message": "Missing item type\nSorting function for bound directives.",
            "line": " bower_components/angular/angular.js:8022"
        },
        {
            "message": "Missing item type\nThis is a special jqLite.replaceWith, which can replace items which\nhave no parents, provided that the containing jqLite collection is provided.",
            "line": " bower_components/angular/angular.js:8167"
        },
        {
            "message": "Missing item type\nConverts all accepted directives format into proper directive name.",
            "line": " bower_components/angular/angular.js:8267"
        },
        {
            "message": "Missing item type\nA shared object between directive compile / linking functions which contains normalized DOM\nelement attributes. The values reflect current binding state `{{ }}`. The normalization is\nneeded since all of these are treated as equivalent in Angular:\n\n```\n   <span ng:bind=\"a\" ng-bind=\"a\" data-ng-bind=\"a\" x-ng-bind=\"a\">\n```",
            "line": " bower_components/angular/angular.js:8275"
        },
        {
            "message": "Missing item type\nA map of DOM element attribute names to the normalized name. This is\nneeded to do reverse lookup from normalized name back to actual name.",
            "line": " bower_components/angular/angular.js:8289"
        },
        {
            "message": "Missing item type\nSet DOM element attribute value.",
            "line": " bower_components/angular/angular.js:8299"
        },
        {
            "message": "Missing item type\nClosure compiler type information",
            "line": " bower_components/angular/angular.js:8316"
        },
        {
            "message": "Missing item type\nThe {@link ng.$controller $controller service} is used by Angular to create new\ncontrollers.\n\nThis provider allows controller registration via the\n{@link ng.$controllerProvider#register register} method.",
            "line": " bower_components/angular/angular.js:8370"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:8386"
        },
        {
            "message": "Missing item type\nIf called, allows `$controller` to find controller constructors on `window`",
            "line": " bower_components/angular/angular.js:8403"
        },
        {
            "message": "Missing item type\n`$controller` service is responsible for instantiating controllers.\n\nIt's just a simple call to {@link auto.$injector $injector}, but extracted into\na service, so that one can override this service with [BC version](https://gist.github.com/1649788).",
            "line": " bower_components/angular/angular.js:8415"
        },
        {
            "message": "Missing item type\nA {@link angular.element jQuery or jqLite} wrapper for the browser's `window.document` object.",
            "line": " bower_components/angular/angular.js:8522"
        },
        {
            "message": "Missing item type\nAny uncaught exception in angular expressions is delegated to this service.\nThe default implementation simply delegates to `$log.error` which logs it into\nthe browser console.\n\nIn unit tests, if `angular-mocks.js` is loaded, this service is overridden by\n{@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.\n\n## Example:\n\n```js\n  angular.module('exceptionOverride', []).factory('$exceptionHandler', function() {\n    return function(exception, cause) {\n      exception.message += ' (caused by \"' + cause + '\")';\n      throw exception;\n    };\n  });\n```\n\nThis example will override the normal action of `$exceptionHandler`, to make angular\nexceptions fail hard when they happen, instead of just logging to the console.\n\n<hr />\nNote, that code executed in event-listeners (even those registered using jqLite's `on`/`bind`\nmethods) does not delegate exceptions to the {@link ng.$exceptionHandler $exceptionHandler}\n(unless executed during a digest).\n\nIf you wish, you can manually delegate exceptions, e.g.\n`try { ... } catch(e) { $exceptionHandler(e); }`",
            "line": " bower_components/angular/angular.js:8553"
        },
        {
            "message": "Missing item type\nParse headers into key value object",
            "line": " bower_components/angular/angular.js:8631"
        },
        {
            "message": "Missing item type\nReturns a function that provides access to parsed headers.\n\nHeaders are lazy parsed when first requested.",
            "line": " bower_components/angular/angular.js:8656"
        },
        {
            "message": "Missing item type\nChain all given functions\n\nThis function is used for both request and response transforming",
            "line": " bower_components/angular/angular.js:8687"
        },
        {
            "message": "Missing item type\nUse `$httpProvider` to change the default behavior of the {@link ng.$http $http} service.",
            "line": " bower_components/angular/angular.js:8715"
        },
        {
            "message": "Missing item type\nObject containing default values for all {@link ng.$http $http} requests.\n\n- **`defaults.cache`** - {Object} - an object built with {@link ng.$cacheFactory `$cacheFactory`}\nthat will provide the cache for all requests who set their `cache` property to `true`.\nIf you set the `default.cache = false` then only requests that specify their own custom\ncache object will be cached. See {@link $http#caching $http Caching} for more information.\n\n- **`defaults.xsrfCookieName`** - {string} - Name of cookie containing the XSRF token.\nDefaults value is `'XSRF-TOKEN'`.\n\n- **`defaults.xsrfHeaderName`** - {string} - Name of HTTP header to populate with the\nXSRF token. Defaults value is `'X-XSRF-TOKEN'`.\n\n- **`defaults.headers`** - {Object} - Default headers for all $http requests.\nRefer to {@link ng.$http#setting-http-headers $http} for documentation on\nsetting default headers.\n    - **`defaults.headers.common`**\n    - **`defaults.headers.post`**\n    - **`defaults.headers.put`**\n    - **`defaults.headers.patch`**",
            "line": " bower_components/angular/angular.js:8722"
        },
        {
            "message": "Missing item type\nConfigure $http service to combine processing of multiple http responses received at around\nthe same time via {@link ng.$rootScope.Scope#$applyAsync $rootScope.$applyAsync}. This can result in\nsignificant performance improvement for bigger applications that make many HTTP requests\nconcurrently (common during application bootstrap).\n\nDefaults to false. If no value is specifed, returns the current configured value.",
            "line": " bower_components/angular/angular.js:8773"
        },
        {
            "message": "Missing item type\nArray containing service factories for all synchronous or asynchronous {@link ng.$http $http}\npre-processing of request or postprocessing of responses.\n\nThese service factories are ordered by request, i.e. they are applied in the same order as the\narray, on request, but reverse order, on response.\n\n{@link ng.$http#interceptors Interceptors detailed info}",
            "line": " bower_components/angular/angular.js:8800"
        },
        {
            "message": "Missing item type\nInterceptors stored in reverse order. Inner interceptors before outer interceptors.\nThe reversal is needed so that we can build up the interception chain around the\nserver request.",
            "line": " bower_components/angular/angular.js:8820"
        },
        {
            "message": "Missing item type\nShortcut method to perform `GET` request.",
            "line": " bower_components/angular/angular.js:9480"
        },
        {
            "message": "Missing item type\nShortcut method to perform `DELETE` request.",
            "line": " bower_components/angular/angular.js:9492"
        },
        {
            "message": "Missing item type\nShortcut method to perform `HEAD` request.",
            "line": " bower_components/angular/angular.js:9504"
        },
        {
            "message": "Missing item type\nShortcut method to perform `JSONP` request.",
            "line": " bower_components/angular/angular.js:9516"
        },
        {
            "message": "Missing item type\nShortcut method to perform `POST` request.",
            "line": " bower_components/angular/angular.js:9530"
        },
        {
            "message": "Missing item type\nShortcut method to perform `PUT` request.",
            "line": " bower_components/angular/angular.js:9543"
        },
        {
            "message": "Missing item type\nShortcut method to perform `PATCH` request.",
            "line": " bower_components/angular/angular.js:9556"
        },
        {
            "message": "Missing item type\nRuntime equivalent of the `$httpProvider.defaults` property. Allows configuration of\ndefault headers, withCredentials as well as request and response transformations.\n\nSee \"Setting HTTP Headers\" and \"Transforming Requests and Responses\" sections above.",
            "line": " bower_components/angular/angular.js:9570"
        },
        {
            "message": "Missing item type\nMakes the request.\n\n!!! ACCESSES CLOSURE VARS:\n$httpBackend, defaults, $log, $rootScope, defaultCache, $http.pendingRequests",
            "line": " bower_components/angular/angular.js:9611"
        },
        {
            "message": "Missing item type\nCallback registered to $httpBackend():\n - caches the response if desired\n - resolves the raw $http promise\n - calls $apply",
            "line": " bower_components/angular/angular.js:9674"
        },
        {
            "message": "Missing item type\nResolves the raw $http promise.",
            "line": " bower_components/angular/angular.js:9703"
        },
        {
            "message": "Missing item type\nHTTP backend used by the {@link ng.$http service} that delegates to\nXMLHttpRequest object or JSONP and deals with browser incompatibilities.\n\nYou should never need to use this service directly, instead use the higher-level abstractions:\n{@link ng.$http $http} or {@link ngResource.$resource $resource}.\n\nDuring testing this implementation is swapped with {@link ngMock.$httpBackend mock\n$httpBackend} which can be trained with responses.",
            "line": " bower_components/angular/angular.js:9761"
        },
        {
            "message": "Missing item type\nUsed for configuring the interpolation markup. Defaults to `{{` and `}}`.",
            "line": " bower_components/angular/angular.js:9932"
        },
        {
            "message": "Missing item type\nSymbol to denote start of expression in the interpolated string. Defaults to `{{`.",
            "line": " bower_components/angular/angular.js:9971"
        },
        {
            "message": "Missing item type\nSymbol to denote the end of expression in the interpolated string. Defaults to `}}`.",
            "line": " bower_components/angular/angular.js:9989"
        },
        {
            "message": "Missing item type\nCompiles a string with markup into an interpolation function. This service is used by the\nHTML {@link ng.$compile $compile} service for data binding. See\n{@link ng.$interpolateProvider $interpolateProvider} for configuring the\ninterpolation markup.\n\n\n```js\n  var $interpolate = ...; // injected\n  var exp = $interpolate('Hello {{name | uppercase}}!');\n  expect(exp({name:'Angular'}).toEqual('Hello ANGULAR!');\n```\n\n`$interpolate` takes an optional fourth argument, `allOrNothing`. If `allOrNothing` is\n`true`, the interpolation function will return `undefined` unless all embedded expressions\nevaluate to a value other than `undefined`.\n\n```js\n  var $interpolate = ...; // injected\n  var context = {greeting: 'Hello', name: undefined };\n\n  // default \"forgiving\" mode\n  var exp = $interpolate('{{greeting}} {{name}}!');\n  expect(exp(context)).toEqual('Hello !');\n\n  // \"allOrNothing\" mode\n  exp = $interpolate('{{greeting}} {{name}}!', false, null, true);\n  expect(exp(context)).toBeUndefined();\n  context.name = 'Angular';\n  expect(exp(context)).toEqual('Hello Angular!');\n```\n\n`allOrNothing` is useful for interpolating URLs. `ngSrc` and `ngSrcset` use this behavior.\n\n####Escaped Interpolation\n$interpolate provides a mechanism for escaping interpolation markers. Start and end markers\ncan be escaped by preceding each of their characters with a REVERSE SOLIDUS U+005C (backslash).\nIt will be rendered as a regular start/end marker, and will not be interpreted as an expression\nor binding.\n\nThis enables web-servers to prevent script injection attacks and defacing attacks, to some\ndegree, while also enabling code examples to work without relying on the\n{@link ng.directive:ngNonBindable ngNonBindable} directive.\n\n**For security purposes, it is strongly encouraged that web servers escape user-supplied data,\nreplacing angle brackets (&lt;, &gt;) with &amp;lt; and &amp;gt; respectively, and replacing all\ninterpolation start/end markers with their escaped counterparts.**\n\nEscaped interpolation markers are only replaced with the actual interpolation markers in rendered\noutput when the $interpolate service processes the text. So, for HTML elements interpolated\nby {@link ng.$compile $compile}, or otherwise interpolated with the `mustHaveExpression` parameter\nset to `true`, the interpolated text must contain an unescaped interpolation expression. As such,\nthis is typically useful only when user-data is used in rendering a template from the server, or\nwhen otherwise untrusted data is used by a directive.\n\n<example>\n <file name=\"index.html\">\n   <div ng-init=\"username='A user'\">\n     <p ng-init=\"apptitle='Escaping demo'\">{{apptitle}}: \\{\\{ username = \"defaced value\"; \\}\\}\n       </p>\n     <p><strong>{{username}}</strong> attempts to inject code which will deface the\n       application, but fails to accomplish their task, because the server has correctly\n       escaped the interpolation start/end markers with REVERSE SOLIDUS U+005C (backslash)\n       characters.</p>\n     <p>Instead, the result of the attempted script injection is visible, and can be removed\n       from the database by an administrator.</p>\n   </div>\n </file>\n</example>",
            "line": " bower_components/angular/angular.js:10018"
        },
        {
            "message": "Missing item type\nSymbol to denote the start of expression in the interpolated string. Defaults to `{{`.\n\nUse {@link ng.$interpolateProvider#startSymbol `$interpolateProvider.startSymbol`} to change\nthe symbol.",
            "line": " bower_components/angular/angular.js:10242"
        },
        {
            "message": "Missing item type\nSymbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n\nUse {@link ng.$interpolateProvider#endSymbol `$interpolateProvider.endSymbol`} to change\nthe symbol.",
            "line": " bower_components/angular/angular.js:10258"
        },
        {
            "message": "Missing item type\nAngular's wrapper for `window.setInterval`. The `fn` function is executed every `delay`\nmilliseconds.\n\nThe return value of registering an interval function is a promise. This promise will be\nnotified upon each tick of the interval, and will be resolved after `count` iterations, or\nrun indefinitely if `count` is not defined. The value of the notification will be the\nnumber of iterations that have run.\nTo cancel an interval, call `$interval.cancel(promise)`.\n\nIn tests you can use {@link ngMock.$interval#flush `$interval.flush(millis)`} to\nmove forward by `millis` milliseconds and trigger any functions scheduled to run in that\ntime.\n\n<div class=\"alert alert-warning\">\n**Note**: Intervals created by this service must be explicitly destroyed when you are finished\nwith them.  In particular they are not automatically destroyed when a controller's scope or a\ndirective's element are destroyed.\nYou should take this into consideration and make sure to always cancel the interval at the\nappropriate moment.  See the example below for more details on how and when to do this.\n</div>",
            "line": " bower_components/angular/angular.js:10283"
        },
        {
            "message": "Missing item type\nCancels a task associated with the `promise`.",
            "line": " bower_components/angular/angular.js:10438"
        },
        {
            "message": "Missing item type\n$locale service provides localization rules for various Angular components. As of right now the\nonly public api is:\n\n* `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)",
            "line": " bower_components/angular/angular.js:10462"
        },
        {
            "message": "Missing item type\nEncode path using encodeUriSegment, ignoring forward slashes",
            "line": " bower_components/angular/angular.js:10547"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:10591"
        },
        {
            "message": "Missing item type\nLocationHtml5Url represents an url\nThis object is exposed as $location service when HTML5 mode is enabled and supported",
            "line": " bower_components/angular/angular.js:10625"
        },
        {
            "message": "Missing item type\nParse given html5 (regular) url string into properties",
            "line": " bower_components/angular/angular.js:10640"
        },
        {
            "message": "Missing item type\nCompose url and update `absUrl` property",
            "line": " bower_components/angular/angular.js:10661"
        },
        {
            "message": "Missing item type\nLocationHashbangUrl represents url\nThis object is exposed as $location service when developer doesn't opt into html5 mode.\nIt also serves as the base class for html5 mode fallback on legacy browsers.",
            "line": " bower_components/angular/angular.js:10703"
        },
        {
            "message": "Missing item type\nParse given hashbang url into properties",
            "line": " bower_components/angular/angular.js:10718"
        },
        {
            "message": "Missing item type\nCompose hashbang url and update `absUrl` property",
            "line": " bower_components/angular/angular.js:10785"
        },
        {
            "message": "Missing item type\nLocationHashbangUrl represents url\nThis object is exposed as $location service when html5 history api is enabled but the browser\ndoes not support it.",
            "line": " bower_components/angular/angular.js:10807"
        },
        {
            "message": "Missing item type\nAre we in html5 mode?",
            "line": " bower_components/angular/angular.js:10860"
        },
        {
            "message": "Missing item type\nHas any change been replacing?",
            "line": " bower_components/angular/angular.js:10866"
        },
        {
            "message": "Missing item type\nThis method is getter only.\n\nReturn full url representation with all segments encoded according to rules specified in\n[RFC 3986](http://www.ietf.org/rfc/rfc3986.txt).\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar absUrl = $location.absUrl();\n// => \"http://example.com/#/some/path?foo=bar&baz=xoxo\"\n```",
            "line": " bower_components/angular/angular.js:10872"
        },
        {
            "message": "Missing item type\nThis method is getter / setter.\n\nReturn url (e.g. `/path?a=b#hash`) when called without any parameter.\n\nChange path, search and hash, when called with parameter and return `$location`.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar url = $location.url();\n// => \"/some/path?foo=bar&baz=xoxo\"\n```",
            "line": " bower_components/angular/angular.js:10893"
        },
        {
            "message": "Missing item type\nThis method is getter only.\n\nReturn protocol of current url.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar protocol = $location.protocol();\n// => \"http\"\n```",
            "line": " bower_components/angular/angular.js:10926"
        },
        {
            "message": "Missing item type\nThis method is getter only.\n\nReturn host of current url.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar host = $location.host();\n// => \"example.com\"\n```",
            "line": " bower_components/angular/angular.js:10946"
        },
        {
            "message": "Missing item type\nThis method is getter only.\n\nReturn port of current url.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar port = $location.port();\n// => 80\n```",
            "line": " bower_components/angular/angular.js:10966"
        },
        {
            "message": "Missing item type\nThis method is getter / setter.\n\nReturn path of current url when called without any parameter.\n\nChange path when called with parameter and return `$location`.\n\nNote: Path should always begin with forward slash (/), this method will add the forward slash\nif it is missing.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar path = $location.path();\n// => \"/some/path\"\n```",
            "line": " bower_components/angular/angular.js:10986"
        },
        {
            "message": "Missing item type\nThis method is getter / setter.\n\nReturn search part (as object) of current url when called without any parameter.\n\nChange search part when called with parameter and return `$location`.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar searchObject = $location.search();\n// => {foo: 'bar', baz: 'xoxo'}\n\n// set foo to 'yipee'\n$location.search('foo', 'yipee');\n// $location.search() => {foo: 'yipee', baz: 'xoxo'}\n```",
            "line": " bower_components/angular/angular.js:11015"
        },
        {
            "message": "Missing item type\nThis method is getter / setter.\n\nReturn hash fragment when called without any parameter.\n\nChange hash fragment when called with parameter and return `$location`.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo#hashValue\nvar hash = $location.hash();\n// => \"hashValue\"\n```",
            "line": " bower_components/angular/angular.js:11093"
        },
        {
            "message": "Missing item type\nIf called, all changes to $location during current `$digest` will be replacing current history\nrecord, instead of adding new one.",
            "line": " bower_components/angular/angular.js:11118"
        },
        {
            "message": "Missing item type\nThis method is getter / setter.\n\nReturn the history state object when called without any parameter.\n\nChange the history state object when called with one parameter and return `$location`.\nThe state object is later passed to `pushState` or `replaceState`.\n\nNOTE: This method is supported only in HTML5 mode and only in browsers supporting\nthe HTML5 History API (i.e. methods `pushState` and `replaceState`). If you need to support\nolder browsers (like IE9 or Android < 4.0), don't use this method.",
            "line": " bower_components/angular/angular.js:11135"
        },
        {
            "message": "Missing item type\nThe $location service parses the URL in the browser address bar (based on the\n[window.location](https://developer.mozilla.org/en/window.location)) and makes the URL\navailable to your application. Changes to the URL in the address bar are reflected into\n$location service and changes to $location are reflected into the browser address bar.\n\n**The $location service:**\n\n- Exposes the current URL in the browser address bar, so you can\n  - Watch and observe the URL.\n  - Change the URL.\n- Synchronizes the URL with the browser when the user\n  - Changes the address bar.\n  - Clicks the back or forward button (or clicks a History link).\n  - Clicks on a link.\n- Represents the URL object as a set of methods (protocol, host, port, path, search, hash).\n\nFor more information see {@link guide/$location Developer Guide: Using $location}",
            "line": " bower_components/angular/angular.js:11192"
        },
        {
            "message": "Missing item type\nUse the `$locationProvider` to configure how the application deep linking paths are stored.",
            "line": " bower_components/angular/angular.js:11218"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:11232"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:11248"
        },
        {
            "message": "Missing item type\nBroadcasted before a URL will change.\n\nThis change can be prevented by calling\n`preventDefault` method of the event. See {@link ng.$rootScope.Scope#$on} for more\ndetails about event object. Upon successful change\n{@link ng.$location#$locationChangeSuccess $locationChangeSuccess} is fired.\n\nThe `newState` and `oldState` parameters may be defined only in HTML5 mode and when\nthe browser supports the HTML5 History API.",
            "line": " bower_components/angular/angular.js:11291"
        },
        {
            "message": "Missing item type\nBroadcasted after a URL was changed.\n\nThe `newState` and `oldState` parameters may be defined only in HTML5 mode and when\nthe browser supports the HTML5 History API.",
            "line": " bower_components/angular/angular.js:11313"
        },
        {
            "message": "Missing item type\nSimple service for logging. Default implementation safely writes the message\ninto the browser's console (if present).\n\nThe main purpose of this service is to simplify debugging and troubleshooting.\n\nThe default is to log `debug` messages. You can use\n{@link ng.$logProvider ng.$logProvider#debugEnabled} to change this.",
            "line": " bower_components/angular/angular.js:11505"
        },
        {
            "message": "Missing item type\nUse the `$logProvider` to configure how the application logs messages",
            "line": " bower_components/angular/angular.js:11543"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:11553"
        },
        {
            "message": "Missing item type\nWrite a log message",
            "line": " bower_components/angular/angular.js:11571"
        },
        {
            "message": "Missing item type\nWrite an information message",
            "line": " bower_components/angular/angular.js:11580"
        },
        {
            "message": "Missing item type\nWrite a warning message",
            "line": " bower_components/angular/angular.js:11589"
        },
        {
            "message": "Missing item type\nWrite an error message",
            "line": " bower_components/angular/angular.js:11598"
        },
        {
            "message": "Missing item type\nWrite a debug message",
            "line": " bower_components/angular/angular.js:11607"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:11818"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:11997"
        },
        {
            "message": "Missing item type\nImplementation of the \"Black Hole\" variant from:\n- http://jsperf.com/angularjs-parse-getter/4\n- http://jsperf.com/path-evaluation-simplified/7",
            "line": " bower_components/angular/angular.js:12511"
        },
        {
            "message": "Missing item type\nConverts Angular {@link guide/expression expression} into a function.\n\n```js\n  var getter = $parse('user.name');\n  var setter = getter.assign;\n  var context = {user:{name:'angular'}};\n  var locals = {user:{name:'local'}};\n\n  expect(getter(context)).toEqual('angular');\n  setter(context, 'newValue');\n  expect(context.user.name).toEqual('newValue');\n  expect(getter(context, locals)).toEqual('local');\n```",
            "line": " bower_components/angular/angular.js:12638"
        },
        {
            "message": "Missing item type\n`$parseProvider` can be used for configuring the default behavior of the {@link ng.$parse $parse}\n service.",
            "line": " bower_components/angular/angular.js:12679"
        },
        {
            "message": "Missing item type\nA service that helps you run functions asynchronously, and use their return values (or exceptions)\nwhen they are done processing.\n\nThis is an implementation of promises/deferred objects inspired by\n[Kris Kowal's Q](https://github.com/kriskowal/q).\n\n$q can be used in two fashions --- one which is more similar to Kris Kowal's Q or jQuery's Deferred\nimplementations, and the other which resembles ES6 promises to some degree.\n\n# $q constructor\n\nThe streamlined ES6 style promise is essentially just using $q as a constructor which takes a `resolver`\nfunction as the first argument. This is similar to the native Promise implementation from ES6 Harmony,\nsee [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n\nWhile the constructor-style use is supported, not all of the supporting methods from ES6 Harmony promises are\navailable yet.\n\nIt can be used like so:\n\n```js\n  // for the purpose of this example let's assume that variables `$q` and `okToGreet`\n  // are available in the current lexical scope (they could have been injected or passed in).\n\n  function asyncGreet(name) {\n    // perform some asynchronous operation, resolve or reject the promise when appropriate.\n    return $q(function(resolve, reject) {\n      setTimeout(function() {\n        if (okToGreet(name)) {\n          resolve('Hello, ' + name + '!');\n        } else {\n          reject('Greeting ' + name + ' is not allowed.');\n        }\n      }, 1000);\n    });\n  }\n\n  var promise = asyncGreet('Robin Hood');\n  promise.then(function(greeting) {\n    alert('Success: ' + greeting);\n  }, function(reason) {\n    alert('Failed: ' + reason);\n  });\n```\n\nNote: progress/notify callbacks are not currently supported via the ES6-style interface.\n\nHowever, the more traditional CommonJS-style usage is still available, and documented below.\n\n[The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an\ninterface for interacting with an object that represents the result of an action that is\nperformed asynchronously, and may or may not be finished at any given point in time.\n\nFrom the perspective of dealing with error handling, deferred and promise APIs are to\nasynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.\n\n```js\n  // for the purpose of this example let's assume that variables `$q` and `okToGreet`\n  // are available in the current lexical scope (they could have been injected or passed in).\n\n  function asyncGreet(name) {\n    var deferred = $q.defer();\n\n    setTimeout(function() {\n      deferred.notify('About to greet ' + name + '.');\n\n      if (okToGreet(name)) {\n        deferred.resolve('Hello, ' + name + '!');\n      } else {\n        deferred.reject('Greeting ' + name + ' is not allowed.');\n      }\n    }, 1000);\n\n    return deferred.promise;\n  }\n\n  var promise = asyncGreet('Robin Hood');\n  promise.then(function(greeting) {\n    alert('Success: ' + greeting);\n  }, function(reason) {\n    alert('Failed: ' + reason);\n  }, function(update) {\n    alert('Got notification: ' + update);\n  });\n```\n\nAt first it might not be obvious why this extra complexity is worth the trouble. The payoff\ncomes in the way of guarantees that promise and deferred APIs make, see\nhttps://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md.\n\nAdditionally the promise api allows for composition that is very hard to do with the\ntraditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.\nFor more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the\nsection on serial or parallel joining of promises.\n\n# The Deferred API\n\nA new instance of deferred is constructed by calling `$q.defer()`.\n\nThe purpose of the deferred object is to expose the associated Promise instance as well as APIs\nthat can be used for signaling the successful or unsuccessful completion, as well as the status\nof the task.\n\n**Methods**\n\n- `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection\n  constructed via `$q.reject`, the promise will be rejected instead.\n- `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to\n  resolving it with a rejection constructed via `$q.reject`.\n- `notify(value)` - provides updates on the status of the promise's execution. This may be called\n  multiple times before the promise is either resolved or rejected.\n\n**Properties**\n\n- promise – `{Promise}` – promise object associated with this deferred.\n\n\n# The Promise API\n\nA new promise instance is created when a deferred instance is created and can be retrieved by\ncalling `deferred.promise`.\n\nThe purpose of the promise object is to allow for interested parties to get access to the result\nof the deferred task when it completes.\n\n**Methods**\n\n- `then(successCallback, errorCallback, notifyCallback)` – regardless of when the promise was or\n  will be resolved or rejected, `then` calls one of the success or error callbacks asynchronously\n  as soon as the result is available. The callbacks are called with a single argument: the result\n  or rejection reason. Additionally, the notify callback may be called zero or more times to\n  provide a progress indication, before the promise is resolved or rejected.\n\n  This method *returns a new promise* which is resolved or rejected via the return value of the\n  `successCallback`, `errorCallback`. It also notifies via the return value of the\n  `notifyCallback` method. The promise cannot be resolved or rejected from the notifyCallback\n  method.\n\n- `catch(errorCallback)` – shorthand for `promise.then(null, errorCallback)`\n\n- `finally(callback, notifyCallback)` – allows you to observe either the fulfillment or rejection of a promise,\n  but to do so without modifying the final value. This is useful to release resources or do some\n  clean-up that needs to be done whether the promise was rejected or resolved. See the [full\n  specification](https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback) for\n  more information.\n\n# Chaining promises\n\nBecause calling the `then` method of a promise returns a new derived promise, it is easily\npossible to create a chain of promises:\n\n```js\n  promiseB = promiseA.then(function(result) {\n    return result + 1;\n  });\n\n  // promiseB will be resolved immediately after promiseA is resolved and its value\n  // will be the result of promiseA incremented by 1\n```\n\nIt is possible to create chains of any length and since a promise can be resolved with another\npromise (which will defer its resolution further), it is possible to pause/defer resolution of\nthe promises at any point in the chain. This makes it possible to implement powerful APIs like\n$http's response interceptors.\n\n\n# Differences between Kris Kowal's Q and $q\n\n There are two main differences:\n\n- $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation\n  mechanism in angular, which means faster propagation of resolution or rejection into your\n  models and avoiding unnecessary browser repaints, which would result in flickering UI.\n- Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains\n  all the important functionality needed for common async tasks.\n\n # Testing\n\n ```js\n   it('should simulate promise', inject(function($q, $rootScope) {\n     var deferred = $q.defer();\n     var promise = deferred.promise;\n     var resolvedValue;\n\n     promise.then(function(value) { resolvedValue = value; });\n     expect(resolvedValue).toBeUndefined();\n\n     // Simulate resolving of promise\n     deferred.resolve(123);\n     // Note that the 'then' function does not get called synchronously.\n     // This is because we want the promise API to always be async, whether or not\n     // it got called synchronously or asynchronously.\n     expect(resolvedValue).toBeUndefined();\n\n     // Propagate promise resolution to 'then' functions using $apply().\n     $rootScope.$apply();\n     expect(resolvedValue).toEqual(123);\n   }));\n ```",
            "line": " bower_components/angular/angular.js:12936"
        },
        {
            "message": "Missing item type\nConstructs a promise manager.",
            "line": " bower_components/angular/angular.js:13165"
        },
        {
            "message": "Missing item type\nCreates a `Deferred` object which represents a task which will finish in the future.",
            "line": " bower_components/angular/angular.js:13188"
        },
        {
            "message": "Missing item type\nCreates a promise that is resolved as rejected with the specified `reason`. This api should be\nused to forward rejection in a chain of promises. If you are dealing with the last promise in\na promise chain, you don't need to worry about it.\n\nWhen comparing deferreds/promises to the familiar behavior of try/catch/throw, think of\n`reject` as the `throw` keyword in JavaScript. This also means that if you \"catch\" an error via\na promise error callback and you want to forward the error to the promise derived from the\ncurrent promise, you have to \"rethrow\" the error by returning a rejection constructed via\n`reject`.\n\n```js\n  promiseB = promiseA.then(function(result) {\n    // success: do something and resolve promiseB\n    //          with the old or a new result\n    return result;\n  }, function(reason) {\n    // error: handle the error if possible and\n    //        resolve promiseB with newPromiseOrValue,\n    //        otherwise forward the rejection to promiseB\n    if (canHandle(reason)) {\n     // handle the error and recover\n     return newPromiseOrValue;\n    }\n    return $q.reject(reason);\n  });\n```",
            "line": " bower_components/angular/angular.js:13340"
        },
        {
            "message": "Missing item type\nWraps an object that might be a value or a (3rd party) then-able promise into a $q promise.\nThis is useful when you are dealing with an object that might or might not be a promise, or if\nthe promise comes from a source that can't be trusted.",
            "line": " bower_components/angular/angular.js:13410"
        },
        {
            "message": "Missing item type\nCombines multiple promises into a single promise that is resolved when all of the input\npromises are resolved.",
            "line": " bower_components/angular/angular.js:13431"
        },
        {
            "message": "Missing item type\nDESIGN NOTES\n\nThe design decisions behind the scope are heavily favored for speed and memory consumption.\n\nThe typical use of scope is to watch the expressions, which most of the time return the same\nvalue as last time so we optimize the operation.\n\nClosures construction is expensive in terms of speed as well as memory:\n  - No closures, instead use prototypical inheritance for API\n  - Internal state needs to be stored on scope directly, which means that private state is\n    exposed as $$____ properties\n\nLoop operations are optimized by using while(count--) { ... }\n  - this means that in order to keep the same order of execution as addition we have to add\n    items to the array at the beginning (unshift) instead of at the end (push)\n\nChild scopes are created and removed often\n  - Using an array would be slow since inserts in middle are expensive so we use linked list\n\nThere are few watches then a lot of observers. This is why you don't want the observer to be\nimplemented in the same way as watch. Watch requires return of initialization function which\nare expensive to construct.",
            "line": " bower_components/angular/angular.js:13534"
        },
        {
            "message": "Missing item type\nProvider for the $rootScope service.",
            "line": " bower_components/angular/angular.js:13560"
        },
        {
            "message": "Missing item type\nSets the number of `$digest` iterations the scope should attempt to execute before giving up and\nassuming that the model is unstable.\n\nThe current default is 10 iterations.\n\nIn complex applications it's possible that the dependencies between `$watch`s will result in\nseveral digest iterations. However if an application needs more than the default 10 digest\niterations for its model to stabilize then you should investigate what is causing the model to\ncontinuously change during the digest.\n\nIncreasing the TTL could have performance implications, so you should not change it without\nproper justification.",
            "line": " bower_components/angular/angular.js:13568"
        },
        {
            "message": "Missing item type\nEvery application has a single root {@link ng.$rootScope.Scope scope}.\nAll other scopes are descendant scopes of the root scope. Scopes provide separation\nbetween the model and the view, via a mechanism for watching the model for changes.\nThey also provide an event emission/broadcast and subscription facility. See the\n{@link guide/scope developer guide on scopes}.",
            "line": " bower_components/angular/angular.js:13590"
        },
        {
            "message": "Missing item type\nA root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the\n{@link auto.$injector $injector}. Child scopes are created using the\n{@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when\ncompiled HTML template is executed.)\n\nHere is a simple scope snippet to show how you can interact with the scope.\n```html\n<file src=\"./test/ng/rootScopeSpec.js\" tag=\"docs1\" />\n```\n\n# Inheritance\nA scope can inherit from a parent scope, as in this example:\n```js\n        var parent = $rootScope;\n        var child = parent.$new();\n\n        parent.salutation = \"Hello\";\n        expect(child.salutation).toEqual('Hello');\n\n        child.salutation = \"Welcome\";\n        expect(child.salutation).toEqual('Welcome');\n        expect(parent.salutation).toEqual('Hello');\n```\n\nWhen interacting with `Scope` in tests, additional helper methods are available on the\ninstances of `Scope` type. See {@link ngMock.$rootScope.Scope ngMock Scope} for additional\ndetails.",
            "line": " bower_components/angular/angular.js:13635"
        },
        {
            "message": "Missing item type\nUnique scope ID (monotonically increasing) useful for debugging.",
            "line": " bower_components/angular/angular.js:13690"
        },
        {
            "message": "Missing item type\nReference to the parent scope.",
            "line": " bower_components/angular/angular.js:13698"
        },
        {
            "message": "Missing item type\nReference to the root scope.",
            "line": " bower_components/angular/angular.js:13706"
        },
        {
            "message": "Missing item type\nCreates a new child {@link ng.$rootScope.Scope scope}.\n\nThe parent scope will propagate the {@link ng.$rootScope.Scope#$digest $digest()} event.\nThe scope can be removed from the scope hierarchy using {@link ng.$rootScope.Scope#$destroy $destroy()}.\n\n{@link ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is\ndesired for the scope and its child scopes to be permanently detached from the parent and\nthus stop participating in model change detection and listener notification by invoking.",
            "line": " bower_components/angular/angular.js:13716"
        },
        {
            "message": "Missing item type\nRegisters a `listener` callback to be executed whenever the `watchExpression` changes.\n\n- The `watchExpression` is called on every call to {@link ng.$rootScope.Scope#$digest\n  $digest()} and should return the value that will be watched. (Since\n  {@link ng.$rootScope.Scope#$digest $digest()} reruns when it detects changes the\n  `watchExpression` can execute multiple times per\n  {@link ng.$rootScope.Scope#$digest $digest()} and should be idempotent.)\n- The `listener` is called only when the value from the current `watchExpression` and the\n  previous call to `watchExpression` are not equal (with the exception of the initial run,\n  see below). Inequality is determined according to reference inequality,\n  [strict comparison](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators)\n   via the `!==` Javascript operator, unless `objectEquality == true`\n  (see next point)\n- When `objectEquality == true`, inequality of the `watchExpression` is determined\n  according to the {@link angular.equals} function. To save the value of the object for\n  later comparison, the {@link angular.copy} function is used. This therefore means that\n  watching complex objects will have adverse memory and performance implications.\n- The watch `listener` may change the model, which may trigger other `listener`s to fire.\n  This is achieved by rerunning the watchers until no changes are detected. The rerun\n  iteration limit is 10 to prevent an infinite loop deadlock.\n\n\nIf you want to be notified whenever {@link ng.$rootScope.Scope#$digest $digest} is called,\nyou can register a `watchExpression` function with no `listener`. (Since `watchExpression`\ncan execute multiple times per {@link ng.$rootScope.Scope#$digest $digest} cycle when a\nchange is detected, be prepared for multiple calls to your listener.)\n\nAfter a watcher is registered with the scope, the `listener` fn is called asynchronously\n(via {@link ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the\nwatcher. In rare cases, this is undesirable because the listener is called when the result\nof `watchExpression` didn't change. To detect this scenario within the `listener` fn, you\ncan compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the\nlistener was called due to initialization.\n\n\n\n# Example\n```js\n          // let's assume that scope was dependency injected as the $rootScope\n          var scope = $rootScope;\n          scope.name = 'misko';\n          scope.counter = 0;\n\n          expect(scope.counter).toEqual(0);\n          scope.$watch('name', function(newValue, oldValue) {\n            scope.counter = scope.counter + 1;\n          });\n          expect(scope.counter).toEqual(0);\n\n          scope.$digest();\n          // the listener is always called during the first $digest loop after it was registered\n          expect(scope.counter).toEqual(1);\n\n          scope.$digest();\n          // but now it will not be called unless the value changes\n          expect(scope.counter).toEqual(1);\n\n          scope.name = 'adam';\n          scope.$digest();\n          expect(scope.counter).toEqual(2);\n\n\n\n          // Using a function as a watchExpression\n          var food;\n          scope.foodCounter = 0;\n          expect(scope.foodCounter).toEqual(0);\n          scope.$watch(\n            // This function returns the value being watched. It is called for each turn of the $digest loop\n            function() { return food; },\n            // This is the change listener, called when the value returned from the above function changes\n            function(newValue, oldValue) {\n              if ( newValue !== oldValue ) {\n                // Only increment the counter if the value changed\n                scope.foodCounter = scope.foodCounter + 1;\n              }\n            }\n          );\n          // No digest has been run so the counter will be zero\n          expect(scope.foodCounter).toEqual(0);\n\n          // Run the digest but since food has not changed count will still be zero\n          scope.$digest();\n          expect(scope.foodCounter).toEqual(0);\n\n          // Update food and run digest.  Now the counter will increment\n          food = 'cheeseburger';\n          scope.$digest();\n          expect(scope.foodCounter).toEqual(1);\n\n```",
            "line": " bower_components/angular/angular.js:13780"
        },
        {
            "message": "Missing item type\nA variant of {@link ng.$rootScope.Scope#$watch $watch()} where it watches an array of `watchExpressions`.\nIf any one expression in the collection changes the `listener` is executed.\n\n- The items in the `watchExpressions` array are observed via standard $watch operation and are examined on every\n  call to $digest() to see if any items changes.\n- The `listener` is called whenever any expression in the `watchExpressions` array changes.",
            "line": " bower_components/angular/angular.js:13931"
        },
        {
            "message": "Missing item type\nShallow watches the properties of an object and fires whenever any of the properties change\n(for arrays, this implies watching the array items; for object maps, this implies watching\nthe properties). If a change is detected, the `listener` callback is fired.\n\n- The `obj` collection is observed via standard $watch operation and is examined on every\n  call to $digest() to see if any items have been added, removed, or moved.\n- The `listener` is called whenever anything within the `obj` has changed. Examples include\n  adding, removing, and moving items belonging to an object or array.\n\n\n# Example\n```js\n         $scope.names = ['igor', 'matias', 'misko', 'james'];\n         $scope.dataCount = 4;\n\n         $scope.$watchCollection('names', function(newNames, oldNames) {\n           $scope.dataCount = newNames.length;\n         });\n\n         expect($scope.dataCount).toEqual(4);\n         $scope.$digest();\n\n         //still at 4 ... no changes\n         expect($scope.dataCount).toEqual(4);\n\n         $scope.names.pop();\n         $scope.$digest();\n\n         //now there's been a change\n         expect($scope.dataCount).toEqual(3);\n```",
            "line": " bower_components/angular/angular.js:14015"
        },
        {
            "message": "Missing item type\nProcesses all of the {@link ng.$rootScope.Scope#$watch watchers} of the current scope and\nits children. Because a {@link ng.$rootScope.Scope#$watch watcher}'s listener can change\nthe model, the `$digest()` keeps calling the {@link ng.$rootScope.Scope#$watch watchers}\nuntil no more listeners are firing. This means that it is possible to get into an infinite\nloop. This function will throw `'Maximum iteration limit exceeded.'` if the number of\niterations exceeds 10.\n\nUsually, you don't call `$digest()` directly in\n{@link ng.directive:ngController controllers} or in\n{@link ng.$compileProvider#directive directives}.\nInstead, you should call {@link ng.$rootScope.Scope#$apply $apply()} (typically from within\na {@link ng.$compileProvider#directive directive}), which will force a `$digest()`.\n\nIf you want to be notified whenever `$digest()` is called,\nyou can register a `watchExpression` function with\n{@link ng.$rootScope.Scope#$watch $watch()} with no `listener`.\n\nIn unit tests, you may need to call `$digest()` to simulate the scope life cycle.\n\n# Example\n```js\n          var scope = ...;\n          scope.name = 'misko';\n          scope.counter = 0;\n\n          expect(scope.counter).toEqual(0);\n          scope.$watch('name', function(newValue, oldValue) {\n            scope.counter = scope.counter + 1;\n          });\n          expect(scope.counter).toEqual(0);\n\n          scope.$digest();\n          // the listener is always called during the first $digest loop after it was registered\n          expect(scope.counter).toEqual(1);\n\n          scope.$digest();\n          // but now it will not be called unless the value changes\n          expect(scope.counter).toEqual(1);\n\n          scope.name = 'adam';\n          scope.$digest();\n          expect(scope.counter).toEqual(2);\n```",
            "line": " bower_components/angular/angular.js:14202"
        },
        {
            "message": "Missing item type\nBroadcasted when a scope and its children are being destroyed.\n\nNote that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\nclean up DOM bindings before an element is removed from the DOM.",
            "line": " bower_components/angular/angular.js:14366"
        },
        {
            "message": "Missing item type\nRemoves the current scope (and all of its children) from the parent scope. Removal implies\nthat calls to {@link ng.$rootScope.Scope#$digest $digest()} will no longer\npropagate to the current scope and its children. Removal also implies that the current\nscope is eligible for garbage collection.\n\nThe `$destroy()` is usually used by directives such as\n{@link ng.directive:ngRepeat ngRepeat} for managing the\nunrolling of the loop.\n\nJust before a scope is destroyed, a `$destroy` event is broadcasted on this scope.\nApplication code can register a `$destroy` event handler that will give it a chance to\nperform any necessary cleanup.\n\nNote that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\nclean up DOM bindings before an element is removed from the DOM.",
            "line": " bower_components/angular/angular.js:14378"
        },
        {
            "message": "Missing item type\nExecutes the `expression` on the current scope and returns the result. Any exceptions in\nthe expression are propagated (uncaught). This is useful when evaluating Angular\nexpressions.\n\n# Example\n```js\n          var scope = ng.$rootScope.Scope();\n          scope.a = 1;\n          scope.b = 2;\n\n          expect(scope.$eval('a+b')).toEqual(3);\n          expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);\n```",
            "line": " bower_components/angular/angular.js:14437"
        },
        {
            "message": "Missing item type\nExecutes the expression on the current scope at a later point in time.\n\nThe `$evalAsync` makes no guarantees as to when the `expression` will be executed, only\nthat:\n\n  - it will execute after the function that scheduled the evaluation (preferably before DOM\n    rendering).\n  - at least one {@link ng.$rootScope.Scope#$digest $digest cycle} will be performed after\n    `expression` execution.\n\nAny exceptions from the execution of the expression are forwarded to the\n{@link ng.$exceptionHandler $exceptionHandler} service.\n\n__Note:__ if this function is called outside of a `$digest` cycle, a new `$digest` cycle\nwill be scheduled. However, it is encouraged to always call code that changes the model\nfrom within an `$apply` call. That includes code evaluated via `$evalAsync`.",
            "line": " bower_components/angular/angular.js:14469"
        },
        {
            "message": "Missing item type\n`$apply()` is used to execute an expression in angular from outside of the angular\nframework. (For example from browser DOM events, setTimeout, XHR or third party libraries).\nBecause we are calling into the angular framework we need to perform proper scope life\ncycle of {@link ng.$exceptionHandler exception handling},\n{@link ng.$rootScope.Scope#$digest executing watches}.\n\n## Life cycle\n\n# Pseudo-Code of `$apply()`\n```js\n          function $apply(expr) {\n            try {\n              return $eval(expr);\n            } catch (e) {\n              $exceptionHandler(e);\n            } finally {\n              $root.$digest();\n            }\n          }\n```\n\n\nScope's `$apply()` method transitions through the following stages:\n\n1. The {@link guide/expression expression} is executed using the\n   {@link ng.$rootScope.Scope#$eval $eval()} method.\n2. Any exceptions from the execution of the expression are forwarded to the\n   {@link ng.$exceptionHandler $exceptionHandler} service.\n3. The {@link ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the\n   expression was executed using the {@link ng.$rootScope.Scope#$digest $digest()} method.",
            "line": " bower_components/angular/angular.js:14517"
        },
        {
            "message": "Missing item type\nSchedule the invocation of $apply to occur at a later time. The actual time difference\nvaries across browsers, but is typically around ~10 milliseconds.\n\nThis can be used to queue up multiple expressions which need to be evaluated in the same\ndigest.",
            "line": " bower_components/angular/angular.js:14579"
        },
        {
            "message": "Missing item type\nListens on events of a given type. See {@link ng.$rootScope.Scope#$emit $emit} for\ndiscussion of event life cycle.\n\nThe event listener function format is: `function(event, args...)`. The `event` object\npassed into the listener has the following attributes:\n\n  - `targetScope` - `{Scope}`: the scope on which the event was `$emit`-ed or\n    `$broadcast`-ed.\n  - `currentScope` - `{Scope}`: the scope that is currently handling the event. Once the\n    event propagates through the scope hierarchy, this property is set to null.\n  - `name` - `{string}`: name of the event.\n  - `stopPropagation` - `{function=}`: calling `stopPropagation` function will cancel\n    further event propagation (available only for events that were `$emit`-ed).\n  - `preventDefault` - `{function}`: calling `preventDefault` sets `defaultPrevented` flag\n    to true.\n  - `defaultPrevented` - `{boolean}`: true if `preventDefault` was called.",
            "line": " bower_components/angular/angular.js:14606"
        },
        {
            "message": "Missing item type\nDispatches an event `name` upwards through the scope hierarchy notifying the\nregistered {@link ng.$rootScope.Scope#$on} listeners.\n\nThe event life cycle starts at the scope on which `$emit` was called. All\n{@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\nnotified. Afterwards, the event traverses upwards toward the root scope and calls all\nregistered listeners along the way. The event will stop propagating if one of the listeners\ncancels it.\n\nAny exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\nonto the {@link ng.$exceptionHandler $exceptionHandler} service.",
            "line": " bower_components/angular/angular.js:14659"
        },
        {
            "message": "Missing item type\nDispatches an event `name` downwards to all child scopes (and their children) notifying the\nregistered {@link ng.$rootScope.Scope#$on} listeners.\n\nThe event life cycle starts at the scope on which `$broadcast` was called. All\n{@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\nnotified. Afterwards, the event propagates to all direct and indirect scopes of the current\nscope and calls all registered listeners along the way. The event cannot be canceled.\n\nAny exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\nonto the {@link ng.$exceptionHandler $exceptionHandler} service.",
            "line": " bower_components/angular/angular.js:14732"
        },
        {
            "message": "Missing item type\nfunction used as an initial value for watchers.\nbecause it's unique we can easily tell it apart from other values",
            "line": " bower_components/angular/angular.js:14841"
        },
        {
            "message": "Missing item type\nPrivate service to sanitize uris for links and images. Used by $compile and $sanitize.",
            "line": " bower_components/angular/angular.js:14868"
        },
        {
            "message": "Missing item type\nRetrieves or overrides the default regular expression that is used for whitelisting of safe\nurls during a[href] sanitization.\n\nThe sanitization is a security measure aimed at prevent XSS attacks via html links.\n\nAny url about to be assigned to a[href] via data-binding is first normalized and turned into\nan absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\nregular expression. If a match is found, the original url is written into the dom. Otherwise,\nthe absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.",
            "line": " bower_components/angular/angular.js:14876"
        },
        {
            "message": "Missing item type\nRetrieves or overrides the default regular expression that is used for whitelisting of safe\nurls during img[src] sanitization.\n\nThe sanitization is a security measure aimed at prevent XSS attacks via html links.\n\nAny url about to be assigned to img[src] via data-binding is first normalized and turned into\nan absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\nregular expression. If a match is found, the original url is written into the dom. Otherwise,\nthe absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.",
            "line": " bower_components/angular/angular.js:14901"
        },
        {
            "message": "Missing item type\n`$sceDelegate` is a service that is used by the `$sce` service to provide {@link ng.$sce Strict\nContextual Escaping (SCE)} services to AngularJS.\n\nTypically, you would configure or override the {@link ng.$sceDelegate $sceDelegate} instead of\nthe `$sce` service to customize the way Strict Contextual Escaping works in AngularJS.  This is\nbecause, while the `$sce` provides numerous shorthand methods, etc., you really only need to\noverride 3 core functions (`trustAs`, `getTrusted` and `valueOf`) to replace the way things\nwork because `$sce` delegates to `$sceDelegate` for these operations.\n\nRefer {@link ng.$sceDelegateProvider $sceDelegateProvider} to configure this service.\n\nThe default instance of `$sceDelegate` should work out of the box with little pain.  While you\ncan override it completely to change the behavior of `$sce`, the common case would\ninvolve configuring the {@link ng.$sceDelegateProvider $sceDelegateProvider} instead by setting\nyour own whitelists and blacklists for trusting URLs used for loading AngularJS resources such as\ntemplates.  Refer {@link ng.$sceDelegateProvider#resourceUrlWhitelist\n$sceDelegateProvider.resourceUrlWhitelist} and {@link\nng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}",
            "line": " bower_components/angular/angular.js:15002"
        },
        {
            "message": "Missing item type\nThe `$sceDelegateProvider` provider allows developers to configure the {@link ng.$sceDelegate\n$sceDelegate} service.  This allows one to get/set the whitelists and blacklists used to ensure\nthat the URLs used for sourcing Angular templates are safe.  Refer {@link\nng.$sceDelegateProvider#resourceUrlWhitelist $sceDelegateProvider.resourceUrlWhitelist} and\n{@link ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}\n\nFor the general details about this service in Angular, read the main page for {@link ng.$sce\nStrict Contextual Escaping (SCE)}.\n\n**Example**:  Consider the following case. <a name=\"example\"></a>\n\n- your app is hosted at url `http://myapp.example.com/`\n- but some of your templates are hosted on other domains you control such as\n  `http://srv01.assets.example.com/`,  `http://srv02.assets.example.com/`, etc.\n- and you have an open redirect at `http://myapp.example.com/clickThru?...`.\n\nHere is what a secure configuration for this scenario might look like:\n\n```\n angular.module('myApp', []).config(function($sceDelegateProvider) {\n   $sceDelegateProvider.resourceUrlWhitelist([\n     // Allow same origin resource loads.\n     'self',\n     // Allow loading from our assets domain.  Notice the difference between * and **.\n     'http://srv*.assets.example.com/**'\n   ]);\n\n   // The blacklist overrides the whitelist so the open redirect here is blocked.\n   $sceDelegateProvider.resourceUrlBlacklist([\n     'http://myapp.example.com/clickThru**'\n   ]);\n });\n```",
            "line": " bower_components/angular/angular.js:15029"
        },
        {
            "message": "Missing item type\nSets/Gets the whitelist of trusted resource URLs.",
            "line": " bower_components/angular/angular.js:15076"
        },
        {
            "message": "Missing item type\nSets/Gets the blacklist of trusted resource URLs.",
            "line": " bower_components/angular/angular.js:15105"
        },
        {
            "message": "Missing item type\nReturns an object that is trusted by angular for use in specified strict\ncontextual escaping contexts (such as ng-bind-html, ng-include, any src\nattribute interpolation, any dom event binding attribute interpolation\nsuch as for onclick,  etc.) that uses the provided value.\nSee {@link ng.$sce $sce} for enabling strict contextual escaping.",
            "line": " bower_components/angular/angular.js:15208"
        },
        {
            "message": "Missing item type\nIf the passed parameter had been returned by a prior call to {@link ng.$sceDelegate#trustAs\n`$sceDelegate.trustAs`}, returns the value that had been passed to {@link\nng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.\n\nIf the passed parameter is not a value that had been returned by {@link\nng.$sceDelegate#trustAs `$sceDelegate.trustAs`}, returns it as-is.",
            "line": " bower_components/angular/angular.js:15245"
        },
        {
            "message": "Missing item type\nTakes the result of a {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`} call and\nreturns the originally supplied value if the queried context type is a supertype of the\ncreated type.  If this condition isn't satisfied, throws an exception.",
            "line": " bower_components/angular/angular.js:15271"
        },
        {
            "message": "Missing item type\nThe $sceProvider provider allows developers to configure the {@link ng.$sce $sce} service.\n-   enable/disable Strict Contextual Escaping (SCE) in a module\n-   override the default implementation with a custom delegate\n\nRead more about {@link ng.$sce Strict Contextual Escaping (SCE)}.",
            "line": " bower_components/angular/angular.js:15318"
        },
        {
            "message": "Missing item type\n`$sce` is a service that provides Strict Contextual Escaping services to AngularJS.\n\n# Strict Contextual Escaping\n\nStrict Contextual Escaping (SCE) is a mode in which AngularJS requires bindings in certain\ncontexts to result in a value that is marked as safe to use for that context.  One example of\nsuch a context is binding arbitrary html controlled by the user via `ng-bind-html`.  We refer\nto these contexts as privileged or SCE contexts.\n\nAs of version 1.2, Angular ships with SCE enabled by default.\n\nNote:  When enabled (the default), IE<11 in quirks mode is not supported.  In this mode, IE<11 allow\none to execute arbitrary javascript by the use of the expression() syntax.  Refer\n<http://blogs.msdn.com/b/ie/archive/2008/10/16/ending-expressions.aspx> to learn more about them.\nYou can ensure your document is in standards mode and not quirks mode by adding `<!doctype html>`\nto the top of your HTML document.\n\nSCE assists in writing code in way that (a) is secure by default and (b) makes auditing for\nsecurity vulnerabilities such as XSS, clickjacking, etc. a lot easier.\n\nHere's an example of a binding in a privileged context:\n\n```\n<input ng-model=\"userHtml\">\n<div ng-bind-html=\"userHtml\"></div>\n```\n\nNotice that `ng-bind-html` is bound to `userHtml` controlled by the user.  With SCE\ndisabled, this application allows the user to render arbitrary HTML into the DIV.\nIn a more realistic example, one may be rendering user comments, blog articles, etc. via\nbindings.  (HTML is just one example of a context where rendering user controlled input creates\nsecurity vulnerabilities.)\n\nFor the case of HTML, you might use a library, either on the client side, or on the server side,\nto sanitize unsafe HTML before binding to the value and rendering it in the document.\n\nHow would you ensure that every place that used these types of bindings was bound to a value that\nwas sanitized by your library (or returned as safe for rendering by your server?)  How can you\nensure that you didn't accidentally delete the line that sanitized the value, or renamed some\nproperties/fields and forgot to update the binding to the sanitized value?\n\nTo be secure by default, you want to ensure that any such bindings are disallowed unless you can\ndetermine that something explicitly says it's safe to use a value for binding in that\ncontext.  You can then audit your code (a simple grep would do) to ensure that this is only done\nfor those values that you can easily tell are safe - because they were received from your server,\nsanitized by your library, etc.  You can organize your codebase to help with this - perhaps\nallowing only the files in a specific directory to do this.  Ensuring that the internal API\nexposed by that code doesn't markup arbitrary values as safe then becomes a more manageable task.\n\nIn the case of AngularJS' SCE service, one uses {@link ng.$sce#trustAs $sce.trustAs}\n(and shorthand methods such as {@link ng.$sce#trustAsHtml $sce.trustAsHtml}, etc.) to\nobtain values that will be accepted by SCE / privileged contexts.\n\n\n## How does it work?\n\nIn privileged contexts, directives and code will bind to the result of {@link ng.$sce#getTrusted\n$sce.getTrusted(context, value)} rather than to the value directly.  Directives use {@link\nng.$sce#parseAs $sce.parseAs} rather than `$parse` to watch attribute bindings, which performs the\n{@link ng.$sce#getTrusted $sce.getTrusted} behind the scenes on non-constant literals.\n\nAs an example, {@link ng.directive:ngBindHtml ngBindHtml} uses {@link\nng.$sce#parseAsHtml $sce.parseAsHtml(binding expression)}.  Here's the actual code (slightly\nsimplified):\n\n```\nvar ngBindHtmlDirective = ['$sce', function($sce) {\n  return function(scope, element, attr) {\n    scope.$watch($sce.parseAsHtml(attr.ngBindHtml), function(value) {\n      element.html(value || '');\n    });\n  };\n}];\n```\n\n## Impact on loading templates\n\nThis applies both to the {@link ng.directive:ngInclude `ng-include`} directive as well as\n`templateUrl`'s specified by {@link guide/directive directives}.\n\nBy default, Angular only loads templates from the same domain and protocol as the application\ndocument.  This is done by calling {@link ng.$sce#getTrustedResourceUrl\n$sce.getTrustedResourceUrl} on the template URL.  To load templates from other domains and/or\nprotocols, you may either either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist\nthem} or {@link ng.$sce#trustAsResourceUrl wrap it} into a trusted value.\n\n*Please note*:\nThe browser's\n[Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\nand [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\npolicy apply in addition to this and may further restrict whether the template is successfully\nloaded.  This means that without the right CORS policy, loading templates from a different domain\nwon't work on all browsers.  Also, loading templates from `file://` URL does not work on some\nbrowsers.\n\n## This feels like too much overhead\n\nIt's important to remember that SCE only applies to interpolation expressions.\n\nIf your expressions are constant literals, they're automatically trusted and you don't need to\ncall `$sce.trustAs` on them (remember to include the `ngSanitize` module) (e.g.\n`<div ng-bind-html=\"'<b>implicitly trusted</b>'\"></div>`) just works.\n\nAdditionally, `a[href]` and `img[src]` automatically sanitize their URLs and do not pass them\nthrough {@link ng.$sce#getTrusted $sce.getTrusted}.  SCE doesn't play a role here.\n\nThe included {@link ng.$sceDelegate $sceDelegate} comes with sane defaults to allow you to load\ntemplates in `ng-include` from your application's domain without having to even know about SCE.\nIt blocks loading templates from other domains or loading templates over http from an https\nserved document.  You can change these by setting your own custom {@link\nng.$sceDelegateProvider#resourceUrlWhitelist whitelists} and {@link\nng.$sceDelegateProvider#resourceUrlBlacklist blacklists} for matching such URLs.\n\nThis significantly reduces the overhead.  It is far easier to pay the small overhead and have an\napplication that's secure and can be audited to verify that with much more ease than bolting\nsecurity onto an application later.\n\n<a name=\"contexts\"></a>\n## What trusted context types are supported?\n\n| Context             | Notes          |\n|---------------------|----------------|\n| `$sce.HTML`         | For HTML that's safe to source into the application.  The {@link ng.directive:ngBindHtml ngBindHtml} directive uses this context for bindings. If an unsafe value is encountered and the {@link ngSanitize $sanitize} module is present this will sanitize the value instead of throwing an error. |\n| `$sce.CSS`          | For CSS that's safe to source into the application.  Currently unused.  Feel free to use it in your own directives. |\n| `$sce.URL`          | For URLs that are safe to follow as links.  Currently unused (`<a href=` and `<img src=` sanitize their urls and don't constitute an SCE context. |\n| `$sce.RESOURCE_URL` | For URLs that are not only safe to follow as links, but whose contents are also safe to include in your application.  Examples include `ng-include`, `src` / `ngSrc` bindings for tags other than `IMG` (e.g. `IFRAME`, `OBJECT`, etc.)  <br><br>Note that `$sce.RESOURCE_URL` makes a stronger statement about the URL than `$sce.URL` does and therefore contexts requiring values trusted for `$sce.RESOURCE_URL` can be used anywhere that values trusted for `$sce.URL` are required. |\n| `$sce.JS`           | For JavaScript that is safe to execute in your application's context.  Currently unused.  Feel free to use it in your own directives. |\n\n## Format of items in {@link ng.$sceDelegateProvider#resourceUrlWhitelist resourceUrlWhitelist}/{@link ng.$sceDelegateProvider#resourceUrlBlacklist Blacklist} <a name=\"resourceUrlPatternItem\"></a>\n\n Each element in these arrays must be one of the following:\n\n - **'self'**\n   - The special **string**, `'self'`, can be used to match against all URLs of the **same\n     domain** as the application document using the **same protocol**.\n - **String** (except the special value `'self'`)\n   - The string is matched against the full *normalized / absolute URL* of the resource\n     being tested (substring matches are not good enough.)\n   - There are exactly **two wildcard sequences** - `*` and `**`.  All other characters\n     match themselves.\n   - `*`: matches zero or more occurrences of any character other than one of the following 6\n     characters: '`:`', '`/`', '`.`', '`?`', '`&`' and ';'.  It's a useful wildcard for use\n     in a whitelist.\n   - `**`: matches zero or more occurrences of *any* character.  As such, it's not\n     not appropriate to use in for a scheme, domain, etc. as it would match too much.  (e.g.\n     http://**.example.com/ would match http://evil.com/?ignore=.example.com/ and that might\n     not have been the intention.)  Its usage at the very end of the path is ok.  (e.g.\n     http://foo.example.com/templates/**).\n - **RegExp** (*see caveat below*)\n   - *Caveat*:  While regular expressions are powerful and offer great flexibility,  their syntax\n     (and all the inevitable escaping) makes them *harder to maintain*.  It's easy to\n     accidentally introduce a bug when one updates a complex expression (imho, all regexes should\n     have good test coverage.).  For instance, the use of `.` in the regex is correct only in a\n     small number of cases.  A `.` character in the regex used when matching the scheme or a\n     subdomain could be matched against a `:` or literal `.` that was likely not intended.   It\n     is highly recommended to use the string patterns and only fall back to regular expressions\n     if they as a last resort.\n   - The regular expression must be an instance of RegExp (i.e. not a string.)  It is\n     matched against the **entire** *normalized / absolute URL* of the resource being tested\n     (even when the RegExp did not have the `^` and `$` codes.)  In addition, any flags\n     present on the RegExp (such as multiline, global, ignoreCase) are ignored.\n   - If you are generating your JavaScript from some other templating engine (not\n     recommended, e.g. in issue [#4006](https://github.com/angular/angular.js/issues/4006)),\n     remember to escape your regular expression (and be aware that you might need more than\n     one level of escaping depending on your templating engine and the way you interpolated\n     the value.)  Do make use of your platform's escaping mechanism as it might be good\n     enough before coding your own.  e.g. Ruby has\n     [Regexp.escape(str)](http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape)\n     and Python has [re.escape](http://docs.python.org/library/re.html#re.escape).\n     Javascript lacks a similar built in function for escaping.  Take a look at Google\n     Closure library's [goog.string.regExpEscape(s)](\n     http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962).\n\nRefer {@link ng.$sceDelegateProvider $sceDelegateProvider} for an example.\n\n## Show me an example using SCE.\n\n<example module=\"mySceApp\" deps=\"angular-sanitize.js\">\n<file name=\"index.html\">\n  <div ng-controller=\"AppController as myCtrl\">\n    <i ng-bind-html=\"myCtrl.explicitlyTrustedHtml\" id=\"explicitlyTrustedHtml\"></i><br><br>\n    <b>User comments</b><br>\n    By default, HTML that isn't explicitly trusted (e.g. Alice's comment) is sanitized when\n    $sanitize is available.  If $sanitize isn't available, this results in an error instead of an\n    exploit.\n    <div class=\"well\">\n      <div ng-repeat=\"userComment in myCtrl.userComments\">\n        <b>{{userComment.name}}</b>:\n        <span ng-bind-html=\"userComment.htmlComment\" class=\"htmlComment\"></span>\n        <br>\n      </div>\n    </div>\n  </div>\n</file>\n\n<file name=\"script.js\">\n  angular.module('mySceApp', ['ngSanitize'])\n    .controller('AppController', ['$http', '$templateCache', '$sce',\n      function($http, $templateCache, $sce) {\n        var self = this;\n        $http.get(\"test_data.json\", {cache: $templateCache}).success(function(userComments) {\n          self.userComments = userComments;\n        });\n        self.explicitlyTrustedHtml = $sce.trustAsHtml(\n            '<span onmouseover=\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\n            'sanitization.&quot;\">Hover over this text.</span>');\n      }]);\n</file>\n\n<file name=\"test_data.json\">\n[\n  { \"name\": \"Alice\",\n    \"htmlComment\":\n        \"<span onmouseover='this.textContent=\\\"PWN3D!\\\"'>Is <i>anyone</i> reading this?</span>\"\n  },\n  { \"name\": \"Bob\",\n    \"htmlComment\": \"<i>Yes!</i>  Am I the only other one?\"\n  }\n]\n</file>\n\n<file name=\"protractor.js\" type=\"protractor\">\n  describe('SCE doc demo', function() {\n    it('should sanitize untrusted values', function() {\n      expect(element.all(by.css('.htmlComment')).first().getInnerHtml())\n          .toBe('<span>Is <i>anyone</i> reading this?</span>');\n    });\n\n    it('should NOT sanitize explicitly trusted values', function() {\n      expect(element(by.id('explicitlyTrustedHtml')).getInnerHtml()).toBe(\n          '<span onmouseover=\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\n          'sanitization.&quot;\">Hover over this text.</span>');\n    });\n  });\n</file>\n</example>\n\n\n\n## Can I disable SCE completely?\n\nYes, you can.  However, this is strongly discouraged.  SCE gives you a lot of security benefits\nfor little coding overhead.  It will be much harder to take an SCE disabled application and\neither secure it on your own or enable SCE at a later stage.  It might make sense to disable SCE\nfor cases where you have a lot of existing code that was written before SCE was introduced and\nyou're migrating them a module at a time.\n\nThat said, here's how you can completely disable SCE:\n\n```\nangular.module('myAppWithSceDisabledmyApp', []).config(function($sceProvider) {\n  // Completely disable SCE.  For demonstration purposes only!\n  // Do not use in new projects.\n  $sceProvider.enabled(false);\n});\n```",
            "line": " bower_components/angular/angular.js:15332"
        },
        {
            "message": "Missing item type\nEnables/disables SCE and returns the current value.",
            "line": " bower_components/angular/angular.js:15602"
        },
        {
            "message": "Missing item type\nReturns a boolean indicating if SCE is enabled.",
            "line": " bower_components/angular/angular.js:15680"
        },
        {
            "message": "Missing item type\nConverts Angular {@link guide/expression expression} into a function.  This is like {@link\nng.$parse $parse} and is identical when the expression is a literal constant.  Otherwise, it\nwraps the expression in a call to {@link ng.$sce#getTrusted $sce.getTrusted(*type*,\n*result*)}",
            "line": " bower_components/angular/angular.js:15703"
        },
        {
            "message": "Missing item type\nDelegates to {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.  As such,\nreturns an object that is trusted by angular for use in specified strict contextual\nescaping contexts (such as ng-bind-html, ng-include, any src attribute\ninterpolation, any dom event binding attribute interpolation such as for onclick,  etc.)\nthat uses the provided value.  See * {@link ng.$sce $sce} for enabling strict contextual\nescaping.",
            "line": " bower_components/angular/angular.js:15733"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.trustAsHtml(value)` →\n    {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.HTML, value)`}",
            "line": " bower_components/angular/angular.js:15752"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.trustAsUrl(value)` →\n    {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.URL, value)`}",
            "line": " bower_components/angular/angular.js:15767"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.trustAsResourceUrl(value)` →\n    {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.RESOURCE_URL, value)`}",
            "line": " bower_components/angular/angular.js:15782"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.trustAsJs(value)` →\n    {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.JS, value)`}",
            "line": " bower_components/angular/angular.js:15797"
        },
        {
            "message": "Missing item type\nDelegates to {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted`}.  As such,\ntakes the result of a {@link ng.$sce#trustAs `$sce.trustAs`}() call and returns the\noriginally supplied value if the queried context type is a supertype of the created type.\nIf this condition isn't satisfied, throws an exception.",
            "line": " bower_components/angular/angular.js:15812"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.getTrustedHtml(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.HTML, value)`}",
            "line": " bower_components/angular/angular.js:15830"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.getTrustedCss(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.CSS, value)`}",
            "line": " bower_components/angular/angular.js:15842"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.getTrustedUrl(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.URL, value)`}",
            "line": " bower_components/angular/angular.js:15854"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.getTrustedResourceUrl(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.RESOURCE_URL, value)`}",
            "line": " bower_components/angular/angular.js:15866"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.getTrustedJs(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.JS, value)`}",
            "line": " bower_components/angular/angular.js:15878"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.parseAsHtml(expression string)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.HTML, value)`}",
            "line": " bower_components/angular/angular.js:15890"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.parseAsCss(value)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.CSS, value)`}",
            "line": " bower_components/angular/angular.js:15907"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.parseAsUrl(value)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.URL, value)`}",
            "line": " bower_components/angular/angular.js:15924"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.parseAsResourceUrl(value)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.RESOURCE_URL, value)`}",
            "line": " bower_components/angular/angular.js:15941"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.parseAsJs(value)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.JS, value)`}",
            "line": " bower_components/angular/angular.js:15958"
        },
        {
            "message": "Missing item type\nThe private $$testability service provides a collection of methods for use when debugging\nor by automated test and debugging tools.",
            "line": " bower_components/angular/angular.js:16149"
        },
        {
            "message": "Missing item type\nReturns an array of elements that are bound (via ng-bind or {{}})\nto expressions matching the input.",
            "line": " bower_components/angular/angular.js:16158"
        },
        {
            "message": "Missing item type\nReturns an array of elements that are two-way found via ng-model to\nexpressions matching the input.",
            "line": " bower_components/angular/angular.js:16193"
        },
        {
            "message": "Missing item type\nShortcut for getting the location in a browser agnostic way. Returns\n    the path, search, and hash. (e.g. /path?a=b#hash)",
            "line": " bower_components/angular/angular.js:16217"
        },
        {
            "message": "Missing item type\nShortcut for navigating to a location without doing a full page reload.",
            "line": " bower_components/angular/angular.js:16228"
        },
        {
            "message": "Missing item type\nCalls the callback when $timeout and $http requests are completed.",
            "line": " bower_components/angular/angular.js:16244"
        },
        {
            "message": "Missing item type\nAngular's wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch\nblock and delegates any exceptions to\n{@link ng.$exceptionHandler $exceptionHandler} service.\n\nThe return value of registering a timeout function is a promise, which will be resolved when\nthe timeout is reached and the timeout function is executed.\n\nTo cancel a timeout request, call `$timeout.cancel(promise)`.\n\nIn tests you can use {@link ngMock.$timeout `$timeout.flush()`} to\nsynchronously flush the queue of deferred functions.",
            "line": " bower_components/angular/angular.js:16266"
        },
        {
            "message": "Missing item type\nCancels a task associated with the `promise`. As a result of this, the promise will be\nresolved with a rejection.",
            "line": " bower_components/angular/angular.js:16318"
        },
        {
            "message": "Missing item type\nNormalizes and parses a URL.",
            "line": " bower_components/angular/angular.js:16354"
        },
        {
            "message": "Missing item type\nParse a request URL and determine whether this is a same-origin request as the application document.",
            "line": " bower_components/angular/angular.js:16433"
        },
        {
            "message": "Missing item type\nA reference to the browser's `window` object. While `window`\nis globally available in JavaScript, it causes testability problems, because\nit is a global variable. In angular we always refer to it through the\n`$window` service, so it may be overridden, removed or mocked for testing.\n\nExpressions, like the one defined for the `ngClick` directive in the example\nbelow, are evaluated with respect to the current scope.  Therefore, there is\nno risk of inadvertently coding in a dependency on a global value in such an\nexpression.",
            "line": " bower_components/angular/angular.js:16446"
        },
        {
            "message": "Missing item type\nFilters are just functions which transform input to an output. However filters need to be\nDependency Injected. To achieve this a filter definition consists of a factory function which is\nannotated with dependencies and is responsible for creating a filter function.\n\n```js\n  // Filter registration\n  function MyModule($provide, $filterProvider) {\n    // create a service to demonstrate injection (not always needed)\n    $provide.value('greet', function(name){\n      return 'Hello ' + name + '!';\n    });\n\n    // register a filter factory which uses the\n    // greet service to demonstrate DI.\n    $filterProvider.register('greet', function(greet){\n      // return the filter function which uses the greet service\n      // to generate salutation\n      return function(text) {\n        // filters need to be forgiving so check input validity\n        return text && greet(text) || text;\n      };\n    });\n  }\n```\n\nThe filter function is registered with the `$injector` under the filter name suffix with\n`Filter`.\n\n```js\n  it('should be the same instance', inject(\n    function($filterProvider) {\n      $filterProvider.register('reverse', function(){\n        return ...;\n      });\n    },\n    function($filter, reverseFilter) {\n      expect($filter('reverse')).toBe(reverseFilter);\n    });\n```\n\n\nFor more information about how angular filters work, and how to create your own filters, see\n{@link guide/filter Filters} in the Angular Developer Guide.",
            "line": " bower_components/angular/angular.js:16502"
        },
        {
            "message": "Missing item type\nFilters are used for formatting data displayed to the user.\n\nThe general syntax in templates is as follows:\n\n        {{ expression [| filter_name[:parameter_value] ... ] }}",
            "line": " bower_components/angular/angular.js:16552"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular/angular.js:16587"
        },
        {
            "message": "Missing item type\nSelects a subset of items from `array` and returns it as a new array.",
            "line": " bower_components/angular/angular.js:16639"
        },
        {
            "message": "Missing item type\nFormats a number as a currency (ie $1,234.56). When no currency symbol is provided, default\nsymbol for current locale is used.",
            "line": " bower_components/angular/angular.js:16868"
        },
        {
            "message": "Missing item type\nFormats a number as text.\n\nIf the input is not a number an empty string is returned.",
            "line": " bower_components/angular/angular.js:16940"
        },
        {
            "message": "Missing item type\nFormats `date` to a string based on the requested `format`.\n\n  `format` string can be composed of the following elements:\n\n  * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)\n  * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n  * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)\n  * `'MMMM'`: Month in year (January-December)\n  * `'MMM'`: Month in year (Jan-Dec)\n  * `'MM'`: Month in year, padded (01-12)\n  * `'M'`: Month in year (1-12)\n  * `'dd'`: Day in month, padded (01-31)\n  * `'d'`: Day in month (1-31)\n  * `'EEEE'`: Day in Week,(Sunday-Saturday)\n  * `'EEE'`: Day in Week, (Sun-Sat)\n  * `'HH'`: Hour in day, padded (00-23)\n  * `'H'`: Hour in day (0-23)\n  * `'hh'`: Hour in AM/PM, padded (01-12)\n  * `'h'`: Hour in AM/PM, (1-12)\n  * `'mm'`: Minute in hour, padded (00-59)\n  * `'m'`: Minute in hour (0-59)\n  * `'ss'`: Second in minute, padded (00-59)\n  * `'s'`: Second in minute (0-59)\n  * `'sss'`: Millisecond in second, padded (000-999)\n  * `'a'`: AM/PM marker\n  * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)\n  * `'ww'`: Week of year, padded (00-53). Week 01 is the week with the first Thursday of the year\n  * `'w'`: Week of year (0-53). Week 1 is the week with the first Thursday of the year\n  * `'G'`, `'GG'`, `'GGG'`: The abbreviated form of the era string (e.g. 'AD')\n  * `'GGGG'`: The long form of the era string (e.g. 'Anno Domini')\n\n  `format` string can also be one of the following predefined\n  {@link guide/i18n localizable formats}:\n\n  * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale\n    (e.g. Sep 3, 2010 12:05:08 PM)\n  * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 PM)\n  * `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` for en_US  locale\n    (e.g. Friday, September 3, 2010)\n  * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010)\n  * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)\n  * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)\n  * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 PM)\n  * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 PM)\n\n  `format` string can contain literal values. These need to be escaped by surrounding with single quotes (e.g.\n  `\"h 'in the morning'\"`). In order to output a single quote, escape it - i.e., two single quotes in a sequence\n  (e.g. `\"h 'o''clock'\"`).",
            "line": " bower_components/angular/angular.js:17204"
        },
        {
            "message": "Missing item type\nAllows you to convert a JavaScript object into JSON string.\n\n  This filter is mostly useful for debugging. When using the double curly {{value}} notation\n  the binding is automatically converted to JSON.",
            "line": " bower_components/angular/angular.js:17371"
        },
        {
            "message": "Missing item type\nConverts string to lowercase.",
            "line": " bower_components/angular/angular.js:17412"
        },
        {
            "message": "Missing item type\nConverts string to uppercase.",
            "line": " bower_components/angular/angular.js:17423"
        },
        {
            "message": "Missing item type\nCreates a new array or string containing only a specified number of elements. The elements\nare taken from either the beginning or the end of the source array, string or number, as specified by\nthe value and sign (positive or negative) of `limit`. If a number is used as input, it is\nconverted to a string.",
            "line": " bower_components/angular/angular.js:17433"
        },
        {
            "message": "Missing item type\nOrders a specified `array` by the `expression` predicate. It is ordered alphabetically\nfor strings and numerically for numbers. Note: if you notice numbers are not being sorted\ncorrectly, make sure they are actually being saved as numbers and not strings.",
            "line": " bower_components/angular/angular.js:17539"
        },
        {
            "message": "Missing item type\nModifies the default behavior of the html A tag so that the default action is prevented when\nthe href attribute is empty.\n\nThis change permits the easy creation of action links with the `ngClick` directive\nwithout changing the location or causing page reloads, e.g.:\n`<a href=\"\" ng-click=\"list.addItem()\">Add Item</a>`",
            "line": " bower_components/angular/angular.js:17790"
        },
        {
            "message": "Missing item type\nUsing Angular markup like `{{hash}}` in an href attribute will\nmake the link go to the wrong URL if the user clicks it before\nAngular has a chance to replace the `{{hash}}` markup with its\nvalue. Until Angular replaces the markup the link will be broken\nand will most likely return a 404 error. The `ngHref` directive\nsolves this problem.\n\nThe wrong way to write it:\n```html\n<a href=\"http://www.gravatar.com/avatar/{{hash}}\">link1</a>\n```\n\nThe correct way to write it:\n```html\n<a ng-href=\"http://www.gravatar.com/avatar/{{hash}}\">link1</a>\n```",
            "line": " bower_components/angular/angular.js:17825"
        },
        {
            "message": "Missing item type\nUsing Angular markup like `{{hash}}` in a `src` attribute doesn't\nwork right: The browser will fetch from the URL with the literal\ntext `{{hash}}` until Angular replaces the expression inside\n`{{hash}}`. The `ngSrc` directive solves this problem.\n\nThe buggy way to write it:\n```html\n<img src=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n```\n\nThe correct way to write it:\n```html\n<img ng-src=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n```",
            "line": " bower_components/angular/angular.js:17924"
        },
        {
            "message": "Missing item type\nUsing Angular markup like `{{hash}}` in a `srcset` attribute doesn't\nwork right: The browser will fetch from the URL with the literal\ntext `{{hash}}` until Angular replaces the expression inside\n`{{hash}}`. The `ngSrcset` directive solves this problem.\n\nThe buggy way to write it:\n```html\n<img srcset=\"http://www.gravatar.com/avatar/{{hash}} 2x\"/>\n```\n\nThe correct way to write it:\n```html\n<img ng-srcset=\"http://www.gravatar.com/avatar/{{hash}} 2x\"/>\n```",
            "line": " bower_components/angular/angular.js:17950"
        },
        {
            "message": "Missing item type\nThis directive sets the `disabled` attribute on the element if the\n{@link guide/expression expression} inside `ngDisabled` evaluates to truthy.\n\nA special directive is necessary because we cannot use interpolation inside the `disabled`\nattribute.  The following example would make the button enabled on Chrome/Firefox\nbut not on older IEs:\n\n```html\n<!-- See below for an example of ng-disabled being used correctly -->\n<div ng-init=\"isDisabled = false\">\n <button disabled=\"{{isDisabled}}\">Disabled</button>\n</div>\n```\n\nThis is because the HTML specification does not require browsers to preserve the values of\nboolean attributes such as `disabled` (Their presence means true and their absence means false.)\nIf we put an Angular interpolation expression into such an attribute then the\nbinding information would be lost when the browser removes the attribute.",
            "line": " bower_components/angular/angular.js:17976"
        },
        {
            "message": "Missing item type\nThe HTML specification does not require browsers to preserve the values of boolean attributes\nsuch as checked. (Their presence means true and their absence means false.)\nIf we put an Angular interpolation expression into such an attribute then the\nbinding information would be lost when the browser removes the attribute.\nThe `ngChecked` directive solves this problem for the `checked` attribute.\nThis complementary directive is not removed by the browser and so provides\na permanent reliable place to store the binding information.",
            "line": " bower_components/angular/angular.js:18024"
        },
        {
            "message": "Missing item type\nThe HTML specification does not require browsers to preserve the values of boolean attributes\nsuch as readonly. (Their presence means true and their absence means false.)\nIf we put an Angular interpolation expression into such an attribute then the\nbinding information would be lost when the browser removes the attribute.\nThe `ngReadonly` directive solves this problem for the `readonly` attribute.\nThis complementary directive is not removed by the browser and so provides\na permanent reliable place to store the binding information.",
            "line": " bower_components/angular/angular.js:18059"
        },
        {
            "message": "Missing item type\nThe HTML specification does not require browsers to preserve the values of boolean attributes\nsuch as selected. (Their presence means true and their absence means false.)\nIf we put an Angular interpolation expression into such an attribute then the\nbinding information would be lost when the browser removes the attribute.\nThe `ngSelected` directive solves this problem for the `selected` attribute.\nThis complementary directive is not removed by the browser and so provides\na permanent reliable place to store the binding information.",
            "line": " bower_components/angular/angular.js:18094"
        },
        {
            "message": "Missing item type\nThe HTML specification does not require browsers to preserve the values of boolean attributes\nsuch as open. (Their presence means true and their absence means false.)\nIf we put an Angular interpolation expression into such an attribute then the\nbinding information would be lost when the browser removes the attribute.\nThe `ngOpen` directive solves this problem for the `open` attribute.\nThis complementary directive is not removed by the browser and so provides\na permanent reliable place to store the binding information.",
            "line": " bower_components/angular/angular.js:18132"
        },
        {
            "message": "Missing item type\nRollback all form controls pending updates to the `$modelValue`.\n\nUpdates may be pending by a debounced event or because the input is waiting for a some future\nevent defined in `ng-model-options`. This method is typically needed by the reset button of\na form that uses `ng-model-options` to pend updates.",
            "line": " bower_components/angular/angular.js:18331"
        },
        {
            "message": "Missing item type\nCommit all form controls pending updates to the `$modelValue`.\n\nUpdates may be pending by a debounced event or because the input is waiting for a some future\nevent defined in `ng-model-options`. This method is rarely needed as `NgModelController`\nusually handles calling this in response to input events.",
            "line": " bower_components/angular/angular.js:18348"
        },
        {
            "message": "Missing item type\nRegister a control with the form.\n\nInput elements using ngModelController do this automatically when they are linked.",
            "line": " bower_components/angular/angular.js:18365"
        },
        {
            "message": "Missing item type\nDeregister a control from the form.\n\nInput elements using ngModelController do this automatically when they are destroyed.",
            "line": " bower_components/angular/angular.js:18396"
        },
        {
            "message": "Missing item type\nSets the validity of a form control.\n\nThis method will also propagate to parent forms.",
            "line": " bower_components/angular/angular.js:18423"
        },
        {
            "message": "Missing item type\nSets the form to a dirty state.\n\nThis method can be called to add the 'ng-dirty' class and set the form to a dirty\nstate (ng-dirty class). This method will also propagate to parent forms.",
            "line": " bower_components/angular/angular.js:18460"
        },
        {
            "message": "Missing item type\nSets the form to its pristine state.\n\nThis method can be called to remove the 'ng-dirty' class and set the form to its pristine\nstate (ng-pristine class). This method will also propagate to all the controls contained\nin this form.\n\nSetting a form back to a pristine state is often useful when we want to 'reuse' a form after\nsaving or resetting it.",
            "line": " bower_components/angular/angular.js:18478"
        },
        {
            "message": "Missing item type\nSets the form to its untouched state.\n\nThis method can be called to remove the 'ng-touched' class and set the form controls to their\nuntouched state (ng-untouched class).\n\nSetting a form controls back to their untouched state is often useful when setting the form\nback to its pristine state.",
            "line": " bower_components/angular/angular.js:18502"
        },
        {
            "message": "Missing item type\nSets the form to its submitted state.",
            "line": " bower_components/angular/angular.js:18521"
        },
        {
            "message": "Missing item type\nNestable alias of {@link ng.directive:form `form`} directive. HTML\ndoes not allow nesting of form elements. It is useful to nest forms, for example if the validity of a\nsub-group of controls needs to be determined.\n\nNote: the purpose of `ngForm` is to group controls,\nbut not to be a replacement for the `<form>` tag with all of its capabilities\n(e.g. posting to the server, ...).",
            "line": " bower_components/angular/angular.js:18535"
        },
        {
            "message": "Missing item type\nDirective that instantiates\n{@link form.FormController FormController}.\n\nIf the `name` attribute is specified, the form controller is published onto the current scope under\nthis name.\n\n# Alias: {@link ng.directive:ngForm `ngForm`}\n\nIn Angular, forms can be nested. This means that the outer form is valid when all of the child\nforms are valid as well. However, browsers do not allow nesting of `<form>` elements, so\nAngular provides the {@link ng.directive:ngForm `ngForm`} directive which behaves identically to\n`<form>` but can be nested.  This allows you to have nested forms, which is very useful when\nusing Angular validation directives in forms that are dynamically generated using the\n{@link ng.directive:ngRepeat `ngRepeat`} directive. Since you cannot dynamically generate the `name`\nattribute of input elements using interpolation, you have to wrap each set of repeated inputs in an\n`ngForm` directive and nest these in an outer `form` element.\n\n\n# CSS classes\n - `ng-valid` is set if the form is valid.\n - `ng-invalid` is set if the form is invalid.\n - `ng-pristine` is set if the form is pristine.\n - `ng-dirty` is set if the form is dirty.\n - `ng-submitted` is set if the form was submitted.\n\nKeep in mind that ngAnimate can detect each of these classes when added and removed.\n\n\n# Submitting a form and preventing the default action\n\nSince the role of forms in client-side Angular applications is different than in classical\nroundtrip apps, it is desirable for the browser not to translate the form submission into a full\npage reload that sends the data to the server. Instead some javascript logic should be triggered\nto handle the form submission in an application-specific way.\n\nFor this reason, Angular prevents the default action (form submission to the server) unless the\n`<form>` element has an `action` attribute specified.\n\nYou can use one of the following two ways to specify what javascript method should be called when\na form is submitted:\n\n- {@link ng.directive:ngSubmit ngSubmit} directive on the form element\n- {@link ng.directive:ngClick ngClick} directive on the first\n button or input field of type submit (input[type=submit])\n\nTo prevent double execution of the handler, use only one of the {@link ng.directive:ngSubmit ngSubmit}\nor {@link ng.directive:ngClick ngClick} directives.\nThis is because of the following form submission rules in the HTML specification:\n\n- If a form has only one input field then hitting enter in this field triggers form submit\n(`ngSubmit`)\n- if a form has 2+ input fields and no buttons or input[type=submit] then hitting enter\ndoesn't trigger submit\n- if a form has one or more input fields and one or more buttons or input[type=submit] then\nhitting enter in any of the input fields will trigger the click handler on the *first* button or\ninput[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)\n\nAny pending `ngModelOptions` changes will take place immediately when an enclosing form is\nsubmitted. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`\nto have access to the updated model.\n\n## Animation Hooks\n\nAnimations in ngForm are triggered when any of the associated CSS classes are added and removed.\nThese classes are: `.ng-pristine`, `.ng-dirty`, `.ng-invalid` and `.ng-valid` as well as any\nother validations that are performed within the form. Animations in ngForm are similar to how\nthey work in ngClass and animations can be hooked into using CSS transitions, keyframes as well\nas JS animations.\n\nThe following example shows a simple way to utilize CSS transitions to style a form element\nthat has been rendered as invalid after it has been validated:\n\n<pre>\n//be sure to include ngAnimate as a module to hook into more\n//advanced animations\n.my-form {\n  transition:0.5s linear all;\n  background: white;\n}\n.my-form.ng-invalid {\n  background: red;\n  color:white;\n}\n</pre>",
            "line": " bower_components/angular/angular.js:18554"
        },
        {
            "message": "Missing item type\nStandard HTML text input with angular data binding, inherited by most of the `input` elements.",
            "line": " bower_components/angular/angular.js:18794"
        },
        {
            "message": "Missing item type\nInput with date validation and transformation. In browsers that do not yet support\nthe HTML5 date input, a text element will be used. In that case, text must be entered in a valid ISO-8601\ndate format (yyyy-MM-dd), for example: `2009-01-06`. Since many\nmodern browsers do not yet support this input type, it is important to provide cues to users on the\nexpected input format via a placeholder or label.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "line": " bower_components/angular/angular.js:18883"
        },
        {
            "message": "Missing item type\nInput with datetime validation and transformation. In browsers that do not yet support\nthe HTML5 date input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\nlocal datetime format (yyyy-MM-ddTHH:mm:ss), for example: `2010-12-28T14:57:00`.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "line": " bower_components/angular/angular.js:18978"
        },
        {
            "message": "Missing item type\nInput with time validation and transformation. In browsers that do not yet support\nthe HTML5 date input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\nlocal time format (HH:mm:ss), for example: `14:57:00`. Model must be a Date object. This binding will always output a\nDate object to the model of January 1, 1970, or local date `new Date(1970, 0, 1, HH, mm, ss)`.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "line": " bower_components/angular/angular.js:19071"
        },
        {
            "message": "Missing item type\nInput with week-of-the-year validation and transformation to Date. In browsers that do not yet support\nthe HTML5 week input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\nweek format (yyyy-W##), for example: `2013-W02`.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "line": " bower_components/angular/angular.js:19165"
        },
        {
            "message": "Missing item type\nInput with month validation and transformation. In browsers that do not yet support\nthe HTML5 month input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\nmonth format (yyyy-MM), for example: `2009-01`.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\nIf the model is not set to the first of the month, the next view to model update will set it\nto the first of the month.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "line": " bower_components/angular/angular.js:19256"
        },
        {
            "message": "Missing item type\nText input with number validation and transformation. Sets the `number` validation\nerror if not a valid number.\n\nThe model must always be a number, otherwise Angular will throw an error.",
            "line": " bower_components/angular/angular.js:19351"
        },
        {
            "message": "Missing item type\nText input with URL validation. Sets the `url` validation error key if the content is not a\nvalid URL.\n\n<div class=\"alert alert-warning\">\n**Note:** `input[url]` uses a regex to validate urls that is derived from the regex\nused in Chromium. If you need stricter validation, you can use `ng-pattern` or modify\nthe built-in validators (see the {@link guide/forms Forms guide})\n</div>",
            "line": " bower_components/angular/angular.js:19439"
        },
        {
            "message": "Missing item type\nText input with email validation. Sets the `email` validation error key if not a valid email\naddress.\n\n<div class=\"alert alert-warning\">\n**Note:** `input[email]` uses a regex to validate email addresses that is derived from the regex\nused in Chromium. If you need stricter validation (e.g. requiring a top-level domain), you can\nuse `ng-pattern` or modify the built-in validators (see the {@link guide/forms Forms guide})\n</div>",
            "line": " bower_components/angular/angular.js:19530"
        },
        {
            "message": "Missing item type\nHTML radio button.",
            "line": " bower_components/angular/angular.js:19620"
        },
        {
            "message": "Missing item type\nHTML checkbox.",
            "line": " bower_components/angular/angular.js:19674"
        },
        {
            "message": "Missing item type\nHTML textarea element control with angular data-binding. The data-binding and validation\nproperties of this element are exactly the same as those of the\n{@link ng.directive:input input element}.",
            "line": " bower_components/angular/angular.js:20147"
        },
        {
            "message": "Missing item type\nHTML input element control. When used together with {@link ngModel `ngModel`}, it provides data-binding,\ninput state control, and validation.\nInput control follows HTML5 input types and polyfills the HTML5 validation behavior for older browsers.\n\n<div class=\"alert alert-warning\">\n**Note:** Not every feature offered is available for all input types.\nSpecifically, data binding and event handling via `ng-model` is unsupported for `input[file]`.\n</div>",
            "line": " bower_components/angular/angular.js:20177"
        },
        {
            "message": "Missing item type\nBinds the given expression to the value of `<option>` or {@link input[radio] `input[radio]`},\nso that when the element is selected, the {@link ngModel `ngModel`} of that element is set to\nthe bound value.\n\n`ngValue` is useful when dynamically generating lists of radio buttons using\n{@link ngRepeat `ngRepeat`}, as shown below.\n\nLikewise, `ngValue` can be used to generate `<option>` elements for\nthe {@link select `select`} element. In that case however, only strings are supported\nfor the `value `attribute, so the resulting `ngModel` will always be a string.\nSupport for `select` models with non-string values is available via `ngOptions`.",
            "line": " bower_components/angular/angular.js:20317"
        },
        {
            "message": "Missing item type\nThe `ngBind` attribute tells Angular to replace the text content of the specified HTML element\nwith the value of a given expression, and to update the text content when the value of that\nexpression changes.\n\nTypically, you don't use `ngBind` directly, but instead you use the double curly markup like\n`{{ expression }}` which is similar but less verbose.\n\nIt is preferable to use `ngBind` instead of `{{ expression }}` if a template is momentarily\ndisplayed by the browser in its raw state before Angular compiles it. Since `ngBind` is an\nelement attribute, it makes the bindings invisible to the user while the page is loading.\n\nAn alternative solution to this problem would be using the\n{@link ng.directive:ngCloak ngCloak} directive.",
            "line": " bower_components/angular/angular.js:20394"
        },
        {
            "message": "Missing item type\nThe `ngBindTemplate` directive specifies that the element\ntext content should be replaced with the interpolation of the template\nin the `ngBindTemplate` attribute.\nUnlike `ngBind`, the `ngBindTemplate` can contain multiple `{{` `}}`\nexpressions. This directive is needed since some HTML elements\n(such as TITLE and OPTION) cannot contain SPAN elements.",
            "line": " bower_components/angular/angular.js:20462"
        },
        {
            "message": "Missing item type\nEvaluates the expression and inserts the resulting HTML into the element in a secure way. By default,\nthe resulting HTML content will be sanitized using the {@link ngSanitize.$sanitize $sanitize} service.\nTo utilize this functionality, ensure that `$sanitize` is available, for example, by including {@link\nngSanitize} in your module's dependencies (not in core Angular). In order to use {@link ngSanitize}\nin your module's dependencies, you need to include \"angular-sanitize.js\" in your application.\n\nYou may also bypass sanitization for values you know are safe. To do so, bind to\nan explicitly trusted value via {@link ng.$sce#trustAsHtml $sce.trustAsHtml}.  See the example\nunder {@link ng.$sce#show-me-an-example-using-sce- Strict Contextual Escaping (SCE)}.\n\nNote: If a `$sanitize` service is unavailable and the bound value isn't explicitly trusted, you\nwill have an exception (instead of an exploit.)",
            "line": " bower_components/angular/angular.js:20530"
        },
        {
            "message": "Missing item type\nEvaluate the given expression when the user changes the input.\nThe expression is evaluated immediately, unlike the JavaScript onchange event\nwhich only triggers at the end of a change (usually, when the user leaves the\nform element or presses the return key).\n\nThe `ngChange` expression is only evaluated when a change in the input value causes\na new value to be committed to the model.\n\nIt will not be evaluated:\n* if the value returned from the `$parsers` transformation pipeline has not changed\n* if the input has continued to be invalid since the model will stay `null`\n* if the model is changed programmatically and not by a change to the input value\n\n\nNote, this directive requires `ngModel` to be present.",
            "line": " bower_components/angular/angular.js:20600"
        },
        {
            "message": "Missing item type\nThe `ngClass` directive allows you to dynamically set CSS classes on an HTML element by databinding\nan expression that represents all classes to be added.\n\nThe directive operates in three different ways, depending on which of three types the expression\nevaluates to:\n\n1. If the expression evaluates to a string, the string should be one or more space-delimited class\nnames.\n\n2. If the expression evaluates to an array, each element of the array should be a string that is\none or more space-delimited class names.\n\n3. If the expression evaluates to an object, then for each key-value pair of the\nobject with a truthy value the corresponding key is used as a class name.\n\nThe directive won't add duplicate classes if a particular class was already set.\n\nWhen the expression changes, the previously added classes are removed and only then the\nnew classes are added.",
            "line": " bower_components/angular/angular.js:20791"
        },
        {
            "message": "Missing item type\nThe `ngClassOdd` and `ngClassEven` directives work exactly as\n{@link ng.directive:ngClass ngClass}, except they work in\nconjunction with `ngRepeat` and take effect only on odd (even) rows.\n\nThis directive can be applied only within the scope of an\n{@link ng.directive:ngRepeat ngRepeat}.",
            "line": " bower_components/angular/angular.js:20938"
        },
        {
            "message": "Missing item type\nThe `ngClassOdd` and `ngClassEven` directives work exactly as\n{@link ng.directive:ngClass ngClass}, except they work in\nconjunction with `ngRepeat` and take effect only on odd (even) rows.\n\nThis directive can be applied only within the scope of an\n{@link ng.directive:ngRepeat ngRepeat}.",
            "line": " bower_components/angular/angular.js:20986"
        },
        {
            "message": "Missing item type\nThe `ngCloak` directive is used to prevent the Angular html template from being briefly\ndisplayed by the browser in its raw (uncompiled) form while your application is loading. Use this\ndirective to avoid the undesirable flicker effect caused by the html template display.\n\nThe directive can be applied to the `<body>` element, but the preferred usage is to apply\nmultiple `ngCloak` directives to small portions of the page to permit progressive rendering\nof the browser view.\n\n`ngCloak` works in cooperation with the following css rule embedded within `angular.js` and\n`angular.min.js`.\nFor CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\n\n```css\n[ng\\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {\n  display: none !important;\n}\n```\n\nWhen this css rule is loaded by the browser, all html elements (including their children) that\nare tagged with the `ngCloak` directive are hidden. When Angular encounters this directive\nduring the compilation of the template it deletes the `ngCloak` element attribute, making\nthe compiled element visible.\n\nFor the best result, the `angular.js` script must be loaded in the head section of the html\ndocument; alternatively, the css rule above must be included in the external stylesheet of the\napplication.\n\nLegacy browsers, like IE7, do not provide attribute selector support (added in CSS 2.1) so they\ncannot match the `[ng\\:cloak]` selector. To work around this limitation, you must add the css\nclass `ng-cloak` in addition to the `ngCloak` directive as shown in the example below.",
            "line": " bower_components/angular/angular.js:21034"
        },
        {
            "message": "Missing item type\nThe `ngController` directive attaches a controller class to the view. This is a key aspect of how angular\nsupports the principles behind the Model-View-Controller design pattern.\n\nMVC components in angular:\n\n* Model — Models are the properties of a scope; scopes are attached to the DOM where scope properties\n  are accessed through bindings.\n* View — The template (HTML with data bindings) that is rendered into the View.\n* Controller — The `ngController` directive specifies a Controller class; the class contains business\n  logic behind the application to decorate the scope with functions and values\n\nNote that you can also attach controllers to the DOM by declaring it in a route definition\nvia the {@link ngRoute.$route $route} service. A common mistake is to declare the controller\nagain using `ng-controller` in the template itself.  This will cause the controller to be attached\nand executed twice.",
            "line": " bower_components/angular/angular.js:21097"
        },
        {
            "message": "Missing item type\nEnables [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) support.\n\nThis is necessary when developing things like Google Chrome Extensions or Universal Windows Apps.\n\nCSP forbids apps to use `eval` or `Function(string)` generated functions (among other things).\nFor Angular to be CSP compatible there are only two things that we need to do differently:\n\n- don't use `Function` constructor to generate optimized value getters\n- don't inject custom stylesheet into the document\n\nAngularJS uses `Function(string)` generated functions as a speed optimization. Applying the `ngCsp`\ndirective will cause Angular to use CSP compatibility mode. When this mode is on AngularJS will\nevaluate all expressions up to 30% slower than in non-CSP mode, but no security violations will\nbe raised.\n\nCSP forbids JavaScript to inline stylesheet rules. In non CSP mode Angular automatically\nincludes some CSS rules (e.g. {@link ng.directive:ngCloak ngCloak}).\nTo make those directives work in CSP mode, include the `angular-csp.css` manually.\n\nAngular tries to autodetect if CSP is active and automatically turn on the CSP-safe mode. This\nautodetection however triggers a CSP error to be logged in the console:\n\n```\nRefused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of\nscript in the following Content Security Policy directive: \"default-src 'self'\". Note that\n'script-src' was not explicitly set, so 'default-src' is used as a fallback.\n```\n\nThis error is harmless but annoying. To prevent the error from showing up, put the `ngCsp`\ndirective on the root element of the application or on the `angular.js` script tag, whichever\nappears first in the html document.\n\n*Note: This directive is only available in the `ng-csp` and `data-ng-csp` attribute form.*",
            "line": " bower_components/angular/angular.js:21332"
        },
        {
            "message": "Missing item type\nThe ngClick directive allows you to specify custom behavior when\nan element is clicked.",
            "line": " bower_components/angular/angular.js:21505"
        },
        {
            "message": "Missing item type\nThe `ngDblclick` directive allows you to specify custom behavior on a dblclick event.",
            "line": " bower_components/angular/angular.js:21581"
        },
        {
            "message": "Missing item type\nThe ngMousedown directive allows you to specify custom behavior on mousedown event.",
            "line": " bower_components/angular/angular.js:21605"
        },
        {
            "message": "Missing item type\nSpecify custom behavior on mouseup event.",
            "line": " bower_components/angular/angular.js:21629"
        },
        {
            "message": "Missing item type\nSpecify custom behavior on mouseover event.",
            "line": " bower_components/angular/angular.js:21652"
        },
        {
            "message": "Missing item type\nSpecify custom behavior on mouseenter event.",
            "line": " bower_components/angular/angular.js:21676"
        },
        {
            "message": "Missing item type\nSpecify custom behavior on mouseleave event.",
            "line": " bower_components/angular/angular.js:21700"
        },
        {
            "message": "Missing item type\nSpecify custom behavior on mousemove event.",
            "line": " bower_components/angular/angular.js:21724"
        },
        {
            "message": "Missing item type\nSpecify custom behavior on keydown event.",
            "line": " bower_components/angular/angular.js:21748"
        },
        {
            "message": "Missing item type\nSpecify custom behavior on keyup event.",
            "line": " bower_components/angular/angular.js:21770"
        },
        {
            "message": "Missing item type\nSpecify custom behavior on keypress event.",
            "line": " bower_components/angular/angular.js:21797"
        },
        {
            "message": "Missing item type\nEnables binding angular expressions to onsubmit events.\n\nAdditionally it prevents the default action (which for form means sending the request to the\nserver and reloading the current page), but only if the form does not contain `action`,\n`data-action`, or `x-action` attributes.\n\n<div class=\"alert alert-warning\">\n**Warning:** Be careful not to cause \"double-submission\" by using both the `ngClick` and\n`ngSubmit` handlers together. See the\n{@link form#submitting-a-form-and-preventing-the-default-action `form` directive documentation}\nfor a detailed discussion of when `ngSubmit` may be triggered.\n</div>",
            "line": " bower_components/angular/angular.js:21819"
        },
        {
            "message": "Missing item type\nSpecify custom behavior on focus event.\n\nNote: As the `focus` event is executed synchronously when calling `input.focus()`\nAngularJS executes the expression using `scope.$evalAsync` if the event is fired\nduring an `$apply` to ensure a consistent state.",
            "line": " bower_components/angular/angular.js:21882"
        },
        {
            "message": "Missing item type\nSpecify custom behavior on blur event.\n\nA [blur event](https://developer.mozilla.org/en-US/docs/Web/Events/blur) fires when\nan element has lost focus.\n\nNote: As the `blur` event is executed synchronously also during DOM manipulations\n(e.g. removing a focussed input),\nAngularJS executes the expression using `scope.$evalAsync` if the event is fired\nduring an `$apply` to ensure a consistent state.",
            "line": " bower_components/angular/angular.js:21902"
        },
        {
            "message": "Missing item type\nSpecify custom behavior on copy event.",
            "line": " bower_components/angular/angular.js:21926"
        },
        {
            "message": "Missing item type\nSpecify custom behavior on cut event.",
            "line": " bower_components/angular/angular.js:21947"
        },
        {
            "message": "Missing item type\nSpecify custom behavior on paste event.",
            "line": " bower_components/angular/angular.js:21968"
        },
        {
            "message": "Missing item type\nThe `ngIf` directive removes or recreates a portion of the DOM tree based on an\n{expression}. If the expression assigned to `ngIf` evaluates to a false\nvalue then the element is removed from the DOM, otherwise a clone of the\nelement is reinserted into the DOM.\n\n`ngIf` differs from `ngShow` and `ngHide` in that `ngIf` completely removes and recreates the\nelement in the DOM rather than changing its visibility via the `display` css property.  A common\ncase when this difference is significant is when using css selectors that rely on an element's\nposition within the DOM, such as the `:first-child` or `:last-child` pseudo-classes.\n\nNote that when an element is removed using `ngIf` its scope is destroyed and a new scope\nis created when the element is restored.  The scope created within `ngIf` inherits from\nits parent scope using\n[prototypal inheritance](https://github.com/angular/angular.js/wiki/Understanding-Scopes#javascript-prototypal-inheritance).\nAn important implication of this is if `ngModel` is used within `ngIf` to bind to\na javascript primitive defined in the parent scope. In this case any modifications made to the\nvariable within the child scope will override (hide) the value in the parent scope.\n\nAlso, `ngIf` recreates elements using their compiled state. An example of this behavior\nis if an element's class attribute is directly modified after it's compiled, using something like\njQuery's `.addClass()` method, and the element is later removed. When `ngIf` recreates the element\nthe added class will be lost because the original compiled state is used to regenerate the element.\n\nAdditionally, you can provide animations via the `ngAnimate` module to animate the `enter`\nand `leave` effects.",
            "line": " bower_components/angular/angular.js:21989"
        },
        {
            "message": "Missing item type\nFetches, compiles and includes an external HTML fragment.\n\nBy default, the template URL is restricted to the same domain and protocol as the\napplication document. This is done by calling {@link $sce#getTrustedResourceUrl\n$sce.getTrustedResourceUrl} on it. To load templates from other domains or protocols\nyou may either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist them} or\n{@link $sce#trustAsResourceUrl wrap them} as trusted values. Refer to Angular's {@link\nng.$sce Strict Contextual Escaping}.\n\nIn addition, the browser's\n[Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\nand [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\npolicy may further restrict whether the template is successfully loaded.\nFor example, `ngInclude` won't work for cross-domain requests on all browsers and for `file://`\naccess on some browsers.",
            "line": " bower_components/angular/angular.js:22113"
        },
        {
            "message": "Missing item type\nEmitted every time the ngInclude content is requested.",
            "line": " bower_components/angular/angular.js:22257"
        },
        {
            "message": "Missing item type\nEmitted every time the ngInclude content is reloaded.",
            "line": " bower_components/angular/angular.js:22269"
        },
        {
            "message": "Missing item type\nEmitted when a template HTTP request yields an erroneous response (status < 200 || status > 299)",
            "line": " bower_components/angular/angular.js:22281"
        },
        {
            "message": "Missing item type\nThe `ngInit` directive allows you to evaluate an expression in the\ncurrent scope.\n\n<div class=\"alert alert-error\">\nThe only appropriate use of `ngInit` is for aliasing special properties of\n{@link ng.directive:ngRepeat `ngRepeat`}, as seen in the demo below. Besides this case, you\nshould use {@link guide/controller controllers} rather than `ngInit`\nto initialize values on a scope.\n</div>\n<div class=\"alert alert-warning\">\n**Note**: If you have assignment in `ngInit` along with {@link ng.$filter `$filter`}, make\nsure you have parenthesis for correct precedence:\n<pre class=\"prettyprint\">\n`<div ng-init=\"test1 = (data | orderBy:'name')\"></div>`\n</pre>\n</div>",
            "line": " bower_components/angular/angular.js:22407"
        },
        {
            "message": "Missing item type\nText input that converts between a delimited string and an array of strings. The default\ndelimiter is a comma followed by a space - equivalent to `ng-list=\", \"`. You can specify a custom\ndelimiter as the value of the `ngList` attribute - for example, `ng-list=\" | \"`.\n\nThe behaviour of the directive is affected by the use of the `ngTrim` attribute.\n* If `ngTrim` is set to `\"false\"` then whitespace around both the separator and each\n  list item is respected. This implies that the user of the directive is responsible for\n  dealing with whitespace but also allows you to use whitespace as a delimiter, such as a\n  tab or newline character.\n* Otherwise whitespace around the delimiter is ignored when splitting (although it is respected\n  when joining the list items back together) and whitespace around each list item is stripped\n  before it is added to the model.\n\n### Example with Validation\n\n<example name=\"ngList-directive\" module=\"listExample\">\n  <file name=\"app.js\">\n     angular.module('listExample', [])\n       .controller('ExampleController', ['$scope', function($scope) {\n         $scope.names = ['morpheus', 'neo', 'trinity'];\n       }]);\n  </file>\n  <file name=\"index.html\">\n   <form name=\"myForm\" ng-controller=\"ExampleController\">\n     List: <input name=\"namesInput\" ng-model=\"names\" ng-list required>\n     <span class=\"error\" ng-show=\"myForm.namesInput.$error.required\">\n       Required!</span>\n     <br>\n     <tt>names = {{names}}</tt><br/>\n     <tt>myForm.namesInput.$valid = {{myForm.namesInput.$valid}}</tt><br/>\n     <tt>myForm.namesInput.$error = {{myForm.namesInput.$error}}</tt><br/>\n     <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n     <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n    </form>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n    var listInput = element(by.model('names'));\n    var names = element(by.exactBinding('names'));\n    var valid = element(by.binding('myForm.namesInput.$valid'));\n    var error = element(by.css('span.error'));\n\n    it('should initialize to model', function() {\n      expect(names.getText()).toContain('[\"morpheus\",\"neo\",\"trinity\"]');\n      expect(valid.getText()).toContain('true');\n      expect(error.getCssValue('display')).toBe('none');\n    });\n\n    it('should be invalid if empty', function() {\n      listInput.clear();\n      listInput.sendKeys('');\n\n      expect(names.getText()).toContain('');\n      expect(valid.getText()).toContain('false');\n      expect(error.getCssValue('display')).not.toBe('none');\n    });\n  </file>\n</example>\n\n### Example - splitting on whitespace\n<example name=\"ngList-directive-newlines\">\n  <file name=\"index.html\">\n   <textarea ng-model=\"list\" ng-list=\"&#10;\" ng-trim=\"false\"></textarea>\n   <pre>{{ list | json }}</pre>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n    it(\"should split the text by newlines\", function() {\n      var listInput = element(by.model('list'));\n      var output = element(by.binding('list | json'));\n      listInput.sendKeys('abc\\ndef\\nghi');\n      expect(output.getText()).toContain('[\\n  \"abc\",\\n  \"def\",\\n  \"ghi\"\\n]');\n    });\n  </file>\n</example>",
            "line": " bower_components/angular/angular.js:22474"
        },
        {
            "message": "Missing item type\nCalled when the view needs to be updated. It is expected that the user of the ng-model\ndirective will implement this method.\n\nThe `$render()` method is invoked in the following situations:\n\n* `$rollbackViewValue()` is called.  If we are rolling back the view value to the last\n  committed value then `$render()` is called to update the input control.\n* The value referenced by `ng-model` is changed programmatically and both the `$modelValue` and\n  the `$viewValue` are different to last time.\n\nSince `ng-model` does not do a deep watch, `$render()` is only invoked if the values of\n`$modelValue` and `$viewValue` are actually different to their previous value. If `$modelValue`\nor `$viewValue` are objects (rather than a string or number) then `$render()` will not be\ninvoked if you only change a property on the objects.",
            "line": " bower_components/angular/angular.js:22873"
        },
        {
            "message": "Missing item type\nThis is called when we need to determine if the value of an input is empty.\n\nFor instance, the required directive does this to work out if the input has data or not.\n\nThe default `$isEmpty` function checks whether the value is `undefined`, `''`, `null` or `NaN`.\n\nYou can override this for input directives whose concept of being empty is different to the\ndefault. The `checkboxInputType` directive does this because in its case a value of `false`\nimplies empty.",
            "line": " bower_components/angular/angular.js:22895"
        },
        {
            "message": "Missing item type\nChange the validity state, and notify the form.\n\nThis method can be called within $parsers/$formatters or a custom validation implementation.\nHowever, in most cases it should be sufficient to use the `ngModel.$validators` and\n`ngModel.$asyncValidators` collections which will call `$setValidity` automatically.",
            "line": " bower_components/angular/angular.js:22920"
        },
        {
            "message": "Missing item type\nSets the control to its pristine state.\n\nThis method can be called to remove the `ng-dirty` class and set the control to its pristine\nstate (`ng-pristine` class). A model is considered to be pristine when the control\nhas not been changed from when first compiled.",
            "line": " bower_components/angular/angular.js:22955"
        },
        {
            "message": "Missing item type\nSets the control to its dirty state.\n\nThis method can be called to remove the `ng-pristine` class and set the control to its dirty\nstate (`ng-dirty` class). A model is considered to be dirty when the control has been changed\nfrom when first compiled.",
            "line": " bower_components/angular/angular.js:22973"
        },
        {
            "message": "Missing item type\nSets the control to its untouched state.\n\nThis method can be called to remove the `ng-touched` class and set the control to its\nuntouched state (`ng-untouched` class). Upon compilation, a model is set as untouched\nby default, however this function can be used to restore that state if the model has\nalready been touched by the user.",
            "line": " bower_components/angular/angular.js:22992"
        },
        {
            "message": "Missing item type\nSets the control to its touched state.\n\nThis method can be called to remove the `ng-untouched` class and set the control to its\ntouched state (`ng-touched` class). A model is considered to be touched when the user has\nfirst focused the control element and then shifted focus away from the control (blur event).",
            "line": " bower_components/angular/angular.js:23010"
        },
        {
            "message": "Missing item type\nCancel an update and reset the input element's value to prevent an update to the `$modelValue`,\nwhich may be caused by a pending debounced event or because the input is waiting for a some\nfuture event.\n\nIf you have an input that uses `ng-model-options` to set up debounced events or events such\nas blur you can have a situation where there is a period when the `$viewValue`\nis out of synch with the ngModel's `$modelValue`.\n\nIn this case, you can run into difficulties if you try to update the ngModel's `$modelValue`\nprogrammatically before these debounced/future events have resolved/occurred, because Angular's\ndirty checking mechanism is not able to tell whether the model has actually changed or not.\n\nThe `$rollbackViewValue()` method should be called before programmatically changing the model of an\ninput which may have such events pending. This is important in order to make sure that the\ninput field will be updated with the new model value and any pending operations are cancelled.\n\n<example name=\"ng-model-cancel-update\" module=\"cancel-update-example\">\n  <file name=\"app.js\">\n    angular.module('cancel-update-example', [])\n\n    .controller('CancelUpdateController', ['$scope', function($scope) {\n      $scope.resetWithCancel = function(e) {\n        if (e.keyCode == 27) {\n          $scope.myForm.myInput1.$rollbackViewValue();\n          $scope.myValue = '';\n        }\n      };\n      $scope.resetWithoutCancel = function(e) {\n        if (e.keyCode == 27) {\n          $scope.myValue = '';\n        }\n      };\n    }]);\n  </file>\n  <file name=\"index.html\">\n    <div ng-controller=\"CancelUpdateController\">\n      <p>Try typing something in each input.  See that the model only updates when you\n         blur off the input.\n       </p>\n       <p>Now see what happens if you start typing then press the Escape key</p>\n\n      <form name=\"myForm\" ng-model-options=\"{ updateOn: 'blur' }\">\n        <p>With $rollbackViewValue()</p>\n        <input name=\"myInput1\" ng-model=\"myValue\" ng-keydown=\"resetWithCancel($event)\"><br/>\n        myValue: \"{{ myValue }}\"\n\n        <p>Without $rollbackViewValue()</p>\n        <input name=\"myInput2\" ng-model=\"myValue\" ng-keydown=\"resetWithoutCancel($event)\"><br/>\n        myValue: \"{{ myValue }}\"\n      </form>\n    </div>\n  </file>\n</example>",
            "line": " bower_components/angular/angular.js:23027"
        },
        {
            "message": "Missing item type\nRuns each of the registered validators (first synchronous validators and then\nasynchronous validators).\nIf the validity changes to invalid, the model will be set to `undefined`,\nunless {@link ngModelOptions `ngModelOptions.allowInvalid`} is `true`.\nIf the validity changes to valid, it will set the model to the last available valid\nmodelValue, i.e. either the last parsed value or the last value set from the scope.",
            "line": " bower_components/angular/angular.js:23092"
        },
        {
            "message": "Missing item type\nCommit a pending update to the `$modelValue`.\n\nUpdates may be pending by a debounced event or because the input is waiting for a some future\nevent defined in `ng-model-options`. this method is rarely needed as `NgModelController`\nusually handles calling this in response to input events.",
            "line": " bower_components/angular/angular.js:23231"
        },
        {
            "message": "Missing item type\nUpdate the view value.\n\nThis method should be called when an input directive want to change the view value; typically,\nthis is done from within a DOM event handler.\n\nFor example {@link ng.directive:input input} calls it when the value of the input changes and\n{@link ng.directive:select select} calls it when an option is selected.\n\nIf the new `value` is an object (rather than a string or a number), we should make a copy of the\nobject before passing it to `$setViewValue`.  This is because `ngModel` does not perform a deep\nwatch of objects, it only looks for a change of identity. If you only change the property of\nthe object then ngModel will not realise that the object has changed and will not invoke the\n`$parsers` and `$validators` pipelines.\n\nFor this reason, you should not change properties of the copy once it has been passed to\n`$setViewValue`. Otherwise you may cause the model value on the scope to change incorrectly.\n\nWhen this method is called, the new `value` will be staged for committing through the `$parsers`\nand `$validators` pipelines. If there are no special {@link ngModelOptions} specified then the staged\nvalue sent directly for processing, finally to be applied to `$modelValue` and then the\n**expression** specified in the `ng-model` attribute.\n\nLastly, all the registered change listeners, in the `$viewChangeListeners` list, are called.\n\nIn case the {@link ng.directive:ngModelOptions ngModelOptions} directive is used with `updateOn`\nand the `default` trigger is not listed, all those actions will remain pending until one of the\n`updateOn` events is triggered on the DOM element.\nAll these actions will be debounced if the {@link ng.directive:ngModelOptions ngModelOptions}\ndirective is used with a custom debounce for this particular event.\n\nNote that calling this function does not trigger a `$digest`.",
            "line": " bower_components/angular/angular.js:23320"
        },
        {
            "message": "Missing item type\nThe `ngModel` directive binds an `input`,`select`, `textarea` (or custom form control) to a\nproperty on the scope using {@link ngModel.NgModelController NgModelController},\nwhich is created and exposed by this directive.\n\n`ngModel` is responsible for:\n\n- Binding the view into the model, which other directives such as `input`, `textarea` or `select`\n  require.\n- Providing validation behavior (i.e. required, number, email, url).\n- Keeping the state of the control (valid/invalid, dirty/pristine, touched/untouched, validation errors).\n- Setting related css classes on the element (`ng-valid`, `ng-invalid`, `ng-dirty`, `ng-pristine`, `ng-touched`, `ng-untouched`) including animations.\n- Registering the control with its parent {@link ng.directive:form form}.\n\nNote: `ngModel` will try to bind to the property given by evaluating the expression on the\ncurrent scope. If the property doesn't already exist on this scope, it will be created\nimplicitly and added to the scope.\n\nFor best practices on using `ngModel`, see:\n\n - [Understanding Scopes](https://github.com/angular/angular.js/wiki/Understanding-Scopes)\n\nFor basic examples, how to use `ngModel`, see:\n\n - {@link ng.directive:input input}\n   - {@link input[text] text}\n   - {@link input[checkbox] checkbox}\n   - {@link input[radio] radio}\n   - {@link input[number] number}\n   - {@link input[email] email}\n   - {@link input[url] url}\n   - {@link input[date] date}\n   - {@link input[datetime-local] datetime-local}\n   - {@link input[time] time}\n   - {@link input[month] month}\n   - {@link input[week] week}\n - {@link ng.directive:select select}\n - {@link ng.directive:textarea textarea}\n\n# CSS classes\nThe following CSS classes are added and removed on the associated input/select/textarea element\ndepending on the validity of the model.\n\n - `ng-valid`: the model is valid\n - `ng-invalid`: the model is invalid\n - `ng-valid-[key]`: for each valid key added by `$setValidity`\n - `ng-invalid-[key]`: for each invalid key added by `$setValidity`\n - `ng-pristine`: the control hasn't been interacted with yet\n - `ng-dirty`: the control has been interacted with\n - `ng-touched`: the control has been blurred\n - `ng-untouched`: the control hasn't been blurred\n - `ng-pending`: any `$asyncValidators` are unfulfilled\n\nKeep in mind that ngAnimate can detect each of these classes when added and removed.\n\n## Animation Hooks\n\nAnimations within models are triggered when any of the associated CSS classes are added and removed\non the input element which is attached to the model. These classes are: `.ng-pristine`, `.ng-dirty`,\n`.ng-invalid` and `.ng-valid` as well as any other validations that are performed on the model itself.\nThe animations that are triggered within ngModel are similar to how they work in ngClass and\nanimations can be hooked into using CSS transitions, keyframes as well as JS animations.\n\nThe following example shows a simple way to utilize CSS transitions to style an input element\nthat has been rendered as invalid after it has been validated:\n\n<pre>\n//be sure to include ngAnimate as a module to hook into more\n//advanced animations\n.my-input {\n  transition:0.5s linear all;\n  background: white;\n}\n.my-input.ng-invalid {\n  background: red;\n  color:white;\n}\n</pre>",
            "line": " bower_components/angular/angular.js:23434"
        },
        {
            "message": "Missing item type\nAllows tuning how model updates are done. Using `ngModelOptions` you can specify a custom list of\nevents that will trigger a model update and/or a debouncing delay so that the actual update only\ntakes place when a timer expires; this timer will be reset after another change takes place.\n\nGiven the nature of `ngModelOptions`, the value displayed inside input fields in the view might\nbe different than the value in the actual model. This means that if you update the model you\nshould also invoke {@link ngModel.NgModelController `$rollbackViewValue`} on the relevant input field in\norder to make sure it is synchronized with the model and that any debounced action is canceled.\n\nThe easiest way to reference the control's {@link ngModel.NgModelController `$rollbackViewValue`}\nmethod is by making sure the input is placed inside a form that has a `name` attribute. This is\nimportant because `form` controllers are published to the related scope under the name in their\n`name` attribute.\n\nAny pending changes will take place immediately when an enclosing form is submitted via the\n`submit` event. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`\nto have access to the updated model.\n\n`ngModelOptions` has an effect on the element it's declared on and its descendants.",
            "line": " bower_components/angular/angular.js:23655"
        },
        {
            "message": "Missing item type\nThe `ngNonBindable` directive tells Angular not to compile or bind the contents of the current\nDOM element. This is useful if the element contains what appears to be Angular directives and\nbindings but which should be ignored by Angular. This could be the case if you have a site that\ndisplays snippets of code, for instance.",
            "line": " bower_components/angular/angular.js:23933"
        },
        {
            "message": "Missing item type\n`ngPluralize` is a directive that displays messages according to en-US localization rules.\nThese rules are bundled with angular.js, but can be overridden\n(see {@link guide/i18n Angular i18n} dev guide). You configure ngPluralize directive\nby specifying the mappings between\n[plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\nand the strings to be displayed.\n\n# Plural categories and explicit number rules\nThere are two\n[plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\nin Angular's default en-US locale: \"one\" and \"other\".\n\nWhile a plural category may match many numbers (for example, in en-US locale, \"other\" can match\nany number that is not 1), an explicit number rule can only match one number. For example, the\nexplicit number rule for \"3\" matches the number 3. There are examples of plural categories\nand explicit number rules throughout the rest of this documentation.\n\n# Configuring ngPluralize\nYou configure ngPluralize by providing 2 attributes: `count` and `when`.\nYou can also provide an optional attribute, `offset`.\n\nThe value of the `count` attribute can be either a string or an {@link guide/expression\nAngular expression}; these are evaluated on the current scope for its bound value.\n\nThe `when` attribute specifies the mappings between plural categories and the actual\nstring to be displayed. The value of the attribute should be a JSON object.\n\nThe following example shows how to configure ngPluralize:\n\n```html\n<ng-pluralize count=\"personCount\"\n                when=\"{'0': 'Nobody is viewing.',\n                     'one': '1 person is viewing.',\n                     'other': '{} people are viewing.'}\">\n</ng-pluralize>\n```\n\nIn the example, `\"0: Nobody is viewing.\"` is an explicit number rule. If you did not\nspecify this rule, 0 would be matched to the \"other\" category and \"0 people are viewing\"\nwould be shown instead of \"Nobody is viewing\". You can specify an explicit number rule for\nother numbers, for example 12, so that instead of showing \"12 people are viewing\", you can\nshow \"a dozen people are viewing\".\n\nYou can use a set of closed braces (`{}`) as a placeholder for the number that you want substituted\ninto pluralized strings. In the previous example, Angular will replace `{}` with\n<span ng-non-bindable>`{{personCount}}`</span>. The closed braces `{}` is a placeholder\nfor <span ng-non-bindable>{{numberExpression}}</span>.\n\n# Configuring ngPluralize with offset\nThe `offset` attribute allows further customization of pluralized text, which can result in\na better user experience. For example, instead of the message \"4 people are viewing this document\",\nyou might display \"John, Kate and 2 others are viewing this document\".\nThe offset attribute allows you to offset a number by any desired value.\nLet's take a look at an example:\n\n```html\n<ng-pluralize count=\"personCount\" offset=2\n              when=\"{'0': 'Nobody is viewing.',\n                     '1': '{{person1}} is viewing.',\n                     '2': '{{person1}} and {{person2}} are viewing.',\n                     'one': '{{person1}}, {{person2}} and one other person are viewing.',\n                     'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n</ng-pluralize>\n```\n\nNotice that we are still using two plural categories(one, other), but we added\nthree explicit number rules 0, 1 and 2.\nWhen one person, perhaps John, views the document, \"John is viewing\" will be shown.\nWhen three people view the document, no explicit number rule is found, so\nan offset of 2 is taken off 3, and Angular uses 1 to decide the plural category.\nIn this case, plural category 'one' is matched and \"John, Mary and one other person are viewing\"\nis shown.\n\nNote that when you specify offsets, you must provide explicit number rules for\nnumbers from 0 up to and including the offset. If you use an offset of 3, for example,\nyou must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for\nplural categories \"one\" and \"other\".",
            "line": " bower_components/angular/angular.js:23967"
        },
        {
            "message": "Missing item type\nThe `ngRepeat` directive instantiates a template once per item from a collection. Each template\ninstance gets its own scope, where the given loop variable is set to the current collection item,\nand `$index` is set to the item index or key.\n\nSpecial properties are exposed on the local scope of each template instance, including:\n\n| Variable  | Type            | Details                                                                     |\n|-----------|-----------------|-----------------------------------------------------------------------------|\n| `$index`  | {@type number}  | iterator offset of the repeated element (0..length-1)                       |\n| `$first`  | {@type boolean} | true if the repeated element is first in the iterator.                      |\n| `$middle` | {@type boolean} | true if the repeated element is between the first and last in the iterator. |\n| `$last`   | {@type boolean} | true if the repeated element is last in the iterator.                       |\n| `$even`   | {@type boolean} | true if the iterator position `$index` is even (otherwise false).           |\n| `$odd`    | {@type boolean} | true if the iterator position `$index` is odd (otherwise false).            |\n\nCreating aliases for these properties is possible with {@link ng.directive:ngInit `ngInit`}.\nThis may be useful when, for instance, nesting ngRepeats.\n\n# Iterating over object properties\n\nIt is possible to get `ngRepeat` to iterate over the properties of an object using the following\nsyntax:\n\n```js\n<div ng-repeat=\"(key, value) in myObj\"> ... </div>\n```\n\nYou need to be aware that the JavaScript specification does not define what order\nit will return the keys for an object. In order to have a guaranteed deterministic order\nfor the keys, Angular versions up to and including 1.3 **sort the keys alphabetically**.\n\nIf this is not desired, the recommended workaround is to convert your object into an array\nthat is sorted into the order that you prefer before providing it to `ngRepeat`.  You could\ndo this with a filter such as [toArrayFilter](http://ngmodules.org/modules/angular-toArrayFilter)\nor implement a `$watch` on the object yourself.\n\nIn version 1.4 we will remove the sorting, since it seems that browsers generally follow the\nstrategy of providing keys in the order in which they were defined, although there are exceptions\nwhen keys are deleted and reinstated.\n\n\n# Tracking and Duplicates\n\nWhen the contents of the collection change, `ngRepeat` makes the corresponding changes to the DOM:\n\n* When an item is added, a new instance of the template is added to the DOM.\n* When an item is removed, its template instance is removed from the DOM.\n* When items are reordered, their respective templates are reordered in the DOM.\n\nBy default, `ngRepeat` does not allow duplicate items in arrays. This is because when\nthere are duplicates, it is not possible to maintain a one-to-one mapping between collection\nitems and DOM elements.\n\nIf you do need to repeat duplicate items, you can substitute the default tracking behavior\nwith your own using the `track by` expression.\n\nFor example, you may track items by the index of each item in the collection, using the\nspecial scope property `$index`:\n```html\n   <div ng-repeat=\"n in [42, 42, 43, 43] track by $index\">\n     {{n}}\n   </div>\n```\n\nYou may use arbitrary expressions in `track by`, including references to custom functions\non the scope:\n```html\n   <div ng-repeat=\"n in [42, 42, 43, 43] track by myTrackingFunction(n)\">\n     {{n}}\n   </div>\n```\n\nIf you are working with objects that have an identifier property, you can track\nby the identifier instead of the whole object. Should you reload your data later, `ngRepeat`\nwill not have to rebuild the DOM elements for items it has already rendered, even if the\nJavaScript objects in the collection have been substituted for new ones:\n```html\n   <div ng-repeat=\"model in collection track by model.id\">\n     {{model.name}}\n   </div>\n```\n\nWhen no `track by` expression is provided, it is equivalent to tracking by the built-in\n`$id` function, which tracks items by their identity:\n```html\n   <div ng-repeat=\"obj in collection track by $id(obj)\">\n     {{obj.prop}}\n   </div>\n```\n\n# Special repeat start and end points\nTo repeat a series of elements instead of just one parent element, ngRepeat (as well as other ng directives) supports extending\nthe range of the repeater by defining explicit start and end points by using **ng-repeat-start** and **ng-repeat-end** respectively.\nThe **ng-repeat-start** directive works the same as **ng-repeat**, but will repeat all the HTML code (including the tag it's defined on)\nup to and including the ending HTML tag where **ng-repeat-end** is placed.\n\nThe example below makes use of this feature:\n```html\n  <header ng-repeat-start=\"item in items\">\n    Header {{ item }}\n  </header>\n  <div class=\"body\">\n    Body {{ item }}\n  </div>\n  <footer ng-repeat-end>\n    Footer {{ item }}\n  </footer>\n```\n\nAnd with an input of {@type ['A','B']} for the items variable in the example above, the output will evaluate to:\n```html\n  <header>\n    Header A\n  </header>\n  <div class=\"body\">\n    Body A\n  </div>\n  <footer>\n    Footer A\n  </footer>\n  <header>\n    Header B\n  </header>\n  <div class=\"body\">\n    Body B\n  </div>\n  <footer>\n    Footer B\n  </footer>\n```\n\nThe custom start and end points for ngRepeat also support all other HTML directive syntax flavors provided in AngularJS (such\nas **data-ng-repeat-start**, **x-ng-repeat-start** and **ng:repeat-start**).",
            "line": " bower_components/angular/angular.js:24195"
        },
        {
            "message": "Missing item type\nThe `ngShow` directive shows or hides the given HTML element based on the expression\nprovided to the `ngShow` attribute. The element is shown or hidden by removing or adding\nthe `.ng-hide` CSS class onto the element. The `.ng-hide` CSS class is predefined\nin AngularJS and sets the display style to none (using an !important flag).\nFor CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\n\n```html\n<!-- when $scope.myValue is truthy (element is visible) -->\n<div ng-show=\"myValue\"></div>\n\n<!-- when $scope.myValue is falsy (element is hidden) -->\n<div ng-show=\"myValue\" class=\"ng-hide\"></div>\n```\n\nWhen the `ngShow` expression evaluates to a falsy value then the `.ng-hide` CSS class is added to the class\nattribute on the element causing it to become hidden. When truthy, the `.ng-hide` CSS class is removed\nfrom the element causing the element not to appear hidden.\n\n## Why is !important used?\n\nYou may be wondering why !important is used for the `.ng-hide` CSS class. This is because the `.ng-hide` selector\ncan be easily overridden by heavier selectors. For example, something as simple\nas changing the display style on a HTML list item would make hidden elements appear visible.\nThis also becomes a bigger issue when dealing with CSS frameworks.\n\nBy using !important, the show and hide behavior will work as expected despite any clash between CSS selector\nspecificity (when !important isn't used with any conflicting styles). If a developer chooses to override the\nstyling to change how to hide an element then it is just a matter of using !important in their own CSS code.\n\n### Overriding `.ng-hide`\n\nBy default, the `.ng-hide` class will style the element with `display: none!important`. If you wish to change\nthe hide behavior with ngShow/ngHide then this can be achieved by restating the styles for the `.ng-hide`\nclass CSS. Note that the selector that needs to be used is actually `.ng-hide:not(.ng-hide-animate)` to cope\nwith extra animation classes that can be added.\n\n```css\n.ng-hide:not(.ng-hide-animate) {\n  /&#42; this is just another form of hiding an element &#42;/\n  display: block!important;\n  position: absolute;\n  top: -9999px;\n  left: -9999px;\n}\n```\n\nBy default you don't need to override in CSS anything and the animations will work around the display style.\n\n## A note about animations with `ngShow`\n\nAnimations in ngShow/ngHide work with the show and hide events that are triggered when the directive expression\nis true and false. This system works like the animation system present with ngClass except that\nyou must also include the !important flag to override the display property\nso that you can perform an animation when the element is hidden during the time of the animation.\n\n```css\n//\n//a working example can be found at the bottom of this page\n//\n.my-element.ng-hide-add, .my-element.ng-hide-remove {\n  /&#42; this is required as of 1.3x to properly\n     apply all styling in a show/hide animation &#42;/\n  transition: 0s linear all;\n}\n\n.my-element.ng-hide-add-active,\n.my-element.ng-hide-remove-active {\n  /&#42; the transition is defined in the active class &#42;/\n  transition: 1s linear all;\n}\n\n.my-element.ng-hide-add { ... }\n.my-element.ng-hide-add.ng-hide-add-active { ... }\n.my-element.ng-hide-remove { ... }\n.my-element.ng-hide-remove.ng-hide-remove-active { ... }\n```\n\nKeep in mind that, as of AngularJS version 1.3.0-beta.11, there is no need to change the display\nproperty to block during animation states--ngAnimate will handle the style toggling automatically for you.",
            "line": " bower_components/angular/angular.js:24708"
        },
        {
            "message": "Missing item type\nThe `ngHide` directive shows or hides the given HTML element based on the expression\nprovided to the `ngHide` attribute. The element is shown or hidden by removing or adding\nthe `ng-hide` CSS class onto the element. The `.ng-hide` CSS class is predefined\nin AngularJS and sets the display style to none (using an !important flag).\nFor CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\n\n```html\n<!-- when $scope.myValue is truthy (element is hidden) -->\n<div ng-hide=\"myValue\" class=\"ng-hide\"></div>\n\n<!-- when $scope.myValue is falsy (element is visible) -->\n<div ng-hide=\"myValue\"></div>\n```\n\nWhen the `ngHide` expression evaluates to a truthy value then the `.ng-hide` CSS class is added to the class\nattribute on the element causing it to become hidden. When falsy, the `.ng-hide` CSS class is removed\nfrom the element causing the element not to appear hidden.\n\n## Why is !important used?\n\nYou may be wondering why !important is used for the `.ng-hide` CSS class. This is because the `.ng-hide` selector\ncan be easily overridden by heavier selectors. For example, something as simple\nas changing the display style on a HTML list item would make hidden elements appear visible.\nThis also becomes a bigger issue when dealing with CSS frameworks.\n\nBy using !important, the show and hide behavior will work as expected despite any clash between CSS selector\nspecificity (when !important isn't used with any conflicting styles). If a developer chooses to override the\nstyling to change how to hide an element then it is just a matter of using !important in their own CSS code.\n\n### Overriding `.ng-hide`\n\nBy default, the `.ng-hide` class will style the element with `display: none!important`. If you wish to change\nthe hide behavior with ngShow/ngHide then this can be achieved by restating the styles for the `.ng-hide`\nclass in CSS:\n\n```css\n.ng-hide {\n  /&#42; this is just another form of hiding an element &#42;/\n  display: block!important;\n  position: absolute;\n  top: -9999px;\n  left: -9999px;\n}\n```\n\nBy default you don't need to override in CSS anything and the animations will work around the display style.\n\n## A note about animations with `ngHide`\n\nAnimations in ngShow/ngHide work with the show and hide events that are triggered when the directive expression\nis true and false. This system works like the animation system present with ngClass, except that the `.ng-hide`\nCSS class is added and removed for you instead of your own CSS class.\n\n```css\n//\n//a working example can be found at the bottom of this page\n//\n.my-element.ng-hide-add, .my-element.ng-hide-remove {\n  transition: 0.5s linear all;\n}\n\n.my-element.ng-hide-add { ... }\n.my-element.ng-hide-add.ng-hide-add-active { ... }\n.my-element.ng-hide-remove { ... }\n.my-element.ng-hide-remove.ng-hide-remove-active { ... }\n```\n\nKeep in mind that, as of AngularJS version 1.3.0-beta.11, there is no need to change the display\nproperty to block during animation states--ngAnimate will handle the style toggling automatically for you.",
            "line": " bower_components/angular/angular.js:24883"
        },
        {
            "message": "Missing item type\nThe `ngStyle` directive allows you to set CSS style on an HTML element conditionally.",
            "line": " bower_components/angular/angular.js:25041"
        },
        {
            "message": "Missing item type\nThe `ngSwitch` directive is used to conditionally swap DOM structure on your template based on a scope expression.\nElements within `ngSwitch` but without `ngSwitchWhen` or `ngSwitchDefault` directives will be preserved at the location\nas specified in the template.\n\nThe directive itself works similar to ngInclude, however, instead of downloading template code (or loading it\nfrom the template cache), `ngSwitch` simply chooses one of the nested elements and makes it visible based on which element\nmatches the value obtained from the evaluated expression. In other words, you define a container element\n(where you place the directive), place an expression on the **`on=\"...\"` attribute**\n(or the **`ng-switch=\"...\"` attribute**), define any inner elements inside of the directive and place\na when attribute per element. The when attribute is used to inform ngSwitch which element to display when the on\nexpression is evaluated. If a matching expression is not found via a when attribute then an element with the default\nattribute is displayed.\n\n<div class=\"alert alert-info\">\nBe aware that the attribute values to match against cannot be expressions. They are interpreted\nas literal string values to match against.\nFor example, **`ng-switch-when=\"someVal\"`** will match against the string `\"someVal\"` not against the\nvalue of the expression `$scope.someVal`.\n</div>",
            "line": " bower_components/angular/angular.js:25096"
        },
        {
            "message": "Missing item type\nDirective that marks the insertion point for the transcluded DOM of the nearest parent directive that uses transclusion.\n\nAny existing content of the element that this directive is placed on will be removed before the transcluded content is inserted.",
            "line": " bower_components/angular/angular.js:25301"
        },
        {
            "message": "Missing item type\nLoad the content of a `<script>` element into {@link ng.$templateCache `$templateCache`}, so that the\ntemplate can be used by {@link ng.directive:ngInclude `ngInclude`},\n{@link ngRoute.directive:ngView `ngView`}, or {@link guide/directive directives}. The type of the\n`<script>` element must be specified as `text/ng-template`, and a cache name for the template must be\nassigned through the element's `id`, which can then be used as a directive's `templateUrl`.",
            "line": " bower_components/angular/angular.js:25373"
        },
        {
            "message": "Missing item type\nHTML `SELECT` element with angular data-binding.\n\n# `ngOptions`\n\nThe `ngOptions` attribute can be used to dynamically generate a list of `<option>`\nelements for the `<select>` element using the array or object obtained by evaluating the\n`ngOptions` comprehension expression.\n\nIn many cases, `ngRepeat` can be used on `<option>` elements instead of `ngOptions` to achieve a\nsimilar result. However, `ngOptions` provides some benefits such as reducing memory and\nincreasing speed by not creating a new scope for each repeated instance, as well as providing\nmore flexibility in how the `<select>`'s model is assigned via the `select` **`as`** part of the\ncomprehension expression. `ngOptions` should be used when the `<select>` model needs to be bound\n to a non-string value. This is because an option element can only be bound to string values at\npresent.\n\nWhen an item in the `<select>` menu is selected, the array element or object property\nrepresented by the selected option will be bound to the model identified by the `ngModel`\ndirective.\n\nOptionally, a single hard-coded `<option>` element, with the value set to an empty string, can\nbe nested into the `<select>` element. This element will then represent the `null` or \"not selected\"\noption. See example below for demonstration.\n\n<div class=\"alert alert-warning\">\n**Note:** `ngModel` compares by reference, not value. This is important when binding to an\narray of objects. See an example [in this jsfiddle](http://jsfiddle.net/qWzTb/).\n</div>\n\n## `select` **`as`**\n\nUsing `select` **`as`** will bind the result of the `select` expression to the model, but\nthe value of the `<select>` and `<option>` html elements will be either the index (for array data sources)\nor property name (for object data sources) of the value within the collection. If a **`track by`** expression\nis used, the result of that expression will be set as the value of the `option` and `select` elements.\n\n\n### `select` **`as`** and **`track by`**\n\n<div class=\"alert alert-warning\">\nDo not use `select` **`as`** and **`track by`** in the same expression. They are not designed to work together.\n</div>\n\nConsider the following example:\n\n```html\n<select ng-options=\"item.subItem as item.label for item in values track by item.id\" ng-model=\"selected\">\n```\n\n```js\n$scope.values = [{\n  id: 1,\n  label: 'aLabel',\n  subItem: { name: 'aSubItem' }\n}, {\n  id: 2,\n  label: 'bLabel',\n  subItem: { name: 'bSubItem' }\n}];\n\n$scope.selected = { name: 'aSubItem' };\n```\n\nWith the purpose of preserving the selection, the **`track by`** expression is always applied to the element\nof the data source (to `item` in this example). To calculate whether an element is selected, we do the\nfollowing:\n\n1. Apply **`track by`** to the elements in the array. In the example: `[1, 2]`\n2. Apply **`track by`** to the already selected value in `ngModel`.\n   In the example: this is not possible as **`track by`** refers to `item.id`, but the selected\n   value from `ngModel` is `{name: 'aSubItem'}`, so the **`track by`** expression is applied to\n   a wrong object, the selected element can't be found, `<select>` is always reset to the \"not\n   selected\" option.",
            "line": " bower_components/angular/angular.js:25422"
        },
        {
            "message": "Missing item type\nA new labelMap is created with each render.\nThis function is called for each existing option with added=false,\nand each new option with added=true.\n- Labels that are passed to this method twice,\n(once with added=true and once with added=false) will end up with a value of 0, and\nwill cause no change to happen to the corresponding option.\n- Labels that are passed to this method only once with added=false will end up with a\nvalue of -1 and will eventually be passed to selectCtrl.removeOption()\n- Labels that are passed to this method only once with added=true will end up with a\nvalue of 1 and will eventually be passed to selectCtrl.addOption()",
            "line": " bower_components/angular/angular.js:25942"
        },
        {
            "message": "Missing item type\n$transition service provides a consistent interface to trigger CSS 3 transitions and to be informed when they complete.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:12"
        },
        {
            "message": "Missing item type\nAngularJS version of an image carousel.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:417"
        },
        {
            "message": "Missing item type\nCarousel is the outer container for a set of image 'slides' to showcase.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:590"
        },
        {
            "message": "Missing item type\nCreates a slide inside a {@link ui.bootstrap.carousel.directive:carousel carousel}.  Must be placed as a child of a carousel element.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:644"
        },
        {
            "message": "Missing item type\nA set of utility methods that can be use to retrieve position of DOM elements.\nIt is meant to be used where we need to absolute-position DOM elements in\nrelation to other, existing elements (this is the case for tooltips, popovers,\ntypeahead suggestions etc.).",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:840"
        },
        {
            "message": "Missing item type\nChecks if a given element is statically positioned",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:858"
        },
        {
            "message": "Missing item type\nreturns the closest, non-statically positioned parentOffset of a given element",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:866"
        },
        {
            "message": "Missing item type\nProvides read-only equivalent of jQuery's position function:\nhttp://api.jquery.com/position/",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:880"
        },
        {
            "message": "Missing item type\nProvides read-only equivalent of jQuery's offset function:\nhttp://api.jquery.com/offset/",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:903"
        },
        {
            "message": "Missing item type\nProvides coordinates for the targetEl in relation to hostEl",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:917"
        },
        {
            "message": "Missing item type\nA helper, internal data structure that acts as a map but also allows getting / removing\nelements in the LIFO order",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:1795"
        },
        {
            "message": "Missing item type\nA helper directive for the $modal service. It creates a backdrop element.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:1849"
        },
        {
            "message": "Missing item type\nAuto-focusing of a freshly-opened modal element causes any child elements\nwith the autofocus attribute to lose focus. This is an issue on touch\nbased devices which will show and then hide the onscreen keyboard.\nAttempts to refocus the autofocus element via JavaScript will not reopen\nthe onscreen keyboard. Fixed by updated the focusing logic to only autofocus\nthe modal element if the modal does not contain an autofocus element.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:1890"
        },
        {
            "message": "Missing item type\nThe following features are still outstanding: animation as a\nfunction, placement as a function, inside, support for more triggers than\njust mouse enter/leave, html tooltips, and selector delegation.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:2424"
        },
        {
            "message": "Missing item type\nThe $tooltip service creates tooltip- and popover-like directives as well as\nhouses global options for them.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:2431"
        },
        {
            "message": "Missing item type\n`options({})` allows global configuration of all tooltips in the\napplication.\n\n  var app = angular.module( 'App', ['ui.bootstrap.tooltip'], function( $tooltipProvider ) {\n    // place tooltips left instead of top by default\n    $tooltipProvider.options( { placement: 'left' } );\n  });",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:2453"
        },
        {
            "message": "Missing item type\nThis allows you to extend the set of trigger mappings available. E.g.:\n\n  $tooltipProvider.setTriggers( 'openTrigger': 'closeTrigger' );",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:2466"
        },
        {
            "message": "Missing item type\nThis is a helper function for translating camel-case to snake-case.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:2475"
        },
        {
            "message": "Missing item type\nReturns the actual instance of the $tooltip service.\nTODO support multiple triggers",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:2486"
        },
        {
            "message": "Missing item type\nReturns an object of show and hide triggers.\n\nIf a trigger is supplied,\nit is used to show the tooltip; otherwise, it will use the `trigger`\noption passed to the `$tooltipProvider.options` method; else it will\ndefault to the trigger supplied to this directive factory.\n\nThe hide trigger is based on the show trigger. If the `trigger` option\nwas passed to the `$tooltipProvider.options` method, it will use the\nmapped trigger from `triggerMap` or the passed trigger if the map is\nundefined; otherwise, it uses the `triggerMap` value of the show\ntrigger; else it will just use the show trigger.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:2494"
        },
        {
            "message": "Missing item type\nObserve the relevant attributes.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:2681"
        },
        {
            "message": "Missing item type\nThe following features are still outstanding: popup delay, animation as a\nfunction, placement as a function, inside, support for more triggers than\njust mouse enter/leave, html popovers, and selector delegatation.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:2785"
        },
        {
            "message": "Missing item type\nAngularJS version of the tabs directive.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:2970"
        },
        {
            "message": "Missing item type\nTabset is the outer container for the tabs directive",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:3023"
        },
        {
            "message": "Missing item type\nCreates a tab with a heading and content. Must be placed within a {@link ui.bootstrap.tabs.directive:tabset tabset}.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:3070"
        },
        {
            "message": "Missing item type\nCreates an HTML heading for a {@link ui.bootstrap.tabs.directive:tab tab}. Must be placed as a child of a tab element.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:3126"
        },
        {
            "message": "Missing item type\nA helper service that can parse typeahead's syntax (string provided by users)\nExtracted to a separate service for ease of unit testing",
            "line": " bower_components/angular-bootstrap/ui-bootstrap-tpls.js:3506"
        },
        {
            "message": "Missing item type\n$transition service provides a consistent interface to trigger CSS 3 transitions and to be informed when they complete.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:11"
        },
        {
            "message": "Missing item type\nAngularJS version of an image carousel.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:416"
        },
        {
            "message": "Missing item type\nCarousel is the outer container for a set of image 'slides' to showcase.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:589"
        },
        {
            "message": "Missing item type\nCreates a slide inside a {@link ui.bootstrap.carousel.directive:carousel carousel}.  Must be placed as a child of a carousel element.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:643"
        },
        {
            "message": "Missing item type\nA set of utility methods that can be use to retrieve position of DOM elements.\nIt is meant to be used where we need to absolute-position DOM elements in\nrelation to other, existing elements (this is the case for tooltips, popovers,\ntypeahead suggestions etc.).",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:839"
        },
        {
            "message": "Missing item type\nChecks if a given element is statically positioned",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:857"
        },
        {
            "message": "Missing item type\nreturns the closest, non-statically positioned parentOffset of a given element",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:865"
        },
        {
            "message": "Missing item type\nProvides read-only equivalent of jQuery's position function:\nhttp://api.jquery.com/position/",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:879"
        },
        {
            "message": "Missing item type\nProvides read-only equivalent of jQuery's offset function:\nhttp://api.jquery.com/offset/",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:902"
        },
        {
            "message": "Missing item type\nProvides coordinates for the targetEl in relation to hostEl",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:916"
        },
        {
            "message": "Missing item type\nA helper, internal data structure that acts as a map but also allows getting / removing\nelements in the LIFO order",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:1794"
        },
        {
            "message": "Missing item type\nA helper directive for the $modal service. It creates a backdrop element.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:1848"
        },
        {
            "message": "Missing item type\nAuto-focusing of a freshly-opened modal element causes any child elements\nwith the autofocus attribute to lose focus. This is an issue on touch\nbased devices which will show and then hide the onscreen keyboard.\nAttempts to refocus the autofocus element via JavaScript will not reopen\nthe onscreen keyboard. Fixed by updated the focusing logic to only autofocus\nthe modal element if the modal does not contain an autofocus element.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:1889"
        },
        {
            "message": "Missing item type\nThe following features are still outstanding: animation as a\nfunction, placement as a function, inside, support for more triggers than\njust mouse enter/leave, html tooltips, and selector delegation.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:2423"
        },
        {
            "message": "Missing item type\nThe $tooltip service creates tooltip- and popover-like directives as well as\nhouses global options for them.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:2430"
        },
        {
            "message": "Missing item type\n`options({})` allows global configuration of all tooltips in the\napplication.\n\n  var app = angular.module( 'App', ['ui.bootstrap.tooltip'], function( $tooltipProvider ) {\n    // place tooltips left instead of top by default\n    $tooltipProvider.options( { placement: 'left' } );\n  });",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:2452"
        },
        {
            "message": "Missing item type\nThis allows you to extend the set of trigger mappings available. E.g.:\n\n  $tooltipProvider.setTriggers( 'openTrigger': 'closeTrigger' );",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:2465"
        },
        {
            "message": "Missing item type\nThis is a helper function for translating camel-case to snake-case.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:2474"
        },
        {
            "message": "Missing item type\nReturns the actual instance of the $tooltip service.\nTODO support multiple triggers",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:2485"
        },
        {
            "message": "Missing item type\nReturns an object of show and hide triggers.\n\nIf a trigger is supplied,\nit is used to show the tooltip; otherwise, it will use the `trigger`\noption passed to the `$tooltipProvider.options` method; else it will\ndefault to the trigger supplied to this directive factory.\n\nThe hide trigger is based on the show trigger. If the `trigger` option\nwas passed to the `$tooltipProvider.options` method, it will use the\nmapped trigger from `triggerMap` or the passed trigger if the map is\nundefined; otherwise, it uses the `triggerMap` value of the show\ntrigger; else it will just use the show trigger.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:2493"
        },
        {
            "message": "Missing item type\nObserve the relevant attributes.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:2680"
        },
        {
            "message": "Missing item type\nThe following features are still outstanding: popup delay, animation as a\nfunction, placement as a function, inside, support for more triggers than\njust mouse enter/leave, html popovers, and selector delegatation.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:2784"
        },
        {
            "message": "Missing item type\nAngularJS version of the tabs directive.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:2969"
        },
        {
            "message": "Missing item type\nTabset is the outer container for the tabs directive",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:3022"
        },
        {
            "message": "Missing item type\nCreates a tab with a heading and content. Must be placed within a {@link ui.bootstrap.tabs.directive:tabset tabset}.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:3069"
        },
        {
            "message": "Missing item type\nCreates an HTML heading for a {@link ui.bootstrap.tabs.directive:tab tab}. Must be placed as a child of a tab element.",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:3125"
        },
        {
            "message": "Missing item type\nA helper service that can parse typeahead's syntax (string provided by users)\nExtracted to a separate service for ease of unit testing",
            "line": " bower_components/angular-bootstrap/ui-bootstrap.js:3505"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-cookies/angular-cookies.js:1"
        },
        {
            "message": "Missing item type\n# ngCookies\n\nThe `ngCookies` module provides a convenient wrapper for reading and writing browser cookies.\n\n\n<div doc-module-components=\"ngCookies\"></div>\n\nSee {@link ngCookies.$cookies `$cookies`} and\n{@link ngCookies.$cookieStore `$cookieStore`} for usage.",
            "line": " bower_components/angular-cookies/angular-cookies.js:8"
        },
        {
            "message": "Missing item type\nProvides read/write access to browser's cookies.\n\nOnly a simple Object is exposed and by adding or removing properties to/from this object, new\ncookies are created/deleted at the end of current $eval.\nThe object's properties can only be strings.\n\nRequires the {@link ngCookies `ngCookies`} module to be installed.",
            "line": " bower_components/angular-cookies/angular-cookies.js:26"
        },
        {
            "message": "Missing item type\nPushes all the cookies from the service to the browser and verifies if all cookies were\nstored.",
            "line": " bower_components/angular-cookies/angular-cookies.js:80"
        },
        {
            "message": "Missing item type\nProvides a key-value (string-object) storage, that is backed by session cookies.\nObjects put or retrieved from this storage are automatically serialized or\ndeserialized by angular's toJson/fromJson.\n\nRequires the {@link ngCookies `ngCookies`} module to be installed.",
            "line": " bower_components/angular-cookies/angular-cookies.js:131"
        },
        {
            "message": "Missing item type\nReturns the value of given cookie key",
            "line": " bower_components/angular-cookies/angular-cookies.js:160"
        },
        {
            "message": "Missing item type\nSets a value for given cookie key",
            "line": " bower_components/angular-cookies/angular-cookies.js:175"
        },
        {
            "message": "Missing item type\nRemove given cookie",
            "line": " bower_components/angular-cookies/angular-cookies.js:189"
        },
        {
            "message": "Missing item type\nClasses\n\nFileUploader\nFileUploader.FileLikeObject\nFileUploader.FileItem\nFileUploader.FileDirective\nFileUploader.FileSelect\nFileUploader.FileDrop\nFileUploader.FileOver",
            "line": " bower_components/angular-file-upload/src/module.js:3"
        },
        {
            "message": "Missing item type\nCreates an instance of FileUploader",
            "line": " bower_components/angular-file-upload/src/module.js:36"
        },
        {
            "message": "Missing item type\nPUBLIC",
            "line": " bower_components/angular-file-upload/src/module.js:54"
        },
        {
            "message": "Missing item type\nChecks a support the html5 uploader",
            "line": " bower_components/angular-file-upload/src/module.js:57"
        },
        {
            "message": "Missing item type\nAdds items to the queue",
            "line": " bower_components/angular-file-upload/src/module.js:63"
        },
        {
            "message": "Missing item type\nRemove items from the queue. Remove last: index = -1",
            "line": " bower_components/angular-file-upload/src/module.js:97"
        },
        {
            "message": "Missing item type\nClears the queue",
            "line": " bower_components/angular-file-upload/src/module.js:109"
        },
        {
            "message": "Missing item type\nUploads a item from the queue",
            "line": " bower_components/angular-file-upload/src/module.js:118"
        },
        {
            "message": "Missing item type\nCancels uploading of item from the queue",
            "line": " bower_components/angular-file-upload/src/module.js:133"
        },
        {
            "message": "Missing item type\nUploads all not uploaded items of queue",
            "line": " bower_components/angular-file-upload/src/module.js:143"
        },
        {
            "message": "Missing item type\nCancels all uploads",
            "line": " bower_components/angular-file-upload/src/module.js:157"
        },
        {
            "message": "Missing item type\nReturns \"true\" if value an instance of File",
            "line": " bower_components/angular-file-upload/src/module.js:166"
        },
        {
            "message": "Missing item type\nReturns \"true\" if value an instance of FileLikeObject",
            "line": " bower_components/angular-file-upload/src/module.js:176"
        },
        {
            "message": "Missing item type\nReturns \"true\" if value is array like object",
            "line": " bower_components/angular-file-upload/src/module.js:185"
        },
        {
            "message": "Missing item type\nReturns a index of item from the queue",
            "line": " bower_components/angular-file-upload/src/module.js:193"
        },
        {
            "message": "Missing item type\nReturns not uploaded items",
            "line": " bower_components/angular-file-upload/src/module.js:201"
        },
        {
            "message": "Missing item type\nReturns items ready for upload",
            "line": " bower_components/angular-file-upload/src/module.js:210"
        },
        {
            "message": "Missing item type\nDestroys instance of FileUploader",
            "line": " bower_components/angular-file-upload/src/module.js:223"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:233"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:238"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:243"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:251"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:256"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:262"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:267"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:275"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:283"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:291"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:299"
        },
        {
            "message": "Missing item type\nPRIVATE",
            "line": " bower_components/angular-file-upload/src/module.js:303"
        },
        {
            "message": "Missing item type\nReturns the total progress",
            "line": " bower_components/angular-file-upload/src/module.js:306"
        },
        {
            "message": "Missing item type\nReturns array of filters",
            "line": " bower_components/angular-file-upload/src/module.js:322"
        },
        {
            "message": "Missing item type\nUpdates html",
            "line": " bower_components/angular-file-upload/src/module.js:336"
        },
        {
            "message": "Missing item type\nReturns \"true\" if item is a file (not folder)",
            "line": " bower_components/angular-file-upload/src/module.js:343"
        },
        {
            "message": "Missing item type\nReturns \"true\" if the limit has not been reached",
            "line": " bower_components/angular-file-upload/src/module.js:352"
        },
        {
            "message": "Missing item type\nReturns \"true\" if file pass all filters",
            "line": " bower_components/angular-file-upload/src/module.js:360"
        },
        {
            "message": "Missing item type\nChecks whether upload successful",
            "line": " bower_components/angular-file-upload/src/module.js:375"
        },
        {
            "message": "Missing item type\nTransforms the server response",
            "line": " bower_components/angular-file-upload/src/module.js:384"
        },
        {
            "message": "Missing item type\nParsed response headers",
            "line": " bower_components/angular-file-upload/src/module.js:398"
        },
        {
            "message": "Missing item type\nReturns function that returns headers",
            "line": " bower_components/angular-file-upload/src/module.js:422"
        },
        {
            "message": "Missing item type\nThe XMLHttpRequest transport",
            "line": " bower_components/angular-file-upload/src/module.js:436"
        },
        {
            "message": "Missing item type\nThe IFrame transport",
            "line": " bower_components/angular-file-upload/src/module.js:495"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/src/module.js:572"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/src/module.js:582"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/src/module.js:589"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/src/module.js:596"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/src/module.js:605"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/src/module.js:619"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/src/module.js:631"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/src/module.js:643"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/src/module.js:655"
        },
        {
            "message": "Missing item type\nSTATIC",
            "line": " bower_components/angular-file-upload/src/module.js:679"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-file-upload/src/module.js:682"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-file-upload/src/module.js:686"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-file-upload/src/module.js:690"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-file-upload/src/module.js:694"
        },
        {
            "message": "Missing item type\nInherits a target (Class_1) by a source (Class_2)",
            "line": " bower_components/angular-file-upload/src/module.js:698"
        },
        {
            "message": "Missing item type\nCreates an instance of FileLikeObject",
            "line": " bower_components/angular-file-upload/src/module.js:717"
        },
        {
            "message": "Missing item type\nCreates file like object from fake path string",
            "line": " bower_components/angular-file-upload/src/module.js:730"
        },
        {
            "message": "Missing item type\nCreates file like object from object",
            "line": " bower_components/angular-file-upload/src/module.js:741"
        },
        {
            "message": "Missing item type\nCreates an instance of FileItem",
            "line": " bower_components/angular-file-upload/src/module.js:755"
        },
        {
            "message": "Missing item type\nPUBLIC",
            "line": " bower_components/angular-file-upload/src/module.js:792"
        },
        {
            "message": "Missing item type\nUploads a FileItem",
            "line": " bower_components/angular-file-upload/src/module.js:795"
        },
        {
            "message": "Missing item type\nCancels uploading of FileItem",
            "line": " bower_components/angular-file-upload/src/module.js:801"
        },
        {
            "message": "Missing item type\nRemoves a FileItem",
            "line": " bower_components/angular-file-upload/src/module.js:807"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:813"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:818"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:824"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:831"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:838"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:845"
        },
        {
            "message": "Missing item type\nPRIVATE",
            "line": " bower_components/angular-file-upload/src/module.js:852"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/src/module.js:855"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/src/module.js:868"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/src/module.js:877"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/src/module.js:895"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/src/module.js:913"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/src/module.js:931"
        },
        {
            "message": "Missing item type\nDestroys a FileItem",
            "line": " bower_components/angular-file-upload/src/module.js:942"
        },
        {
            "message": "Missing item type\nPrepares to uploading",
            "line": " bower_components/angular-file-upload/src/module.js:951"
        },
        {
            "message": "Missing item type\nReplaces input element on his clone",
            "line": " bower_components/angular-file-upload/src/module.js:959"
        },
        {
            "message": "Missing item type\nCreates instance of {FileDirective} object",
            "line": " bower_components/angular-file-upload/src/module.js:973"
        },
        {
            "message": "Missing item type\nMap of events",
            "line": " bower_components/angular-file-upload/src/module.js:988"
        },
        {
            "message": "Missing item type\nBinds events handles",
            "line": " bower_components/angular-file-upload/src/module.js:993"
        },
        {
            "message": "Missing item type\nUnbinds events handles",
            "line": " bower_components/angular-file-upload/src/module.js:1002"
        },
        {
            "message": "Missing item type\nDestroys directive",
            "line": " bower_components/angular-file-upload/src/module.js:1010"
        },
        {
            "message": "Missing item type\nSaves links to functions",
            "line": " bower_components/angular-file-upload/src/module.js:1019"
        },
        {
            "message": "Missing item type\nCreates instance of {FileSelect} object",
            "line": " bower_components/angular-file-upload/src/module.js:1034"
        },
        {
            "message": "Missing item type\nMap of events",
            "line": " bower_components/angular-file-upload/src/module.js:1047"
        },
        {
            "message": "Missing item type\nName of property inside uploader._directive object",
            "line": " bower_components/angular-file-upload/src/module.js:1055"
        },
        {
            "message": "Missing item type\nReturns options",
            "line": " bower_components/angular-file-upload/src/module.js:1060"
        },
        {
            "message": "Missing item type\nReturns filters",
            "line": " bower_components/angular-file-upload/src/module.js:1065"
        },
        {
            "message": "Missing item type\nIf returns \"true\" then HTMLInputElement will be cleared",
            "line": " bower_components/angular-file-upload/src/module.js:1070"
        },
        {
            "message": "Missing item type\nEvent handler",
            "line": " bower_components/angular-file-upload/src/module.js:1077"
        },
        {
            "message": "Missing item type\nCreates instance of {FileDrop} object",
            "line": " bower_components/angular-file-upload/src/module.js:1094"
        },
        {
            "message": "Missing item type\nMap of events",
            "line": " bower_components/angular-file-upload/src/module.js:1102"
        },
        {
            "message": "Missing item type\nName of property inside uploader._directive object",
            "line": " bower_components/angular-file-upload/src/module.js:1112"
        },
        {
            "message": "Missing item type\nReturns options",
            "line": " bower_components/angular-file-upload/src/module.js:1117"
        },
        {
            "message": "Missing item type\nReturns filters",
            "line": " bower_components/angular-file-upload/src/module.js:1122"
        },
        {
            "message": "Missing item type\nEvent handler",
            "line": " bower_components/angular-file-upload/src/module.js:1127"
        },
        {
            "message": "Missing item type\nEvent handler",
            "line": " bower_components/angular-file-upload/src/module.js:1139"
        },
        {
            "message": "Missing item type\nEvent handler",
            "line": " bower_components/angular-file-upload/src/module.js:1149"
        },
        {
            "message": "Missing item type\nHelper",
            "line": " bower_components/angular-file-upload/src/module.js:1157"
        },
        {
            "message": "Missing item type\nHelper",
            "line": " bower_components/angular-file-upload/src/module.js:1163"
        },
        {
            "message": "Missing item type\nReturns \"true\" if types contains files",
            "line": " bower_components/angular-file-upload/src/module.js:1170"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:1184"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/src/module.js:1190"
        },
        {
            "message": "Missing item type\nCreates instance of {FileDrop} object",
            "line": " bower_components/angular-file-upload/src/module.js:1201"
        },
        {
            "message": "Missing item type\nMap of events",
            "line": " bower_components/angular-file-upload/src/module.js:1209"
        },
        {
            "message": "Missing item type\nName of property inside uploader._directive object",
            "line": " bower_components/angular-file-upload/src/module.js:1216"
        },
        {
            "message": "Missing item type\nOver class",
            "line": " bower_components/angular-file-upload/src/module.js:1221"
        },
        {
            "message": "Missing item type\nAdds over class",
            "line": " bower_components/angular-file-upload/src/module.js:1226"
        },
        {
            "message": "Missing item type\nRemoves over class",
            "line": " bower_components/angular-file-upload/src/module.js:1232"
        },
        {
            "message": "Missing item type\nReturns over class",
            "line": " bower_components/angular-file-upload/src/module.js:1238"
        },
        {
            "message": "Missing item type\nClasses\n\nFileUploader\nFileUploader.FileLikeObject\nFileUploader.FileItem\nFileUploader.FileDirective\nFileUploader.FileSelect\nFileUploader.FileDrop\nFileUploader.FileOver",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:19"
        },
        {
            "message": "Missing item type\nCreates an instance of FileUploader",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:52"
        },
        {
            "message": "Missing item type\nPUBLIC",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:70"
        },
        {
            "message": "Missing item type\nChecks a support the html5 uploader",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:73"
        },
        {
            "message": "Missing item type\nAdds items to the queue",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:79"
        },
        {
            "message": "Missing item type\nRemove items from the queue. Remove last: index = -1",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:113"
        },
        {
            "message": "Missing item type\nClears the queue",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:125"
        },
        {
            "message": "Missing item type\nUploads a item from the queue",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:134"
        },
        {
            "message": "Missing item type\nCancels uploading of item from the queue",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:149"
        },
        {
            "message": "Missing item type\nUploads all not uploaded items of queue",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:159"
        },
        {
            "message": "Missing item type\nCancels all uploads",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:173"
        },
        {
            "message": "Missing item type\nReturns \"true\" if value an instance of File",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:182"
        },
        {
            "message": "Missing item type\nReturns \"true\" if value an instance of FileLikeObject",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:192"
        },
        {
            "message": "Missing item type\nReturns \"true\" if value is array like object",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:201"
        },
        {
            "message": "Missing item type\nReturns a index of item from the queue",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:209"
        },
        {
            "message": "Missing item type\nReturns not uploaded items",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:217"
        },
        {
            "message": "Missing item type\nReturns items ready for upload",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:226"
        },
        {
            "message": "Missing item type\nDestroys instance of FileUploader",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:239"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:249"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:254"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:259"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:267"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:272"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:278"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:283"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:291"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:299"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:307"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:315"
        },
        {
            "message": "Missing item type\nPRIVATE",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:319"
        },
        {
            "message": "Missing item type\nReturns the total progress",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:322"
        },
        {
            "message": "Missing item type\nReturns array of filters",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:338"
        },
        {
            "message": "Missing item type\nUpdates html",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:352"
        },
        {
            "message": "Missing item type\nReturns \"true\" if item is a file (not folder)",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:359"
        },
        {
            "message": "Missing item type\nReturns \"true\" if the limit has not been reached",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:368"
        },
        {
            "message": "Missing item type\nReturns \"true\" if file pass all filters",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:376"
        },
        {
            "message": "Missing item type\nChecks whether upload successful",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:391"
        },
        {
            "message": "Missing item type\nTransforms the server response",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:400"
        },
        {
            "message": "Missing item type\nParsed response headers",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:414"
        },
        {
            "message": "Missing item type\nReturns function that returns headers",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:438"
        },
        {
            "message": "Missing item type\nThe XMLHttpRequest transport",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:452"
        },
        {
            "message": "Missing item type\nThe IFrame transport",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:511"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:588"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:598"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:605"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:612"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:621"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:635"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:647"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:659"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:671"
        },
        {
            "message": "Missing item type\nSTATIC",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:695"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:698"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:702"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:706"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:710"
        },
        {
            "message": "Missing item type\nInherits a target (Class_1) by a source (Class_2)",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:714"
        },
        {
            "message": "Missing item type\nCreates an instance of FileLikeObject",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:733"
        },
        {
            "message": "Missing item type\nCreates file like object from fake path string",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:746"
        },
        {
            "message": "Missing item type\nCreates file like object from object",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:757"
        },
        {
            "message": "Missing item type\nCreates an instance of FileItem",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:771"
        },
        {
            "message": "Missing item type\nPUBLIC",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:808"
        },
        {
            "message": "Missing item type\nUploads a FileItem",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:811"
        },
        {
            "message": "Missing item type\nCancels uploading of FileItem",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:817"
        },
        {
            "message": "Missing item type\nRemoves a FileItem",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:823"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:829"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:834"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:840"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:847"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:854"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:861"
        },
        {
            "message": "Missing item type\nPRIVATE",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:868"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:871"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:884"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:893"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:911"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:929"
        },
        {
            "message": "Missing item type\nInner callback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:947"
        },
        {
            "message": "Missing item type\nDestroys a FileItem",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:958"
        },
        {
            "message": "Missing item type\nPrepares to uploading",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:967"
        },
        {
            "message": "Missing item type\nReplaces input element on his clone",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:975"
        },
        {
            "message": "Missing item type\nCreates instance of {FileDirective} object",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:989"
        },
        {
            "message": "Missing item type\nMap of events",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1004"
        },
        {
            "message": "Missing item type\nBinds events handles",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1009"
        },
        {
            "message": "Missing item type\nUnbinds events handles",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1018"
        },
        {
            "message": "Missing item type\nDestroys directive",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1026"
        },
        {
            "message": "Missing item type\nSaves links to functions",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1035"
        },
        {
            "message": "Missing item type\nCreates instance of {FileSelect} object",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1050"
        },
        {
            "message": "Missing item type\nMap of events",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1063"
        },
        {
            "message": "Missing item type\nName of property inside uploader._directive object",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1071"
        },
        {
            "message": "Missing item type\nReturns options",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1076"
        },
        {
            "message": "Missing item type\nReturns filters",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1081"
        },
        {
            "message": "Missing item type\nIf returns \"true\" then HTMLInputElement will be cleared",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1086"
        },
        {
            "message": "Missing item type\nEvent handler",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1093"
        },
        {
            "message": "Missing item type\nCreates instance of {FileDrop} object",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1110"
        },
        {
            "message": "Missing item type\nMap of events",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1118"
        },
        {
            "message": "Missing item type\nName of property inside uploader._directive object",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1128"
        },
        {
            "message": "Missing item type\nReturns options",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1133"
        },
        {
            "message": "Missing item type\nReturns filters",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1138"
        },
        {
            "message": "Missing item type\nEvent handler",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1143"
        },
        {
            "message": "Missing item type\nEvent handler",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1155"
        },
        {
            "message": "Missing item type\nEvent handler",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1165"
        },
        {
            "message": "Missing item type\nHelper",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1173"
        },
        {
            "message": "Missing item type\nHelper",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1179"
        },
        {
            "message": "Missing item type\nReturns \"true\" if types contains files",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1186"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1200"
        },
        {
            "message": "Missing item type\nCallback",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1206"
        },
        {
            "message": "Missing item type\nCreates instance of {FileDrop} object",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1217"
        },
        {
            "message": "Missing item type\nMap of events",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1225"
        },
        {
            "message": "Missing item type\nName of property inside uploader._directive object",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1232"
        },
        {
            "message": "Missing item type\nOver class",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1237"
        },
        {
            "message": "Missing item type\nAdds over class",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1242"
        },
        {
            "message": "Missing item type\nRemoves over class",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1248"
        },
        {
            "message": "Missing item type\nReturns over class",
            "line": " bower_components/angular-file-upload/angular-file-upload.js:1254"
        },
        {
            "message": "Missing item type\nBunch of useful filters for angularJS(with no external dependencies!)",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1"
        },
        {
            "message": "Missing item type\nget an object and return array of values",
            "line": " bower_components/angular-filter/dist/angular-filter.js:24"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-filter/dist/angular-filter.js:37"
        },
        {
            "message": "Missing item type\nreturn if object contains partial object",
            "line": " bower_components/angular-filter/dist/angular-filter.js:45"
        },
        {
            "message": "Missing item type\nsearch for approximate pattern in string",
            "line": " bower_components/angular-filter/dist/angular-filter.js:61"
        },
        {
            "message": "Missing item type\nreturn the first n element of an array,\nif expression provided, is returns as long the expression return truthy",
            "line": " bower_components/angular-filter/dist/angular-filter.js:80"
        },
        {
            "message": "Missing item type\nPolyfill to ECMA6 String.prototype.contains",
            "line": " bower_components/angular-filter/dist/angular-filter.js:99"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-filter/dist/angular-filter.js:108"
        },
        {
            "message": "Missing item type\nGet an object, and return an array composed of it's properties names(nested too).",
            "line": " bower_components/angular-filter/dist/angular-filter.js:118"
        },
        {
            "message": "Missing item type\nTest if given object is a Scope instance",
            "line": " bower_components/angular-filter/dist/angular-filter.js:147"
        },
        {
            "message": "Missing item type\nreference to angular function",
            "line": " bower_components/angular-filter/dist/angular-filter.js:157"
        },
        {
            "message": "Missing item type\nreference to math conditions",
            "line": " bower_components/angular-filter/dist/angular-filter.js:209"
        },
        {
            "message": "Missing item type\nchecks if value is null or not",
            "line": " bower_components/angular-filter/dist/angular-filter.js:292"
        },
        {
            "message": "Missing item type\nget a collection and properties object, and returns all of the items\nin the collection after the first that found with the given properties.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:308"
        },
        {
            "message": "Missing item type\nget a collection and specified count, and returns all of the items\nin the collection after the specified count.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:337"
        },
        {
            "message": "Missing item type\nget a collection and properties object, and returns all of the items\nin the collection before the first that found with the given properties.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:361"
        },
        {
            "message": "Missing item type\nget a collection and specified count, and returns all of the items\nin the collection before the specified count.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:389"
        },
        {
            "message": "Missing item type\nget (array/object, object/array) and return merged collection",
            "line": " bower_components/angular-filter/dist/angular-filter.js:411"
        },
        {
            "message": "Missing item type\nChecks if given expression is present in one or more object in the collection",
            "line": " bower_components/angular-filter/dist/angular-filter.js:444"
        },
        {
            "message": "Missing item type\nSorts a list into groups and returns a count for the number of objects in each group.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:476"
        },
        {
            "message": "Missing item type\ndefaultsFilter allows to specify a default fallback value for properties that resolve to undefined.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:514"
        },
        {
            "message": "Missing item type\nChecks if given expression is present in all members in the collection",
            "line": " bower_components/angular-filter/dist/angular-filter.js:550"
        },
        {
            "message": "Missing item type\nfilter by specific properties, avoid the rest",
            "line": " bower_components/angular-filter/dist/angular-filter.js:576"
        },
        {
            "message": "Missing item type\ncheck if there is concatenate properties\nexample:\nobject: { first: 'foo', last:'bar' }\nfilterBy: ['first + last'] => search by full name(i.e 'foo bar')",
            "line": " bower_components/angular-filter/dist/angular-filter.js:602"
        },
        {
            "message": "Missing item type\nGets the first element or first n elements of an array\nif callback is provided, is returns as long the callback return truthy",
            "line": " bower_components/angular-filter/dist/angular-filter.js:626"
        },
        {
            "message": "Missing item type\nFlattens a nested array (the nesting can be to any depth).\nIf you pass shallow, the array will only be flattened a single level",
            "line": " bower_components/angular-filter/dist/angular-filter.js:660"
        },
        {
            "message": "Missing item type\nflatten nested array (the nesting can be to any depth).",
            "line": " bower_components/angular-filter/dist/angular-filter.js:688"
        },
        {
            "message": "Missing item type\nfuzzy string searching by key",
            "line": " bower_components/angular-filter/dist/angular-filter.js:708"
        },
        {
            "message": "Missing item type\nfuzzy string searching for array of strings, objects",
            "line": " bower_components/angular-filter/dist/angular-filter.js:747"
        },
        {
            "message": "Missing item type\nchecks if object has key{string} that match\nto fuzzy search pattern",
            "line": " bower_components/angular-filter/dist/angular-filter.js:780"
        },
        {
            "message": "Missing item type\nCreate an object composed of keys generated from the result of running each element of a collection,\neach key is an array of the elements.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:810"
        },
        {
            "message": "Missing item type\ngroupBy function",
            "line": " bower_components/angular-filter/dist/angular-filter.js:835"
        },
        {
            "message": "Missing item type\nget collection or string and return if it empty",
            "line": " bower_components/angular-filter/dist/angular-filter.js:858"
        },
        {
            "message": "Missing item type\njoin a collection by a provided delimiter (space by default)",
            "line": " bower_components/angular-filter/dist/angular-filter.js:875"
        },
        {
            "message": "Missing item type\nGets the last element or last n elements of an array\nif callback is provided, is returns as long the callback return truthy",
            "line": " bower_components/angular-filter/dist/angular-filter.js:898"
        },
        {
            "message": "Missing item type\nReturns a new collection of the results of each expression execution.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:937"
        },
        {
            "message": "Missing item type\nfilter collection by expression",
            "line": " bower_components/angular-filter/dist/angular-filter.js:963"
        },
        {
            "message": "Missing item type\nfilter collection by expression",
            "line": " bower_components/angular-filter/dist/angular-filter.js:991"
        },
        {
            "message": "Missing item type\nget collection and properties object, and removed elements\nwith this properties",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1019"
        },
        {
            "message": "Missing item type\nremove specific members from collection",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1047"
        },
        {
            "message": "Missing item type\nReverses a string or collection",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1078"
        },
        {
            "message": "Missing item type\nfor each member, join several strings field and add them to\nnew field called 'searchField' (use for search filtering)",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1101"
        },
        {
            "message": "Missing item type\nConvert objects into stable arrays.\nif addKey set to true,the filter also attaches a new property\n$key to the value containing the original key that was used in\nthe object we are iterating over to reference the property",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1136"
        },
        {
            "message": "Missing item type\nget collection and filter duplicate members\nif uniqueFilter get a property(nested to) as argument it's\nfilter by this property as unique identifier",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1163"
        },
        {
            "message": "Missing item type\nof each element in a collection to the given properties object,\nreturning an array of all elements that have equivalent property values.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1220"
        },
        {
            "message": "Missing item type\nExclusive or filter by expression",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1247"
        },
        {
            "message": "Missing item type\nConvert bytes into appropriate display \n1024 bytes => 1 KB",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1284"
        },
        {
            "message": "Missing item type\nConvert angle from radians to degrees",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1314"
        },
        {
            "message": "Missing item type\nConvert bytes into appropriate display \n1024 kilobytes => 1 MB",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1339"
        },
        {
            "message": "Missing item type\nreference to global Math object",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1366"
        },
        {
            "message": "Missing item type\nMath.max will get an array and return the max value. if an expression\nis provided, will return max value by expression.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1377"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1398"
        },
        {
            "message": "Missing item type\nMath.min will get an array and return the min value. if an expression\nis provided, will return min value by expression.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1411"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1432"
        },
        {
            "message": "Missing item type\npercentage between two numbers",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1445"
        },
        {
            "message": "Missing item type\nConvert angle from degrees to radians",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1469"
        },
        {
            "message": "Missing item type\nconverting decimal numbers to different bases(radix)",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1493"
        },
        {
            "message": "Missing item type\nConvert number into abbreviations.\ni.e: K for one thousand, M for Million, B for billion\ne.g: number of users:235,221, decimal:1 => 235.2 K",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1514"
        },
        {
            "message": "Missing item type\nSum up all values within an array",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1544"
        },
        {
            "message": "Missing item type\nchecks whether string ends with the ends parameter.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1563"
        },
        {
            "message": "Missing item type\nremove accents/diacritics from a string",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1590"
        },
        {
            "message": "Missing item type\nLeft trim. Similar to trimFilter, but only for left side.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1712"
        },
        {
            "message": "Missing item type\nReturn the matched pattern in a string.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1732"
        },
        {
            "message": "Missing item type\nRepeats a string n times",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1752"
        },
        {
            "message": "Missing item type\nRepeats a string n times with given separator",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1776"
        },
        {
            "message": "Missing item type\nRight trim. Similar to trimFilter, but only for right side.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1789"
        },
        {
            "message": "Missing item type\nremove spaces from string, replace with \"-\" or given argument",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1809"
        },
        {
            "message": "Missing item type\nchecks whether string starts with the starts parameter.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1829"
        },
        {
            "message": "Missing item type\nget string with {n} and replace match with enumeration values",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1853"
        },
        {
            "message": "Missing item type\nstrip html tags from string",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1873"
        },
        {
            "message": "Missing item type\ntest if a string match a pattern.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1890"
        },
        {
            "message": "Missing item type\nStrip whitespace (or other characters) from the beginning and end of a string",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1910"
        },
        {
            "message": "Missing item type\ntruncates a string given a specified length, providing a custom string to denote an omission.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1930"
        },
        {
            "message": "Missing item type\nucfirst",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1954"
        },
        {
            "message": "Missing item type\nget string as parameter and return encoded string",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1976"
        },
        {
            "message": "Missing item type\nget string as parameter and return encoded string",
            "line": " bower_components/angular-filter/dist/angular-filter.js:1993"
        },
        {
            "message": "Missing item type\nWrap a string with another string",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2010"
        },
        {
            "message": "Missing item type\nstore specific filters result in $$cache, based on scope life time(avoid memory leak).\non scope.$destroy remove it's cache from $$cache container",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2027"
        },
        {
            "message": "Missing item type\nCache storing",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2042"
        },
        {
            "message": "Missing item type\nScope listeners container\nscope.$destroy => remove all cache keys\nbind to current scope.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2048"
        },
        {
            "message": "Missing item type\n$timeout without triggering the digest cycle",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2056"
        },
        {
            "message": "Missing item type\nget `HashKey` string based on the given arguments.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2062"
        },
        {
            "message": "Missing item type\nfir on $scope.$destroy,\nremove cache based scope from `$$cache`,\nand remove itself from `$$listeners`",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2075"
        },
        {
            "message": "Missing item type\nfor angular version that greater than v.1.3.0\nif clear cache when the digest cycle end.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2090"
        },
        {
            "message": "Missing item type\nStore hashKeys in $$listeners container\non scope.$destroy, remove them all(bind an event).",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2102"
        },
        {
            "message": "Missing item type\nreturn the `cacheKey` or undefined.",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2119"
        },
        {
            "message": "Missing item type\nstore `result` in `$$cache` container, based on the hashKey.\nadd $destroy listener and return result",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2131"
        },
        {
            "message": "Missing item type\nBunch of useful filters for angularJS",
            "line": " bower_components/angular-filter/dist/angular-filter.js:2164"
        },
        {
            "message": "Missing item type\nBunch of useful filters for angularJS(with no external dependencies!)",
            "line": " bower_components/angular-filter/dist/angular-filter.min.js:1"
        },
        {
            "message": "Missing item type\nAn Angular module that gives you access to the browsers local storage",
            "line": " bower_components/angular-local-storage/dist/angular-local-storage.js:1"
        },
        {
            "message": "Missing item type\nAn Angular module that gives you access to the browsers local storage",
            "line": " bower_components/angular-local-storage/dist/angular-local-storage.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-messages/angular-messages.js:1"
        },
        {
            "message": "Missing item type\nThe `ngMessages` module provides enhanced support for displaying messages within templates\n(typically within forms or when rendering message objects that return key/value data).\nInstead of relying on JavaScript code and/or complex ng-if statements within your form template to\nshow and hide error messages specific to the state of an input field, the `ngMessages` and\n`ngMessage` directives are designed to handle the complexity, inheritance and priority\nsequencing based on the order of how the messages are defined in the template.\n\nCurrently, the ngMessages module only contains the code for the `ngMessages`\nand `ngMessage` directives.\n\n# Usage\nThe `ngMessages` directive listens on a key/value collection which is set on the ngMessages attribute.\nSince the {@link ngModel ngModel} directive exposes an `$error` object, this error object can be\nused with `ngMessages` to display control error messages in an easier way than with just regular angular\ntemplate directives.\n\n```html\n<form name=\"myForm\">\n  <input type=\"text\" ng-model=\"field\" name=\"myField\" required minlength=\"5\" />\n  <div ng-messages=\"myForm.myField.$error\">\n    <div ng-message=\"required\">You did not enter a field</div>\n    <div ng-message=\"minlength\">The value entered is too short</div>\n  </div>\n</form>\n```\n\nNow whatever key/value entries are present within the provided object (in this case `$error`) then\nthe ngMessages directive will render the inner first ngMessage directive (depending if the key values\nmatch the attribute value present on each ngMessage directive). In other words, if your errors\nobject contains the following data:\n\n```javascript\n<!-- keep in mind that ngModel automatically sets these error flags -->\nmyField.$error = { minlength : true, required : false };\n```\n\nThen the `required` message will be displayed first. When required is false then the `minlength` message\nwill be displayed right after (since these messages are ordered this way in the template HTML code).\nThe prioritization of each message is determined by what order they're present in the DOM.\nTherefore, instead of having custom JavaScript code determine the priority of what errors are\npresent before others, the presentation of the errors are handled within the template.\n\nBy default, ngMessages will only display one error at a time. However, if you wish to display all\nmessages then the `ng-messages-multiple` attribute flag can be used on the element containing the\nngMessages directive to make this happen.\n\n```html\n<div ng-messages=\"myForm.myField.$error\" ng-messages-multiple>...</div>\n```\n\n## Reusing and Overriding Messages\nIn addition to prioritization, ngMessages also allows for including messages from a remote or an inline\ntemplate. This allows for generic collection of messages to be reused across multiple parts of an\napplication.\n\n```html\n<script type=\"text/ng-template\" id=\"error-messages\">\n  <div ng-message=\"required\">This field is required</div>\n  <div ng-message=\"minlength\">This field is too short</div>\n</script>\n<div ng-messages=\"myForm.myField.$error\" ng-messages-include=\"error-messages\"></div>\n```\n\nHowever, including generic messages may not be useful enough to match all input fields, therefore,\n`ngMessages` provides the ability to override messages defined in the remote template by redefining\nthen within the directive container.\n\n```html\n<!-- a generic template of error messages known as \"my-custom-messages\" -->\n<script type=\"text/ng-template\" id=\"my-custom-messages\">\n  <div ng-message=\"required\">This field is required</div>\n  <div ng-message=\"minlength\">This field is too short</div>\n</script>\n\n<form name=\"myForm\">\n  <input type=\"email\"\n         id=\"email\"\n         name=\"myEmail\"\n         ng-model=\"email\"\n         minlength=\"5\"\n         required />\n\n  <div ng-messages=\"myForm.myEmail.$error\" ng-messages-include=\"my-custom-messages\">\n    <!-- this required message has overridden the template message -->\n    <div ng-message=\"required\">You did not enter your email address</div>\n\n    <!-- this is a brand new message and will appear last in the prioritization -->\n    <div ng-message=\"email\">Your email address is invalid</div>\n  </div>\n</form>\n```\n\nIn the example HTML code above the message that is set on required will override the corresponding\nrequired message defined within the remote template. Therefore, with particular input fields (such\nemail addresses, date fields, autocomplete inputs, etc...), specialized error messages can be applied\nwhile more generic messages can be used to handle other, more general input errors.\n\n## Animations\nIf the `ngAnimate` module is active within the application then both the `ngMessages` and\n`ngMessage` directives will trigger animations whenever any messages are added and removed\nfrom the DOM by the `ngMessages` directive.\n\nWhenever the `ngMessages` directive contains one or more visible messages then the `.ng-active` CSS\nclass will be added to the element. The `.ng-inactive` CSS class will be applied when there are no\nanimations present. Therefore, CSS transitions and keyframes as well as JavaScript animations can\nhook into the animations whenever these classes are added/removed.\n\nLet's say that our HTML code for our messages container looks like so:\n\n```html\n<div ng-messages=\"myMessages\" class=\"my-messages\">\n  <div ng-message=\"alert\" class=\"some-message\">...</div>\n  <div ng-message=\"fail\" class=\"some-message\">...</div>\n</div>\n```\n\nThen the CSS animation code for the message container looks like so:\n\n```css\n.my-messages {\n  transition:1s linear all;\n}\n.my-messages.ng-active {\n  // messages are visible\n}\n.my-messages.ng-inactive {\n  // messages are hidden\n}\n```\n\nWhenever an inner message is attached (becomes visible) or removed (becomes hidden) then the enter\nand leave animation is triggered for each particular element bound to the `ngMessage` directive.\n\nTherefore, the CSS code for the inner messages looks like so:\n\n```css\n.some-message {\n  transition:1s linear all;\n}\n\n.some-message.ng-enter {}\n.some-message.ng-enter.ng-enter-active {}\n\n.some-message.ng-leave {}\n.some-message.ng-leave.ng-leave-active {}\n```\n\n{@link ngAnimate Click here} to learn how to use JavaScript animations or to learn more about ngAnimate.",
            "line": " bower_components/angular-messages/angular-messages.js:8"
        },
        {
            "message": "Missing item type\n`ngMessage` is a directive with the purpose to show and hide a particular message.\nFor `ngMessage` to operate, a parent `ngMessages` directive on a parent DOM element\nmust be situated since it determines which messages are visible based on the state\nof the provided key/value map that `ngMessages` listens on.\n\nMore information about using `ngMessage` can be found in the\n{@link module:ngMessages `ngMessages` module documentation}.",
            "line": " bower_components/angular-messages/angular-messages.js:322"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-mocks/angular-mocks.js:1"
        },
        {
            "message": "Missing item type\nNamespace from 'angular-mocks.js' which contains testing related code.",
            "line": " bower_components/angular-mocks/angular-mocks.js:10"
        },
        {
            "message": "Missing item type\nThis service is a mock implementation of {@link ng.$browser}. It provides fake\nimplementation for commonly used browser apis that are hard to test, e.g. setTimeout, xhr,\ncookies, etc...\n\nThe api of this service is the same as that of the real {@link ng.$browser $browser}, except\nthat there are several helper methods available which can be used in tests.",
            "line": " bower_components/angular-mocks/angular-mocks.js:19"
        },
        {
            "message": "Missing item type\nCurrent milliseconds mock time.",
            "line": " bower_components/angular-mocks/angular-mocks.js:82"
        },
        {
            "message": "Missing item type\nFlushes all pending requests and executes the defer callbacks.",
            "line": " bower_components/angular-mocks/angular-mocks.js:107"
        },
        {
            "message": "Missing item type\nrun all fns in pollFns",
            "line": " bower_components/angular-mocks/angular-mocks.js:138"
        },
        {
            "message": "Missing item type\nConfigures the mock implementation of {@link ng.$exceptionHandler} to rethrow or to log errors\npassed to the `$exceptionHandler`.",
            "line": " bower_components/angular-mocks/angular-mocks.js:198"
        },
        {
            "message": "Missing item type\nMock implementation of {@link ng.$exceptionHandler} that rethrows or logs errors passed\nto it. See {@link ngMock.$exceptionHandlerProvider $exceptionHandlerProvider} for configuration\ninformation.\n\n\n```js\n  describe('$exceptionHandlerProvider', function() {\n\n    it('should capture log messages and exceptions', function() {\n\n      module(function($exceptionHandlerProvider) {\n        $exceptionHandlerProvider.mode('log');\n      });\n\n      inject(function($log, $exceptionHandler, $timeout) {\n        $timeout(function() { $log.log(1); });\n        $timeout(function() { $log.log(2); throw 'banana peel'; });\n        $timeout(function() { $log.log(3); });\n        expect($exceptionHandler.errors).toEqual([]);\n        expect($log.assertEmpty());\n        $timeout.flush();\n        expect($exceptionHandler.errors).toEqual(['banana peel']);\n        expect($log.log.logs).toEqual([[1], [2], [3]]);\n      });\n    });\n  });\n```",
            "line": " bower_components/angular-mocks/angular-mocks.js:207"
        },
        {
            "message": "Missing item type\nSets the logging mode.",
            "line": " bower_components/angular-mocks/angular-mocks.js:244"
        },
        {
            "message": "Missing item type\nMock implementation of {@link ng.$log} that gathers all logged messages in arrays\n(one array per logging level). These arrays are exposed as `logs` property of each of the\nlevel-specific log function, e.g. for level `error` the array is exposed as `$log.error.logs`.",
            "line": " bower_components/angular-mocks/angular-mocks.js:293"
        },
        {
            "message": "Missing item type\nReset all of the logging arrays to empty.",
            "line": " bower_components/angular-mocks/angular-mocks.js:332"
        },
        {
            "message": "Missing item type\nArray of messages logged using {@link ng.$log#log `log()`}.",
            "line": " bower_components/angular-mocks/angular-mocks.js:340"
        },
        {
            "message": "Missing item type\nArray of messages logged using {@link ng.$log#info `info()`}.",
            "line": " bower_components/angular-mocks/angular-mocks.js:354"
        },
        {
            "message": "Missing item type\nArray of messages logged using {@link ng.$log#warn `warn()`}.",
            "line": " bower_components/angular-mocks/angular-mocks.js:368"
        },
        {
            "message": "Missing item type\nArray of messages logged using {@link ng.$log#error `error()`}.",
            "line": " bower_components/angular-mocks/angular-mocks.js:382"
        },
        {
            "message": "Missing item type\nArray of messages logged using {@link ng.$log#debug `debug()`}.",
            "line": " bower_components/angular-mocks/angular-mocks.js:396"
        },
        {
            "message": "Missing item type\nAssert that all of the logging methods have no logged messages. If any messages are present,\nan exception is thrown.",
            "line": " bower_components/angular-mocks/angular-mocks.js:412"
        },
        {
            "message": "Missing item type\nMock implementation of the $interval service.\n\nUse {@link ngMock.$interval#flush `$interval.flush(millis)`} to\nmove forward by `millis` milliseconds and trigger any functions scheduled to run in that\ntime.",
            "line": " bower_components/angular-mocks/angular-mocks.js:444"
        },
        {
            "message": "Missing item type\nCancels a task associated with the `promise`.",
            "line": " bower_components/angular-mocks/angular-mocks.js:516"
        },
        {
            "message": "Missing item type\nRuns interval tasks scheduled to be run in the next `millis` milliseconds.",
            "line": " bower_components/angular-mocks/angular-mocks.js:543"
        },
        {
            "message": "Missing item type\n*NOTE*: this is not an injectable instance, just a globally available mock class of `Date`.\n\nMock of the Date type which has its timezone specified via constructor arg.\n\nThe main purpose is to create Date-like instances with timezone fixed to the specified timezone\noffset, so that we can test code that depends on local timezone settings without dependency on\nthe time zone settings of the machine where the code is running.",
            "line": " bower_components/angular-mocks/angular-mocks.js:615"
        },
        {
            "message": "Missing item type\n*NOTE*: this is not an injectable instance, just a globally available function.\n\nMethod for serializing common angular objects (scope, elements, etc..) into strings, useful for\ndebugging.\n\nThis method is also available on window, where it can be used to display objects on debug\nconsole.",
            "line": " bower_components/angular-mocks/angular-mocks.js:835"
        },
        {
            "message": "Missing item type\nFake HTTP backend implementation suitable for unit testing applications that use the\n{@link ng.$http $http service}.\n\n*Note*: For fake HTTP backend implementation suitable for end-to-end testing or backend-less\ndevelopment please see {@link ngMockE2E.$httpBackend e2e $httpBackend mock}.\n\nDuring unit testing, we want our unit tests to run quickly and have no external dependencies so\nwe don’t want to send [XHR](https://developer.mozilla.org/en/xmlhttprequest) or\n[JSONP](http://en.wikipedia.org/wiki/JSONP) requests to a real server. All we really need is\nto verify whether a certain request has been sent or not, or alternatively just let the\napplication make requests, respond with pre-trained responses and assert that the end result is\nwhat we expect it to be.\n\nThis mock implementation can be used to respond with static or dynamic responses via the\n`expect` and `when` apis and their shortcuts (`expectGET`, `whenPOST`, etc).\n\nWhen an Angular application needs some data from a server, it calls the $http service, which\nsends the request to a real server using $httpBackend service. With dependency injection, it is\neasy to inject $httpBackend mock (which has the same API as $httpBackend) and use it to verify\nthe requests and respond with some testing data without sending a request to a real server.\n\nThere are two ways to specify what test data should be returned as http responses by the mock\nbackend when the code under test makes http requests:\n\n- `$httpBackend.expect` - specifies a request expectation\n- `$httpBackend.when` - specifies a backend definition\n\n\n# Request Expectations vs Backend Definitions\n\nRequest expectations provide a way to make assertions about requests made by the application and\nto define responses for those requests. The test will fail if the expected requests are not made\nor they are made in the wrong order.\n\nBackend definitions allow you to define a fake backend for your application which doesn't assert\nif a particular request was made or not, it just returns a trained response if a request is made.\nThe test will pass whether or not the request gets made during testing.\n\n\n<table class=\"table\">\n  <tr><th width=\"220px\"></th><th>Request expectations</th><th>Backend definitions</th></tr>\n  <tr>\n    <th>Syntax</th>\n    <td>.expect(...).respond(...)</td>\n    <td>.when(...).respond(...)</td>\n  </tr>\n  <tr>\n    <th>Typical usage</th>\n    <td>strict unit tests</td>\n    <td>loose (black-box) unit testing</td>\n  </tr>\n  <tr>\n    <th>Fulfills multiple requests</th>\n    <td>NO</td>\n    <td>YES</td>\n  </tr>\n  <tr>\n    <th>Order of requests matters</th>\n    <td>YES</td>\n    <td>NO</td>\n  </tr>\n  <tr>\n    <th>Request required</th>\n    <td>YES</td>\n    <td>NO</td>\n  </tr>\n  <tr>\n    <th>Response required</th>\n    <td>optional (see below)</td>\n    <td>YES</td>\n  </tr>\n</table>\n\nIn cases where both backend definitions and request expectations are specified during unit\ntesting, the request expectations are evaluated first.\n\nIf a request expectation has no response specified, the algorithm will search your backend\ndefinitions for an appropriate response.\n\nIf a request didn't match any expectation or if the expectation doesn't have the response\ndefined, the backend definitions are evaluated in sequential order to see if any of them match\nthe request. The response from the first matched definition is returned.\n\n\n# Flushing HTTP requests\n\nThe $httpBackend used in production always responds to requests asynchronously. If we preserved\nthis behavior in unit testing, we'd have to create async unit tests, which are hard to write,\nto follow and to maintain. But neither can the testing mock respond synchronously; that would\nchange the execution of the code under test. For this reason, the mock $httpBackend has a\n`flush()` method, which allows the test to explicitly flush pending requests. This preserves\nthe async api of the backend, while allowing the test to execute synchronously.\n\n\n# Unit testing with mock $httpBackend\nThe following code shows how to setup and use the mock backend when unit testing a controller.\nFirst we create the controller under test:\n\n ```js\n // The module code\n angular\n   .module('MyApp', [])\n   .controller('MyController', MyController);\n\n // The controller code\n function MyController($scope, $http) {\n   var authToken;\n\n   $http.get('/auth.py').success(function(data, status, headers) {\n     authToken = headers('A-Token');\n     $scope.user = data;\n   });\n\n   $scope.saveMessage = function(message) {\n     var headers = { 'Authorization': authToken };\n     $scope.status = 'Saving...';\n\n     $http.post('/add-msg.py', message, { headers: headers } ).success(function(response) {\n       $scope.status = '';\n     }).error(function() {\n       $scope.status = 'ERROR!';\n     });\n   };\n }\n ```\n\nNow we setup the mock backend and create the test specs:\n\n ```js\n   // testing controller\n   describe('MyController', function() {\n      var $httpBackend, $rootScope, createController, authRequestHandler;\n\n      // Set up the module\n      beforeEach(module('MyApp'));\n\n      beforeEach(inject(function($injector) {\n        // Set up the mock http service responses\n        $httpBackend = $injector.get('$httpBackend');\n        // backend definition common for all tests\n        authRequestHandler = $httpBackend.when('GET', '/auth.py')\n                               .respond({userId: 'userX'}, {'A-Token': 'xxx'});\n\n        // Get hold of a scope (i.e. the root scope)\n        $rootScope = $injector.get('$rootScope');\n        // The $controller service is used to create instances of controllers\n        var $controller = $injector.get('$controller');\n\n        createController = function() {\n          return $controller('MyController', {'$scope' : $rootScope });\n        };\n      }));\n\n\n      afterEach(function() {\n        $httpBackend.verifyNoOutstandingExpectation();\n        $httpBackend.verifyNoOutstandingRequest();\n      });\n\n\n      it('should fetch authentication token', function() {\n        $httpBackend.expectGET('/auth.py');\n        var controller = createController();\n        $httpBackend.flush();\n      });\n\n\n      it('should fail authentication', function() {\n\n        // Notice how you can change the response even after it was set\n        authRequestHandler.respond(401, '');\n\n        $httpBackend.expectGET('/auth.py');\n        var controller = createController();\n        $httpBackend.flush();\n        expect($rootScope.status).toBe('Failed...');\n      });\n\n\n      it('should send msg to server', function() {\n        var controller = createController();\n        $httpBackend.flush();\n\n        // now you don’t care about the authentication, but\n        // the controller will still send the request and\n        // $httpBackend will respond without you having to\n        // specify the expectation and response for this request\n\n        $httpBackend.expectPOST('/add-msg.py', 'message content').respond(201, '');\n        $rootScope.saveMessage('message content');\n        expect($rootScope.status).toBe('Saving...');\n        $httpBackend.flush();\n        expect($rootScope.status).toBe('');\n      });\n\n\n      it('should send auth header', function() {\n        var controller = createController();\n        $httpBackend.flush();\n\n        $httpBackend.expectPOST('/add-msg.py', undefined, function(headers) {\n          // check if the header was send, if it wasn't the expectation won't\n          // match the request and the test will fail\n          return headers['Authorization'] == 'xxx';\n        }).respond(201, '');\n\n        $rootScope.saveMessage('whatever');\n        $httpBackend.flush();\n      });\n   });\n  ```",
            "line": " bower_components/angular-mocks/angular-mocks.js:905"
        },
        {
            "message": "Missing item type\nGeneral factory function for $httpBackend mock.\nReturns instance for unit testing (when no arguments specified):\n  - passing through is disabled\n  - auto flushing is disabled\n\nReturns instance for e2e testing (when `$delegate` and `$browser` specified):\n  - passing through (delegating request to real backend) is enabled\n  - auto flushing is enabled",
            "line": " bower_components/angular-mocks/angular-mocks.js:1125"
        },
        {
            "message": "Missing item type\nCreates a new backend definition.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1230"
        },
        {
            "message": "Missing item type\nCreates a new backend definition for GET requests. For more info see `when()`.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1277"
        },
        {
            "message": "Missing item type\nCreates a new backend definition for HEAD requests. For more info see `when()`.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1291"
        },
        {
            "message": "Missing item type\nCreates a new backend definition for DELETE requests. For more info see `when()`.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1305"
        },
        {
            "message": "Missing item type\nCreates a new backend definition for POST requests. For more info see `when()`.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1319"
        },
        {
            "message": "Missing item type\nCreates a new backend definition for PUT requests.  For more info see `when()`.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1335"
        },
        {
            "message": "Missing item type\nCreates a new backend definition for JSONP requests. For more info see `when()`.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1351"
        },
        {
            "message": "Missing item type\nCreates a new request expectation.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1366"
        },
        {
            "message": "Missing item type\nCreates a new request expectation for GET requests. For more info see `expect()`.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1406"
        },
        {
            "message": "Missing item type\nCreates a new request expectation for HEAD requests. For more info see `expect()`.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1420"
        },
        {
            "message": "Missing item type\nCreates a new request expectation for DELETE requests. For more info see `expect()`.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1434"
        },
        {
            "message": "Missing item type\nCreates a new request expectation for POST requests. For more info see `expect()`.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1448"
        },
        {
            "message": "Missing item type\nCreates a new request expectation for PUT requests. For more info see `expect()`.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1465"
        },
        {
            "message": "Missing item type\nCreates a new request expectation for PATCH requests. For more info see `expect()`.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1482"
        },
        {
            "message": "Missing item type\nCreates a new request expectation for JSONP requests. For more info see `expect()`.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1499"
        },
        {
            "message": "Missing item type\nFlushes all pending requests using the trained responses.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1514"
        },
        {
            "message": "Missing item type\nVerifies that all of the requests defined via the `expect` api were made. If any of the\nrequests were not made, verifyNoOutstandingExpectation throws an exception.\n\nTypically, you would call this method following each test case that asserts requests using an\n\"afterEach\" clause.\n\n```js\n  afterEach($httpBackend.verifyNoOutstandingExpectation);\n```",
            "line": " bower_components/angular-mocks/angular-mocks.js:1542"
        },
        {
            "message": "Missing item type\nVerifies that there are no outstanding requests that need to be flushed.\n\nTypically, you would call this method following each test case that asserts requests using an\n\"afterEach\" clause.\n\n```js\n  afterEach($httpBackend.verifyNoOutstandingRequest);\n```",
            "line": " bower_components/angular-mocks/angular-mocks.js:1564"
        },
        {
            "message": "Missing item type\nResets all request expectations, but preserves all backend definitions. Typically, you would\ncall resetExpectations during a multiple-phase test when you want to reuse the same instance of\n$httpBackend mock.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1584"
        },
        {
            "message": "Missing item type\nThis service is just a simple decorator for {@link ng.$timeout $timeout} service\nthat adds a \"flush\" and \"verifyNoPendingTasks\" methods.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1711"
        },
        {
            "message": "Missing item type\nFlushes the queue of pending tasks.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1722"
        },
        {
            "message": "Missing item type\nVerifies that there are no pending tasks that need to be flushed.",
            "line": " bower_components/angular-mocks/angular-mocks.js:1735"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-mocks/angular-mocks.js:1803"
        },
        {
            "message": "Missing item type\nA decorator for {@link ng.$controller} with additional `bindings` parameter, useful when testing\ncontrollers of directives that use {@link $compile#-bindtocontroller- `bindToController`}.\n\n\n## Example\n\n```js\n\n// Directive definition ...\n\nmyMod.directive('myDirective', {\n  controller: 'MyDirectiveController',\n  bindToController: {\n    name: '@'\n  }\n});\n\n\n// Controller definition ...\n\nmyMod.controller('MyDirectiveController', ['log', function($log) {\n  $log.info(this.name);\n})];\n\n\n// In a test ...\n\ndescribe('myDirectiveController', function() {\n  it('should write the bound name to the log', inject(function($controller, $log) {\n    var ctrl = $controller('MyDirective', { /* no locals &#42;/ }, { name: 'Clark Kent' });\n    expect(ctrl.name).toEqual('Clark Kent');\n    expect($log.info.logs).toEqual(['Clark Kent']);\n  });\n});\n\n```",
            "line": " bower_components/angular-mocks/angular-mocks.js:1812"
        },
        {
            "message": "Missing item type\n# ngMock\n\nThe `ngMock` module provides support to inject and mock Angular services into unit tests.\nIn addition, ngMock also extends various core ng services such that they can be\ninspected and controlled in a synchronous manner within test code.\n\n\n<div doc-module-components=\"ngMock\"></div>",
            "line": " bower_components/angular-mocks/angular-mocks.js:1883"
        },
        {
            "message": "Missing item type\n*NOTE*: This function is also published on window for easy access.<br>\n*NOTE*: This function is declared ONLY WHEN running tests with jasmine or mocha\n\nThis function registers a module configuration code. It collects the configuration information\nwhich will be used when the injector is created by {@link angular.mock.inject inject}.\n\nSee {@link angular.mock.inject inject} for usage example",
            "line": " bower_components/angular-mocks/angular-mocks.js:2263"
        },
        {
            "message": "Missing item type\n*NOTE*: This function is also published on window for easy access.<br>\n*NOTE*: This function is declared ONLY WHEN running tests with jasmine or mocha\n\nThe inject function wraps a function into an injectable function. The inject() creates new\ninstance of {@link auto.$injector $injector} per test, which is then used for\nresolving references.\n\n\n## Resolving References (Underscore Wrapping)\nOften, we would like to inject a reference once, in a `beforeEach()` block and reuse this\nin multiple `it()` clauses. To be able to do this we must assign the reference to a variable\nthat is declared in the scope of the `describe()` block. Since we would, most likely, want\nthe variable to have the same name of the reference we have a problem, since the parameter\nto the `inject()` function would hide the outer variable.\n\nTo help with this, the injected parameters can, optionally, be enclosed with underscores.\nThese are ignored by the injector when the reference name is resolved.\n\nFor example, the parameter `_myService_` would be resolved as the reference `myService`.\nSince it is available in the function body as _myService_, we can then assign it to a variable\ndefined in an outer scope.\n\n```\n// Defined out reference variable outside\nvar myService;\n\n// Wrap the parameter in underscores\nbeforeEach( inject( function(_myService_){\n  myService = _myService_;\n}));\n\n// Use myService in a series of tests.\nit('makes use of myService', function() {\n  myService.doStuff();\n});\n\n```\n\nSee also {@link angular.mock.module angular.mock.module}\n\n## Example\nExample of what a typical jasmine tests looks like with the inject method.\n```js\n\n  angular.module('myApplicationModule', [])\n      .value('mode', 'app')\n      .value('version', 'v1.0.1');\n\n\n  describe('MyApp', function() {\n\n    // You need to load modules that you want to test,\n    // it loads only the \"ng\" module by default.\n    beforeEach(module('myApplicationModule'));\n\n\n    // inject() is used to inject arguments of all given functions\n    it('should provide a version', inject(function(mode, version) {\n      expect(version).toEqual('v1.0.1');\n      expect(mode).toEqual('app');\n    }));\n\n\n    // The inject and module method can also be used inside of the it or beforeEach\n    it('should override a version and test the new version is injected', function() {\n      // module() takes functions or strings (module aliases)\n      module(function($provide) {\n        $provide.value('version', 'overridden'); // override version here\n      });\n\n      inject(function(version) {\n        expect(version).toEqual('overridden');\n      });\n    });\n  });\n\n```",
            "line": " bower_components/angular-mocks/angular-mocks.js:2306"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-resource/angular-resource.js:1"
        },
        {
            "message": "Missing item type\nCreate a shallow copy of an object and clear other fields from the destination",
            "line": " bower_components/angular-resource/angular-resource.js:32"
        },
        {
            "message": "Missing item type\n# ngResource\n\nThe `ngResource` module provides interaction support with RESTful services\nvia the $resource service.\n\n\n<div doc-module-components=\"ngResource\"></div>\n\nSee {@link ngResource.$resource `$resource`} for usage.",
            "line": " bower_components/angular-resource/angular-resource.js:51"
        },
        {
            "message": "Missing item type\nA factory which creates a resource object that lets you interact with\n[RESTful](http://en.wikipedia.org/wiki/Representational_State_Transfer) server-side data sources.\n\nThe returned resource object has action methods which provide high-level behaviors without\nthe need to interact with the low level {@link ng.$http $http} service.\n\nRequires the {@link ngResource `ngResource`} module to be installed.\n\nBy default, trailing slashes will be stripped from the calculated URLs,\nwhich can pose problems with server backends that do not expect that\nbehavior.  This can be disabled by configuring the `$resourceProvider` like\nthis:\n\n```js\n    app.config(['$resourceProvider', function($resourceProvider) {\n      // Don't strip trailing slashes from calculated URLs\n      $resourceProvider.defaults.stripTrailingSlashes = false;\n    }]);\n```",
            "line": " bower_components/angular-resource/angular-resource.js:67"
        },
        {
            "message": "Missing item type\nWe need our custom method because encodeURIComponent is too aggressive and doesn't follow\nhttp://www.ietf.org/rfc/rfc3986.txt with regards to the character set\n(pchar) allowed in path segments:\n   segment       = *pchar\n   pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n   pct-encoded   = \"%\" HEXDIG HEXDIG\n   unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                    / \"*\" / \"+\" / \",\" / \";\" / \"=\"",
            "line": " bower_components/angular-resource/angular-resource.js:379"
        },
        {
            "message": "Missing item type\nThis method is intended for encoding *key* or *value* parts of query component. We need a\ncustom method because encodeURIComponent is too aggressive and encodes stuff that doesn't\nhave to be encoded per http://tools.ietf.org/html/rfc3986:\n   query       = *( pchar / \"/\" / \"?\" )\n   pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n   unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   pct-encoded   = \"%\" HEXDIG HEXDIG\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                    / \"*\" / \"+\" / \",\" / \";\" / \"=\"",
            "line": " bower_components/angular-resource/angular-resource.js:398"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-route/angular-route.js:1"
        },
        {
            "message": "Missing item type\n# ngRoute\n\nThe `ngRoute` module provides routing and deeplinking services and directives for angular apps.\n\n## Example\nSee {@link ngRoute.$route#example $route} for an example of configuring and using `ngRoute`.\n\n\n<div doc-module-components=\"ngRoute\"></div>",
            "line": " bower_components/angular-route/angular-route.js:8"
        },
        {
            "message": "Missing item type\nUsed for configuring routes.\n\n## Example\nSee {@link ngRoute.$route#example $route} for an example of configuring and using `ngRoute`.\n\n## Dependencies\nRequires the {@link ngRoute `ngRoute`} module to be installed.",
            "line": " bower_components/angular-route/angular-route.js:28"
        },
        {
            "message": "Missing item type\nAdds a new route definition to the `$route` service.",
            "line": " bower_components/angular-route/angular-route.js:49"
        },
        {
            "message": "Missing item type\nA boolean property indicating if routes defined\nusing this provider should be matched using a case insensitive\nalgorithm. Defaults to `false`.",
            "line": " bower_components/angular-route/angular-route.js:177"
        },
        {
            "message": "Missing item type\nNormalizes the given path, returning a regular expression\nand the original path.\n\nInspired by pathRexp in visionmedia/express/lib/utils.js.",
            "line": " bower_components/angular-route/angular-route.js:188"
        },
        {
            "message": "Missing item type\nSets route definition that will be used on route change when no other route definition\nis matched.",
            "line": " bower_components/angular-route/angular-route.js:229"
        },
        {
            "message": "Missing item type\nBroadcasted before a route change. At this  point the route services starts\nresolving all of the dependencies needed for the route change to occur.\nTypically this involves fetching the view template as well as any dependencies\ndefined in `resolve` route property. Once  all of the dependencies are resolved\n`$routeChangeSuccess` is fired.\n\nThe route change (and the `$location` change that triggered it) can be prevented\nby calling `preventDefault` method of the event. See {@link ng.$rootScope.Scope#$on}\nfor more details about event object.",
            "line": " bower_components/angular-route/angular-route.js:390"
        },
        {
            "message": "Missing item type\nBroadcasted after a route dependencies are resolved.\n{@link ngRoute.directive:ngView ngView} listens for the directive\nto instantiate the controller and render the view.",
            "line": " bower_components/angular-route/angular-route.js:410"
        },
        {
            "message": "Missing item type\nBroadcasted if any of the resolve promises are rejected.",
            "line": " bower_components/angular-route/angular-route.js:425"
        },
        {
            "message": "Missing item type\nThe `reloadOnSearch` property has been set to false, and we are reusing the same\ninstance of the Controller.",
            "line": " bower_components/angular-route/angular-route.js:438"
        },
        {
            "message": "Missing item type\nCauses `$route` service to reload the current route even if\n{@link ng.$location $location} hasn't changed.\n\nAs a result of that, {@link ngRoute.directive:ngView ngView}\ncreates new scope and reinstantiates the controller.",
            "line": " bower_components/angular-route/angular-route.js:454"
        },
        {
            "message": "Missing item type\nCauses `$route` service to update the current URL, replacing\ncurrent route parameters with those specified in `newParams`.\nProvided property names that match the route's path segment\ndefinitions will be interpolated into the location's path, while\nremaining properties will be treated as query params.",
            "line": " bower_components/angular-route/angular-route.js:474"
        },
        {
            "message": "Missing item type\nCheck if the route matches the current url.\n\nInspired by match in\nvisionmedia/express/lib/router/router.js.",
            "line": " bower_components/angular-route/angular-route.js:506"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-route/angular-route.js:627"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angular-route/angular-route.js:645"
        },
        {
            "message": "Missing item type\nThe `$routeParams` service allows you to retrieve the current set of route parameters.\n\nRequires the {@link ngRoute `ngRoute`} module to be installed.\n\nThe route parameters are a combination of {@link ng.$location `$location`}'s\n{@link ng.$location#search `search()`} and {@link ng.$location#path `path()`}.\nThe `path` parameters are extracted when the {@link ngRoute.$route `$route`} path is matched.\n\nIn case of parameter name collision, `path` params take precedence over `search` params.\n\nThe service guarantees that the identity of the `$routeParams` object will remain unchanged\n(but its properties will likely change) even when a route change occurs.\n\nNote that the `$routeParams` are only updated *after* a route change completes successfully.\nThis means that you cannot rely on `$routeParams` being correct in route resolve functions.\nInstead you can use `$route.current.params` to access the new route's parameters.",
            "line": " bower_components/angular-route/angular-route.js:669"
        },
        {
            "message": "Missing item type\n# Overview\n`ngView` is a directive that complements the {@link ngRoute.$route $route} service by\nincluding the rendered template of the current route into the main layout (`index.html`) file.\nEvery time the current route changes, the included view changes with it according to the\nconfiguration of the `$route` service.\n\nRequires the {@link ngRoute `ngRoute`} module to be installed.",
            "line": " bower_components/angular-route/angular-route.js:710"
        },
        {
            "message": "Missing item type\nEmitted every time the ngView content is reloaded.",
            "line": " bower_components/angular-route/angular-route.js:876"
        },
        {
            "message": "Missing item type\nangular-ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)",
            "line": " bower_components/angular-ui-utils/ui-utils-ieshiv.js:1"
        },
        {
            "message": "Missing item type\nangular-ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)",
            "line": " bower_components/angular-ui-utils/ui-utils-ieshiv.min.js:1"
        },
        {
            "message": "Missing item type\nangular-ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)",
            "line": " bower_components/angular-ui-utils/ui-utils.js:1"
        },
        {
            "message": "Missing item type\nGeneral-purpose Event binding. Bind any event not natively supported by Angular\nPass an object with keynames for events to ui-event\nAllows $event object and $params object to be passed",
            "line": " bower_components/angular-ui-utils/ui-utils.js:24"
        },
        {
            "message": "Missing item type\nA replacement utility for internationalization very similar to sprintf.",
            "line": " bower_components/angular-ui-utils/ui-utils.js:55"
        },
        {
            "message": "Missing item type\nWraps the",
            "line": " bower_components/angular-ui-utils/ui-utils.js:95"
        },
        {
            "message": "Missing item type\nProvides an easy way to toggle a checkboxes indeterminate property",
            "line": " bower_components/angular-ui-utils/ui-utils.js:188"
        },
        {
            "message": "Missing item type\nConverts variable-esque naming conventions to something presentational, capitalized words separated by space.",
            "line": " bower_components/angular-ui-utils/ui-utils.js:212"
        },
        {
            "message": "Missing item type\nGeneral-purpose jQuery wrapper. Simply pass the plugin name as the expression.\n\nIt is possible to specify a default set of parameters for each jQuery plugin.\nUnder the jq key, namespace each plugin by that which will be passed to ui-jq.\nUnfortunately, at this time you can only pre-define the first parameter.",
            "line": " bower_components/angular-ui-utils/ui-utils.js:261"
        },
        {
            "message": "Missing item type\nBind one or more handlers to particular keys or their combination",
            "line": " bower_components/angular-ui-utils/ui-utils.js:422"
        },
        {
            "message": "Missing item type\nAdd a clear button to form inputs to reset their value",
            "line": " bower_components/angular-ui-utils/ui-utils.js:974"
        },
        {
            "message": "Missing item type\nSet a $uiRoute boolean to see if the current route matches",
            "line": " bower_components/angular-ui-utils/ui-utils.js:1005"
        },
        {
            "message": "Missing item type\nAdds a 'ui-scrollfix' class to the element when the page scrolls past it's position.",
            "line": " bower_components/angular-ui-utils/ui-utils.js:1984"
        },
        {
            "message": "Missing item type\nuiShow Directive\n\nAdds a 'ui-show' class to the element instead of display:block\nCreated to allow tighter control  of CSS without bulkier directives",
            "line": " bower_components/angular-ui-utils/ui-utils.js:2054"
        },
        {
            "message": "Missing item type\nuiHide Directive\n\nAdds a 'ui-hide' class to the element instead of display:block\nCreated to allow tighter control  of CSS without bulkier directives",
            "line": " bower_components/angular-ui-utils/ui-utils.js:2077"
        },
        {
            "message": "Missing item type\nuiToggle Directive\n\nAdds a class 'ui-show' if true, and a 'ui-hide' if false to the element instead of display:block/display:none\nCreated to allow tighter control  of CSS without bulkier directives. This also allows you to override the\ndefault visibility of the element using either class.",
            "line": " bower_components/angular-ui-utils/ui-utils.js:2099"
        },
        {
            "message": "Missing item type\nFilters out all duplicate items from an array by checking the specified key",
            "line": " bower_components/angular-ui-utils/ui-utils.js:2122"
        },
        {
            "message": "Missing item type\nGeneral-purpose validator for ngModel.\nangular.js comes with several built-in validation mechanism for input fields (ngRequired, ngPattern etc.) but using\nan arbitrary validation function requires creation of a custom formatters and / or parsers.\nThe ui-validate directive makes it easy to use any function(s) defined in scope as a validator function(s).\nA validator function will trigger validation on both model and input changes.",
            "line": " bower_components/angular-ui-utils/ui-utils.js:2288"
        },
        {
            "message": "Missing item type\nangular-ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)",
            "line": " bower_components/angular-ui-utils/ui-utils.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-adobe.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-baidu.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-chartbeat.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-debug.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-flurry.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-ga-cordova-google-analytics-plugin.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-ga-cordova.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-ga.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-gtm.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-intercom.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-kissmetrics.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-localytics.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-loggly.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-marketo.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-mixpanel.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-piwik.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-scroll.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-segmentio.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-splunk.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics-woopra.min.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/dist/angulartics.min.js:1"
        },
        {
            "message": "Missing item type\nThese cookie functions are not a global utilities.  It is for purpose of this tracker only",
            "line": " bower_components/angulartics/samples/loggly.tracker.js:101"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-adobe.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-adobe.js:10"
        },
        {
            "message": "Missing item type\nTrack Event in Adobe Analytics",
            "line": " bower_components/angulartics/src/angulartics-adobe.js:24"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-baidu.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-baidu.js:11"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-chartbeat.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-chartbeat.js:10"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-cnzz.js:4"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-debug.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-debug.js:9"
        },
        {
            "message": "Missing item type\nTrack Event",
            "line": " bower_components/angulartics/src/angulartics-debug.js:21"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-flurry.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-flurry.js:11"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-ga-cordova-google-analytics-plugin.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-ga-cordova-google-analytics-plugin.js:9"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-ga-cordova.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-ga-cordova.js:9"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-ga.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-ga.js:10"
        },
        {
            "message": "Missing item type\nTrack Event in GA",
            "line": " bower_components/angulartics/src/angulartics-ga.js:39"
        },
        {
            "message": "Missing item type\n(c) 2015 Jared Dickson https://luisfarzati.github.io/angulartics\nLicense: MIT",
            "line": " bower_components/angulartics/src/angulartics-gtm-cordova.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-gtm-cordova.js:8"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-gtm.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-gtm.js:12"
        },
        {
            "message": "Missing item type\nSend content views to the dataLayer",
            "line": " bower_components/angulartics/src/angulartics-gtm.js:21"
        },
        {
            "message": "Missing item type\nSend interactions to the dataLayer, i.e. for event tracking in Google Analytics",
            "line": " bower_components/angulartics/src/angulartics-gtm.js:35"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-hubspot.js:4"
        },
        {
            "message": "Missing item type\nTrack a page view",
            "line": " bower_components/angulartics/src/angulartics-hubspot.js:14"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-intercom.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-intercom.js:10"
        },
        {
            "message": "Missing item type\nTrack Event in Intercom",
            "line": " bower_components/angulartics/src/angulartics-intercom.js:24"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-kissmetrics.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-kissmetrics.js:9"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-localytics.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-localytics.js:10"
        },
        {
            "message": "Missing item type\nRegister the page tracking function.",
            "line": " bower_components/angulartics/src/angulartics-localytics.js:20"
        },
        {
            "message": "Missing item type\nReigster the Localytics event tracking function with the following parameters:",
            "line": " bower_components/angulartics/src/angulartics-localytics.js:28"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-loggly.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-loggly.js:10"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-marketo.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-marketo.js:10"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-mixpanel.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-mixpanel.js:10"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-piwik.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-piwik.js:10"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-scroll.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-scroll.js:9"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-segmentio.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-segmentio.js:9"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-splunk.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-splunk.js:9"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-woopra.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics-woopra.js:9"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/angulartics/src/angulartics.js:23"
        },
        {
            "message": "Missing item type\nBrings an environment as close to ECMAScript 5 compliance\nas is possible with the facilities of erstwhile engines.\n\nAnnotated ES5: http://es5.github.com/ (specific links below)\nES5 Spec: http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\nRequired reading: http://javascriptweblog.wordpress.com/2011/12/05/extending-javascript-natives/",
            "line": " bower_components/es5-shim/es5-shim.js:31"
        },
        {
            "message": "Missing item type\nCreate key-value caches of limited size",
            "line": " bower_components/jquery/dist/jquery.js:853"
        },
        {
            "message": "Missing item type\nMark a function for special use by Sizzle",
            "line": " bower_components/jquery/dist/jquery.js:873"
        },
        {
            "message": "Missing item type\nSupport testing using an element",
            "line": " bower_components/jquery/dist/jquery.js:882"
        },
        {
            "message": "Missing item type\nAdds the same handler for all of the specified attrs",
            "line": " bower_components/jquery/dist/jquery.js:903"
        },
        {
            "message": "Missing item type\nChecks document order of two siblings",
            "line": " bower_components/jquery/dist/jquery.js:917"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for input types",
            "line": " bower_components/jquery/dist/jquery.js:946"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for buttons",
            "line": " bower_components/jquery/dist/jquery.js:957"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for positionals",
            "line": " bower_components/jquery/dist/jquery.js:968"
        },
        {
            "message": "Missing item type\nChecks a node for validity as a Sizzle context",
            "line": " bower_components/jquery/dist/jquery.js:990"
        },
        {
            "message": "Missing item type\nDetects XML nodes",
            "line": " bower_components/jquery/dist/jquery.js:1002"
        },
        {
            "message": "Missing item type\nSets document-related variables once based on the current document",
            "line": " bower_components/jquery/dist/jquery.js:1014"
        },
        {
            "message": "Missing item type\nDocument sorting and removing duplicates",
            "line": " bower_components/jquery/dist/jquery.js:1456"
        },
        {
            "message": "Missing item type\nUtility function for retrieving the text value of an array of DOM nodes",
            "line": " bower_components/jquery/dist/jquery.js:1489"
        },
        {
            "message": "Missing item type\nA low-level selection function that works with Sizzle's compiled\n selector functions",
            "line": " bower_components/jquery/dist/jquery.js:2462"
        },
        {
            "message": "Missing item type\nThe ready event handler and self cleanup method",
            "line": " bower_components/jquery/dist/jquery.js:3422"
        },
        {
            "message": "Missing item type\nDetermines whether an object can have data",
            "line": " bower_components/jquery/dist/jquery.js:3515"
        },
        {
            "message": "Missing item type\nRetrieve the actual display of a element",
            "line": " bower_components/jquery/dist/jquery.js:5473"
        },
        {
            "message": "Missing item type\nTry to determine the default display value of an element",
            "line": " bower_components/jquery/dist/jquery.js:5497"
        },
        {
            "message": "Missing item type\nLoad a url into a page",
            "line": " bower_components/jquery/dist/jquery.js:8825"
        },
        {
            "message": "Missing item type\nGets a window from an element",
            "line": " bower_components/jquery/dist/jquery.js:8909"
        },
        {
            "message": "Missing item type\nLoad a url into a page",
            "line": " bower_components/jquery/src/ajax/load.js:15"
        },
        {
            "message": "Missing item type\nThe ready event handler and self cleanup method",
            "line": " bower_components/jquery/src/core/ready.js:61"
        },
        {
            "message": "Missing item type\nRetrieve the actual display of a element",
            "line": " bower_components/jquery/src/css/defaultDisplay.js:9"
        },
        {
            "message": "Missing item type\nTry to determine the default display value of an element",
            "line": " bower_components/jquery/src/css/defaultDisplay.js:33"
        },
        {
            "message": "Missing item type\nDetermines whether an object can have data",
            "line": " bower_components/jquery/src/data/accepts.js:5"
        },
        {
            "message": "Missing item type\nCreate key-value caches of limited size",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:305"
        },
        {
            "message": "Missing item type\nMark a function for special use by Sizzle",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:325"
        },
        {
            "message": "Missing item type\nSupport testing using an element",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:334"
        },
        {
            "message": "Missing item type\nAdds the same handler for all of the specified attrs",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:355"
        },
        {
            "message": "Missing item type\nChecks document order of two siblings",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:369"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for input types",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:398"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for buttons",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:409"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for positionals",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:420"
        },
        {
            "message": "Missing item type\nChecks a node for validity as a Sizzle context",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:442"
        },
        {
            "message": "Missing item type\nDetects XML nodes",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:454"
        },
        {
            "message": "Missing item type\nSets document-related variables once based on the current document",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:466"
        },
        {
            "message": "Missing item type\nDocument sorting and removing duplicates",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:908"
        },
        {
            "message": "Missing item type\nUtility function for retrieving the text value of an array of DOM nodes",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:941"
        },
        {
            "message": "Missing item type\nA low-level selection function that works with Sizzle's compiled\n selector functions",
            "line": " bower_components/jquery/src/sizzle/dist/sizzle.js:1914"
        },
        {
            "message": "Missing item type\nGets a window from an element",
            "line": " bower_components/jquery/src/offset.js:17"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:12"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:15"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:18"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:29"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:33"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:37"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:42"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:45"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:48"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:74"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:79"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:85"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:90"
        },
        {
            "message": "Missing item type\nUsed to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\nIn addition to special characters the forward slash is escaped to allow for\neasier `eval` use and `Function` compilation.",
            "line": " bower_components/lodash/lodash.js:95"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:103"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:106"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:109"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:112"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:115"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:118"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:121"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:124"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:127"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:130"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:138"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:150"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:160"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:163"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:178"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:193"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:200"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:221"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:231"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:241"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:247"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:257"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:260"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:263"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:266"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:269"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:272"
        },
        {
            "message": "Missing item type\nUsed as a reference to the global object.\n\nThe `this` value is used if it is the global object to avoid Greasemonkey's\nrestricted `window` object, otherwise the `window` object is used.",
            "line": " bower_components/lodash/lodash.js:275"
        },
        {
            "message": "Missing item type\nThe base implementation of `compareAscending` which compares values and\nsorts them in ascending order without guaranteeing a stable sort.",
            "line": " bower_components/lodash/lodash.js:285"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.findIndex` and `_.findLastIndex` without\nsupport for callback shorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:309"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.indexOf` without support for binary searches.",
            "line": " bower_components/lodash/lodash.js:331"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.isFunction` without support for environments\nwith incorrect `typeof` results.",
            "line": " bower_components/lodash/lodash.js:355"
        },
        {
            "message": "Missing item type\nConverts `value` to a string if it is not one. An empty string is returned\nfor `null` or `undefined` values.",
            "line": " bower_components/lodash/lodash.js:369"
        },
        {
            "message": "Missing item type\nUsed by `_.max` and `_.min` as the default callback for string values.",
            "line": " bower_components/lodash/lodash.js:384"
        },
        {
            "message": "Missing item type\nUsed by `_.trim` and `_.trimLeft` to get the index of the first character\nof `string` that is not found in `chars`.",
            "line": " bower_components/lodash/lodash.js:395"
        },
        {
            "message": "Missing item type\nUsed by `_.trim` and `_.trimRight` to get the index of the last character\nof `string` that is not found in `chars`.",
            "line": " bower_components/lodash/lodash.js:412"
        },
        {
            "message": "Missing item type\nUsed by `_.sortBy` to compare transformed elements of a collection and stable\nsort them in ascending order.",
            "line": " bower_components/lodash/lodash.js:428"
        },
        {
            "message": "Missing item type\nUsed by `_.sortByOrder` to compare multiple properties of each element\nin a collection and stable sort them in the following order:\n\nIf `orders` is unspecified, sort in ascending order for all properties.\nOtherwise, for each property, sort in ascending order if its corresponding value in\norders is true, and descending order if false.",
            "line": " bower_components/lodash/lodash.js:441"
        },
        {
            "message": "Missing item type\nUsed by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.",
            "line": " bower_components/lodash/lodash.js:481"
        },
        {
            "message": "Missing item type\nUsed by `_.escape` to convert characters to HTML entities.",
            "line": " bower_components/lodash/lodash.js:492"
        },
        {
            "message": "Missing item type\nUsed by `_.template` to escape characters for inclusion in compiled\nstring literals.",
            "line": " bower_components/lodash/lodash.js:503"
        },
        {
            "message": "Missing item type\nGets the index at which the first occurrence of `NaN` is found in `array`.",
            "line": " bower_components/lodash/lodash.js:515"
        },
        {
            "message": "Missing item type\nChecks if `value` is object-like.",
            "line": " bower_components/lodash/lodash.js:537"
        },
        {
            "message": "Missing item type\nUsed by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\ncharacter code is whitespace.",
            "line": " bower_components/lodash/lodash.js:548"
        },
        {
            "message": "Missing item type\nReplaces all `placeholder` elements in `array` with an internal placeholder\nand returns an array of their indexes.",
            "line": " bower_components/lodash/lodash.js:561"
        },
        {
            "message": "Missing item type\nAn implementation of `_.uniq` optimized for sorted arrays without support\nfor callback shorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:585"
        },
        {
            "message": "Missing item type\nUsed by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\ncharacter of `string`.",
            "line": " bower_components/lodash/lodash.js:613"
        },
        {
            "message": "Missing item type\nUsed by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\ncharacter of `string`.",
            "line": " bower_components/lodash/lodash.js:629"
        },
        {
            "message": "Missing item type\nUsed by `_.unescape` to convert HTML entities to characters.",
            "line": " bower_components/lodash/lodash.js:644"
        },
        {
            "message": "Missing item type\nCreate a new pristine `lodash` function using the given `context` object.",
            "line": " bower_components/lodash/lodash.js:657"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:699"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:711"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:716"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:719"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:722"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:725"
        },
        {
            "message": "Missing item type\nUsed to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\nof values.",
            "line": " bower_components/lodash/lodash.js:728"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:734"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:737"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:743"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:760"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:772"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:800"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:804"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:809"
        },
        {
            "message": "Missing item type\nUsed as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\nof an array-like value.",
            "line": " bower_components/lodash/lodash.js:812"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:818"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.js:821"
        },
        {
            "message": "Missing item type\nCreates a `lodash` object which wraps `value` to enable implicit chaining.\nMethods that operate on and return arrays, collections, and functions can\nbe chained together. Methods that return a boolean or single value will\nautomatically end the chain returning the unwrapped value. Explicit chaining\nmay be enabled using `_.chain`. The execution of chained methods is lazy,\nthat is, execution is deferred until `_#value` is implicitly or explicitly\ncalled.\n\nLazy evaluation allows several methods to support shortcut fusion. Shortcut\nfusion is an optimization that merges iteratees to avoid creating intermediate\narrays and reduce the number of iteratee executions.\n\nChaining is supported in custom builds as long as the `_#value` method is\ndirectly or indirectly included in the build.\n\nIn addition to lodash methods, wrappers have `Array` and `String` methods.\n\nThe wrapper `Array` methods are:\n`concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n`splice`, and `unshift`\n\nThe wrapper `String` methods are:\n`replace` and `split`\n\nThe wrapper methods that support shortcut fusion are:\n`compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n`first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n`slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\nand `where`\n\nThe chainable wrapper methods are:\n`after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n`callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n`countBy`, `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`,\n`difference`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `fill`,\n`filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`, `forEach`,\n`forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `functions`,\n`groupBy`, `indexBy`, `initial`, `intersection`, `invert`, `invoke`, `keys`,\n`keysIn`, `map`, `mapValues`, `matches`, `matchesProperty`, `memoize`,\n`merge`, `mixin`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n`partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n`pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `reverse`,\n`shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`, `sortByOrder`, `splice`,\n`spread`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`,\n`throttle`, `thru`, `times`, `toArray`, `toPlainObject`, `transform`,\n`union`, `uniq`, `unshift`, `unzip`, `values`, `valuesIn`, `where`,\n`without`, `wrap`, `xor`, `zip`, and `zipObject`\n\nThe wrapper methods that are **not** chainable by default are:\n`add`, `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n`endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n`findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `has`,\n`identity`, `includes`, `indexOf`, `inRange`, `isArguments`, `isArray`,\n`isBoolean`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`, `isFinite`\n`isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`,\n`isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `isTypedArray`,\n`join`, `kebabCase`, `last`, `lastIndexOf`, `max`, `min`, `noConflict`,\n`noop`, `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`,\n`reduce`, `reduceRight`, `repeat`, `result`, `runInContext`, `shift`, `size`,\n`snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`, `startsWith`,\n`sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`, `unescape`,\n`uniqueId`, `value`, and `words`\n\nThe wrapper method `sample` will return a wrapped value when `n` is provided,\notherwise an unwrapped value is returned.",
            "line": " bower_components/lodash/lodash.js:826"
        },
        {
            "message": "Missing item type\nThe function whose prototype all chaining wrappers inherit from.",
            "line": " bower_components/lodash/lodash.js:931"
        },
        {
            "message": "Missing item type\nThe base constructor for creating `lodash` wrapper objects.",
            "line": " bower_components/lodash/lodash.js:940"
        },
        {
            "message": "Missing item type\nAn object environment feature flags.",
            "line": " bower_components/lodash/lodash.js:954"
        },
        {
            "message": "Missing item type\nDetect if functions can be decompiled by `Function#toString`\n(all but Firefox OS certified apps, older Opera mobile browsers, and\nthe PlayStation 3; forced `false` for Windows 8 apps).",
            "line": " bower_components/lodash/lodash.js:971"
        },
        {
            "message": "Missing item type\nDetect if `Function#name` is supported (all but IE).",
            "line": " bower_components/lodash/lodash.js:981"
        },
        {
            "message": "Missing item type\nDetect if the DOM is supported.",
            "line": " bower_components/lodash/lodash.js:989"
        },
        {
            "message": "Missing item type\nDetect if `arguments` object indexes are non-enumerable.\n\nIn Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\nindexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n`arguments` object indexes as non-enumerable and fail `hasOwnProperty`\nchecks for indexes that exceed the number of function parameters and\nwhose associated argument values are `0`.",
            "line": " bower_components/lodash/lodash.js:1001"
        },
        {
            "message": "Missing item type\nBy default, the template delimiters used by lodash are like those in\nembedded Ruby (ERB). Change the following template settings to use\nalternative delimiters.",
            "line": " bower_components/lodash/lodash.js:1020"
        },
        {
            "message": "Missing item type\nUsed to detect `data` property values to be HTML-escaped.",
            "line": " bower_components/lodash/lodash.js:1031"
        },
        {
            "message": "Missing item type\nUsed to detect code to be evaluated.",
            "line": " bower_components/lodash/lodash.js:1039"
        },
        {
            "message": "Missing item type\nUsed to detect `data` property values to inject.",
            "line": " bower_components/lodash/lodash.js:1047"
        },
        {
            "message": "Missing item type\nUsed to reference the data object in the template text.",
            "line": " bower_components/lodash/lodash.js:1055"
        },
        {
            "message": "Missing item type\nUsed to import variables into the compiled template.",
            "line": " bower_components/lodash/lodash.js:1063"
        },
        {
            "message": "Missing item type\nA reference to the `lodash` function.",
            "line": " bower_components/lodash/lodash.js:1071"
        },
        {
            "message": "Missing item type\nCreates a lazy wrapper object which wraps `value` to enable lazy evaluation.",
            "line": " bower_components/lodash/lodash.js:1083"
        },
        {
            "message": "Missing item type\nCreates a clone of the lazy wrapper object.",
            "line": " bower_components/lodash/lodash.js:1100"
        },
        {
            "message": "Missing item type\nReverses the direction of lazy iteration.",
            "line": " bower_components/lodash/lodash.js:1123"
        },
        {
            "message": "Missing item type\nExtracts the unwrapped value from its lazy wrapper.",
            "line": " bower_components/lodash/lodash.js:1143"
        },
        {
            "message": "Missing item type\nCreates a cache object to store key/value pairs.",
            "line": " bower_components/lodash/lodash.js:1213"
        },
        {
            "message": "Missing item type\nRemoves `key` and its value from the cache.",
            "line": " bower_components/lodash/lodash.js:1225"
        },
        {
            "message": "Missing item type\nGets the cached value for `key`.",
            "line": " bower_components/lodash/lodash.js:1238"
        },
        {
            "message": "Missing item type\nChecks if a cached value for `key` exists.",
            "line": " bower_components/lodash/lodash.js:1251"
        },
        {
            "message": "Missing item type\nSets `value` to `key` of the cache.",
            "line": " bower_components/lodash/lodash.js:1264"
        },
        {
            "message": "Missing item type\nCreates a cache object to store unique values.",
            "line": " bower_components/lodash/lodash.js:1283"
        },
        {
            "message": "Missing item type\nChecks if `value` is in `cache` mimicking the return signature of\n`_.indexOf` by returning `0` if the value is found, else `-1`.",
            "line": " bower_components/lodash/lodash.js:1299"
        },
        {
            "message": "Missing item type\nAdds `value` to the cache.",
            "line": " bower_components/lodash/lodash.js:1315"
        },
        {
            "message": "Missing item type\nCopies the values of `source` to `array`.",
            "line": " bower_components/lodash/lodash.js:1334"
        },
        {
            "message": "Missing item type\nA specialized version of `_.forEach` for arrays without support for callback\nshorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:1353"
        },
        {
            "message": "Missing item type\nA specialized version of `_.forEachRight` for arrays without support for\ncallback shorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:1374"
        },
        {
            "message": "Missing item type\nA specialized version of `_.every` for arrays without support for callback\nshorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:1394"
        },
        {
            "message": "Missing item type\nA specialized version of `_.filter` for arrays without support for callback\nshorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:1416"
        },
        {
            "message": "Missing item type\nA specialized version of `_.map` for arrays without support for callback\nshorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:1440"
        },
        {
            "message": "Missing item type\nA specialized version of `_.max` for arrays without support for iteratees.",
            "line": " bower_components/lodash/lodash.js:1460"
        },
        {
            "message": "Missing item type\nA specialized version of `_.min` for arrays without support for iteratees.",
            "line": " bower_components/lodash/lodash.js:1481"
        },
        {
            "message": "Missing item type\nA specialized version of `_.reduce` for arrays without support for callback\nshorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:1502"
        },
        {
            "message": "Missing item type\nA specialized version of `_.reduceRight` for arrays without support for\ncallback shorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:1527"
        },
        {
            "message": "Missing item type\nA specialized version of `_.some` for arrays without support for callback\nshorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:1550"
        },
        {
            "message": "Missing item type\nA specialized version of `_.sum` for arrays without support for iteratees.",
            "line": " bower_components/lodash/lodash.js:1572"
        },
        {
            "message": "Missing item type\nUsed by `_.defaults` to customize its `_.assign` use.",
            "line": " bower_components/lodash/lodash.js:1589"
        },
        {
            "message": "Missing item type\nUsed by `_.template` to customize its `_.assign` use.\n\n**Note:** This function is like `assignDefaults` except that it ignores\ninherited property values when checking if a property is `undefined`.",
            "line": " bower_components/lodash/lodash.js:1601"
        },
        {
            "message": "Missing item type\nA specialized version of `_.assign` for customizing assigned values without\nsupport for argument juggling, multiple sources, and `this` binding `customizer`\nfunctions.",
            "line": " bower_components/lodash/lodash.js:1620"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.assign` without support for argument juggling,\nmultiple sources, and `customizer` functions.",
            "line": " bower_components/lodash/lodash.js:1651"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.at` without support for string collections\nand individual key arguments.",
            "line": " bower_components/lodash/lodash.js:1666"
        },
        {
            "message": "Missing item type\nCopies properties of `source` to `object`.",
            "line": " bower_components/lodash/lodash.js:1693"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.callback` which supports specifying the\nnumber of arguments to provide to `func`.",
            "line": " bower_components/lodash/lodash.js:1715"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.clone` without support for argument juggling\nand `this` binding `customizer` functions.",
            "line": " bower_components/lodash/lodash.js:1743"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.create` without support for assigning\nproperties to the created object.",
            "line": " bower_components/lodash/lodash.js:1810"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.delay` and `_.defer` which accepts an index\nof where to slice the arguments to provide to `func`.",
            "line": " bower_components/lodash/lodash.js:1830"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.difference` which accepts a single array\nof values to exclude.",
            "line": " bower_components/lodash/lodash.js:1847"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.forEach` without support for callback\nshorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:1894"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.forEachRight` without support for callback\nshorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:1905"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.every` without support for callback\nshorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:1916"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.fill` without an iteratee call guard.",
            "line": " bower_components/lodash/lodash.js:1935"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.filter` without support for callback\nshorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:1965"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\nwithout support for callback shorthands and `this` binding, which iterates\nover `collection` using the provided `eachFunc`.",
            "line": " bower_components/lodash/lodash.js:1984"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.flatten` with added support for restricting\nflattening and specifying the start index.",
            "line": " bower_components/lodash/lodash.js:2008"
        },
        {
            "message": "Missing item type\nThe base implementation of `baseForIn` and `baseForOwn` which iterates\nover `object` properties returned by `keysFunc` invoking `iteratee` for\neach property. Iteratee functions may exit iteration early by explicitly\nreturning `false`.",
            "line": " bower_components/lodash/lodash.js:2046"
        },
        {
            "message": "Missing item type\nThis function is like `baseFor` except that it iterates over properties\nin the opposite order.",
            "line": " bower_components/lodash/lodash.js:2060"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.forIn` without support for callback\nshorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:2072"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.forOwn` without support for callback\nshorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:2085"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.forOwnRight` without support for callback\nshorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:2098"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.functions` which creates an array of\n`object` function property names filtered from those provided.",
            "line": " bower_components/lodash/lodash.js:2111"
        },
        {
            "message": "Missing item type\nThe base implementation of `get` without support for string paths\nand default values.",
            "line": " bower_components/lodash/lodash.js:2135"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.isEqual` without support for `this` binding\n`customizer` functions.",
            "line": " bower_components/lodash/lodash.js:2161"
        },
        {
            "message": "Missing item type\nA specialized version of `baseIsEqual` for arrays and objects which performs\ndeep comparisons and tracks traversed objects enabling objects with circular\nreferences to be compared.",
            "line": " bower_components/lodash/lodash.js:2192"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.isMatch` without support for callback\nshorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:2270"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.map` without support for callback shorthands\nand `this` binding.",
            "line": " bower_components/lodash/lodash.js:2316"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.matches` which does not clone `source`.",
            "line": " bower_components/lodash/lodash.js:2336"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.matchesProperty` which does not which does\nnot clone `value`.",
            "line": " bower_components/lodash/lodash.js:2376"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.merge` without support for argument juggling,\nmultiple sources, and `this` binding `customizer` functions.",
            "line": " bower_components/lodash/lodash.js:2411"
        },
        {
            "message": "Missing item type\nA specialized version of `baseMerge` for arrays and objects which performs\ndeep merges and tracks traversed objects enabling objects with circular\nreferences to be merged.",
            "line": " bower_components/lodash/lodash.js:2459"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.property` without support for deep paths.",
            "line": " bower_components/lodash/lodash.js:2517"
        },
        {
            "message": "Missing item type\nA specialized version of `baseProperty` which supports deep paths.",
            "line": " bower_components/lodash/lodash.js:2530"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.pullAt` without support for individual\nindex arguments and capturing the removed elements.",
            "line": " bower_components/lodash/lodash.js:2545"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.random` without support for argument juggling\nand returning floating-point numbers.",
            "line": " bower_components/lodash/lodash.js:2566"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.reduce` and `_.reduceRight` without support\nfor callback shorthands and `this` binding, which iterates over `collection`\nusing the provided `eachFunc`.",
            "line": " bower_components/lodash/lodash.js:2579"
        },
        {
            "message": "Missing item type\nThe base implementation of `setData` without support for hot loop detection.",
            "line": " bower_components/lodash/lodash.js:2602"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.slice` without an iteratee call guard.",
            "line": " bower_components/lodash/lodash.js:2615"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.some` without support for callback shorthands\nand `this` binding.",
            "line": " bower_components/lodash/lodash.js:2646"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.sortBy` which uses `comparer` to define\nthe sort order of `array` and replaces criteria objects with their\ncorresponding values.",
            "line": " bower_components/lodash/lodash.js:2666"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.sortByOrder` without param guards.",
            "line": " bower_components/lodash/lodash.js:2686"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.sum` without support for callback shorthands\nand `this` binding.",
            "line": " bower_components/lodash/lodash.js:2711"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.uniq` without support for callback shorthands\nand `this` binding.",
            "line": " bower_components/lodash/lodash.js:2728"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.values` and `_.valuesIn` which creates an\narray of `object` property values corresponding to the property names\nof `props`.",
            "line": " bower_components/lodash/lodash.js:2780"
        },
        {
            "message": "Missing item type\nThe base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\nand `_.takeWhile` without support for callback shorthands and `this` binding.",
            "line": " bower_components/lodash/lodash.js:2801"
        },
        {
            "message": "Missing item type\nThe base implementation of `wrapperValue` which returns the result of\nperforming a sequence of actions on the unwrapped `value`, where each\nsuccessive action is supplied the return value of the previous.",
            "line": " bower_components/lodash/lodash.js:2822"
        },
        {
            "message": "Missing item type\nPerforms a binary search of `array` to determine the index at which `value`\nshould be inserted into `array` in order to maintain its sort order.",
            "line": " bower_components/lodash/lodash.js:2850"
        },
        {
            "message": "Missing item type\nThis function is like `binaryIndex` except that it invokes `iteratee` for\n`value` and each element of `array` to compute their sort ranking. The\niteratee is invoked with one argument; (value).",
            "line": " bower_components/lodash/lodash.js:2881"
        },
        {
            "message": "Missing item type\nA specialized version of `baseCallback` which only supports `this` binding\nand specifying the number of arguments to provide to `func`.",
            "line": " bower_components/lodash/lodash.js:2923"
        },
        {
            "message": "Missing item type\nCreates a clone of the given array buffer.",
            "line": " bower_components/lodash/lodash.js:2959"
        },
        {
            "message": "Missing item type\nCreates an array that is the composition of partially applied arguments,\nplaceholders, and provided arguments into a single array of arguments.",
            "line": " bower_components/lodash/lodash.js:2989"
        },
        {
            "message": "Missing item type\nThis function is like `composeArgs` except that the arguments composition\nis tailored for `_.partialRight`.",
            "line": " bower_components/lodash/lodash.js:3019"
        },
        {
            "message": "Missing item type\nCreates a function that aggregates a collection, creating an accumulator\nobject composed from the results of running each element in the collection\nthrough an iteratee.\n\n**Note:** This function is used to create `_.countBy`, `_.groupBy`, `_.indexBy`,\nand `_.partition`.",
            "line": " bower_components/lodash/lodash.js:3051"
        },
        {
            "message": "Missing item type\nCreates a function that assigns properties of source object(s) to a given\ndestination object.\n\n**Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.",
            "line": " bower_components/lodash/lodash.js:3086"
        },
        {
            "message": "Missing item type\nCreates a `baseEach` or `baseEachRight` function.",
            "line": " bower_components/lodash/lodash.js:3125"
        },
        {
            "message": "Missing item type\nCreates a base function for `_.forIn` or `_.forInRight`.",
            "line": " bower_components/lodash/lodash.js:3151"
        },
        {
            "message": "Missing item type\nCreates a function that wraps `func` and invokes it with the `this`\nbinding of `thisArg`.",
            "line": " bower_components/lodash/lodash.js:3175"
        },
        {
            "message": "Missing item type\nCreates a `Set` cache object to optimize linear searches of large arrays.",
            "line": " bower_components/lodash/lodash.js:3194"
        },
        {
            "message": "Missing item type\nCreates a function that produces compound words out of the words in a\ngiven string.",
            "line": " bower_components/lodash/lodash.js:3205"
        },
        {
            "message": "Missing item type\nCreates a function that produces an instance of `Ctor` regardless of\nwhether it was invoked as part of a `new` expression or by `call` or `apply`.",
            "line": " bower_components/lodash/lodash.js:3227"
        },
        {
            "message": "Missing item type\nCreates a `_.curry` or `_.curryRight` function.",
            "line": " bower_components/lodash/lodash.js:3246"
        },
        {
            "message": "Missing item type\nCreates a `_.max` or `_.min` function.",
            "line": " bower_components/lodash/lodash.js:3265"
        },
        {
            "message": "Missing item type\nCreates a `_.find` or `_.findLast` function.",
            "line": " bower_components/lodash/lodash.js:3298"
        },
        {
            "message": "Missing item type\nCreates a `_.findIndex` or `_.findLastIndex` function.",
            "line": " bower_components/lodash/lodash.js:3317"
        },
        {
            "message": "Missing item type\nCreates a `_.findKey` or `_.findLastKey` function.",
            "line": " bower_components/lodash/lodash.js:3334"
        },
        {
            "message": "Missing item type\nCreates a `_.flow` or `_.flowRight` function.",
            "line": " bower_components/lodash/lodash.js:3348"
        },
        {
            "message": "Missing item type\nCreates a function for `_.forEach` or `_.forEachRight`.",
            "line": " bower_components/lodash/lodash.js:3402"
        },
        {
            "message": "Missing item type\nCreates a function for `_.forIn` or `_.forInRight`.",
            "line": " bower_components/lodash/lodash.js:3418"
        },
        {
            "message": "Missing item type\nCreates a function for `_.forOwn` or `_.forOwnRight`.",
            "line": " bower_components/lodash/lodash.js:3434"
        },
        {
            "message": "Missing item type\nCreates a function for `_.padLeft` or `_.padRight`.",
            "line": " bower_components/lodash/lodash.js:3450"
        },
        {
            "message": "Missing item type\nCreates a `_.partial` or `_.partialRight` function.",
            "line": " bower_components/lodash/lodash.js:3464"
        },
        {
            "message": "Missing item type\nCreates a function for `_.reduce` or `_.reduceRight`.",
            "line": " bower_components/lodash/lodash.js:3479"
        },
        {
            "message": "Missing item type\nCreates a function that wraps `func` and invokes it with optional `this`\nbinding of, partial application, and currying.",
            "line": " bower_components/lodash/lodash.js:3496"
        },
        {
            "message": "Missing item type\nCreates the padding required for `string` based on the given `length`.\nThe `chars` string is truncated if the number of characters exceeds `length`.",
            "line": " bower_components/lodash/lodash.js:3585"
        },
        {
            "message": "Missing item type\nCreates a function that wraps `func` and invokes it with the optional `this`\nbinding of `thisArg` and the `partials` prepended to those provided to\nthe wrapper.",
            "line": " bower_components/lodash/lodash.js:3607"
        },
        {
            "message": "Missing item type\nCreates a `_.sortedIndex` or `_.sortedLastIndex` function.",
            "line": " bower_components/lodash/lodash.js:3644"
        },
        {
            "message": "Missing item type\nCreates a function that either curries or invokes `func` with optional\n`this` binding and partially applied arguments.",
            "line": " bower_components/lodash/lodash.js:3660"
        },
        {
            "message": "Missing item type\nA specialized version of `baseIsEqualDeep` for arrays with support for\npartial deep comparisons.",
            "line": " bower_components/lodash/lodash.js:3725"
        },
        {
            "message": "Missing item type\nA specialized version of `baseIsEqualDeep` for comparing objects of\nthe same `toStringTag`.\n\n**Note:** This function only supports comparing values with tags of\n`Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.",
            "line": " bower_components/lodash/lodash.js:3778"
        },
        {
            "message": "Missing item type\nA specialized version of `baseIsEqualDeep` for objects with support for\npartial deep comparisons.",
            "line": " bower_components/lodash/lodash.js:3818"
        },
        {
            "message": "Missing item type\nGets the extremum value of `collection` invoking `iteratee` for each value\nin `collection` to generate the criterion by which the value is ranked.\nThe `iteratee` is invoked with three arguments: (value, index, collection).",
            "line": " bower_components/lodash/lodash.js:3883"
        },
        {
            "message": "Missing item type\nGets the appropriate \"callback\" function. If the `_.callback` method is\ncustomized this function returns the custom method, otherwise it returns\nthe `baseCallback` function. If arguments are provided the chosen function\nis invoked with them and its result is returned.",
            "line": " bower_components/lodash/lodash.js:3911"
        },
        {
            "message": "Missing item type\nGets metadata for `func`.",
            "line": " bower_components/lodash/lodash.js:3926"
        },
        {
            "message": "Missing item type\nGets the name of `func`.",
            "line": " bower_components/lodash/lodash.js:3937"
        },
        {
            "message": "Missing item type\nGets the appropriate \"indexOf\" function. If the `_.indexOf` method is\ncustomized this function returns the custom method, otherwise it returns\nthe `baseIndexOf` function. If arguments are provided the chosen function\nis invoked with them and its result is returned.",
            "line": " bower_components/lodash/lodash.js:3968"
        },
        {
            "message": "Missing item type\nGets the \"length\" property value of `object`.\n\n**Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\nin Safari on iOS 8.1 ARM64.",
            "line": " bower_components/lodash/lodash.js:3983"
        },
        {
            "message": "Missing item type\nCreates an array of the own symbols of `object`.",
            "line": " bower_components/lodash/lodash.js:3995"
        },
        {
            "message": "Missing item type\nGets the view, applying any `transforms` to the `start` and `end` positions.",
            "line": " bower_components/lodash/lodash.js:4006"
        },
        {
            "message": "Missing item type\nInitializes an array clone.",
            "line": " bower_components/lodash/lodash.js:4034"
        },
        {
            "message": "Missing item type\nInitializes an object clone.",
            "line": " bower_components/lodash/lodash.js:4053"
        },
        {
            "message": "Missing item type\nInitializes an object clone based on its `toStringTag`.\n\n**Note:** This function only supports cloning values with tags of\n`Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.",
            "line": " bower_components/lodash/lodash.js:4068"
        },
        {
            "message": "Missing item type\nInvokes the method at `path` on `object`.",
            "line": " bower_components/lodash/lodash.js:4107"
        },
        {
            "message": "Missing item type\nChecks if `value` is a valid array-like index.",
            "line": " bower_components/lodash/lodash.js:4126"
        },
        {
            "message": "Missing item type\nChecks if the provided arguments are from an iteratee call.",
            "line": " bower_components/lodash/lodash.js:4140"
        },
        {
            "message": "Missing item type\nChecks if `value` is a property name and not a property path.",
            "line": " bower_components/lodash/lodash.js:4167"
        },
        {
            "message": "Missing item type\nChecks if `func` has a lazy counterpart.",
            "line": " bower_components/lodash/lodash.js:4187"
        },
        {
            "message": "Missing item type\nChecks if `value` is a valid array-like length.\n\n**Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).",
            "line": " bower_components/lodash/lodash.js:4199"
        },
        {
            "message": "Missing item type\nChecks if `value` is suitable for strict equality comparisons, i.e. `===`.",
            "line": " bower_components/lodash/lodash.js:4212"
        },
        {
            "message": "Missing item type\nMerges the function metadata of `source` into `data`.\n\nMerging metadata reduces the number of wrappers required to invoke a function.\nThis is possible because methods like `_.bind`, `_.curry`, and `_.partial`\nmay be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\naugment function arguments, making the order in which they are executed important,\npreventing the merging of metadata. However, we make an exception for a safe\ncommon case where curried functions have `_.ary` and or `_.rearg` applied.",
            "line": " bower_components/lodash/lodash.js:4224"
        },
        {
            "message": "Missing item type\nA specialized version of `_.pick` that picks `object` properties specified\nby `props`.",
            "line": " bower_components/lodash/lodash.js:4294"
        },
        {
            "message": "Missing item type\nA specialized version of `_.pick` that picks `object` properties `predicate`\nreturns truthy for.",
            "line": " bower_components/lodash/lodash.js:4319"
        },
        {
            "message": "Missing item type\nReorder `array` according to the specified indexes where the element at\nthe first index is assigned as the first element, the element at\nthe second index is assigned as the second element, and so on.",
            "line": " bower_components/lodash/lodash.js:4338"
        },
        {
            "message": "Missing item type\nSets metadata for `func`.\n\n**Note:** If this function becomes hot, i.e. is invoked a lot in a short\nperiod of time, it will trip its breaker and transition to an identity function\nto avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\nfor more details.",
            "line": " bower_components/lodash/lodash.js:4360"
        },
        {
            "message": "Missing item type\nA fallback implementation of `_.isPlainObject` which checks if `value`\nis an object created by the `Object` constructor or has a `[[Prototype]]`\nof `null`.",
            "line": " bower_components/lodash/lodash.js:4393"
        },
        {
            "message": "Missing item type\nA fallback implementation of `Object.keys` which creates an array of the\nown enumerable property names of `object`.",
            "line": " bower_components/lodash/lodash.js:4425"
        },
        {
            "message": "Missing item type\nConverts `value` to an array-like object if it is not one.",
            "line": " bower_components/lodash/lodash.js:4454"
        },
        {
            "message": "Missing item type\nConverts `value` to an object if it is not one.",
            "line": " bower_components/lodash/lodash.js:4471"
        },
        {
            "message": "Missing item type\nConverts `value` to property path array if it is not one.",
            "line": " bower_components/lodash/lodash.js:4482"
        },
        {
            "message": "Missing item type\nCreates a clone of `wrapper`.",
            "line": " bower_components/lodash/lodash.js:4500"
        },
        {
            "message": "Missing item type\nCreates an array of elements split into groups the length of `size`.\nIf `collection` can't be split evenly, the final chunk will be the remaining\nelements.",
            "line": " bower_components/lodash/lodash.js:4515"
        },
        {
            "message": "Missing item type\nCreates an array with all falsey values removed. The values `false`, `null`,\n`0`, `\"\"`, `undefined`, and `NaN` are falsey.",
            "line": " bower_components/lodash/lodash.js:4552"
        },
        {
            "message": "Missing item type\nCreates an array excluding all values of the provided arrays using\n`SameValueZero` for equality comparisons.\n\n**Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\ncomparisons are like strict equality comparisons, e.g. `===`, except that\n`NaN` matches `NaN`.",
            "line": " bower_components/lodash/lodash.js:4581"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` with `n` elements dropped from the beginning.",
            "line": " bower_components/lodash/lodash.js:4606"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` with `n` elements dropped from the end.",
            "line": " bower_components/lodash/lodash.js:4641"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` excluding elements dropped from the end.\nElements are dropped until `predicate` returns falsey. The predicate is\nbound to `thisArg` and invoked with three arguments: (value, index, array).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that match the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:4677"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` excluding elements dropped from the beginning.\nElements are dropped until `predicate` returns falsey. The predicate is\nbound to `thisArg` and invoked with three arguments: (value, index, array).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:4732"
        },
        {
            "message": "Missing item type\nFills elements of `array` with `value` from `start` up to, but not\nincluding, `end`.\n\n**Note:** This method mutates `array`.",
            "line": " bower_components/lodash/lodash.js:4787"
        },
        {
            "message": "Missing item type\nThis method is like `_.find` except that it returns the index of the first\nelement `predicate` returns truthy for instead of the element itself.\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:4827"
        },
        {
            "message": "Missing item type\nThis method is like `_.findIndex` except that it iterates over elements\nof `collection` from right to left.\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:4877"
        },
        {
            "message": "Missing item type\nGets the first element of `array`.",
            "line": " bower_components/lodash/lodash.js:4927"
        },
        {
            "message": "Missing item type\nFlattens a nested array. If `isDeep` is `true` the array is recursively\nflattened, otherwise it is only flattened a single level.",
            "line": " bower_components/lodash/lodash.js:4948"
        },
        {
            "message": "Missing item type\nRecursively flattens a nested array.",
            "line": " bower_components/lodash/lodash.js:4976"
        },
        {
            "message": "Missing item type\nGets the index at which the first occurrence of `value` is found in `array`\nusing `SameValueZero` for equality comparisons. If `fromIndex` is negative,\nit is used as the offset from the end of `array`. If `array` is sorted\nproviding `true` for `fromIndex` performs a faster binary search.\n\n**Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\ncomparisons are like strict equality comparisons, e.g. `===`, except that\n`NaN` matches `NaN`.",
            "line": " bower_components/lodash/lodash.js:4994"
        },
        {
            "message": "Missing item type\nGets all but the last element of `array`.",
            "line": " bower_components/lodash/lodash.js:5044"
        },
        {
            "message": "Missing item type\nCreates an array of unique values in all provided arrays using `SameValueZero`\nfor equality comparisons.\n\n**Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\ncomparisons are like strict equality comparisons, e.g. `===`, except that\n`NaN` matches `NaN`.",
            "line": " bower_components/lodash/lodash.js:5061"
        },
        {
            "message": "Missing item type\nGets the last element of `array`.",
            "line": " bower_components/lodash/lodash.js:5123"
        },
        {
            "message": "Missing item type\nThis method is like `_.indexOf` except that it iterates over elements of\n`array` from right to left.",
            "line": " bower_components/lodash/lodash.js:5141"
        },
        {
            "message": "Missing item type\nRemoves all provided values from `array` using `SameValueZero` for equality\ncomparisons.\n\n**Notes:**\n - Unlike `_.without`, this method mutates `array`\n - [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n   comparisons are like strict equality comparisons, e.g. `===`, except\n   that `NaN` matches `NaN`",
            "line": " bower_components/lodash/lodash.js:5193"
        },
        {
            "message": "Missing item type\nRemoves elements from `array` corresponding to the given indexes and returns\nan array of the removed elements. Indexes may be specified as an array of\nindexes or as individual arguments.\n\n**Note:** Unlike `_.at`, this method mutates `array`.",
            "line": " bower_components/lodash/lodash.js:5239"
        },
        {
            "message": "Missing item type\nRemoves all elements from `array` that `predicate` returns truthy for\nand returns an array of the removed elements. The predicate is bound to\n`thisArg` and invoked with three arguments: (value, index, array).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.\n\n**Note:** Unlike `_.filter`, this method mutates `array`.",
            "line": " bower_components/lodash/lodash.js:5273"
        },
        {
            "message": "Missing item type\nGets all but the first element of `array`.",
            "line": " bower_components/lodash/lodash.js:5333"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` from `start` up to, but not including, `end`.\n\n**Note:** This method is used instead of `Array#slice` to support node\nlists in IE < 9 and to ensure dense arrays are returned.",
            "line": " bower_components/lodash/lodash.js:5351"
        },
        {
            "message": "Missing item type\nUses a binary search to determine the lowest index at which `value` should\nbe inserted into `array` in order to maintain its sort order. If an iteratee\nfunction is provided it is invoked for `value` and each element of `array`\nto compute their sort ranking. The iteratee is bound to `thisArg` and\ninvoked with one argument; (value).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:5377"
        },
        {
            "message": "Missing item type\nThis method is like `_.sortedIndex` except that it returns the highest\nindex at which `value` should be inserted into `array` in order to\nmaintain its sort order.",
            "line": " bower_components/lodash/lodash.js:5427"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` with `n` elements taken from the beginning.",
            "line": " bower_components/lodash/lodash.js:5449"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` with `n` elements taken from the end.",
            "line": " bower_components/lodash/lodash.js:5484"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` with elements taken from the end. Elements are\ntaken until `predicate` returns falsey. The predicate is bound to `thisArg`\nand invoked with three arguments: (value, index, array).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:5520"
        },
        {
            "message": "Missing item type\nCreates a slice of `array` with elements taken from the beginning. Elements\nare taken until `predicate` returns falsey. The predicate is bound to\n`thisArg` and invoked with three arguments: (value, index, array).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:5575"
        },
        {
            "message": "Missing item type\nCreates an array of unique values, in order, of the provided arrays using\n`SameValueZero` for equality comparisons.\n\n**Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\ncomparisons are like strict equality comparisons, e.g. `===`, except that\n`NaN` matches `NaN`.",
            "line": " bower_components/lodash/lodash.js:5630"
        },
        {
            "message": "Missing item type\nCreates a duplicate-free version of an array, using `SameValueZero` for\nequality comparisons, in which only the first occurence of each element\nis kept. Providing `true` for `isSorted` performs a faster search algorithm\nfor sorted arrays. If an iteratee function is provided it is invoked for\neach element in the array to generate the criterion by which uniqueness\nis computed. The `iteratee` is bound to `thisArg` and invoked with three\narguments: (value, index, array).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.\n\n**Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\ncomparisons are like strict equality comparisons, e.g. `===`, except that\n`NaN` matches `NaN`.",
            "line": " bower_components/lodash/lodash.js:5652"
        },
        {
            "message": "Missing item type\nThis method is like `_.zip` except that it accepts an array of grouped\nelements and creates an array regrouping the elements to their pre-`_.zip`\nconfiguration.",
            "line": " bower_components/lodash/lodash.js:5723"
        },
        {
            "message": "Missing item type\nCreates an array excluding all provided values using `SameValueZero` for\nequality comparisons.\n\n**Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\ncomparisons are like strict equality comparisons, e.g. `===`, except that\n`NaN` matches `NaN`.",
            "line": " bower_components/lodash/lodash.js:5752"
        },
        {
            "message": "Missing item type\nCreates an array that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\nof the provided arrays.",
            "line": " bower_components/lodash/lodash.js:5777"
        },
        {
            "message": "Missing item type\nCreates an array of grouped elements, the first of which contains the first\nelements of the given arrays, the second of which contains the second elements\nof the given arrays, and so on.",
            "line": " bower_components/lodash/lodash.js:5806"
        },
        {
            "message": "Missing item type\nThe inverse of `_.pairs`; this method returns an object composed from arrays\nof property names and values. Provide either a single two dimensional array,\ne.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\nand one of corresponding values.",
            "line": " bower_components/lodash/lodash.js:5823"
        },
        {
            "message": "Missing item type\nCreates a `lodash` object that wraps `value` with explicit method\nchaining enabled.",
            "line": " bower_components/lodash/lodash.js:5865"
        },
        {
            "message": "Missing item type\nThis method invokes `interceptor` and returns `value`. The interceptor is\nbound to `thisArg` and invoked with one argument; (value). The purpose of\nthis method is to \"tap into\" a method chain in order to perform operations\non intermediate results within the chain.",
            "line": " bower_components/lodash/lodash.js:5897"
        },
        {
            "message": "Missing item type\nThis method is like `_.tap` except that it returns the result of `interceptor`.",
            "line": " bower_components/lodash/lodash.js:5925"
        },
        {
            "message": "Missing item type\nEnables explicit method chaining on the wrapper object.",
            "line": " bower_components/lodash/lodash.js:5950"
        },
        {
            "message": "Missing item type\nExecutes the chained sequence and returns the wrapped result.",
            "line": " bower_components/lodash/lodash.js:5979"
        },
        {
            "message": "Missing item type\nCreates a clone of the chained sequence planting `value` as the wrapped value.",
            "line": " bower_components/lodash/lodash.js:6008"
        },
        {
            "message": "Missing item type\nReverses the wrapped array so the first element becomes the last, the\nsecond element becomes the second to last, and so on.\n\n**Note:** This method mutates the wrapped array.",
            "line": " bower_components/lodash/lodash.js:6049"
        },
        {
            "message": "Missing item type\nProduces the result of coercing the unwrapped value to a string.",
            "line": " bower_components/lodash/lodash.js:6082"
        },
        {
            "message": "Missing item type\nExecutes the chained sequence to extract the unwrapped value.",
            "line": " bower_components/lodash/lodash.js:6098"
        },
        {
            "message": "Missing item type\nCreates an array of elements corresponding to the given keys, or indexes,\nof `collection`. Keys may be specified as individual arguments or as arrays\nof keys.",
            "line": " bower_components/lodash/lodash.js:6117"
        },
        {
            "message": "Missing item type\nCreates an object composed of keys generated from the results of running\neach element of `collection` through `iteratee`. The corresponding value\nof each key is the number of times the key was returned by `iteratee`.\nThe `iteratee` is bound to `thisArg` and invoked with three arguments:\n(value, index|key, collection).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:6145"
        },
        {
            "message": "Missing item type\nChecks if `predicate` returns truthy for **all** elements of `collection`.\nThe predicate is bound to `thisArg` and invoked with three arguments:\n(value, index|key, collection).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:6190"
        },
        {
            "message": "Missing item type\nIterates over elements of `collection`, returning an array of all elements\n`predicate` returns truthy for. The predicate is bound to `thisArg` and\ninvoked with three arguments: (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:6249"
        },
        {
            "message": "Missing item type\nIterates over elements of `collection`, returning the first element\n`predicate` returns truthy for. The predicate is bound to `thisArg` and\ninvoked with three arguments: (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:6304"
        },
        {
            "message": "Missing item type\nThis method is like `_.find` except that it iterates over elements of\n`collection` from right to left.",
            "line": " bower_components/lodash/lodash.js:6356"
        },
        {
            "message": "Missing item type\nPerforms a deep comparison between each element in `collection` and the\nsource object, returning the first element that has equivalent property\nvalues.\n\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\nnumbers, `Object` objects, regexes, and strings. Objects are compared by\ntheir own, not inherited, enumerable properties. For comparing a single\nown or inherited property value see `_.matchesProperty`.",
            "line": " bower_components/lodash/lodash.js:6377"
        },
        {
            "message": "Missing item type\nIterates over elements of `collection` invoking `iteratee` for each element.\nThe `iteratee` is bound to `thisArg` and invoked with three arguments:\n(value, index|key, collection). Iteratee functions may exit iteration early\nby explicitly returning `false`.\n\n**Note:** As with other \"Collections\" methods, objects with a \"length\" property\nare iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\nmay be used for object iteration.",
            "line": " bower_components/lodash/lodash.js:6410"
        },
        {
            "message": "Missing item type\nThis method is like `_.forEach` except that it iterates over elements of\n`collection` from right to left.",
            "line": " bower_components/lodash/lodash.js:6442"
        },
        {
            "message": "Missing item type\nCreates an object composed of keys generated from the results of running\neach element of `collection` through `iteratee`. The corresponding value\nof each key is an array of the elements responsible for generating the key.\nThe `iteratee` is bound to `thisArg` and invoked with three arguments:\n(value, index|key, collection).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:6463"
        },
        {
            "message": "Missing item type\nChecks if `value` is in `collection` using `SameValueZero` for equality\ncomparisons. If `fromIndex` is negative, it is used as the offset from\nthe end of `collection`.\n\n**Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\ncomparisons are like strict equality comparisons, e.g. `===`, except that\n`NaN` matches `NaN`.",
            "line": " bower_components/lodash/lodash.js:6513"
        },
        {
            "message": "Missing item type\nCreates an object composed of keys generated from the results of running\neach element of `collection` through `iteratee`. The corresponding value\nof each key is the last element responsible for generating the key. The\niteratee function is bound to `thisArg` and invoked with three arguments:\n(value, index|key, collection).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:6564"
        },
        {
            "message": "Missing item type\nInvokes the method at `path` on each element in `collection`, returning\nan array of the results of each invoked method. Any additional arguments\nare provided to each invoked method. If `methodName` is a function it is\ninvoked for, and `this` bound to, each element in `collection`.",
            "line": " bower_components/lodash/lodash.js:6614"
        },
        {
            "message": "Missing item type\nCreates an array of values by running each element in `collection` through\n`iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\narguments: (value, index|key, collection).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.\n\nMany lodash methods are guarded to work as interatees for methods like\n`_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\nThe guarded methods are:\n`ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`, `drop`,\n`dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`, `parseInt`,\n`slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimLeft`,\n`trimRight`, `trunc`, `random`, `range`, `sample`, `some`, `uniq`, and `words`",
            "line": " bower_components/lodash/lodash.js:6650"
        },
        {
            "message": "Missing item type\nCreates an array of elements split into two groups, the first of which\ncontains elements `predicate` returns truthy for, while the second of which\ncontains elements `predicate` returns falsey for. The predicate is bound\nto `thisArg` and invoked with three arguments: (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:6711"
        },
        {
            "message": "Missing item type\nGets the property value of `path` from all elements in `collection`.",
            "line": " bower_components/lodash/lodash.js:6774"
        },
        {
            "message": "Missing item type\nReduces `collection` to a value which is the accumulated result of running\neach element in `collection` through `iteratee`, where each successive\ninvocation is supplied the return value of the previous. If `accumulator`\nis not provided the first element of `collection` is used as the initial\nvalue. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n(accumulator, value, index|key, collection).\n\nMany lodash methods are guarded to work as interatees for methods like\n`_.reduce`, `_.reduceRight`, and `_.transform`.\n\nThe guarded methods are:\n`assign`, `defaults`, `includes`, `merge`, `sortByAll`, and `sortByOrder`",
            "line": " bower_components/lodash/lodash.js:6801"
        },
        {
            "message": "Missing item type\nThis method is like `_.reduce` except that it iterates over elements of\n`collection` from right to left.",
            "line": " bower_components/lodash/lodash.js:6839"
        },
        {
            "message": "Missing item type\nThe opposite of `_.filter`; this method returns the elements of `collection`\nthat `predicate` does **not** return truthy for.\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:6863"
        },
        {
            "message": "Missing item type\nGets a random element or `n` random elements from a collection.",
            "line": " bower_components/lodash/lodash.js:6918"
        },
        {
            "message": "Missing item type\nCreates an array of shuffled values, using a version of the\n[Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).",
            "line": " bower_components/lodash/lodash.js:6947"
        },
        {
            "message": "Missing item type\nGets the size of `collection` by returning its length for array-like\nvalues or the number of own enumerable properties for objects.",
            "line": " bower_components/lodash/lodash.js:6978"
        },
        {
            "message": "Missing item type\nChecks if `predicate` returns truthy for **any** element of `collection`.\nThe function returns as soon as it finds a passing value and does not iterate\nover the entire collection. The predicate is bound to `thisArg` and invoked\nwith three arguments: (value, index|key, collection).\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:7003"
        },
        {
            "message": "Missing item type\nCreates an array of elements, sorted in ascending order by the results of\nrunning each element in a collection through `iteratee`. This method performs\na stable sort, that is, it preserves the original sort order of equal elements.\nThe `iteratee` is bound to `thisArg` and invoked with three arguments:\n(value, index|key, collection).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:7063"
        },
        {
            "message": "Missing item type\nThis method is like `_.sortBy` except that it can sort by multiple iteratees\nor property names.\n\nIf a property name is provided for an iteratee the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf an object is provided for an iteratee the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:7127"
        },
        {
            "message": "Missing item type\nThis method is like `_.sortByAll` except that it allows specifying the\nsort orders of the iteratees to sort by. A truthy value in `orders` will\nsort the corresponding property name in ascending order while a falsey\nvalue will sort it in descending order.\n\nIf a property name is provided for an iteratee the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf an object is provided for an iteratee the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:7173"
        },
        {
            "message": "Missing item type\nPerforms a deep comparison between each element in `collection` and the\nsource object, returning an array of all elements that have equivalent\nproperty values.\n\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\nnumbers, `Object` objects, regexes, and strings. Objects are compared by\ntheir own, not inherited, enumerable properties. For comparing a single\nown or inherited property value see `_.matchesProperty`.",
            "line": " bower_components/lodash/lodash.js:7223"
        },
        {
            "message": "Missing item type\nGets the number of milliseconds that have elapsed since the Unix epoch\n(1 January 1970 00:00:00 UTC).",
            "line": " bower_components/lodash/lodash.js:7258"
        },
        {
            "message": "Missing item type\nThe opposite of `_.before`; this method creates a function that invokes\n`func` once it is called `n` or more times.",
            "line": " bower_components/lodash/lodash.js:7278"
        },
        {
            "message": "Missing item type\nCreates a function that accepts up to `n` arguments ignoring any\nadditional arguments.",
            "line": " bower_components/lodash/lodash.js:7319"
        },
        {
            "message": "Missing item type\nCreates a function that invokes `func`, with the `this` binding and arguments\nof the created function, while it is called less than `n` times. Subsequent\ncalls to the created function return the result of the last `func` invocation.",
            "line": " bower_components/lodash/lodash.js:7343"
        },
        {
            "message": "Missing item type\nCreates a function that invokes `func` with the `this` binding of `thisArg`\nand prepends any additional `_.bind` arguments to those provided to the\nbound function.\n\nThe `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\nmay be used as a placeholder for partially applied arguments.\n\n**Note:** Unlike native `Function#bind` this method does not set the \"length\"\nproperty of bound functions.",
            "line": " bower_components/lodash/lodash.js:7381"
        },
        {
            "message": "Missing item type\nBinds methods of an object to the object itself, overwriting the existing\nmethod. Method names may be specified as individual arguments or as arrays\nof method names. If no method names are provided all enumerable function\nproperties, own and inherited, of `object` are bound.\n\n**Note:** This method does not set the \"length\" property of bound functions.",
            "line": " bower_components/lodash/lodash.js:7425"
        },
        {
            "message": "Missing item type\nCreates a function that invokes the method at `object[key]` and prepends\nany additional `_.bindKey` arguments to those provided to the bound function.\n\nThis method differs from `_.bind` by allowing bound functions to reference\nmethods that may be redefined or don't yet exist.\nSee [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\nfor more details.\n\nThe `_.bindKey.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.",
            "line": " bower_components/lodash/lodash.js:7466"
        },
        {
            "message": "Missing item type\nCreates a function that accepts one or more arguments of `func` that when\ncalled either invokes `func` returning its result, if all `func` arguments\nhave been provided, or returns a function that accepts one or more of the\nremaining `func` arguments, and so on. The arity of `func` may be specified\nif `func.length` is not sufficient.\n\nThe `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\nmay be used as a placeholder for provided arguments.\n\n**Note:** This method does not set the \"length\" property of curried functions.",
            "line": " bower_components/lodash/lodash.js:7519"
        },
        {
            "message": "Missing item type\nThis method is like `_.curry` except that arguments are applied to `func`\nin the manner of `_.partialRight` instead of `_.partial`.\n\nThe `_.curryRight.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for provided arguments.\n\n**Note:** This method does not set the \"length\" property of curried functions.",
            "line": " bower_components/lodash/lodash.js:7561"
        },
        {
            "message": "Missing item type\nCreates a function that delays invoking `func` until after `wait` milliseconds\nhave elapsed since the last time it was invoked. The created function comes\nwith a `cancel` method to cancel delayed invocations. Provide an options\nobject to indicate that `func` should be invoked on the leading and/or\ntrailing edge of the `wait` timeout. Subsequent calls to the debounced\nfunction return the result of the last `func` invocation.\n\n**Note:** If `leading` and `trailing` options are `true`, `func` is invoked\non the trailing edge of the timeout only if the the debounced function is\ninvoked more than once during the `wait` timeout.\n\nSee [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\nfor details over the differences between `_.debounce` and `_.throttle`.",
            "line": " bower_components/lodash/lodash.js:7600"
        },
        {
            "message": "Missing item type\nDefers invoking the `func` until the current call stack has cleared. Any\nadditional arguments are provided to `func` when it is invoked.",
            "line": " bower_components/lodash/lodash.js:7776"
        },
        {
            "message": "Missing item type\nInvokes `func` after `wait` milliseconds. Any additional arguments are\nprovided to `func` when it is invoked.",
            "line": " bower_components/lodash/lodash.js:7797"
        },
        {
            "message": "Missing item type\nCreates a function that returns the result of invoking the provided\nfunctions with the `this` binding of the created function, where each\nsuccessive invocation is supplied the return value of the previous.",
            "line": " bower_components/lodash/lodash.js:7819"
        },
        {
            "message": "Missing item type\nThis method is like `_.flow` except that it creates a function that\ninvokes the provided functions from right to left.",
            "line": " bower_components/lodash/lodash.js:7841"
        },
        {
            "message": "Missing item type\nCreates a function that memoizes the result of `func`. If `resolver` is\nprovided it determines the cache key for storing the result based on the\narguments provided to the memoized function. By default, the first argument\nprovided to the memoized function is coerced to a string and used as the\ncache key. The `func` is invoked with the `this` binding of the memoized\nfunction.\n\n**Note:** The cache is exposed as the `cache` property on the memoized\nfunction. Its creation may be customized by replacing the `_.memoize.Cache`\nconstructor with one whose instances implement the [`Map`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\nmethod interface of `get`, `has`, and `set`.",
            "line": " bower_components/lodash/lodash.js:7863"
        },
        {
            "message": "Missing item type\nCreates a function that negates the result of the predicate `func`. The\n`func` predicate is invoked with the `this` binding and arguments of the\ncreated function.",
            "line": " bower_components/lodash/lodash.js:7934"
        },
        {
            "message": "Missing item type\nCreates a function that is restricted to invoking `func` once. Repeat calls\nto the function return the value of the first call. The `func` is invoked\nwith the `this` binding and arguments of the created function.",
            "line": " bower_components/lodash/lodash.js:7962"
        },
        {
            "message": "Missing item type\nCreates a function that invokes `func` with `partial` arguments prepended\nto those provided to the new function. This method is like `_.bind` except\nit does **not** alter the `this` binding.\n\nThe `_.partial.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.\n\n**Note:** This method does not set the \"length\" property of partially\napplied functions.",
            "line": " bower_components/lodash/lodash.js:7983"
        },
        {
            "message": "Missing item type\nThis method is like `_.partial` except that partially applied arguments\nare appended to those provided to the new function.\n\nThe `_.partialRight.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.\n\n**Note:** This method does not set the \"length\" property of partially\napplied functions.",
            "line": " bower_components/lodash/lodash.js:8017"
        },
        {
            "message": "Missing item type\nCreates a function that invokes `func` with arguments arranged according\nto the specified indexes where the argument value at the first index is\nprovided as the first argument, the argument value at the second index is\nprovided as the second argument, and so on.",
            "line": " bower_components/lodash/lodash.js:8050"
        },
        {
            "message": "Missing item type\nCreates a function that invokes `func` with the `this` binding of the\ncreated function and arguments from `start` and beyond provided as an array.\n\n**Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).",
            "line": " bower_components/lodash/lodash.js:8082"
        },
        {
            "message": "Missing item type\nCreates a function that invokes `func` with the `this` binding of the created\nfunction and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\n**Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).",
            "line": " bower_components/lodash/lodash.js:8133"
        },
        {
            "message": "Missing item type\nCreates a function that only invokes `func` at most once per every `wait`\nmilliseconds. The created function comes with a `cancel` method to cancel\ndelayed invocations. Provide an options object to indicate that `func`\nshould be invoked on the leading and/or trailing edge of the `wait` timeout.\nSubsequent calls to the throttled function return the result of the last\n`func` call.\n\n**Note:** If `leading` and `trailing` options are `true`, `func` is invoked\non the trailing edge of the timeout only if the the throttled function is\ninvoked more than once during the `wait` timeout.\n\nSee [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\nfor details over the differences between `_.throttle` and `_.debounce`.",
            "line": " bower_components/lodash/lodash.js:8173"
        },
        {
            "message": "Missing item type\nCreates a function that provides `value` to the wrapper function as its\nfirst argument. Any additional arguments provided to the function are\nappended to those provided to the wrapper function. The wrapper is invoked\nwith the `this` binding of the created function.",
            "line": " bower_components/lodash/lodash.js:8231"
        },
        {
            "message": "Missing item type\nCreates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\notherwise they are assigned by reference. If `customizer` is provided it is\ninvoked to produce the cloned values. If `customizer` returns `undefined`\ncloning is handled by the method instead. The `customizer` is bound to\n`thisArg` and invoked with two argument; (value [, index|key, object]).\n\n**Note:** This method is loosely based on the\n[structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\nThe enumerable properties of `arguments` objects and objects created by\nconstructors other than `Object` are cloned to plain `Object` objects. An\nempty object is returned for uncloneable values such as functions, DOM nodes,\nMaps, Sets, and WeakMaps.",
            "line": " bower_components/lodash/lodash.js:8259"
        },
        {
            "message": "Missing item type\nCreates a deep clone of `value`. If `customizer` is provided it is invoked\nto produce the cloned values. If `customizer` returns `undefined` cloning\nis handled by the method instead. The `customizer` is bound to `thisArg`\nand invoked with two argument; (value [, index|key, object]).\n\n**Note:** This method is loosely based on the\n[structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\nThe enumerable properties of `arguments` objects and objects created by\nconstructors other than `Object` are cloned to plain `Object` objects. An\nempty object is returned for uncloneable values such as functions, DOM nodes,\nMaps, Sets, and WeakMaps.",
            "line": " bower_components/lodash/lodash.js:8323"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as an `arguments` object.",
            "line": " bower_components/lodash/lodash.js:8373"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as an `Array` object.",
            "line": " bower_components/lodash/lodash.js:8394"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as a boolean primitive or object.",
            "line": " bower_components/lodash/lodash.js:8414"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as a `Date` object.",
            "line": " bower_components/lodash/lodash.js:8434"
        },
        {
            "message": "Missing item type\nChecks if `value` is a DOM element.",
            "line": " bower_components/lodash/lodash.js:8454"
        },
        {
            "message": "Missing item type\nChecks if `value` is empty. A value is considered empty unless it is an\n`arguments` object, array, string, or jQuery-like collection with a length\ngreater than `0` or an object with own enumerable properties.",
            "line": " bower_components/lodash/lodash.js:8481"
        },
        {
            "message": "Missing item type\nPerforms a deep comparison between two values to determine if they are\nequivalent. If `customizer` is provided it is invoked to compare values.\nIf `customizer` returns `undefined` comparisons are handled by the method\ninstead. The `customizer` is bound to `thisArg` and invoked with three\narguments: (value, other [, index|key]).\n\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\nnumbers, `Object` objects, regexes, and strings. Objects are compared by\ntheir own, not inherited, enumerable properties. Functions and DOM nodes\nare **not** supported. Provide a customizer function to extend support\nfor comparing other values.",
            "line": " bower_components/lodash/lodash.js:8520"
        },
        {
            "message": "Missing item type\nChecks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n`SyntaxError`, `TypeError`, or `URIError` object.",
            "line": " bower_components/lodash/lodash.js:8572"
        },
        {
            "message": "Missing item type\nChecks if `value` is a finite primitive number.\n\n**Note:** This method is based on [`Number.isFinite`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).",
            "line": " bower_components/lodash/lodash.js:8593"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as a `Function` object.",
            "line": " bower_components/lodash/lodash.js:8624"
        },
        {
            "message": "Missing item type\nChecks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n(e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)",
            "line": " bower_components/lodash/lodash.js:8647"
        },
        {
            "message": "Missing item type\nPerforms a deep comparison between `object` and `source` to determine if\n`object` contains equivalent property values. If `customizer` is provided\nit is invoked to compare values. If `customizer` returns `undefined`\ncomparisons are handled by the method instead. The `customizer` is bound\nto `thisArg` and invoked with three arguments: (value, other, index|key).\n\n**Note:** This method supports comparing properties of arrays, booleans,\n`Date` objects, numbers, `Object` objects, regexes, and strings. Functions\nand DOM nodes are **not** supported. Provide a customizer function to extend\nsupport for comparing other values.",
            "line": " bower_components/lodash/lodash.js:8674"
        },
        {
            "message": "Missing item type\nChecks if `value` is `NaN`.\n\n**Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\nwhich returns `true` for `undefined` and other non-numeric values.",
            "line": " bower_components/lodash/lodash.js:8743"
        },
        {
            "message": "Missing item type\nChecks if `value` is a native function.",
            "line": " bower_components/lodash/lodash.js:8774"
        },
        {
            "message": "Missing item type\nChecks if `value` is `null`.",
            "line": " bower_components/lodash/lodash.js:8800"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as a `Number` primitive or object.\n\n**Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\nas numbers, use the `_.isFinite` method.",
            "line": " bower_components/lodash/lodash.js:8820"
        },
        {
            "message": "Missing item type\nChecks if `value` is a plain object, that is, an object created by the\n`Object` constructor or one with a `[[Prototype]]` of `null`.\n\n**Note:** This method assumes objects created by the `Object` constructor\nhave no inherited enumerable properties.",
            "line": " bower_components/lodash/lodash.js:8846"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as a `RegExp` object.",
            "line": " bower_components/lodash/lodash.js:8888"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as a `String` primitive or object.",
            "line": " bower_components/lodash/lodash.js:8908"
        },
        {
            "message": "Missing item type\nChecks if `value` is classified as a typed array.",
            "line": " bower_components/lodash/lodash.js:8928"
        },
        {
            "message": "Missing item type\nChecks if `value` is `undefined`.",
            "line": " bower_components/lodash/lodash.js:8948"
        },
        {
            "message": "Missing item type\nConverts `value` to an array.",
            "line": " bower_components/lodash/lodash.js:8968"
        },
        {
            "message": "Missing item type\nConverts `value` to a plain object flattening inherited enumerable\nproperties of `value` to own properties of the plain object.",
            "line": " bower_components/lodash/lodash.js:8994"
        },
        {
            "message": "Missing item type\nAssigns own enumerable properties of source object(s) to the destination\nobject. Subsequent sources overwrite property assignments of previous sources.\nIf `customizer` is provided it is invoked to produce the assigned values.\nThe `customizer` is bound to `thisArg` and invoked with five arguments:\n(objectValue, sourceValue, key, object, source).\n\n**Note:** This method mutates `object` and is based on\n[`Object.assign`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).",
            "line": " bower_components/lodash/lodash.js:9023"
        },
        {
            "message": "Missing item type\nCreates an object that inherits from the given `prototype` object. If a\n`properties` object is provided its own enumerable properties are assigned\nto the created object.",
            "line": " bower_components/lodash/lodash.js:9062"
        },
        {
            "message": "Missing item type\nAssigns own enumerable properties of source object(s) to the destination\nobject for all destination properties that resolve to `undefined`. Once a\nproperty is set, additional values of the same property are ignored.\n\n**Note:** This method mutates `object`.",
            "line": " bower_components/lodash/lodash.js:9104"
        },
        {
            "message": "Missing item type\nThis method is like `_.find` except that it returns the key of the first\nelement `predicate` returns truthy for instead of the element itself.\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:9131"
        },
        {
            "message": "Missing item type\nThis method is like `_.findKey` except that it iterates over elements of\na collection in the opposite order.\n\nIf a property name is provided for `predicate` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `predicate` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:9181"
        },
        {
            "message": "Missing item type\nIterates over own and inherited enumerable properties of an object invoking\n`iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\nwith three arguments: (value, key, object). Iteratee functions may exit\niteration early by explicitly returning `false`.",
            "line": " bower_components/lodash/lodash.js:9231"
        },
        {
            "message": "Missing item type\nThis method is like `_.forIn` except that it iterates over properties of\n`object` in the opposite order.",
            "line": " bower_components/lodash/lodash.js:9260"
        },
        {
            "message": "Missing item type\nIterates over own enumerable properties of an object invoking `iteratee`\nfor each property. The `iteratee` is bound to `thisArg` and invoked with\nthree arguments: (value, key, object). Iteratee functions may exit iteration\nearly by explicitly returning `false`.",
            "line": " bower_components/lodash/lodash.js:9287"
        },
        {
            "message": "Missing item type\nThis method is like `_.forOwn` except that it iterates over properties of\n`object` in the opposite order.",
            "line": " bower_components/lodash/lodash.js:9316"
        },
        {
            "message": "Missing item type\nCreates an array of function property names from all enumerable properties,\nown and inherited, of `object`.",
            "line": " bower_components/lodash/lodash.js:9343"
        },
        {
            "message": "Missing item type\nGets the property value of `path` on `object`. If the resolved value is\n`undefined` the `defaultValue` is used in its place.",
            "line": " bower_components/lodash/lodash.js:9362"
        },
        {
            "message": "Missing item type\nChecks if `path` is a direct property.",
            "line": " bower_components/lodash/lodash.js:9391"
        },
        {
            "message": "Missing item type\nCreates an object composed of the inverted keys and values of `object`.\nIf `object` contains duplicate values, subsequent values overwrite property\nassignments of previous values unless `multiValue` is `true`.",
            "line": " bower_components/lodash/lodash.js:9427"
        },
        {
            "message": "Missing item type\nCreates an array of the own enumerable property names of `object`.\n\n**Note:** Non-object values are coerced to objects. See the\n[ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\nfor more details.",
            "line": " bower_components/lodash/lodash.js:9477"
        },
        {
            "message": "Missing item type\nCreates an array of the own and inherited enumerable property names of `object`.\n\n**Note:** Non-object values are coerced to objects.",
            "line": " bower_components/lodash/lodash.js:9516"
        },
        {
            "message": "Missing item type\nCreates an object with the same keys as `object` and values generated by\nrunning each own enumerable property of `object` through `iteratee`. The\niteratee function is bound to `thisArg` and invoked with three arguments:\n(value, key, object).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:9567"
        },
        {
            "message": "Missing item type\nRecursively merges own enumerable properties of the source object(s), that\ndon't resolve to `undefined` into the destination object. Subsequent sources\noverwrite property assignments of previous sources. If `customizer` is\nprovided it is invoked to produce the merged values of the destination and\nsource properties. If `customizer` returns `undefined` merging is handled\nby the method instead. The `customizer` is bound to `thisArg` and invoked\nwith five arguments: (objectValue, sourceValue, key, object, source).",
            "line": " bower_components/lodash/lodash.js:9618"
        },
        {
            "message": "Missing item type\nThe opposite of `_.pick`; this method creates an object composed of the\nown and inherited enumerable properties of `object` that are not omitted.\nProperty names may be specified as individual arguments or as arrays of\nproperty names. If `predicate` is provided it is invoked for each property\nof `object` omitting the properties `predicate` returns truthy for. The\npredicate is bound to `thisArg` and invoked with three arguments:\n(value, key, object).",
            "line": " bower_components/lodash/lodash.js:9668"
        },
        {
            "message": "Missing item type\nCreates a two dimensional array of the key-value pairs for `object`,\ne.g. `[[key1, value1], [key2, value2]]`.",
            "line": " bower_components/lodash/lodash.js:9710"
        },
        {
            "message": "Missing item type\nCreates an object composed of the picked `object` properties. Property\nnames may be specified as individual arguments or as arrays of property\nnames. If `predicate` is provided it is invoked for each property of `object`\npicking the properties `predicate` returns truthy for. The predicate is\nbound to `thisArg` and invoked with three arguments: (value, key, object).",
            "line": " bower_components/lodash/lodash.js:9737"
        },
        {
            "message": "Missing item type\nThis method is like `_.get` except that if the resolved value is a function\nit is invoked with the `this` binding of its parent object and its result\nis returned.",
            "line": " bower_components/lodash/lodash.js:9772"
        },
        {
            "message": "Missing item type\nSets the property value of `path` on `object`. If a portion of `path`\ndoes not exist it is created.",
            "line": " bower_components/lodash/lodash.js:9813"
        },
        {
            "message": "Missing item type\nAn alternative to `_.reduce`; this method transforms `object` to a new\n`accumulator` object which is the result of running each of its own enumerable\nproperties through `iteratee`, with each invocation potentially mutating\nthe `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\nwith four arguments: (accumulator, value, key, object). Iteratee functions\nmay exit iteration early by explicitly returning `false`.",
            "line": " bower_components/lodash/lodash.js:9862"
        },
        {
            "message": "Missing item type\nCreates an array of the own enumerable property values of `object`.\n\n**Note:** Non-object values are coerced to objects.",
            "line": " bower_components/lodash/lodash.js:9913"
        },
        {
            "message": "Missing item type\nCreates an array of the own and inherited enumerable property values\nof `object`.\n\n**Note:** Non-object values are coerced to objects.",
            "line": " bower_components/lodash/lodash.js:9942"
        },
        {
            "message": "Missing item type\nChecks if `n` is between `start` and up to but not including, `end`. If\n`end` is not specified it is set to `start` with `start` then set to `0`.",
            "line": " bower_components/lodash/lodash.js:9971"
        },
        {
            "message": "Missing item type\nProduces a random number between `min` and `max` (inclusive). If only one\nargument is provided a number between `0` and the given number is returned.\nIf `floating` is `true`, or either `min` or `max` are floats, a floating-point\nnumber is returned instead of an integer.",
            "line": " bower_components/lodash/lodash.js:10013"
        },
        {
            "message": "Missing item type\nConverts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).",
            "line": " bower_components/lodash/lodash.js:10077"
        },
        {
            "message": "Missing item type\nCapitalizes the first character of `string`.",
            "line": " bower_components/lodash/lodash.js:10101"
        },
        {
            "message": "Missing item type\nDeburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\nto basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).",
            "line": " bower_components/lodash/lodash.js:10119"
        },
        {
            "message": "Missing item type\nChecks if `string` ends with the given target string.",
            "line": " bower_components/lodash/lodash.js:10138"
        },
        {
            "message": "Missing item type\nConverts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\ntheir corresponding HTML entities.\n\n**Note:** No other characters are escaped. To escape additional characters\nuse a third-party library like [_he_](https://mths.be/he).\n\nThough the \">\" character is escaped for symmetry, characters like\n\">\" and \"/\" don't require escaping in HTML and have no special meaning\nunless they're part of a tag or unquoted attribute value.\nSee [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n(under \"semi-related fun fact\") for more details.\n\nBackticks are escaped because in Internet Explorer < 9, they can break out\nof attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n[#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n[#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\nfor more details.\n\nWhen working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\nto reduce XSS vectors.",
            "line": " bower_components/lodash/lodash.js:10172"
        },
        {
            "message": "Missing item type\nEscapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n\"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.",
            "line": " bower_components/lodash/lodash.js:10212"
        },
        {
            "message": "Missing item type\nConverts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).",
            "line": " bower_components/lodash/lodash.js:10233"
        },
        {
            "message": "Missing item type\nPads `string` on the left and right sides if it is shorter than `length`.\nPadding characters are truncated if they can't be evenly divided by `length`.",
            "line": " bower_components/lodash/lodash.js:10256"
        },
        {
            "message": "Missing item type\nPads `string` on the left side if it is shorter than `length`. Padding\ncharacters are truncated if they exceed `length`.",
            "line": " bower_components/lodash/lodash.js:10294"
        },
        {
            "message": "Missing item type\nPads `string` on the right side if it is shorter than `length`. Padding\ncharacters are truncated if they exceed `length`.",
            "line": " bower_components/lodash/lodash.js:10318"
        },
        {
            "message": "Missing item type\nConverts `string` to an integer of the specified radix. If `radix` is\n`undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\nin which case a `radix` of `16` is used.\n\n**Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\nof `parseInt`.",
            "line": " bower_components/lodash/lodash.js:10342"
        },
        {
            "message": "Missing item type\nRepeats the given string `n` times.",
            "line": " bower_components/lodash/lodash.js:10387"
        },
        {
            "message": "Missing item type\nConverts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).",
            "line": " bower_components/lodash/lodash.js:10427"
        },
        {
            "message": "Missing item type\nConverts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).",
            "line": " bower_components/lodash/lodash.js:10450"
        },
        {
            "message": "Missing item type\nChecks if `string` starts with the given target string.",
            "line": " bower_components/lodash/lodash.js:10473"
        },
        {
            "message": "Missing item type\nCreates a compiled template function that can interpolate data properties\nin \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\nproperties may be accessed as free variables in the template. If a setting\nobject is provided it takes precedence over `_.templateSettings` values.\n\n**Note:** In the development build `_.template` utilizes\n[sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\nfor easier debugging.\n\nFor more information on precompiling templates see\n[lodash's custom builds documentation](https://lodash.com/custom-builds).\n\nFor more information on Chrome extension sandboxes see\n[Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).",
            "line": " bower_components/lodash/lodash.js:10503"
        },
        {
            "message": "Missing item type\nRemoves leading and trailing whitespace or specified characters from `string`.",
            "line": " bower_components/lodash/lodash.js:10705"
        },
        {
            "message": "Missing item type\nRemoves leading whitespace or specified characters from `string`.",
            "line": " bower_components/lodash/lodash.js:10739"
        },
        {
            "message": "Missing item type\nRemoves trailing whitespace or specified characters from `string`.",
            "line": " bower_components/lodash/lodash.js:10769"
        },
        {
            "message": "Missing item type\nTruncates `string` if it is longer than the given maximum string length.\nThe last characters of the truncated string are replaced with the omission\nstring which defaults to \"...\".",
            "line": " bower_components/lodash/lodash.js:10799"
        },
        {
            "message": "Missing item type\nThe inverse of `_.escape`; this method converts the HTML entities\n`&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\ncorresponding characters.\n\n**Note:** No other HTML entities are unescaped. To unescape additional HTML\nentities use a third-party library like [_he_](https://mths.be/he).",
            "line": " bower_components/lodash/lodash.js:10891"
        },
        {
            "message": "Missing item type\nSplits `string` into an array of its words.",
            "line": " bower_components/lodash/lodash.js:10916"
        },
        {
            "message": "Missing item type\nAttempts to invoke `func`, returning either the result or the caught error\nobject. Any additional arguments are provided to `func` when it is invoked.",
            "line": " bower_components/lodash/lodash.js:10944"
        },
        {
            "message": "Missing item type\nCreates a function that invokes `func` with the `this` binding of `thisArg`\nand arguments of the created function. If `func` is a property name the\ncreated callback returns the property value for a given element. If `func`\nis an object the created callback returns `true` for elements that contain\nthe equivalent object properties, otherwise it returns `false`.",
            "line": " bower_components/lodash/lodash.js:10972"
        },
        {
            "message": "Missing item type\nCreates a function that returns `value`.",
            "line": " bower_components/lodash/lodash.js:11017"
        },
        {
            "message": "Missing item type\nThis method returns the first argument provided to it.",
            "line": " bower_components/lodash/lodash.js:11039"
        },
        {
            "message": "Missing item type\nCreates a function which performs a deep comparison between a given object\nand `source`, returning `true` if the given object has equivalent property\nvalues, else `false`.\n\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\nnumbers, `Object` objects, regexes, and strings. Objects are compared by\ntheir own, not inherited, enumerable properties. For comparing a single\nown or inherited property value see `_.matchesProperty`.",
            "line": " bower_components/lodash/lodash.js:11058"
        },
        {
            "message": "Missing item type\nCreates a function which compares the property value of `path` on a given\nobject to `value`.\n\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\nnumbers, `Object` objects, regexes, and strings. Objects are compared by\ntheir own, not inherited, enumerable properties.",
            "line": " bower_components/lodash/lodash.js:11087"
        },
        {
            "message": "Missing item type\nCreates a function which invokes the method at `path` on a given object.",
            "line": " bower_components/lodash/lodash.js:11115"
        },
        {
            "message": "Missing item type\nThe opposite of `_.method`; this method creates a function which invokes\nthe method at a given path on `object`.",
            "line": " bower_components/lodash/lodash.js:11142"
        },
        {
            "message": "Missing item type\nAdds all own enumerable function properties of a source object to the\ndestination object. If `object` is a function then methods are added to\nits prototype as well.\n\n**Note:** Use `_.runInContext` to create a pristine `lodash` function to\navoid conflicts caused by modifying the original.",
            "line": " bower_components/lodash/lodash.js:11168"
        },
        {
            "message": "Missing item type\nReverts the `_` variable to its previous value and returns a reference to\nthe `lodash` function.",
            "line": " bower_components/lodash/lodash.js:11260"
        },
        {
            "message": "Missing item type\nA no-operation function which returns `undefined` regardless of the\narguments it receives.",
            "line": " bower_components/lodash/lodash.js:11277"
        },
        {
            "message": "Missing item type\nCreates a function which returns the property value at `path` on a\ngiven object.",
            "line": " bower_components/lodash/lodash.js:11295"
        },
        {
            "message": "Missing item type\nThe opposite of `_.property`; this method creates a function which returns\nthe property value at a given path on `object`.",
            "line": " bower_components/lodash/lodash.js:11321"
        },
        {
            "message": "Missing item type\nCreates an array of numbers (positive and/or negative) progressing from\n`start` up to, but not including, `end`. If `end` is not specified it is\nset to `start` with `start` then set to `0`. If `end` is less than `start`\na zero-length range is created unless a negative `step` is specified.",
            "line": " bower_components/lodash/lodash.js:11347"
        },
        {
            "message": "Missing item type\nInvokes the iteratee function `n` times, returning an array of the results\nof each invocation. The `iteratee` is bound to `thisArg` and invoked with\none argument; (index).",
            "line": " bower_components/lodash/lodash.js:11406"
        },
        {
            "message": "Missing item type\nGenerates a unique ID. If `prefix` is provided the ID is appended to it.",
            "line": " bower_components/lodash/lodash.js:11455"
        },
        {
            "message": "Missing item type\nAdds two numbers.",
            "line": " bower_components/lodash/lodash.js:11478"
        },
        {
            "message": "Missing item type\nGets the maximum value of `collection`. If `collection` is empty or falsey\n`-Infinity` is returned. If an iteratee function is provided it is invoked\nfor each value in `collection` to generate the criterion by which the value\nis ranked. The `iteratee` is bound to `thisArg` and invoked with three\narguments: (value, index, collection).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:11496"
        },
        {
            "message": "Missing item type\nGets the minimum value of `collection`. If `collection` is empty or falsey\n`Infinity` is returned. If an iteratee function is provided it is invoked\nfor each value in `collection` to generate the criterion by which the value\nis ranked. The `iteratee` is bound to `thisArg` and invoked with three\narguments: (value, index, collection).\n\nIf a property name is provided for `iteratee` the created `_.property`\nstyle callback returns the property value of the given element.\n\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\nstyle callback returns `true` for elements that have a matching property\nvalue, else `false`.\n\nIf an object is provided for `iteratee` the created `_.matches` style\ncallback returns `true` for elements that have the properties of the given\nobject, else `false`.",
            "line": " bower_components/lodash/lodash.js:11545"
        },
        {
            "message": "Missing item type\nGets the sum of the values in `collection`.",
            "line": " bower_components/lodash/lodash.js:11594"
        },
        {
            "message": "Missing item type\nThe semantic version number.",
            "line": " bower_components/lodash/lodash.js:11909"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/lodash/lodash.min.js:1"
        },
        {
            "message": "Missing item type\n_s.prune: a more elegant version of truncate\nprune extra chars, never leaving a half-chopped word.",
            "line": " bower_components/underscore.string/lib/underscore.string.js:387"
        },
        {
            "message": "Missing item type\nUtility function for retreiving the text value of an array of DOM nodes",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jquery.js:4270"
        },
        {
            "message": "Missing item type\nA smattering of methods that are needed to implement the JSLitmus testbed.",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:48"
        },
        {
            "message": "Missing item type\nEnhanced version of escape()",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:52"
        },
        {
            "message": "Missing item type\nGet an element by ID.",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:63"
        },
        {
            "message": "Missing item type\nNull function",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:70"
        },
        {
            "message": "Missing item type\nSet the status shown in the UI",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:75"
        },
        {
            "message": "Missing item type\nConvert a number to an abbreviated string like, \"15K\" or \"10M\"",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:83"
        },
        {
            "message": "Missing item type\nCopy properties from src to dst",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:102"
        },
        {
            "message": "Missing item type\nLike Array.join(), but for the key-value pairs in an object",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:109"
        },
        {
            "message": "Missing item type\nArray#indexOf isn't supported in IE, so we use this as a cross-browser solution",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:119"
        },
        {
            "message": "Missing item type\nTest manages a single test (created with\nJSLitmus.test())",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:129"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:146"
        },
        {
            "message": "Missing item type\nRun calibration tests.  Returns true if calibrations are not yet\ncomplete (in which case calling code should run the tests yet again).\nonCalibrated - Callback to invoke when calibrations have finished",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:152"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:174"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:176"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:178"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:181"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:184"
        },
        {
            "message": "Missing item type\nReset test state",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:187"
        },
        {
            "message": "Missing item type\nRun the test (in a timeout). We use a timeout to make sure the browser\nhas a chance to finish rendering any UI changes we've made, like\nupdating the status message.",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:197"
        },
        {
            "message": "Missing item type\nThe nuts and bolts code that actually runs a test",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:210"
        },
        {
            "message": "Missing item type\nGet the number of operations per second for this test.",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:273"
        },
        {
            "message": "Missing item type\nGet a friendly string describing the test",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:293"
        },
        {
            "message": "Missing item type\nThe public API for creating and running tests",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:411"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:415"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:417"
        },
        {
            "message": "Missing item type\nThe parsed query parameters the current page URL.  This is provided as a\nconvenience for test functions - it's not used by JSLitmus proper",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:420"
        },
        {
            "message": "Missing item type\nInitialize",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:426"
        },
        {
            "message": "Missing item type\nSet up the UI",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:460"
        },
        {
            "message": "Missing item type\n(Re)render all the test results",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:474"
        },
        {
            "message": "Missing item type\n(Re)render the chart graphics",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:483"
        },
        {
            "message": "Missing item type\n(Re)render the results for a specific test",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:496"
        },
        {
            "message": "Missing item type\nCreate a new test",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:542"
        },
        {
            "message": "Missing item type\nAdd all tests to the run queue",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:564"
        },
        {
            "message": "Missing item type\nRemove all tests from the run queue.  The current test has to finish on\nit's own though",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:575"
        },
        {
            "message": "Missing item type\nRun the next test in the run queue",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:586"
        },
        {
            "message": "Missing item type\nAdd a test to the run queue",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:605"
        },
        {
            "message": "Missing item type\nGenerate a Google Chart URL that shows the data for all tests",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/jslitmus.js:615"
        },
        {
            "message": "Missing item type\nQUnit v1.10.0 - A JavaScript Unit Testing Framework\n\nhttp://qunitjs.com\n\nCopyright 2012 jQuery Foundation and other contributors\nReleased under the MIT license.\nhttp://jquery.org/license",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:539"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:545"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:551"
        },
        {
            "message": "Missing item type\nConfig object: Maintain internal state\nLater exposed as QUnit.config\n`config` initialized at top of scope",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:571"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:888"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:1157"
        },
        {
            "message": "Missing item type\njsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\nhttp://flesler.blogspot.com Licensed under BSD\n(http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008",
            "line": " bower_components/underscore.string/test/test_underscore/vendor/qunit.js:1572"
        },
        {
            "message": "Missing item type",
            "line": " config/common.js:1"
        },
        {
            "message": "Missing item type\nSetting up the current general constant",
            "line": " config/common.js:5"
        },
        {
            "message": "Missing item type\nSetting up general constant to use in app",
            "line": " config/common.js:17"
        },
        {
            "message": "Missing item type\nExport the current data into main app module",
            "line": " config/common.js:44"
        },
        {
            "message": "Missing item type\nDependencies",
            "line": " config_old/env/all.js:1"
        },
        {
            "message": "Missing item type\nSetting up the current general constant",
            "line": " config_old/env/all.js:9"
        },
        {
            "message": "Missing item type\nSetting up general constant to use in app",
            "line": " config_old/env/all.js:21"
        },
        {
            "message": "Missing item type\nExport the current data into main app module",
            "line": " config_old/env/all.js:48"
        },
        {
            "message": "Missing item type\nDependencies",
            "line": " config_old/env/development.js:1"
        },
        {
            "message": "Missing item type\nexport config",
            "line": " config_old/env/development.js:19"
        },
        {
            "message": "Missing item type\nDependencies",
            "line": " config_old/env/production.js:1"
        },
        {
            "message": "Missing item type\nexport config",
            "line": " config_old/env/production.js:19"
        },
        {
            "message": "Missing item type\nDependencies",
            "line": " config_old/env/staging-iso-production.js:1"
        },
        {
            "message": "Missing item type\nexport config",
            "line": " config_old/env/staging-iso-production.js:19"
        },
        {
            "message": "Missing item type\nDependencies",
            "line": " config_old/env/staging-new-tag.js:1"
        },
        {
            "message": "Missing item type\nexport config",
            "line": " config_old/env/staging-new-tag.js:19"
        },
        {
            "message": "Missing item type\nDependencies",
            "line": " config_old/config.js:1"
        },
        {
            "message": "Missing item type\nDependencies",
            "line": " config_old/database.js:1"
        },
        {
            "message": "Missing item type\nCreate Db Object",
            "line": " config_old/database.js:25"
        },
        {
            "message": "Missing item type\nExport the current data into main app module",
            "line": " config_old/database.js:65"
        },
        {
            "message": "Missing item type\nDependencies",
            "line": " config_old/express.js:1"
        },
        {
            "message": "Missing item type\nSetting up the current port on var into the current app",
            "line": " config_old/express.js:74"
        },
        {
            "message": "Missing item type\nSetting up the current env for app",
            "line": " config_old/express.js:92"
        },
        {
            "message": "Missing item type\nProcessing config. Setting up the stack error display",
            "line": " config_old/express.js:98"
        },
        {
            "message": "Missing item type\nSetting up the current app name to express app",
            "line": " config_old/express.js:111"
        },
        {
            "message": "Missing item type\nSetting up pretty HTML for express",
            "line": " config_old/express.js:121"
        },
        {
            "message": "Missing item type\nSetting up filter for express compression",
            "line": " config_old/express.js:133"
        },
        {
            "message": "Missing item type\nProcessing favicon",
            "line": " config_old/express.js:257"
        },
        {
            "message": "Missing item type\nSetting up the static public directory",
            "line": " config_old/express.js:273"
        },
        {
            "message": "Missing item type\nSetting up model conf",
            "line": " config_old/express.js:279"
        },
        {
            "message": "Missing item type\nSetting up view engine",
            "line": " config_old/express.js:285"
        },
        {
            "message": "Missing item type\nSetting up dependencies modules and routes",
            "line": " config_old/express.js:300"
        },
        {
            "message": "Missing item type\nSetting up Social rules",
            "line": " config_old/express.js:371"
        },
        {
            "message": "Missing item type\nSetting up SEO rules",
            "line": " config_old/express.js:408"
        },
        {
            "message": "Missing item type\nSetting up multipart for upload",
            "line": " config_old/express.js:414"
        },
        {
            "message": "Missing item type\nSetting up flash middleware",
            "line": " config_old/express.js:420"
        },
        {
            "message": "Missing item type\nSetting up dynamic helpders",
            "line": " config_old/express.js:426"
        },
        {
            "message": "Missing item type\nSetting up router",
            "line": " config_old/express.js:432"
        },
        {
            "message": "Missing item type\nDependencies",
            "line": " config_old/routes.js:1"
        },
        {
            "message": "Missing item type\nHelper function to iterate directory and get resources",
            "line": " config_old/routes.js:19"
        },
        {
            "message": "Missing item type\nNormalize some path and get all routes path",
            "line": " config_old/routes.js:44"
        },
        {
            "message": "Missing item type\nSetting up HTTP 404 and 500 rules",
            "line": " config_old/routes.js:94"
        },
        {
            "message": "Missing item type\nDependencies",
            "line": " yocto_modules/dbfactory/dbfactory.js:1"
        },
        {
            "message": "Missing item type\nDefault Db factory class",
            "line": " yocto_modules/dbfactory/dbfactory.js:18"
        },
        {
            "message": "Missing item type\nDefault factory database object",
            "line": " yocto_modules/dbfactory/dbfactory.js:23"
        },
        {
            "message": "Missing item type\nDefault DbFactory type constants",
            "line": " yocto_modules/dbfactory/dbfactory.js:30"
        },
        {
            "message": "Missing item type\nDefault use Db function. Save Db Object into the current object",
            "line": " yocto_modules/dbfactory/dbfactory.js:41"
        },
        {
            "message": "Missing item type\nGet How nb item factory use",
            "line": " yocto_modules/dbfactory/dbfactory.js:53"
        },
        {
            "message": "Missing item type\nGet default Models from rules",
            "line": " yocto_modules/dbfactory/dbfactory.js:61"
        },
        {
            "message": "Missing item type\nGet Ad Models from rules (Cf. BDD Schema)",
            "line": " yocto_modules/dbfactory/dbfactory.js:98"
        },
        {
            "message": "Missing item type\nGet Logs from rules (Cf. BDD Schema)",
            "line": " yocto_modules/dbfactory/dbfactory.js:113"
        },
        {
            "message": "Missing item type\nGet Constants from rules (Cf. BDD Schema)",
            "line": " yocto_modules/dbfactory/dbfactory.js:122"
        },
        {
            "message": "Missing item type\nGet a status type from rules",
            "line": " yocto_modules/dbfactory/dbfactory.js:137"
        },
        {
            "message": "Missing item type\nGet default extra params for db",
            "line": " yocto_modules/dbfactory/dbfactory.js:146"
        },
        {
            "message": "Missing item type\nBuild default extra params from two object",
            "line": " yocto_modules/dbfactory/dbfactory.js:154"
        },
        {
            "message": "Missing item type\nDefault function to process requirement for database",
            "line": " yocto_modules/dbfactory/dbfactory.js:173"
        },
        {
            "message": "Missing item type\nDefault method to process sub requirement of required database init",
            "line": " yocto_modules/dbfactory/dbfactory.js:265"
        },
        {
            "message": "Missing item type\nGet Enum list of database model",
            "line": " yocto_modules/dbfactory/dbfactory.js:285"
        },
        {
            "message": "Missing item type\nGet List of filter from specific rules",
            "line": " yocto_modules/dbfactory/dbfactory.js:323"
        },
        {
            "message": "Missing item type\nGet list of item for a part of form from specific rules",
            "line": " yocto_modules/dbfactory/dbfactory.js:391"
        },
        {
            "message": "Missing item type\nGet Default filter object to send",
            "line": " yocto_modules/dbfactory/dbfactory.js:473"
        },
        {
            "message": "Missing item type\nDefault function to build a custom message for validate call on model",
            "line": " yocto_modules/dbfactory/dbfactory.js:511"
        },
        {
            "message": "Missing item type\nBuild correct where list for search",
            "line": " yocto_modules/dbfactory/dbfactory.js:542"
        },
        {
            "message": "Missing item type\nDefault function to clean words (html entities, space)",
            "line": " yocto_modules/dbfactory/dbfactory.js:556"
        },
        {
            "message": "Missing item type\nClean Number format to correct format (10 000 <=> 10000, 3 Guests => 3, ect)\nRemove all space and string on item. Check filtered list for more details",
            "line": " yocto_modules/dbfactory/dbfactory.js:597"
        },
        {
            "message": "Missing item type\nExpose Db Factory",
            "line": " yocto_modules/dbfactory/dbfactory.js:708"
        },
        {
            "message": "Missing item type\nDependencies",
            "line": " yocto_modules/mailer/mailer.js:1"
        },
        {
            "message": "Missing item type\nAssign data to the exports scope",
            "line": " yocto_modules/mailer/mailer.js:53"
        },
        {
            "message": "Missing item type\nDependencies",
            "line": " yocto_modules/render/render.js:1"
        },
        {
            "message": "Missing item type\nSet the default app name",
            "line": " yocto_modules/render/render.js:27"
        },
        {
            "message": "Missing item type\nGet Default charset",
            "line": " yocto_modules/render/render.js:39"
        },
        {
            "message": "Missing item type\nGet Default title",
            "line": " yocto_modules/render/render.js:46"
        },
        {
            "message": "Missing item type\nGet default language",
            "line": " yocto_modules/render/render.js:53"
        },
        {
            "message": "Missing item type\nGet Meta rules",
            "line": " yocto_modules/render/render.js:65"
        },
        {
            "message": "Missing item type\nGet HTTP Equiv rules",
            "line": " yocto_modules/render/render.js:76"
        },
        {
            "message": "Missing item type\nGet assets to include into main header",
            "line": " yocto_modules/render/render.js:87"
        },
        {
            "message": "Missing item type\nGet default pictures directory",
            "line": " yocto_modules/render/render.js:94"
        },
        {
            "message": "Missing item type\nGet css to include into main header",
            "line": " yocto_modules/render/render.js:101"
        },
        {
            "message": "Missing item type\nGet js to include into main header",
            "line": " yocto_modules/render/render.js:117"
        },
        {
            "message": "Missing item type\nGet assets to include into main footer",
            "line": " yocto_modules/render/render.js:149"
        },
        {
            "message": "Missing item type\nGet css to include into main footer",
            "line": " yocto_modules/render/render.js:156"
        },
        {
            "message": "Missing item type\nGet js to include into main footer",
            "line": " yocto_modules/render/render.js:171"
        },
        {
            "message": "Missing item type\nexports controller",
            "line": " yocto_modules/render/render.js:193"
        },
        {
            "message": "Missing item type\nexport Renderer function",
            "line": " yocto_modules/render/render.js:198"
        },
        {
            "message": "Missing item type\nexport a renderer no cache function",
            "line": " yocto_modules/render/render.js:213"
        },
        {
            "message": "Missing item type\nDependencies",
            "line": " yocto_modules/router/router.js:1"
        },
        {
            "message": "Missing item type\nCheck route rules",
            "line": " yocto_modules/router/router.js:26"
        },
        {
            "message": "Missing item type\nChecking Property validity",
            "line": " yocto_modules/router/router.js:37"
        },
        {
            "message": "Missing item type\nAdd a route",
            "line": " yocto_modules/router/router.js:112"
        },
        {
            "message": "Missing item type\nexpose router",
            "line": " yocto_modules/router/router.js:126"
        },
        {
            "message": "Missing item type\nDependencies",
            "line": " yocto_modules/social/social.js:1"
        },
        {
            "message": "Missing item type\nMain Object",
            "line": " yocto_modules/social/social.js:22"
        },
        {
            "message": "Missing item type\nDefault social function to generate content dynamicly for facebook share",
            "line": " yocto_modules/social/social.js:27"
        },
        {
            "message": "Missing item type\nDefault social function to generate content dynamicly for facebook share normal share",
            "line": " yocto_modules/social/social.js:95"
        },
        {
            "message": "Missing item type\nExpose Utils",
            "line": " yocto_modules/social/social.js:135"
        },
        {
            "message": "Missing item type\nDependencies",
            "line": " yocto_modules/utils/utils.js:1"
        },
        {
            "message": "Missing item type\nMain Object",
            "line": " yocto_modules/utils/utils.js:25"
        },
        {
            "message": "Missing item type\nForce a require file to be reload from root path of the app",
            "line": " yocto_modules/utils/utils.js:30"
        },
        {
            "message": "Missing item type\nLoad a json file for db configuration",
            "line": " yocto_modules/utils/utils.js:39"
        },
        {
            "message": "Missing item type\nLoad a json file for filter type",
            "line": " yocto_modules/utils/utils.js:66"
        },
        {
            "message": "Missing item type\nLoad a json file for filter type",
            "line": " yocto_modules/utils/utils.js:75"
        },
        {
            "message": "Missing item type\nUtility function. remove no needed property on a current object",
            "line": " yocto_modules/utils/utils.js:84"
        },
        {
            "message": "Missing item type\nReturn true if has no difference between source and compare list",
            "line": " yocto_modules/utils/utils.js:93"
        },
        {
            "message": "Missing item type\nGet the default mail template to build the correct template",
            "line": " yocto_modules/utils/utils.js:117"
        },
        {
            "message": "Missing item type\nGet the default mail config to process next step (building)",
            "line": " yocto_modules/utils/utils.js:143"
        },
        {
            "message": "Missing item type\nBuild notify object to send to DAO model",
            "line": " yocto_modules/utils/utils.js:178"
        },
        {
            "message": "Missing item type\nReturn a password from two rules",
            "line": " yocto_modules/utils/utils.js:256"
        },
        {
            "message": "Missing item type\nUtility function to encrypt data",
            "line": " yocto_modules/utils/utils.js:271"
        },
        {
            "message": "Missing item type\nUtility function to decrypt data",
            "line": " yocto_modules/utils/utils.js:287"
        },
        {
            "message": "Missing item type\nUtility function to build date list for search view",
            "line": " yocto_modules/utils/utils.js:301"
        },
        {
            "message": "Missing item type\nReturn the correct host from a request header.\nImplement x-forwarded data",
            "line": " yocto_modules/utils/utils.js:341"
        },
        {
            "message": "Missing item type\nCheck if is an allowed image type format",
            "line": " yocto_modules/utils/utils.js:354"
        },
        {
            "message": "Missing item type\nProcess image and fit it from rules",
            "line": " yocto_modules/utils/utils.js:364"
        },
        {
            "message": "Missing item type\nExpose Utils",
            "line": " yocto_modules/utils/utils.js:415"
        },
        {
            "message": "Missing item type\nDependencies",
            "line": " index.js:1"
        },
        {
            "message": "Missing item type\nDefault function to start when all app is ready",
            "line": " index.js:18"
        },
        {
            "message": "Missing item type\nStart the main process of your own server",
            "line": " index.js:60"
        }
    ]
}